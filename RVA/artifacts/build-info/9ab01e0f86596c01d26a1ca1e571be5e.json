{
	"id": "9ab01e0f86596c01d26a1ca1e571be5e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"RVA/UpgradableToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {\n    address public icoContract;\n    uint256 private _totalSupply;\n\n    mapping(address => uint256) public lockedUntil;\n    mapping(address => bool) public blacklisted;\n\n    event ICOContractSet(address indexed icoContract);\n    event LockupSet(address indexed account, uint256 lockedUntilTimestamp);\n    event Blacklisted(address indexed account, bool isBlacklisted);\n    event EmergencyTokenRecovered(address indexed token, uint256 amount);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers(); // Disables constructors for upgradeable contracts.\n    }\n\n    function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {\n        __ERC20_init(name, symbol);\n        __Ownable_init(msg.sender);\n        __Pausable_init();\n        __UUPSUpgradeable_init();\n\n        _totalSupply = totalSupply_;\n        _mint(msg.sender, _totalSupply); // Mint initial supply to the deployer\n    }\n\n    modifier onlyICOContract() {\n        require(msg.sender == icoContract, \"Not authorized\");\n        _;\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function setLockup(address account, uint256 timestamp) external onlyICOContract {\n        if (lockedUntil[account] != timestamp) {\n            lockedUntil[account] = timestamp;\n            emit LockupSet(account, timestamp);\n        }\n    }\n\n    function setBlacklist(address account, bool status) external onlyOwner {\n        blacklisted[account] = status;\n        emit Blacklisted(account, status);\n    }\n\n    function isBlacklisted(address account) public view returns (bool) {\n        return blacklisted[account];\n    }\n\n    function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transfer(recipient, amount);\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transferFrom(sender, recipient, amount);\n    }\n\n    function setICOContract(address _icoContract) external onlyOwner {\n        icoContract = _icoContract;\n        emit ICOContractSet(_icoContract);\n    }\n\n    function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {\n        require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\");\n        uint256 recipientLength = recipients.length;\n        for (uint256 i = 0; i < recipientLength; i++) {\n            unchecked{\n                if (blacklisted[recipients[i]]) {\n                    revert(\"BatchTransfer failed: Recipient is blacklisted\");\n                }\n            _transfer(msg.sender, recipients[i], amounts[i]);\n            }\n        }\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 757,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a375b1079c8c42586b0a3b4087be2e3288f2b2597fe27097dfef1ba384cc61e564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a375b1079c8c42586b0a3b4087be2e3288f2b2597fe27097dfef1ba384cc61e564736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH22 0xB1079C8C42586B0A3B4087BE2E3288F2B2597FE27097 0xDF 0xEF SHL LOG3 DUP5 0xCC PUSH2 0xE564 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "496:5741:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a375b1079c8c42586b0a3b4087be2e3288f2b2597fe27097dfef1ba384cc61e564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH22 0xB1079C8C42586B0A3B4087BE2E3288F2B2597FE27097 0xDF 0xEF SHL LOG3 DUP5 0xCC PUSH2 0xE564 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "496:5741:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a375b1079c8c42586b0a3b4087be2e3288f2b2597fe27097dfef1ba384cc61e564736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a63df8270013bf13c7062cbe489c23601f2b5495ac1bb1ea594a091e39929af64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a63df8270013bf13c7062cbe489c23601f2b5495ac1bb1ea594a091e39929af64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE PUSH4 0xDF827001 EXTCODESIZE CALL EXTCODECOPY PUSH17 0x62CBE489C23601F2B5495AC1BB1EA594A0 SWAP2 0xE3 SWAP10 0x29 0xAF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a63df8270013bf13c7062cbe489c23601f2b5495ac1bb1ea594a091e39929af64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE PUSH4 0xDF827001 EXTCODESIZE CALL EXTCODECOPY PUSH17 0x62CBE489C23601F2B5495AC1BB1EA594A0 SWAP2 0xE3 SWAP10 0x29 0xAF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a63df8270013bf13c7062cbe489c23601f2b5495ac1bb1ea594a091e39929af64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122028da85bcb2770a0134e1d1112b1c2c4debee6a043f07851b43a81abd8a00eef464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122028da85bcb2770a0134e1d1112b1c2c4debee6a043f07851b43a81abd8a00eef464736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xDA DUP6 0xBC 0xB2 PUSH24 0xA0134E1D1112B1C2C4DEBEE6A043F07851B43A81ABD8A00 0xEE DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "411:484:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122028da85bcb2770a0134e1d1112b1c2c4debee6a043f07851b43a81abd8a00eef464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xDA DUP6 0xBC 0xB2 PUSH24 0xA0134E1D1112B1C2C4DEBEE6A043F07851B43A81ABD8A00 0xEE DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "411:484:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122028da85bcb2770a0134e1d1112b1c2c4debee6a043f07851b43a81abd8a00eef464736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ccc1c85ee2349d08c293e1d69700bba4db7862761647ddbb83cdc6765e06a84b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ccc1c85ee2349d08c293e1d69700bba4db7862761647ddbb83cdc6765e06a84b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xC1 0xC8 MCOPY 0xE2 CALLVALUE SWAP14 ADDMOD 0xC2 SWAP4 0xE1 0xD6 SWAP8 STOP 0xBB LOG4 0xDB PUSH25 0x62761647DDBB83CDC6765E06A84B64736F6C634300081A0033 ",
							"sourceMap": "1407:2774:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ccc1c85ee2349d08c293e1d69700bba4db7862761647ddbb83cdc6765e06a84b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xC1 0xC8 MCOPY 0xE2 CALLVALUE SWAP14 ADDMOD 0xC2 SWAP4 0xE1 0xD6 SWAP8 STOP 0xBB LOG4 0xDB PUSH25 0x62761647DDBB83CDC6765E06A84B64736F6C634300081A0033 ",
							"sourceMap": "1407:2774:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ccc1c85ee2349d08c293e1d69700bba4db7862761647ddbb83cdc6765e06a84b64736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"RVA/UpgradableToken.sol": {
				"ERC20Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isBlacklisted",
									"type": "bool"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyTokenRecovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "icoContract",
									"type": "address"
								}
							],
							"name": "ICOContractSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedUntilTimestamp",
									"type": "uint256"
								}
							],
							"name": "LockupSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "icoContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedUntil",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_icoContract",
									"type": "address"
								}
							],
							"name": "setICOContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "setLockup",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RVA/UpgradableToken.sol\":371:4001  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"RVA/UpgradableToken.sol\":971:1076  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"RVA/UpgradableToken.sol\":995:1017  _disableInitializers() */\n  tag_4\n    /* \"RVA/UpgradableToken.sol\":995:1015  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"RVA/UpgradableToken.sol\":995:1017  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"RVA/UpgradableToken.sol\":371:4001  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7856  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7883  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7885  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7901  $ */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8003:8019  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7986  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8052:8068  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8036  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8049  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8099:8115  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_15:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_16:\n    /* \"#utility.yul\":199:222   */\n  tag_20\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_15\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_22\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"RVA/UpgradableToken.sol\":371:4001  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"RVA/UpgradableToken.sol\":371:4001  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdbac26e9\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdbac26e9\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_28\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0xad3cb1cc\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb119490e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc66e4095\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9bc289f1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x88d695b2\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x313ce567\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x4f1ef286\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3e579307\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e0d2a00\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":1948:2108  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":2695:3173  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":3179:3330  function setICOContract(address _icoContract) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":1702:1942  function setLockup(address account, uint256 timestamp) external onlyICOContract {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"RVA/UpgradableToken.sol\":1631:1696  function unpause() external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_11:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      stop\n        /* \"RVA/UpgradableToken.sol\":1564:1625  function pause() external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"RVA/UpgradableToken.sol\":3336:3909  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n    tag_105:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":542:588  mapping(address => uint256) public lockedUntil */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":2231:2689  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":1082:1445  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      tag_136\n      jump\t// in\n    tag_133:\n      stop\n        /* \"RVA/UpgradableToken.sol\":475:501  address public icoContract */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":594:637  mapping(address => bool) public blacklisted */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      tag_150\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n    tag_153:\n      stop\n        /* \"RVA/UpgradableToken.sol\":2114:2225  function isBlacklisted(address account) public view returns (bool) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_157\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2761:2774  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2808  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2827  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2829  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2847  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2853  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2839:2853  return $._name */\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_165\n      jump\t// in\n    tag_166:\n      dup1\n      iszero\n      tag_167\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_168\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_167)\n    tag_168:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_169:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_169\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5283:5287  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5312  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5325  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5327  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5346:5351  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5353:5360  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5362:5367  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5345  _approve */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5385:5389  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5378:5389  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1948:2108  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"RVA/UpgradableToken.sol\":2052:2058  status */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":2029:2040  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2029:2049  blacklisted[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2041:2048  account */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":2029:2049  blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2029:2058  blacklisted[account] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":2085:2092  account */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":2073:2101  Blacklisted(account, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8\n        /* \"RVA/UpgradableToken.sol\":2094:2100  status */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":2073:2101  Blacklisted(account, status) */\n      mload(0x40)\n      tag_179\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":1948:2108  function setBlacklist(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3955  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:3989  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4008  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:4010  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4028  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4041  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4020:4041  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":2695:3173  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_61:\n        /* \"RVA/UpgradableToken.sol\":2807:2811  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_183:\n        /* \"RVA/UpgradableToken.sol\":2832:2843  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2832:2851  blacklisted[sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2844:2850  sender */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":2832:2851  blacklisted[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2831:2851  !blacklisted[sender] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2823:2894  require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"RVA/UpgradableToken.sol\":2913:2924  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2913:2935  blacklisted[recipient] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2925:2934  recipient */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":2913:2935  blacklisted[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2912:2935  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2904:2981  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"RVA/UpgradableToken.sol\":3018:3029  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":3018:3037  lockedUntil[sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3030:3036  sender */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":3018:3037  lockedUntil[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":2999:3014  block.timestamp */\n      timestamp\n        /* \"RVA/UpgradableToken.sol\":2999:3037  block.timestamp >= lockedUntil[sender] */\n      lt\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2999:3065  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n      dup1\n      tag_192\n      jumpi\n      pop\n        /* \"RVA/UpgradableToken.sol\":3064:3065  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3041:3052  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":3041:3060  lockedUntil[sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3053:3059  sender */\n      dup7\n        /* \"RVA/UpgradableToken.sol\":3041:3060  lockedUntil[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":3041:3065  lockedUntil[sender] == 0 */\n      eq\n        /* \"RVA/UpgradableToken.sol\":2999:3065  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n    tag_192:\n        /* \"RVA/UpgradableToken.sol\":2991:3104  require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"RVA/UpgradableToken.sol\":3121:3166  super.transferFrom(sender, recipient, amount) */\n      tag_196\n        /* \"RVA/UpgradableToken.sol\":3140:3146  sender */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3148:3157  recipient */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3159:3165  amount */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3121:3139  super.transferFrom */\n      tag_197\n        /* \"RVA/UpgradableToken.sol\":3121:3166  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_196:\n        /* \"RVA/UpgradableToken.sol\":3114:3166  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":2695:3173  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":3179:3330  function setICOContract(address _icoContract) external onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"RVA/UpgradableToken.sol\":3268:3280  _icoContract */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":3254:3265  icoContract */\n      0x32\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3254:3280  icoContract = _icoContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":3310:3322  _icoContract */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":3295:3323  ICOContractSet(_icoContract) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":3179:3330  function setICOContract(address _icoContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3803:3808  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3827:3829  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3820:3829  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1702:1942  function setLockup(address account, uint256 timestamp) external onlyICOContract {... */\n    tag_76:\n        /* \"RVA/UpgradableToken.sol\":1510:1521  icoContract */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":1496:1521  msg.sender == icoContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":1496:1506  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1496:1521  msg.sender == icoContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"RVA/UpgradableToken.sol\":1488:1540  require(msg.sender == icoContract, \"Not authorized\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"RVA/UpgradableToken.sol\":1820:1829  timestamp */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":1796:1807  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":1796:1816  lockedUntil[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":1808:1815  account */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":1796:1816  lockedUntil[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":1796:1829  lockedUntil[account] != timestamp */\n      eq\n        /* \"RVA/UpgradableToken.sol\":1792:1936  if (lockedUntil[account] != timestamp) {... */\n      tag_207\n      jumpi\n        /* \"RVA/UpgradableToken.sol\":1868:1877  timestamp */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":1845:1856  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":1845:1865  lockedUntil[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":1857:1864  account */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":1845:1865  lockedUntil[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"RVA/UpgradableToken.sol\":1845:1877  lockedUntil[account] = timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":1906:1913  account */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":1896:1925  LockupSet(account, timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f\n        /* \"RVA/UpgradableToken.sol\":1915:1924  timestamp */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":1896:1925  LockupSet(account, timestamp) */\n      mload(0x40)\n      tag_208\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":1792:1936  if (lockedUntil[account] != timestamp) {... */\n    tag_207:\n        /* \"RVA/UpgradableToken.sol\":1702:1942  function setLockup(address account, uint256 timestamp) external onlyICOContract {... */\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1631:1696  function unpause() external onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_210\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_210:\n        /* \"RVA/UpgradableToken.sol\":1679:1689  _unpause() */\n      tag_212\n        /* \"RVA/UpgradableToken.sol\":1679:1687  _unpause */\n      tag_213\n        /* \"RVA/UpgradableToken.sol\":1679:1689  _unpause() */\n      jump\t// in\n    tag_212:\n        /* \"RVA/UpgradableToken.sol\":1631:1696  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1942:1956  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4178  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4212  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4231  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4233  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4251  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4261  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4269  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4270  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1564:1625  function pause() external onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_235:\n        /* \"RVA/UpgradableToken.sol\":1610:1618  _pause() */\n      tag_237\n        /* \"RVA/UpgradableToken.sol\":1610:1616  _pause */\n      tag_238\n        /* \"RVA/UpgradableToken.sol\":1610:1618  _pause() */\n      jump\t// in\n    tag_237:\n        /* \"RVA/UpgradableToken.sol\":1564:1625  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":3336:3909  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_240:\n        /* \"RVA/UpgradableToken.sol\":3480:3487  amounts */\n      dup2\n      dup2\n        /* \"RVA/UpgradableToken.sol\":3480:3494  amounts.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":3459:3469  recipients */\n      dup5\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3459:3476  recipients.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":3459:3494  recipients.length == amounts.length */\n      eq\n        /* \"RVA/UpgradableToken.sol\":3451:3538  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"RVA/UpgradableToken.sol\":3548:3571  uint256 recipientLength */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3574:3584  recipients */\n      dup5\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3574:3591  recipients.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":3548:3591  uint256 recipientLength = recipients.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":3606:3615  uint256 i */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3601:3903  for (uint256 i = 0; i < recipientLength; i++) {... */\n    tag_245:\n        /* \"RVA/UpgradableToken.sol\":3625:3640  recipientLength */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":3621:3622  i */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":3621:3640  i < recipientLength */\n      lt\n        /* \"RVA/UpgradableToken.sol\":3601:3903  for (uint256 i = 0; i < recipientLength; i++) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"RVA/UpgradableToken.sol\":3692:3703  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":3692:3718  blacklisted[recipients[i]] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3704:3714  recipients */\n      dup8\n      dup8\n        /* \"RVA/UpgradableToken.sol\":3715:3716  i */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3704:3717  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_248\n      jumpi\n      tag_249\n      tag_250\n      jump\t// in\n    tag_249:\n    tag_248:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_251:\n        /* \"RVA/UpgradableToken.sol\":3692:3718  blacklisted[recipients[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":3688:3817  if (blacklisted[recipients[i]]) {... */\n      iszero\n      tag_252\n      jumpi\n        /* \"RVA/UpgradableToken.sol\":3742:3798  revert(\"BatchTransfer failed: Recipient is blacklisted\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"RVA/UpgradableToken.sol\":3688:3817  if (blacklisted[recipients[i]]) {... */\n    tag_252:\n        /* \"RVA/UpgradableToken.sol\":3830:3878  _transfer(msg.sender, recipients[i], amounts[i]) */\n      tag_255\n        /* \"RVA/UpgradableToken.sol\":3840:3850  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":3852:3862  recipients */\n      dup8\n      dup8\n        /* \"RVA/UpgradableToken.sol\":3863:3864  i */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3852:3865  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_256\n      jumpi\n      tag_257\n      tag_250\n      jump\t// in\n    tag_257:\n    tag_256:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_258\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_258:\n        /* \"RVA/UpgradableToken.sol\":3867:3874  amounts */\n      dup7\n      dup7\n        /* \"RVA/UpgradableToken.sol\":3875:3876  i */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":3867:3877  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_259\n      jumpi\n      tag_260\n      tag_250\n      jump\t// in\n    tag_260:\n    tag_259:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"RVA/UpgradableToken.sol\":3830:3839  _transfer */\n      tag_261\n        /* \"RVA/UpgradableToken.sol\":3830:3878  _transfer(msg.sender, recipients[i], amounts[i]) */\n      jump\t// in\n    tag_255:\n        /* \"RVA/UpgradableToken.sol\":3642:3645  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"RVA/UpgradableToken.sol\":3601:3903  for (uint256 i = 0; i < recipientLength; i++) {... */\n      jump(tag_245)\n    tag_246:\n      pop\n        /* \"RVA/UpgradableToken.sol\":3441:3909  {... */\n      pop\n        /* \"RVA/UpgradableToken.sol\":3336:3909  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3020:3033  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3067  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3086  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3088  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3106  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3114  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3098:3114  return $._symbol */\n      dup1\n      sload\n      tag_267\n      swap1\n      tag_165\n      jump\t// in\n    tag_267:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_268\n      swap1\n      tag_165\n      jump\t// in\n    tag_268:\n      dup1\n      iszero\n      tag_269\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_270\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_269)\n    tag_270:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_271:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_271\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_269:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":542:588  mapping(address => uint256) public lockedUntil */\n    tag_121:\n      mstore(0x20, 0x34)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":2231:2689  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_126:\n        /* \"RVA/UpgradableToken.sol\":2323:2327  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_273:\n        /* \"RVA/UpgradableToken.sol\":2348:2359  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2348:2371  blacklisted[msg.sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2360:2370  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":2348:2371  blacklisted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2347:2371  !blacklisted[msg.sender] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2339:2414  require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap1\n      tag_188\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"RVA/UpgradableToken.sol\":2433:2444  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2433:2455  blacklisted[recipient] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2445:2454  recipient */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":2433:2455  blacklisted[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2432:2455  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2424:2501  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_191\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"RVA/UpgradableToken.sol\":2538:2549  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":2538:2561  lockedUntil[msg.sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2550:2560  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":2538:2561  lockedUntil[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":2519:2534  block.timestamp */\n      timestamp\n        /* \"RVA/UpgradableToken.sol\":2519:2561  block.timestamp >= lockedUntil[msg.sender] */\n      lt\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2519:2593  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n      dup1\n      tag_279\n      jumpi\n      pop\n        /* \"RVA/UpgradableToken.sol\":2592:2593  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2565:2576  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":2565:2588  lockedUntil[msg.sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2577:2587  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":2565:2588  lockedUntil[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":2565:2593  lockedUntil[msg.sender] == 0 */\n      eq\n        /* \"RVA/UpgradableToken.sol\":2519:2593  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n    tag_279:\n        /* \"RVA/UpgradableToken.sol\":2511:2632  require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_195\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"RVA/UpgradableToken.sol\":2649:2682  super.transfer(recipient, amount) */\n      tag_282\n        /* \"RVA/UpgradableToken.sol\":2664:2673  recipient */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":2675:2681  amount */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":2649:2663  super.transfer */\n      tag_283\n        /* \"RVA/UpgradableToken.sol\":2649:2682  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_282:\n        /* \"RVA/UpgradableToken.sol\":2642:2682  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":2231:2689  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_130:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1082:1445  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_287\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_288\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_289\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_291:\n        /* \"RVA/UpgradableToken.sol\":1197:1223  __ERC20_init(name, symbol) */\n      tag_293\n        /* \"RVA/UpgradableToken.sol\":1210:1214  name */\n      dup9\n        /* \"RVA/UpgradableToken.sol\":1216:1222  symbol */\n      dup9\n        /* \"RVA/UpgradableToken.sol\":1197:1209  __ERC20_init */\n      tag_294\n        /* \"RVA/UpgradableToken.sol\":1197:1223  __ERC20_init(name, symbol) */\n      jump\t// in\n    tag_293:\n        /* \"RVA/UpgradableToken.sol\":1233:1259  __Ownable_init(msg.sender) */\n      tag_295\n        /* \"RVA/UpgradableToken.sol\":1248:1258  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1233:1247  __Ownable_init */\n      tag_296\n        /* \"RVA/UpgradableToken.sol\":1233:1259  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_295:\n        /* \"RVA/UpgradableToken.sol\":1269:1286  __Pausable_init() */\n      tag_297\n        /* \"RVA/UpgradableToken.sol\":1269:1284  __Pausable_init */\n      tag_298\n        /* \"RVA/UpgradableToken.sol\":1269:1286  __Pausable_init() */\n      jump\t// in\n    tag_297:\n        /* \"RVA/UpgradableToken.sol\":1296:1320  __UUPSUpgradeable_init() */\n      tag_299\n        /* \"RVA/UpgradableToken.sol\":1296:1318  __UUPSUpgradeable_init */\n      tag_300\n        /* \"RVA/UpgradableToken.sol\":1296:1320  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_299:\n        /* \"RVA/UpgradableToken.sol\":1346:1358  totalSupply_ */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":1331:1343  _totalSupply */\n      0x33\n        /* \"RVA/UpgradableToken.sol\":1331:1358  _totalSupply = totalSupply_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":1368:1399  _mint(msg.sender, _totalSupply) */\n      tag_301\n        /* \"RVA/UpgradableToken.sol\":1374:1384  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1386:1398  _totalSupply */\n      sload(0x33)\n        /* \"RVA/UpgradableToken.sol\":1368:1373  _mint */\n      tag_302\n        /* \"RVA/UpgradableToken.sol\":1368:1399  _mint(msg.sender, _totalSupply) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_304\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"RVA/UpgradableToken.sol\":1082:1445  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":475:501  address public icoContract */\n    tag_139:\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":594:637  mapping(address => bool) public blacklisted */\n    tag_144:\n      mstore(0x20, 0x35)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4795  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4829  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      tag_307\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4848  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4850  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4868  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4880  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4881:4886  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4888:4895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4860:4896  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_313\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":2114:2225  function isBlacklisted(address account) public view returns (bool) {... */\n    tag_159:\n        /* \"RVA/UpgradableToken.sol\":2175:2179  bool */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2198:2209  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2198:2218  blacklisted[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2210:2217  account */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":2198:2218  blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2191:2218  return blacklisted[account] */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":2114:2225  function isBlacklisted(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10094:10099  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10101:10108  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10110:10115  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10117:10121  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10093  _approve */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      tag_327\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2107  paused */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2100:2109  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6075:6079  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6106  address spender */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      tag_332\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6119  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6121  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6147:6151  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6153:6160  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6162:6167  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6146  _spendAllowance */\n      tag_334\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6188:6192  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6194:6196  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6198:6203  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6187  _transfer */\n      tag_261\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6221:6225  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6214:6225  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n    tag_213:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      tag_337\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1764  _requirePaused */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2765:2770  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2762  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2770  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      tag_340\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2804  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_341\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_343\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_344\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4783  ERC1967Utils.getImplementation */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_343:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n    tag_346:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":3915:3999  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {} */\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_348:\n        /* \"RVA/UpgradableToken.sol\":3915:3999  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {} */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_351\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_352\n      swap2\n      swap1\n      tag_353\n      jump\t// in\n    tag_352:\n      0x01\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6560:6577  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6258:6290  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6254  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6346:6350  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_362\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_363\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6209:6444  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_367\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2519:2523  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2516  _paused */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      tag_371\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2555  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      mload(0x40)\n      tag_372\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6704:6705  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6692  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n      tag_374\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6756:6757  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6729:6759  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_375\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_375:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n    tag_374:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6797:6798  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6785  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n      tag_376\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6851:6852  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6822:6854  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_377\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n    tag_376:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6882:6886  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6888:6890  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6892:6897  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6881  _update */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4541:4545  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4570  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      tag_382\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4583  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4585  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4605:4610  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4614  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4616:4621  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4604  _transfer */\n      tag_261\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4639:4643  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4632:4643  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_386\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_386:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      tag_389\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2407:2412  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2414:2421  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2406  __ERC20_init_unchained */\n      tag_390\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_296:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_392\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_395\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_397\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_397:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      tag_399\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1172  __Pausable_init_unchained */\n      tag_400\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_402\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_402:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8822:8823  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8810  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8876:8877  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8847:8879  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_406\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_406:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      tag_407\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8915:8916  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8919:8926  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8928:8933  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8906  _update */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11106  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      tag_409\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11125  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11127  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11158:11159  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11146  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n      tag_410\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11212:11213  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11183:11215  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_411\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_411:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11258:11259  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11246  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n      tag_412\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11311:11312  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11283:11314  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_413\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_413:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n    tag_412:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11366:11371  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11335  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11347  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11348:11353  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11362  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11371  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11394  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n      iszero\n      tag_414\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11431:11438  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11424:11429  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11440:11445  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_415\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_415:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n    tag_414:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11074:11463  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_334:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11868  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      tag_417\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11881:11886  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11888:11895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11880  allowance */\n      tag_150\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11896  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11930:11947  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11926  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11947  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12216  if (currentAllowance != type(uint256).max) {... */\n      tag_418\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11986:11991  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11983  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11991  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n      iszero\n      tag_419\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12045:12052  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12054:12070  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12072:12077  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12018:12078  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_420\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_421\n      jump\t// in\n    tag_420:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n    tag_419:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      tag_422\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12143:12148  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12150:12157  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12178:12183  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12175  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12183  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12185:12190  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12142  _approve */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_422:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12216  if (currentAllowance != type(uint256).max) {... */\n    tag_418:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11834:12222  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      tag_424\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2281  paused */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_426\n      swap1\n      tag_427\n      jump\t// in\n    tag_426:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_425:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_429\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_430\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_429:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_432\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_433\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_432:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_434\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_435\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_436\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_435:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_437)\n    tag_434:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_438\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_439\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_438:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_437:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_379:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7327  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      tag_441\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7346  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      jump\t// in\n    tag_441:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7348  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7378:7379  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7366  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      tag_442\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7516:7521  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7499  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7512  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7521  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_443\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_443:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      jump(tag_445)\n    tag_442:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7571  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7575  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7585  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7590  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7591  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7623:7628  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7620  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7628  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n      iszero\n      tag_446\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7680:7684  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7686:7697  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7699:7704  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7655:7705  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_447\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_421\n      jump\t// in\n    tag_447:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n    tag_446:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7874:7879  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7871  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7879  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7841  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7851  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7852:7856  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7879  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7538:7904  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n    tag_445:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7932:7933  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7920  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      tag_448\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8099:8104  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8082  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8095  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8104  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      jump(tag_449)\n    tag_448:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8313:8318  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8295  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8305  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8306:8308  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8318  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n    tag_449:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8373:8375  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8367:8371  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8377:8382  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      mload(0x40)\n      tag_450\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_450:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7295:8390  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_452\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_453\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_452:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_454:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_390:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_456\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_456:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2569  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      tag_458\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2588  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      jump\t// in\n    tag_458:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2590  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2610:2615  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2601  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2607  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2615  $._name = name_ */\n      swap1\n      dup2\n      tag_459\n      swap2\n      swap1\n      tag_460\n      jump\t// in\n    tag_459:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2637:2644  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2626  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2634  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2644  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_461\n      swap2\n      swap1\n      tag_460\n      jump\t// in\n    tag_461:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2537:2651  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_395:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_463\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_463:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_465\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_466\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_466:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_465:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_467\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_467:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_400:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_469\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_469:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1270:1275  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1267  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1275  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_430:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_433:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_473\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_474\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_474:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_473:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_475\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_430\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_475:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_436:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      mload(0x40)\n      tag_477\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_477:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_481\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_480)\n    tag_481:\n      0x60\n      swap2\n      pop\n    tag_480:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_482\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4126:4133  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4135:4145  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n      tag_483\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_482:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_439:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_485\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_485:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_453:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_487\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_487:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_483:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      tag_489\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      tag_490\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n      tag_491\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      jump\t// in\n    tag_490:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      jump(tag_492)\n    tag_489:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4862:4863  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4851  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_493\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4889:4890  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4873  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_493:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_494\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4934:4940  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_495\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_495:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_494:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4986  return returndata */\n      swap1\n      pop\n      jump(tag_488)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_492:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_488:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\n    tag_491:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5684  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n      iszero\n      tag_497\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n    tag_497:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:106   */\n    tag_499:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_500:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:535   */\n    tag_501:\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":379:492   */\n    tag_586:\n        /* \"#utility.yul\":393:399   */\n      dup4\n        /* \"#utility.yul\":390:391   */\n      dup2\n        /* \"#utility.yul\":387:400   */\n      lt\n        /* \"#utility.yul\":379:492   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":478:479   */\n      dup1\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":469:480   */\n      add\n        /* \"#utility.yul\":463:481   */\n      mload\n        /* \"#utility.yul\":459:460   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup5\n        /* \"#utility.yul\":450:461   */\n      add\n        /* \"#utility.yul\":443:482   */\n      mstore\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":412:413   */\n      dup2\n        /* \"#utility.yul\":408:418   */\n      add\n        /* \"#utility.yul\":403:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:492   */\n      jump(tag_586)\n    tag_588:\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":512:515   */\n      dup5\n        /* \"#utility.yul\":508:524   */\n      add\n        /* \"#utility.yul\":501:528   */\n      mstore\n        /* \"#utility.yul\":349:535   */\n      pop\n        /* \"#utility.yul\":287:535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":541:643   */\n    tag_502:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":633:635   */\n      0x1f\n        /* \"#utility.yul\":629:636   */\n      not\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":617:622   */\n      dup4\n        /* \"#utility.yul\":613:627   */\n      add\n        /* \"#utility.yul\":609:637   */\n      and\n        /* \"#utility.yul\":599:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1026   */\n    tag_503:\n        /* \"#utility.yul\":737:740   */\n      0x00\n        /* \"#utility.yul\":765:804   */\n      tag_591\n        /* \"#utility.yul\":798:803   */\n      dup3\n        /* \"#utility.yul\":765:804   */\n      tag_499\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":820:891   */\n      tag_592\n        /* \"#utility.yul\":884:890   */\n      dup2\n        /* \"#utility.yul\":879:882   */\n      dup6\n        /* \"#utility.yul\":820:891   */\n      tag_500\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":813:891   */\n      swap4\n      pop\n        /* \"#utility.yul\":900:965   */\n      tag_593\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":953:956   */\n      dup6\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup7\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":900:965   */\n      tag_501\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":990:1019   */\n      tag_594\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":990:1019   */\n      tag_502\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":985:988   */\n      dup5\n        /* \"#utility.yul\":981:1020   */\n      add\n        /* \"#utility.yul\":974:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":741:1026   */\n      pop\n        /* \"#utility.yul\":649:1026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1345   */\n    tag_39:\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1168:1186   */\n      add\n        /* \"#utility.yul\":1160:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      dup2\n        /* \"#utility.yul\":1226:1230   */\n      dup2\n        /* \"#utility.yul\":1222:1242   */\n      sub\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1207:1216   */\n      dup4\n        /* \"#utility.yul\":1203:1220   */\n      add\n        /* \"#utility.yul\":1196:1243   */\n      mstore\n        /* \"#utility.yul\":1260:1338   */\n      tag_596\n        /* \"#utility.yul\":1333:1337   */\n      dup2\n        /* \"#utility.yul\":1324:1330   */\n      dup5\n        /* \"#utility.yul\":1260:1338   */\n      tag_503\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":1252:1338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:1426   */\n    tag_504:\n        /* \"#utility.yul\":1384:1390   */\n      0x00\n        /* \"#utility.yul\":1417:1419   */\n      0x40\n        /* \"#utility.yul\":1411:1420   */\n      mload\n        /* \"#utility.yul\":1401:1420   */\n      swap1\n      pop\n        /* \"#utility.yul\":1351:1426   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1432:1549   */\n    tag_505:\n        /* \"#utility.yul\":1541:1542   */\n      0x00\n        /* \"#utility.yul\":1538:1539   */\n      dup1\n        /* \"#utility.yul\":1531:1543   */\n      revert\n        /* \"#utility.yul\":1555:1672   */\n    tag_506:\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1678:1804   */\n    tag_507:\n        /* \"#utility.yul\":1715:1722   */\n      0x00\n        /* \"#utility.yul\":1755:1797   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1748:1753   */\n      dup3\n        /* \"#utility.yul\":1744:1798   */\n      and\n        /* \"#utility.yul\":1733:1798   */\n      swap1\n      pop\n        /* \"#utility.yul\":1678:1804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:1906   */\n    tag_508:\n        /* \"#utility.yul\":1847:1854   */\n      0x00\n        /* \"#utility.yul\":1876:1900   */\n      tag_602\n        /* \"#utility.yul\":1894:1899   */\n      dup3\n        /* \"#utility.yul\":1876:1900   */\n      tag_507\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":1865:1900   */\n      swap1\n      pop\n        /* \"#utility.yul\":1810:1906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1912:2034   */\n    tag_509:\n        /* \"#utility.yul\":1985:2009   */\n      tag_604\n        /* \"#utility.yul\":2003:2008   */\n      dup2\n        /* \"#utility.yul\":1985:2009   */\n      tag_508\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":1978:1983   */\n      dup2\n        /* \"#utility.yul\":1975:2010   */\n      eq\n        /* \"#utility.yul\":1965:2028   */\n      tag_605\n      jumpi\n        /* \"#utility.yul\":2024:2025   */\n      0x00\n        /* \"#utility.yul\":2021:2022   */\n      dup1\n        /* \"#utility.yul\":2014:2026   */\n      revert\n        /* \"#utility.yul\":1965:2028   */\n    tag_605:\n        /* \"#utility.yul\":1912:2034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2179   */\n    tag_510:\n        /* \"#utility.yul\":2086:2091   */\n      0x00\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2111:2131   */\n      calldataload\n        /* \"#utility.yul\":2102:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2173   */\n      tag_607\n        /* \"#utility.yul\":2167:2172   */\n      dup2\n        /* \"#utility.yul\":2140:2173   */\n      tag_509\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":2040:2179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2262   */\n    tag_511:\n        /* \"#utility.yul\":2222:2229   */\n      0x00\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2240:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2185:2262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2390   */\n    tag_512:\n        /* \"#utility.yul\":2341:2365   */\n      tag_610\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_511\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_611\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_611:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_513:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_613\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_512\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:3015   */\n    tag_43:\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2617:2623   */\n      dup1\n        /* \"#utility.yul\":2666:2668   */\n      0x40\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2645:2652   */\n      dup6\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_616\n      tag_505\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":2634:2753   */\n    tag_615:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2817:2870   */\n      tag_617\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2817:2870   */\n      tag_510\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":2807:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2763:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_618\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_513\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2541:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3111   */\n    tag_514:\n        /* \"#utility.yul\":3055:3062   */\n      0x00\n        /* \"#utility.yul\":3098:3103   */\n      dup2\n        /* \"#utility.yul\":3091:3104   */\n      iszero\n        /* \"#utility.yul\":3084:3105   */\n      iszero\n        /* \"#utility.yul\":3073:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3021:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3226   */\n    tag_515:\n        /* \"#utility.yul\":3198:3219   */\n      tag_621\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3198:3219   */\n      tag_514\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":3193:3196   */\n      dup3\n        /* \"#utility.yul\":3186:3220   */\n      mstore\n        /* \"#utility.yul\":3117:3226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3442   */\n    tag_46:\n        /* \"#utility.yul\":3319:3323   */\n      0x00\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3334:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3370:3435   */\n      tag_623\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3370:3435   */\n      tag_515\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":3232:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3564   */\n    tag_516:\n        /* \"#utility.yul\":3518:3539   */\n      tag_625\n        /* \"#utility.yul\":3533:3538   */\n      dup2\n        /* \"#utility.yul\":3518:3539   */\n      tag_514\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":3511:3516   */\n      dup2\n        /* \"#utility.yul\":3508:3540   */\n      eq\n        /* \"#utility.yul\":3498:3558   */\n      tag_626\n      jumpi\n        /* \"#utility.yul\":3554:3555   */\n      0x00\n        /* \"#utility.yul\":3551:3552   */\n      dup1\n        /* \"#utility.yul\":3544:3556   */\n      revert\n        /* \"#utility.yul\":3498:3558   */\n    tag_626:\n        /* \"#utility.yul\":3448:3564   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3703   */\n    tag_517:\n        /* \"#utility.yul\":3613:3618   */\n      0x00\n        /* \"#utility.yul\":3651:3657   */\n      dup2\n        /* \"#utility.yul\":3638:3658   */\n      calldataload\n        /* \"#utility.yul\":3629:3658   */\n      swap1\n      pop\n        /* \"#utility.yul\":3667:3697   */\n      tag_628\n        /* \"#utility.yul\":3691:3696   */\n      dup2\n        /* \"#utility.yul\":3667:3697   */\n      tag_516\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":3570:3703   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3709:4177   */\n    tag_50:\n        /* \"#utility.yul\":3774:3780   */\n      0x00\n        /* \"#utility.yul\":3782:3788   */\n      dup1\n        /* \"#utility.yul\":3831:3833   */\n      0x40\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3810:3817   */\n      dup6\n        /* \"#utility.yul\":3806:3829   */\n      sub\n        /* \"#utility.yul\":3802:3834   */\n      slt\n        /* \"#utility.yul\":3799:3918   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":3837:3916   */\n      tag_631\n      tag_505\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":3799:3918   */\n    tag_630:\n        /* \"#utility.yul\":3957:3958   */\n      0x00\n        /* \"#utility.yul\":3982:4035   */\n      tag_632\n        /* \"#utility.yul\":4027:4034   */\n      dup6\n        /* \"#utility.yul\":4018:4024   */\n      dup3\n        /* \"#utility.yul\":4007:4016   */\n      dup7\n        /* \"#utility.yul\":4003:4025   */\n      add\n        /* \"#utility.yul\":3982:4035   */\n      tag_510\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":3972:4035   */\n      swap3\n      pop\n        /* \"#utility.yul\":3928:4045   */\n      pop\n        /* \"#utility.yul\":4084:4086   */\n      0x20\n        /* \"#utility.yul\":4110:4160   */\n      tag_633\n        /* \"#utility.yul\":4152:4159   */\n      dup6\n        /* \"#utility.yul\":4143:4149   */\n      dup3\n        /* \"#utility.yul\":4132:4141   */\n      dup7\n        /* \"#utility.yul\":4128:4150   */\n      add\n        /* \"#utility.yul\":4110:4160   */\n      tag_517\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":4100:4160   */\n      swap2\n      pop\n        /* \"#utility.yul\":4055:4170   */\n      pop\n        /* \"#utility.yul\":3709:4177   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4183:4301   */\n    tag_518:\n        /* \"#utility.yul\":4270:4294   */\n      tag_635\n        /* \"#utility.yul\":4288:4293   */\n      dup2\n        /* \"#utility.yul\":4270:4294   */\n      tag_511\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":4265:4268   */\n      dup3\n        /* \"#utility.yul\":4258:4295   */\n      mstore\n        /* \"#utility.yul\":4183:4301   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4307:4529   */\n    tag_56:\n        /* \"#utility.yul\":4400:4404   */\n      0x00\n        /* \"#utility.yul\":4438:4440   */\n      0x20\n        /* \"#utility.yul\":4427:4436   */\n      dup3\n        /* \"#utility.yul\":4423:4441   */\n      add\n        /* \"#utility.yul\":4415:4441   */\n      swap1\n      pop\n        /* \"#utility.yul\":4451:4522   */\n      tag_637\n        /* \"#utility.yul\":4519:4520   */\n      0x00\n        /* \"#utility.yul\":4508:4517   */\n      dup4\n        /* \"#utility.yul\":4504:4521   */\n      add\n        /* \"#utility.yul\":4495:4501   */\n      dup5\n        /* \"#utility.yul\":4451:4522   */\n      tag_518\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":4307:4529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4535:5154   */\n    tag_60:\n        /* \"#utility.yul\":4612:4618   */\n      0x00\n        /* \"#utility.yul\":4620:4626   */\n      dup1\n        /* \"#utility.yul\":4628:4634   */\n      0x00\n        /* \"#utility.yul\":4677:4679   */\n      0x60\n        /* \"#utility.yul\":4665:4674   */\n      dup5\n        /* \"#utility.yul\":4656:4663   */\n      dup7\n        /* \"#utility.yul\":4652:4675   */\n      sub\n        /* \"#utility.yul\":4648:4680   */\n      slt\n        /* \"#utility.yul\":4645:4764   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":4683:4762   */\n      tag_640\n      tag_505\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":4645:4764   */\n    tag_639:\n        /* \"#utility.yul\":4803:4804   */\n      0x00\n        /* \"#utility.yul\":4828:4881   */\n      tag_641\n        /* \"#utility.yul\":4873:4880   */\n      dup7\n        /* \"#utility.yul\":4864:4870   */\n      dup3\n        /* \"#utility.yul\":4853:4862   */\n      dup8\n        /* \"#utility.yul\":4849:4871   */\n      add\n        /* \"#utility.yul\":4828:4881   */\n      tag_510\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":4818:4881   */\n      swap4\n      pop\n        /* \"#utility.yul\":4774:4891   */\n      pop\n        /* \"#utility.yul\":4930:4932   */\n      0x20\n        /* \"#utility.yul\":4956:5009   */\n      tag_642\n        /* \"#utility.yul\":5001:5008   */\n      dup7\n        /* \"#utility.yul\":4992:4998   */\n      dup3\n        /* \"#utility.yul\":4981:4990   */\n      dup8\n        /* \"#utility.yul\":4977:4999   */\n      add\n        /* \"#utility.yul\":4956:5009   */\n      tag_510\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":4946:5009   */\n      swap3\n      pop\n        /* \"#utility.yul\":4901:5019   */\n      pop\n        /* \"#utility.yul\":5058:5060   */\n      0x40\n        /* \"#utility.yul\":5084:5137   */\n      tag_643\n        /* \"#utility.yul\":5129:5136   */\n      dup7\n        /* \"#utility.yul\":5120:5126   */\n      dup3\n        /* \"#utility.yul\":5109:5118   */\n      dup8\n        /* \"#utility.yul\":5105:5127   */\n      add\n        /* \"#utility.yul\":5084:5137   */\n      tag_513\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":5074:5137   */\n      swap2\n      pop\n        /* \"#utility.yul\":5029:5147   */\n      pop\n        /* \"#utility.yul\":4535:5154   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5160:5489   */\n    tag_66:\n        /* \"#utility.yul\":5219:5225   */\n      0x00\n        /* \"#utility.yul\":5268:5270   */\n      0x20\n        /* \"#utility.yul\":5256:5265   */\n      dup3\n        /* \"#utility.yul\":5247:5254   */\n      dup5\n        /* \"#utility.yul\":5243:5266   */\n      sub\n        /* \"#utility.yul\":5239:5271   */\n      slt\n        /* \"#utility.yul\":5236:5355   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":5274:5353   */\n      tag_646\n      tag_505\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":5236:5355   */\n    tag_645:\n        /* \"#utility.yul\":5394:5395   */\n      0x00\n        /* \"#utility.yul\":5419:5472   */\n      tag_647\n        /* \"#utility.yul\":5464:5471   */\n      dup5\n        /* \"#utility.yul\":5455:5461   */\n      dup3\n        /* \"#utility.yul\":5444:5453   */\n      dup6\n        /* \"#utility.yul\":5440:5462   */\n      add\n        /* \"#utility.yul\":5419:5472   */\n      tag_510\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":5409:5472   */\n      swap2\n      pop\n        /* \"#utility.yul\":5365:5482   */\n      pop\n        /* \"#utility.yul\":5160:5489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5495:5581   */\n    tag_519:\n        /* \"#utility.yul\":5530:5537   */\n      0x00\n        /* \"#utility.yul\":5570:5574   */\n      0xff\n        /* \"#utility.yul\":5563:5568   */\n      dup3\n        /* \"#utility.yul\":5559:5575   */\n      and\n        /* \"#utility.yul\":5548:5575   */\n      swap1\n      pop\n        /* \"#utility.yul\":5495:5581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5587:5699   */\n    tag_520:\n        /* \"#utility.yul\":5670:5692   */\n      tag_650\n        /* \"#utility.yul\":5686:5691   */\n      dup2\n        /* \"#utility.yul\":5670:5692   */\n      tag_519\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":5665:5668   */\n      dup3\n        /* \"#utility.yul\":5658:5693   */\n      mstore\n        /* \"#utility.yul\":5587:5699   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5705:5919   */\n    tag_72:\n        /* \"#utility.yul\":5794:5798   */\n      0x00\n        /* \"#utility.yul\":5832:5834   */\n      0x20\n        /* \"#utility.yul\":5821:5830   */\n      dup3\n        /* \"#utility.yul\":5817:5835   */\n      add\n        /* \"#utility.yul\":5809:5835   */\n      swap1\n      pop\n        /* \"#utility.yul\":5845:5912   */\n      tag_652\n        /* \"#utility.yul\":5909:5910   */\n      0x00\n        /* \"#utility.yul\":5898:5907   */\n      dup4\n        /* \"#utility.yul\":5894:5911   */\n      add\n        /* \"#utility.yul\":5885:5891   */\n      dup5\n        /* \"#utility.yul\":5845:5912   */\n      tag_520\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":5705:5919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5925:6042   */\n    tag_521:\n        /* \"#utility.yul\":6034:6035   */\n      0x00\n        /* \"#utility.yul\":6031:6032   */\n      dup1\n        /* \"#utility.yul\":6024:6036   */\n      revert\n        /* \"#utility.yul\":6048:6165   */\n    tag_522:\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6154:6155   */\n      dup1\n        /* \"#utility.yul\":6147:6159   */\n      revert\n        /* \"#utility.yul\":6171:6351   */\n    tag_523:\n        /* \"#utility.yul\":6219:6296   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6216:6217   */\n      0x00\n        /* \"#utility.yul\":6209:6297   */\n      mstore\n        /* \"#utility.yul\":6316:6320   */\n      0x41\n        /* \"#utility.yul\":6313:6314   */\n      0x04\n        /* \"#utility.yul\":6306:6321   */\n      mstore\n        /* \"#utility.yul\":6340:6344   */\n      0x24\n        /* \"#utility.yul\":6337:6338   */\n      0x00\n        /* \"#utility.yul\":6330:6345   */\n      revert\n        /* \"#utility.yul\":6357:6638   */\n    tag_524:\n        /* \"#utility.yul\":6440:6467   */\n      tag_657\n        /* \"#utility.yul\":6462:6466   */\n      dup3\n        /* \"#utility.yul\":6440:6467   */\n      tag_502\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":6432:6438   */\n      dup2\n        /* \"#utility.yul\":6428:6468   */\n      add\n        /* \"#utility.yul\":6570:6576   */\n      dup2\n        /* \"#utility.yul\":6558:6568   */\n      dup2\n        /* \"#utility.yul\":6555:6577   */\n      lt\n        /* \"#utility.yul\":6534:6552   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6522:6532   */\n      dup3\n        /* \"#utility.yul\":6519:6553   */\n      gt\n        /* \"#utility.yul\":6516:6578   */\n      or\n        /* \"#utility.yul\":6513:6601   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":6581:6599   */\n      tag_659\n      tag_523\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":6513:6601   */\n    tag_658:\n        /* \"#utility.yul\":6621:6631   */\n      dup1\n        /* \"#utility.yul\":6617:6619   */\n      0x40\n        /* \"#utility.yul\":6610:6632   */\n      mstore\n        /* \"#utility.yul\":6400:6638   */\n      pop\n        /* \"#utility.yul\":6357:6638   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6644:6773   */\n    tag_525:\n        /* \"#utility.yul\":6678:6684   */\n      0x00\n        /* \"#utility.yul\":6705:6725   */\n      tag_661\n      tag_504\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":6695:6725   */\n      swap1\n      pop\n        /* \"#utility.yul\":6734:6767   */\n      tag_662\n        /* \"#utility.yul\":6762:6766   */\n      dup3\n        /* \"#utility.yul\":6754:6760   */\n      dup3\n        /* \"#utility.yul\":6734:6767   */\n      tag_524\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":6644:6773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6779:7086   */\n    tag_526:\n        /* \"#utility.yul\":6840:6844   */\n      0x00\n        /* \"#utility.yul\":6930:6948   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6922:6928   */\n      dup3\n        /* \"#utility.yul\":6919:6949   */\n      gt\n        /* \"#utility.yul\":6916:6972   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":6952:6970   */\n      tag_665\n      tag_523\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":6916:6972   */\n    tag_664:\n        /* \"#utility.yul\":6990:7019   */\n      tag_666\n        /* \"#utility.yul\":7012:7018   */\n      dup3\n        /* \"#utility.yul\":6990:7019   */\n      tag_502\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":6982:7019   */\n      swap1\n      pop\n        /* \"#utility.yul\":7074:7078   */\n      0x20\n        /* \"#utility.yul\":7068:7072   */\n      dup2\n        /* \"#utility.yul\":7064:7079   */\n      add\n        /* \"#utility.yul\":7056:7079   */\n      swap1\n      pop\n        /* \"#utility.yul\":6779:7086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7092:7240   */\n    tag_527:\n        /* \"#utility.yul\":7190:7196   */\n      dup3\n        /* \"#utility.yul\":7185:7188   */\n      dup2\n        /* \"#utility.yul\":7180:7183   */\n      dup4\n        /* \"#utility.yul\":7167:7197   */\n      calldatacopy\n        /* \"#utility.yul\":7231:7232   */\n      0x00\n        /* \"#utility.yul\":7222:7228   */\n      dup4\n        /* \"#utility.yul\":7217:7220   */\n      dup4\n        /* \"#utility.yul\":7213:7229   */\n      add\n        /* \"#utility.yul\":7206:7233   */\n      mstore\n        /* \"#utility.yul\":7092:7240   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7246:7669   */\n    tag_528:\n        /* \"#utility.yul\":7323:7328   */\n      0x00\n        /* \"#utility.yul\":7348:7413   */\n      tag_669\n        /* \"#utility.yul\":7364:7412   */\n      tag_670\n        /* \"#utility.yul\":7405:7411   */\n      dup5\n        /* \"#utility.yul\":7364:7412   */\n      tag_526\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":7348:7413   */\n      tag_525\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":7339:7413   */\n      swap1\n      pop\n        /* \"#utility.yul\":7436:7442   */\n      dup3\n        /* \"#utility.yul\":7429:7434   */\n      dup2\n        /* \"#utility.yul\":7422:7443   */\n      mstore\n        /* \"#utility.yul\":7474:7478   */\n      0x20\n        /* \"#utility.yul\":7467:7472   */\n      dup2\n        /* \"#utility.yul\":7463:7479   */\n      add\n        /* \"#utility.yul\":7512:7515   */\n      dup5\n        /* \"#utility.yul\":7503:7509   */\n      dup5\n        /* \"#utility.yul\":7498:7501   */\n      dup5\n        /* \"#utility.yul\":7494:7510   */\n      add\n        /* \"#utility.yul\":7491:7516   */\n      gt\n        /* \"#utility.yul\":7488:7600   */\n      iszero\n      tag_671\n      jumpi\n        /* \"#utility.yul\":7519:7598   */\n      tag_672\n      tag_522\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":7488:7600   */\n    tag_671:\n        /* \"#utility.yul\":7609:7663   */\n      tag_673\n        /* \"#utility.yul\":7656:7662   */\n      dup5\n        /* \"#utility.yul\":7651:7654   */\n      dup3\n        /* \"#utility.yul\":7646:7649   */\n      dup6\n        /* \"#utility.yul\":7609:7663   */\n      tag_527\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":7329:7669   */\n      pop\n        /* \"#utility.yul\":7246:7669   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7688:8026   */\n    tag_529:\n        /* \"#utility.yul\":7743:7748   */\n      0x00\n        /* \"#utility.yul\":7792:7795   */\n      dup3\n        /* \"#utility.yul\":7785:7789   */\n      0x1f\n        /* \"#utility.yul\":7777:7783   */\n      dup4\n        /* \"#utility.yul\":7773:7790   */\n      add\n        /* \"#utility.yul\":7769:7796   */\n      slt\n        /* \"#utility.yul\":7759:7881   */\n      tag_675\n      jumpi\n        /* \"#utility.yul\":7800:7879   */\n      tag_676\n      tag_521\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":7759:7881   */\n    tag_675:\n        /* \"#utility.yul\":7917:7923   */\n      dup2\n        /* \"#utility.yul\":7904:7924   */\n      calldataload\n        /* \"#utility.yul\":7942:8020   */\n      tag_677\n        /* \"#utility.yul\":8016:8019   */\n      dup5\n        /* \"#utility.yul\":8008:8014   */\n      dup3\n        /* \"#utility.yul\":8001:8005   */\n      0x20\n        /* \"#utility.yul\":7993:7999   */\n      dup7\n        /* \"#utility.yul\":7989:8006   */\n      add\n        /* \"#utility.yul\":7942:8020   */\n      tag_528\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":7933:8020   */\n      swap2\n      pop\n        /* \"#utility.yul\":7749:8026   */\n      pop\n        /* \"#utility.yul\":7688:8026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8032:8684   */\n    tag_82:\n        /* \"#utility.yul\":8109:8115   */\n      0x00\n        /* \"#utility.yul\":8117:8123   */\n      dup1\n        /* \"#utility.yul\":8166:8168   */\n      0x40\n        /* \"#utility.yul\":8154:8163   */\n      dup4\n        /* \"#utility.yul\":8145:8152   */\n      dup6\n        /* \"#utility.yul\":8141:8164   */\n      sub\n        /* \"#utility.yul\":8137:8169   */\n      slt\n        /* \"#utility.yul\":8134:8253   */\n      iszero\n      tag_679\n      jumpi\n        /* \"#utility.yul\":8172:8251   */\n      tag_680\n      tag_505\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":8134:8253   */\n    tag_679:\n        /* \"#utility.yul\":8292:8293   */\n      0x00\n        /* \"#utility.yul\":8317:8370   */\n      tag_681\n        /* \"#utility.yul\":8362:8369   */\n      dup6\n        /* \"#utility.yul\":8353:8359   */\n      dup3\n        /* \"#utility.yul\":8342:8351   */\n      dup7\n        /* \"#utility.yul\":8338:8360   */\n      add\n        /* \"#utility.yul\":8317:8370   */\n      tag_510\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":8307:8370   */\n      swap3\n      pop\n        /* \"#utility.yul\":8263:8380   */\n      pop\n        /* \"#utility.yul\":8447:8449   */\n      0x20\n        /* \"#utility.yul\":8436:8445   */\n      dup4\n        /* \"#utility.yul\":8432:8450   */\n      add\n        /* \"#utility.yul\":8419:8451   */\n      calldataload\n        /* \"#utility.yul\":8478:8496   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8470:8476   */\n      dup2\n        /* \"#utility.yul\":8467:8497   */\n      gt\n        /* \"#utility.yul\":8464:8581   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":8500:8579   */\n      tag_683\n      tag_506\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":8464:8581   */\n    tag_682:\n        /* \"#utility.yul\":8605:8667   */\n      tag_684\n        /* \"#utility.yul\":8659:8666   */\n      dup6\n        /* \"#utility.yul\":8650:8656   */\n      dup3\n        /* \"#utility.yul\":8639:8648   */\n      dup7\n        /* \"#utility.yul\":8635:8657   */\n      add\n        /* \"#utility.yul\":8605:8667   */\n      tag_529\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":8595:8667   */\n      swap2\n      pop\n        /* \"#utility.yul\":8390:8677   */\n      pop\n        /* \"#utility.yul\":8032:8684   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8690:8767   */\n    tag_530:\n        /* \"#utility.yul\":8727:8734   */\n      0x00\n        /* \"#utility.yul\":8756:8761   */\n      dup2\n        /* \"#utility.yul\":8745:8761   */\n      swap1\n      pop\n        /* \"#utility.yul\":8690:8767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8773:8891   */\n    tag_531:\n        /* \"#utility.yul\":8860:8884   */\n      tag_687\n        /* \"#utility.yul\":8878:8883   */\n      dup2\n        /* \"#utility.yul\":8860:8884   */\n      tag_530\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":8855:8858   */\n      dup3\n        /* \"#utility.yul\":8848:8885   */\n      mstore\n        /* \"#utility.yul\":8773:8891   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8897:9119   */\n    tag_88:\n        /* \"#utility.yul\":8990:8994   */\n      0x00\n        /* \"#utility.yul\":9028:9030   */\n      0x20\n        /* \"#utility.yul\":9017:9026   */\n      dup3\n        /* \"#utility.yul\":9013:9031   */\n      add\n        /* \"#utility.yul\":9005:9031   */\n      swap1\n      pop\n        /* \"#utility.yul\":9041:9112   */\n      tag_689\n        /* \"#utility.yul\":9109:9110   */\n      0x00\n        /* \"#utility.yul\":9098:9107   */\n      dup4\n        /* \"#utility.yul\":9094:9111   */\n      add\n        /* \"#utility.yul\":9085:9091   */\n      dup5\n        /* \"#utility.yul\":9041:9112   */\n      tag_531\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":8897:9119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9125:9242   */\n    tag_532:\n        /* \"#utility.yul\":9234:9235   */\n      0x00\n        /* \"#utility.yul\":9231:9232   */\n      dup1\n        /* \"#utility.yul\":9224:9236   */\n      revert\n        /* \"#utility.yul\":9248:9365   */\n    tag_533:\n        /* \"#utility.yul\":9357:9358   */\n      0x00\n        /* \"#utility.yul\":9354:9355   */\n      dup1\n        /* \"#utility.yul\":9347:9359   */\n      revert\n        /* \"#utility.yul\":9388:9956   */\n    tag_534:\n        /* \"#utility.yul\":9461:9469   */\n      0x00\n        /* \"#utility.yul\":9471:9477   */\n      dup1\n        /* \"#utility.yul\":9521:9524   */\n      dup4\n        /* \"#utility.yul\":9514:9518   */\n      0x1f\n        /* \"#utility.yul\":9506:9512   */\n      dup5\n        /* \"#utility.yul\":9502:9519   */\n      add\n        /* \"#utility.yul\":9498:9525   */\n      slt\n        /* \"#utility.yul\":9488:9610   */\n      tag_693\n      jumpi\n        /* \"#utility.yul\":9529:9608   */\n      tag_694\n      tag_521\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":9488:9610   */\n    tag_693:\n        /* \"#utility.yul\":9642:9648   */\n      dup3\n        /* \"#utility.yul\":9629:9649   */\n      calldataload\n        /* \"#utility.yul\":9619:9649   */\n      swap1\n      pop\n        /* \"#utility.yul\":9672:9690   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9664:9670   */\n      dup2\n        /* \"#utility.yul\":9661:9691   */\n      gt\n        /* \"#utility.yul\":9658:9775   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":9694:9773   */\n      tag_696\n      tag_532\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":9658:9775   */\n    tag_695:\n        /* \"#utility.yul\":9808:9812   */\n      0x20\n        /* \"#utility.yul\":9800:9806   */\n      dup4\n        /* \"#utility.yul\":9796:9813   */\n      add\n        /* \"#utility.yul\":9784:9813   */\n      swap2\n      pop\n        /* \"#utility.yul\":9862:9865   */\n      dup4\n        /* \"#utility.yul\":9854:9858   */\n      0x20\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9842:9859   */\n      mul\n        /* \"#utility.yul\":9832:9840   */\n      dup4\n        /* \"#utility.yul\":9828:9860   */\n      add\n        /* \"#utility.yul\":9825:9866   */\n      gt\n        /* \"#utility.yul\":9822:9950   */\n      iszero\n      tag_697\n      jumpi\n        /* \"#utility.yul\":9869:9948   */\n      tag_698\n      tag_533\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":9822:9950   */\n    tag_697:\n        /* \"#utility.yul\":9388:9956   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9979:10547   */\n    tag_535:\n        /* \"#utility.yul\":10052:10060   */\n      0x00\n        /* \"#utility.yul\":10062:10068   */\n      dup1\n        /* \"#utility.yul\":10112:10115   */\n      dup4\n        /* \"#utility.yul\":10105:10109   */\n      0x1f\n        /* \"#utility.yul\":10097:10103   */\n      dup5\n        /* \"#utility.yul\":10093:10110   */\n      add\n        /* \"#utility.yul\":10089:10116   */\n      slt\n        /* \"#utility.yul\":10079:10201   */\n      tag_700\n      jumpi\n        /* \"#utility.yul\":10120:10199   */\n      tag_701\n      tag_521\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":10079:10201   */\n    tag_700:\n        /* \"#utility.yul\":10233:10239   */\n      dup3\n        /* \"#utility.yul\":10220:10240   */\n      calldataload\n        /* \"#utility.yul\":10210:10240   */\n      swap1\n      pop\n        /* \"#utility.yul\":10263:10281   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10255:10261   */\n      dup2\n        /* \"#utility.yul\":10252:10282   */\n      gt\n        /* \"#utility.yul\":10249:10366   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":10285:10364   */\n      tag_703\n      tag_532\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":10249:10366   */\n    tag_702:\n        /* \"#utility.yul\":10399:10403   */\n      0x20\n        /* \"#utility.yul\":10391:10397   */\n      dup4\n        /* \"#utility.yul\":10387:10404   */\n      add\n        /* \"#utility.yul\":10375:10404   */\n      swap2\n      pop\n        /* \"#utility.yul\":10453:10456   */\n      dup4\n        /* \"#utility.yul\":10445:10449   */\n      0x20\n        /* \"#utility.yul\":10437:10443   */\n      dup3\n        /* \"#utility.yul\":10433:10450   */\n      mul\n        /* \"#utility.yul\":10423:10431   */\n      dup4\n        /* \"#utility.yul\":10419:10451   */\n      add\n        /* \"#utility.yul\":10416:10457   */\n      gt\n        /* \"#utility.yul\":10413:10541   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":10460:10539   */\n      tag_705\n      tag_533\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":10413:10541   */\n    tag_704:\n        /* \"#utility.yul\":9979:10547   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10553:11487   */\n    tag_107:\n        /* \"#utility.yul\":10675:10681   */\n      0x00\n        /* \"#utility.yul\":10683:10689   */\n      dup1\n        /* \"#utility.yul\":10691:10697   */\n      0x00\n        /* \"#utility.yul\":10699:10705   */\n      dup1\n        /* \"#utility.yul\":10748:10750   */\n      0x40\n        /* \"#utility.yul\":10736:10745   */\n      dup6\n        /* \"#utility.yul\":10727:10734   */\n      dup8\n        /* \"#utility.yul\":10723:10746   */\n      sub\n        /* \"#utility.yul\":10719:10751   */\n      slt\n        /* \"#utility.yul\":10716:10835   */\n      iszero\n      tag_707\n      jumpi\n        /* \"#utility.yul\":10754:10833   */\n      tag_708\n      tag_505\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":10716:10835   */\n    tag_707:\n        /* \"#utility.yul\":10902:10903   */\n      0x00\n        /* \"#utility.yul\":10891:10900   */\n      dup6\n        /* \"#utility.yul\":10887:10904   */\n      add\n        /* \"#utility.yul\":10874:10905   */\n      calldataload\n        /* \"#utility.yul\":10932:10950   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10924:10930   */\n      dup2\n        /* \"#utility.yul\":10921:10951   */\n      gt\n        /* \"#utility.yul\":10918:11035   */\n      iszero\n      tag_709\n      jumpi\n        /* \"#utility.yul\":10954:11033   */\n      tag_710\n      tag_506\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":10918:11035   */\n    tag_709:\n        /* \"#utility.yul\":11067:11147   */\n      tag_711\n        /* \"#utility.yul\":11139:11146   */\n      dup8\n        /* \"#utility.yul\":11130:11136   */\n      dup3\n        /* \"#utility.yul\":11119:11128   */\n      dup9\n        /* \"#utility.yul\":11115:11137   */\n      add\n        /* \"#utility.yul\":11067:11147   */\n      tag_534\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":11049:11147   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":10845:11157   */\n      pop\n        /* \"#utility.yul\":11224:11226   */\n      0x20\n        /* \"#utility.yul\":11213:11222   */\n      dup6\n        /* \"#utility.yul\":11209:11227   */\n      add\n        /* \"#utility.yul\":11196:11228   */\n      calldataload\n        /* \"#utility.yul\":11255:11273   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11247:11253   */\n      dup2\n        /* \"#utility.yul\":11244:11274   */\n      gt\n        /* \"#utility.yul\":11241:11358   */\n      iszero\n      tag_712\n      jumpi\n        /* \"#utility.yul\":11277:11356   */\n      tag_713\n      tag_506\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":11241:11358   */\n    tag_712:\n        /* \"#utility.yul\":11390:11470   */\n      tag_714\n        /* \"#utility.yul\":11462:11469   */\n      dup8\n        /* \"#utility.yul\":11453:11459   */\n      dup3\n        /* \"#utility.yul\":11442:11451   */\n      dup9\n        /* \"#utility.yul\":11438:11460   */\n      add\n        /* \"#utility.yul\":11390:11470   */\n      tag_535\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":11372:11470   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":11167:11480   */\n      pop\n        /* \"#utility.yul\":10553:11487   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11493:11611   */\n    tag_536:\n        /* \"#utility.yul\":11580:11604   */\n      tag_716\n        /* \"#utility.yul\":11598:11603   */\n      dup2\n        /* \"#utility.yul\":11580:11604   */\n      tag_508\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":11575:11578   */\n      dup3\n        /* \"#utility.yul\":11568:11605   */\n      mstore\n        /* \"#utility.yul\":11493:11611   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11617:11839   */\n    tag_113:\n        /* \"#utility.yul\":11710:11714   */\n      0x00\n        /* \"#utility.yul\":11748:11750   */\n      0x20\n        /* \"#utility.yul\":11737:11746   */\n      dup3\n        /* \"#utility.yul\":11733:11751   */\n      add\n        /* \"#utility.yul\":11725:11751   */\n      swap1\n      pop\n        /* \"#utility.yul\":11761:11832   */\n      tag_718\n        /* \"#utility.yul\":11829:11830   */\n      0x00\n        /* \"#utility.yul\":11818:11827   */\n      dup4\n        /* \"#utility.yul\":11814:11831   */\n      add\n        /* \"#utility.yul\":11805:11811   */\n      dup5\n        /* \"#utility.yul\":11761:11832   */\n      tag_536\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":11617:11839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11845:12153   */\n    tag_537:\n        /* \"#utility.yul\":11907:11911   */\n      0x00\n        /* \"#utility.yul\":11997:12015   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11989:11995   */\n      dup3\n        /* \"#utility.yul\":11986:12016   */\n      gt\n        /* \"#utility.yul\":11983:12039   */\n      iszero\n      tag_720\n      jumpi\n        /* \"#utility.yul\":12019:12037   */\n      tag_721\n      tag_523\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":11983:12039   */\n    tag_720:\n        /* \"#utility.yul\":12057:12086   */\n      tag_722\n        /* \"#utility.yul\":12079:12085   */\n      dup3\n        /* \"#utility.yul\":12057:12086   */\n      tag_502\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":12049:12086   */\n      swap1\n      pop\n        /* \"#utility.yul\":12141:12145   */\n      0x20\n        /* \"#utility.yul\":12135:12139   */\n      dup2\n        /* \"#utility.yul\":12131:12146   */\n      add\n        /* \"#utility.yul\":12123:12146   */\n      swap1\n      pop\n        /* \"#utility.yul\":11845:12153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12159:12584   */\n    tag_538:\n        /* \"#utility.yul\":12237:12242   */\n      0x00\n        /* \"#utility.yul\":12262:12328   */\n      tag_724\n        /* \"#utility.yul\":12278:12327   */\n      tag_725\n        /* \"#utility.yul\":12320:12326   */\n      dup5\n        /* \"#utility.yul\":12278:12327   */\n      tag_537\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":12262:12328   */\n      tag_525\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":12253:12328   */\n      swap1\n      pop\n        /* \"#utility.yul\":12351:12357   */\n      dup3\n        /* \"#utility.yul\":12344:12349   */\n      dup2\n        /* \"#utility.yul\":12337:12358   */\n      mstore\n        /* \"#utility.yul\":12389:12393   */\n      0x20\n        /* \"#utility.yul\":12382:12387   */\n      dup2\n        /* \"#utility.yul\":12378:12394   */\n      add\n        /* \"#utility.yul\":12427:12430   */\n      dup5\n        /* \"#utility.yul\":12418:12424   */\n      dup5\n        /* \"#utility.yul\":12413:12416   */\n      dup5\n        /* \"#utility.yul\":12409:12425   */\n      add\n        /* \"#utility.yul\":12406:12431   */\n      gt\n        /* \"#utility.yul\":12403:12515   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":12434:12513   */\n      tag_727\n      tag_522\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":12403:12515   */\n    tag_726:\n        /* \"#utility.yul\":12524:12578   */\n      tag_728\n        /* \"#utility.yul\":12571:12577   */\n      dup5\n        /* \"#utility.yul\":12566:12569   */\n      dup3\n        /* \"#utility.yul\":12561:12564   */\n      dup6\n        /* \"#utility.yul\":12524:12578   */\n      tag_527\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":12243:12584   */\n      pop\n        /* \"#utility.yul\":12159:12584   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12604:12944   */\n    tag_539:\n        /* \"#utility.yul\":12660:12665   */\n      0x00\n        /* \"#utility.yul\":12709:12712   */\n      dup3\n        /* \"#utility.yul\":12702:12706   */\n      0x1f\n        /* \"#utility.yul\":12694:12700   */\n      dup4\n        /* \"#utility.yul\":12690:12707   */\n      add\n        /* \"#utility.yul\":12686:12713   */\n      slt\n        /* \"#utility.yul\":12676:12798   */\n      tag_730\n      jumpi\n        /* \"#utility.yul\":12717:12796   */\n      tag_731\n      tag_521\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":12676:12798   */\n    tag_730:\n        /* \"#utility.yul\":12834:12840   */\n      dup2\n        /* \"#utility.yul\":12821:12841   */\n      calldataload\n        /* \"#utility.yul\":12859:12938   */\n      tag_732\n        /* \"#utility.yul\":12934:12937   */\n      dup5\n        /* \"#utility.yul\":12926:12932   */\n      dup3\n        /* \"#utility.yul\":12919:12923   */\n      0x20\n        /* \"#utility.yul\":12911:12917   */\n      dup7\n        /* \"#utility.yul\":12907:12924   */\n      add\n        /* \"#utility.yul\":12859:12938   */\n      tag_538\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":12850:12938   */\n      swap2\n      pop\n        /* \"#utility.yul\":12666:12944   */\n      pop\n        /* \"#utility.yul\":12604:12944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12950:13929   */\n    tag_135:\n        /* \"#utility.yul\":13047:13053   */\n      0x00\n        /* \"#utility.yul\":13055:13061   */\n      dup1\n        /* \"#utility.yul\":13063:13069   */\n      0x00\n        /* \"#utility.yul\":13112:13114   */\n      0x60\n        /* \"#utility.yul\":13100:13109   */\n      dup5\n        /* \"#utility.yul\":13091:13098   */\n      dup7\n        /* \"#utility.yul\":13087:13110   */\n      sub\n        /* \"#utility.yul\":13083:13115   */\n      slt\n        /* \"#utility.yul\":13080:13199   */\n      iszero\n      tag_734\n      jumpi\n        /* \"#utility.yul\":13118:13197   */\n      tag_735\n      tag_505\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":13080:13199   */\n    tag_734:\n        /* \"#utility.yul\":13266:13267   */\n      0x00\n        /* \"#utility.yul\":13255:13264   */\n      dup5\n        /* \"#utility.yul\":13251:13268   */\n      add\n        /* \"#utility.yul\":13238:13269   */\n      calldataload\n        /* \"#utility.yul\":13296:13314   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13288:13294   */\n      dup2\n        /* \"#utility.yul\":13285:13315   */\n      gt\n        /* \"#utility.yul\":13282:13399   */\n      iszero\n      tag_736\n      jumpi\n        /* \"#utility.yul\":13318:13397   */\n      tag_737\n      tag_506\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":13282:13399   */\n    tag_736:\n        /* \"#utility.yul\":13423:13486   */\n      tag_738\n        /* \"#utility.yul\":13478:13485   */\n      dup7\n        /* \"#utility.yul\":13469:13475   */\n      dup3\n        /* \"#utility.yul\":13458:13467   */\n      dup8\n        /* \"#utility.yul\":13454:13476   */\n      add\n        /* \"#utility.yul\":13423:13486   */\n      tag_539\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":13413:13486   */\n      swap4\n      pop\n        /* \"#utility.yul\":13209:13496   */\n      pop\n        /* \"#utility.yul\":13563:13565   */\n      0x20\n        /* \"#utility.yul\":13552:13561   */\n      dup5\n        /* \"#utility.yul\":13548:13566   */\n      add\n        /* \"#utility.yul\":13535:13567   */\n      calldataload\n        /* \"#utility.yul\":13594:13612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13586:13592   */\n      dup2\n        /* \"#utility.yul\":13583:13613   */\n      gt\n        /* \"#utility.yul\":13580:13697   */\n      iszero\n      tag_739\n      jumpi\n        /* \"#utility.yul\":13616:13695   */\n      tag_740\n      tag_506\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":13580:13697   */\n    tag_739:\n        /* \"#utility.yul\":13721:13784   */\n      tag_741\n        /* \"#utility.yul\":13776:13783   */\n      dup7\n        /* \"#utility.yul\":13767:13773   */\n      dup3\n        /* \"#utility.yul\":13756:13765   */\n      dup8\n        /* \"#utility.yul\":13752:13774   */\n      add\n        /* \"#utility.yul\":13721:13784   */\n      tag_539\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":13711:13784   */\n      swap3\n      pop\n        /* \"#utility.yul\":13506:13794   */\n      pop\n        /* \"#utility.yul\":13833:13835   */\n      0x40\n        /* \"#utility.yul\":13859:13912   */\n      tag_742\n        /* \"#utility.yul\":13904:13911   */\n      dup7\n        /* \"#utility.yul\":13895:13901   */\n      dup3\n        /* \"#utility.yul\":13884:13893   */\n      dup8\n        /* \"#utility.yul\":13880:13902   */\n      add\n        /* \"#utility.yul\":13859:13912   */\n      tag_513\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":13849:13912   */\n      swap2\n      pop\n        /* \"#utility.yul\":13804:13922   */\n      pop\n        /* \"#utility.yul\":12950:13929   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":13935:14409   */\n    tag_149:\n        /* \"#utility.yul\":14003:14009   */\n      0x00\n        /* \"#utility.yul\":14011:14017   */\n      dup1\n        /* \"#utility.yul\":14060:14062   */\n      0x40\n        /* \"#utility.yul\":14048:14057   */\n      dup4\n        /* \"#utility.yul\":14039:14046   */\n      dup6\n        /* \"#utility.yul\":14035:14058   */\n      sub\n        /* \"#utility.yul\":14031:14063   */\n      slt\n        /* \"#utility.yul\":14028:14147   */\n      iszero\n      tag_744\n      jumpi\n        /* \"#utility.yul\":14066:14145   */\n      tag_745\n      tag_505\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":14028:14147   */\n    tag_744:\n        /* \"#utility.yul\":14186:14187   */\n      0x00\n        /* \"#utility.yul\":14211:14264   */\n      tag_746\n        /* \"#utility.yul\":14256:14263   */\n      dup6\n        /* \"#utility.yul\":14247:14253   */\n      dup3\n        /* \"#utility.yul\":14236:14245   */\n      dup7\n        /* \"#utility.yul\":14232:14254   */\n      add\n        /* \"#utility.yul\":14211:14264   */\n      tag_510\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":14201:14264   */\n      swap3\n      pop\n        /* \"#utility.yul\":14157:14274   */\n      pop\n        /* \"#utility.yul\":14313:14315   */\n      0x20\n        /* \"#utility.yul\":14339:14392   */\n      tag_747\n        /* \"#utility.yul\":14384:14391   */\n      dup6\n        /* \"#utility.yul\":14375:14381   */\n      dup3\n        /* \"#utility.yul\":14364:14373   */\n      dup7\n        /* \"#utility.yul\":14360:14382   */\n      add\n        /* \"#utility.yul\":14339:14392   */\n      tag_510\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":14329:14392   */\n      swap2\n      pop\n        /* \"#utility.yul\":14284:14402   */\n      pop\n        /* \"#utility.yul\":13935:14409   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14415:14595   */\n    tag_540:\n        /* \"#utility.yul\":14463:14540   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14460:14461   */\n      0x00\n        /* \"#utility.yul\":14453:14541   */\n      mstore\n        /* \"#utility.yul\":14560:14564   */\n      0x22\n        /* \"#utility.yul\":14557:14558   */\n      0x04\n        /* \"#utility.yul\":14550:14565   */\n      mstore\n        /* \"#utility.yul\":14584:14588   */\n      0x24\n        /* \"#utility.yul\":14581:14582   */\n      0x00\n        /* \"#utility.yul\":14574:14589   */\n      revert\n        /* \"#utility.yul\":14601:14921   */\n    tag_165:\n        /* \"#utility.yul\":14645:14651   */\n      0x00\n        /* \"#utility.yul\":14682:14683   */\n      0x02\n        /* \"#utility.yul\":14676:14680   */\n      dup3\n        /* \"#utility.yul\":14672:14684   */\n      div\n        /* \"#utility.yul\":14662:14684   */\n      swap1\n      pop\n        /* \"#utility.yul\":14729:14730   */\n      0x01\n        /* \"#utility.yul\":14723:14727   */\n      dup3\n        /* \"#utility.yul\":14719:14731   */\n      and\n        /* \"#utility.yul\":14750:14768   */\n      dup1\n        /* \"#utility.yul\":14740:14821   */\n      tag_750\n      jumpi\n        /* \"#utility.yul\":14806:14810   */\n      0x7f\n        /* \"#utility.yul\":14798:14804   */\n      dup3\n        /* \"#utility.yul\":14794:14811   */\n      and\n        /* \"#utility.yul\":14784:14811   */\n      swap2\n      pop\n        /* \"#utility.yul\":14740:14821   */\n    tag_750:\n        /* \"#utility.yul\":14868:14870   */\n      0x20\n        /* \"#utility.yul\":14860:14866   */\n      dup3\n        /* \"#utility.yul\":14857:14871   */\n      lt\n        /* \"#utility.yul\":14837:14855   */\n      dup2\n        /* \"#utility.yul\":14834:14872   */\n      sub\n        /* \"#utility.yul\":14831:14915   */\n      tag_751\n      jumpi\n        /* \"#utility.yul\":14887:14905   */\n      tag_752\n      tag_540\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":14831:14915   */\n    tag_751:\n        /* \"#utility.yul\":14652:14921   */\n      pop\n        /* \"#utility.yul\":14601:14921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14927:15152   */\n    tag_541:\n        /* \"#utility.yul\":15067:15101   */\n      0x5472616e73666572206661696c65643a2053656e64657220697320626c61636b\n        /* \"#utility.yul\":15063:15064   */\n      0x00\n        /* \"#utility.yul\":15055:15061   */\n      dup3\n        /* \"#utility.yul\":15051:15065   */\n      add\n        /* \"#utility.yul\":15044:15102   */\n      mstore\n        /* \"#utility.yul\":15136:15144   */\n      0x6c69737465640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15131:15133   */\n      0x20\n        /* \"#utility.yul\":15123:15129   */\n      dup3\n        /* \"#utility.yul\":15119:15134   */\n      add\n        /* \"#utility.yul\":15112:15145   */\n      mstore\n        /* \"#utility.yul\":14927:15152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15158:15524   */\n    tag_542:\n        /* \"#utility.yul\":15300:15303   */\n      0x00\n        /* \"#utility.yul\":15321:15388   */\n      tag_755\n        /* \"#utility.yul\":15385:15387   */\n      0x26\n        /* \"#utility.yul\":15380:15383   */\n      dup4\n        /* \"#utility.yul\":15321:15388   */\n      tag_500\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":15314:15388   */\n      swap2\n      pop\n        /* \"#utility.yul\":15397:15490   */\n      tag_756\n        /* \"#utility.yul\":15486:15489   */\n      dup3\n        /* \"#utility.yul\":15397:15490   */\n      tag_541\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":15515:15517   */\n      0x40\n        /* \"#utility.yul\":15510:15513   */\n      dup3\n        /* \"#utility.yul\":15506:15518   */\n      add\n        /* \"#utility.yul\":15499:15518   */\n      swap1\n      pop\n        /* \"#utility.yul\":15158:15524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15530:15949   */\n    tag_188:\n        /* \"#utility.yul\":15696:15700   */\n      0x00\n        /* \"#utility.yul\":15734:15736   */\n      0x20\n        /* \"#utility.yul\":15723:15732   */\n      dup3\n        /* \"#utility.yul\":15719:15737   */\n      add\n        /* \"#utility.yul\":15711:15737   */\n      swap1\n      pop\n        /* \"#utility.yul\":15783:15792   */\n      dup2\n        /* \"#utility.yul\":15777:15781   */\n      dup2\n        /* \"#utility.yul\":15773:15793   */\n      sub\n        /* \"#utility.yul\":15769:15770   */\n      0x00\n        /* \"#utility.yul\":15758:15767   */\n      dup4\n        /* \"#utility.yul\":15754:15771   */\n      add\n        /* \"#utility.yul\":15747:15794   */\n      mstore\n        /* \"#utility.yul\":15811:15942   */\n      tag_758\n        /* \"#utility.yul\":15937:15941   */\n      dup2\n        /* \"#utility.yul\":15811:15942   */\n      tag_542\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":15803:15942   */\n      swap1\n      pop\n        /* \"#utility.yul\":15530:15949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15955:16183   */\n    tag_543:\n        /* \"#utility.yul\":16095:16129   */\n      0x5472616e73666572206661696c65643a20526563697069656e7420697320626c\n        /* \"#utility.yul\":16091:16092   */\n      0x00\n        /* \"#utility.yul\":16083:16089   */\n      dup3\n        /* \"#utility.yul\":16079:16093   */\n      add\n        /* \"#utility.yul\":16072:16130   */\n      mstore\n        /* \"#utility.yul\":16164:16175   */\n      0x61636b6c69737465640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16159:16161   */\n      0x20\n        /* \"#utility.yul\":16151:16157   */\n      dup3\n        /* \"#utility.yul\":16147:16162   */\n      add\n        /* \"#utility.yul\":16140:16176   */\n      mstore\n        /* \"#utility.yul\":15955:16183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16189:16555   */\n    tag_544:\n        /* \"#utility.yul\":16331:16334   */\n      0x00\n        /* \"#utility.yul\":16352:16419   */\n      tag_761\n        /* \"#utility.yul\":16416:16418   */\n      0x29\n        /* \"#utility.yul\":16411:16414   */\n      dup4\n        /* \"#utility.yul\":16352:16419   */\n      tag_500\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":16345:16419   */\n      swap2\n      pop\n        /* \"#utility.yul\":16428:16521   */\n      tag_762\n        /* \"#utility.yul\":16517:16520   */\n      dup3\n        /* \"#utility.yul\":16428:16521   */\n      tag_543\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":16546:16548   */\n      0x40\n        /* \"#utility.yul\":16541:16544   */\n      dup3\n        /* \"#utility.yul\":16537:16549   */\n      add\n        /* \"#utility.yul\":16530:16549   */\n      swap1\n      pop\n        /* \"#utility.yul\":16189:16555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16561:16980   */\n    tag_191:\n        /* \"#utility.yul\":16727:16731   */\n      0x00\n        /* \"#utility.yul\":16765:16767   */\n      0x20\n        /* \"#utility.yul\":16754:16763   */\n      dup3\n        /* \"#utility.yul\":16750:16768   */\n      add\n        /* \"#utility.yul\":16742:16768   */\n      swap1\n      pop\n        /* \"#utility.yul\":16814:16823   */\n      dup2\n        /* \"#utility.yul\":16808:16812   */\n      dup2\n        /* \"#utility.yul\":16804:16824   */\n      sub\n        /* \"#utility.yul\":16800:16801   */\n      0x00\n        /* \"#utility.yul\":16789:16798   */\n      dup4\n        /* \"#utility.yul\":16785:16802   */\n      add\n        /* \"#utility.yul\":16778:16825   */\n      mstore\n        /* \"#utility.yul\":16842:16973   */\n      tag_764\n        /* \"#utility.yul\":16968:16972   */\n      dup2\n        /* \"#utility.yul\":16842:16973   */\n      tag_544\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":16834:16973   */\n      swap1\n      pop\n        /* \"#utility.yul\":16561:16980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16986:17207   */\n    tag_545:\n        /* \"#utility.yul\":17126:17160   */\n      0x5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b\n        /* \"#utility.yul\":17122:17123   */\n      0x00\n        /* \"#utility.yul\":17114:17120   */\n      dup3\n        /* \"#utility.yul\":17110:17124   */\n      add\n        /* \"#utility.yul\":17103:17161   */\n      mstore\n        /* \"#utility.yul\":17195:17199   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17190:17192   */\n      0x20\n        /* \"#utility.yul\":17182:17188   */\n      dup3\n        /* \"#utility.yul\":17178:17193   */\n      add\n        /* \"#utility.yul\":17171:17200   */\n      mstore\n        /* \"#utility.yul\":16986:17207   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17213:17579   */\n    tag_546:\n        /* \"#utility.yul\":17355:17358   */\n      0x00\n        /* \"#utility.yul\":17376:17443   */\n      tag_767\n        /* \"#utility.yul\":17440:17442   */\n      0x22\n        /* \"#utility.yul\":17435:17438   */\n      dup4\n        /* \"#utility.yul\":17376:17443   */\n      tag_500\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":17369:17443   */\n      swap2\n      pop\n        /* \"#utility.yul\":17452:17545   */\n      tag_768\n        /* \"#utility.yul\":17541:17544   */\n      dup3\n        /* \"#utility.yul\":17452:17545   */\n      tag_545\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":17570:17572   */\n      0x40\n        /* \"#utility.yul\":17565:17568   */\n      dup3\n        /* \"#utility.yul\":17561:17573   */\n      add\n        /* \"#utility.yul\":17554:17573   */\n      swap1\n      pop\n        /* \"#utility.yul\":17213:17579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17585:18004   */\n    tag_195:\n        /* \"#utility.yul\":17751:17755   */\n      0x00\n        /* \"#utility.yul\":17789:17791   */\n      0x20\n        /* \"#utility.yul\":17778:17787   */\n      dup3\n        /* \"#utility.yul\":17774:17792   */\n      add\n        /* \"#utility.yul\":17766:17792   */\n      swap1\n      pop\n        /* \"#utility.yul\":17838:17847   */\n      dup2\n        /* \"#utility.yul\":17832:17836   */\n      dup2\n        /* \"#utility.yul\":17828:17848   */\n      sub\n        /* \"#utility.yul\":17824:17825   */\n      0x00\n        /* \"#utility.yul\":17813:17822   */\n      dup4\n        /* \"#utility.yul\":17809:17826   */\n      add\n        /* \"#utility.yul\":17802:17849   */\n      mstore\n        /* \"#utility.yul\":17866:17997   */\n      tag_770\n        /* \"#utility.yul\":17992:17996   */\n      dup2\n        /* \"#utility.yul\":17866:17997   */\n      tag_546\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":17858:17997   */\n      swap1\n      pop\n        /* \"#utility.yul\":17585:18004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18010:18174   */\n    tag_547:\n        /* \"#utility.yul\":18150:18166   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":18146:18147   */\n      0x00\n        /* \"#utility.yul\":18138:18144   */\n      dup3\n        /* \"#utility.yul\":18134:18148   */\n      add\n        /* \"#utility.yul\":18127:18167   */\n      mstore\n        /* \"#utility.yul\":18010:18174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18180:18546   */\n    tag_548:\n        /* \"#utility.yul\":18322:18325   */\n      0x00\n        /* \"#utility.yul\":18343:18410   */\n      tag_773\n        /* \"#utility.yul\":18407:18409   */\n      0x0e\n        /* \"#utility.yul\":18402:18405   */\n      dup4\n        /* \"#utility.yul\":18343:18410   */\n      tag_500\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":18336:18410   */\n      swap2\n      pop\n        /* \"#utility.yul\":18419:18512   */\n      tag_774\n        /* \"#utility.yul\":18508:18511   */\n      dup3\n        /* \"#utility.yul\":18419:18512   */\n      tag_547\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":18537:18539   */\n      0x20\n        /* \"#utility.yul\":18532:18535   */\n      dup3\n        /* \"#utility.yul\":18528:18540   */\n      add\n        /* \"#utility.yul\":18521:18540   */\n      swap1\n      pop\n        /* \"#utility.yul\":18180:18546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18552:18971   */\n    tag_205:\n        /* \"#utility.yul\":18718:18722   */\n      0x00\n        /* \"#utility.yul\":18756:18758   */\n      0x20\n        /* \"#utility.yul\":18745:18754   */\n      dup3\n        /* \"#utility.yul\":18741:18759   */\n      add\n        /* \"#utility.yul\":18733:18759   */\n      swap1\n      pop\n        /* \"#utility.yul\":18805:18814   */\n      dup2\n        /* \"#utility.yul\":18799:18803   */\n      dup2\n        /* \"#utility.yul\":18795:18815   */\n      sub\n        /* \"#utility.yul\":18791:18792   */\n      0x00\n        /* \"#utility.yul\":18780:18789   */\n      dup4\n        /* \"#utility.yul\":18776:18793   */\n      add\n        /* \"#utility.yul\":18769:18816   */\n      mstore\n        /* \"#utility.yul\":18833:18964   */\n      tag_776\n        /* \"#utility.yul\":18959:18963   */\n      dup2\n        /* \"#utility.yul\":18833:18964   */\n      tag_548\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":18825:18964   */\n      swap1\n      pop\n        /* \"#utility.yul\":18552:18971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18977:19203   */\n    tag_549:\n        /* \"#utility.yul\":19117:19151   */\n      0x42617463685472616e73666572206661696c65643a204d69736d617463686564\n        /* \"#utility.yul\":19113:19114   */\n      0x00\n        /* \"#utility.yul\":19105:19111   */\n      dup3\n        /* \"#utility.yul\":19101:19115   */\n      add\n        /* \"#utility.yul\":19094:19152   */\n      mstore\n        /* \"#utility.yul\":19186:19195   */\n      0x2061727261797300000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19181:19183   */\n      0x20\n        /* \"#utility.yul\":19173:19179   */\n      dup3\n        /* \"#utility.yul\":19169:19184   */\n      add\n        /* \"#utility.yul\":19162:19196   */\n      mstore\n        /* \"#utility.yul\":18977:19203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19209:19575   */\n    tag_550:\n        /* \"#utility.yul\":19351:19354   */\n      0x00\n        /* \"#utility.yul\":19372:19439   */\n      tag_779\n        /* \"#utility.yul\":19436:19438   */\n      0x27\n        /* \"#utility.yul\":19431:19434   */\n      dup4\n        /* \"#utility.yul\":19372:19439   */\n      tag_500\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":19365:19439   */\n      swap2\n      pop\n        /* \"#utility.yul\":19448:19541   */\n      tag_780\n        /* \"#utility.yul\":19537:19540   */\n      dup3\n        /* \"#utility.yul\":19448:19541   */\n      tag_549\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":19566:19568   */\n      0x40\n        /* \"#utility.yul\":19561:19564   */\n      dup3\n        /* \"#utility.yul\":19557:19569   */\n      add\n        /* \"#utility.yul\":19550:19569   */\n      swap1\n      pop\n        /* \"#utility.yul\":19209:19575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19581:20000   */\n    tag_244:\n        /* \"#utility.yul\":19747:19751   */\n      0x00\n        /* \"#utility.yul\":19785:19787   */\n      0x20\n        /* \"#utility.yul\":19774:19783   */\n      dup3\n        /* \"#utility.yul\":19770:19788   */\n      add\n        /* \"#utility.yul\":19762:19788   */\n      swap1\n      pop\n        /* \"#utility.yul\":19834:19843   */\n      dup2\n        /* \"#utility.yul\":19828:19832   */\n      dup2\n        /* \"#utility.yul\":19824:19844   */\n      sub\n        /* \"#utility.yul\":19820:19821   */\n      0x00\n        /* \"#utility.yul\":19809:19818   */\n      dup4\n        /* \"#utility.yul\":19805:19822   */\n      add\n        /* \"#utility.yul\":19798:19845   */\n      mstore\n        /* \"#utility.yul\":19862:19993   */\n      tag_782\n        /* \"#utility.yul\":19988:19992   */\n      dup2\n        /* \"#utility.yul\":19862:19993   */\n      tag_550\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":19854:19993   */\n      swap1\n      pop\n        /* \"#utility.yul\":19581:20000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20006:20186   */\n    tag_250:\n        /* \"#utility.yul\":20054:20131   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20051:20052   */\n      0x00\n        /* \"#utility.yul\":20044:20132   */\n      mstore\n        /* \"#utility.yul\":20151:20155   */\n      0x32\n        /* \"#utility.yul\":20148:20149   */\n      0x04\n        /* \"#utility.yul\":20141:20156   */\n      mstore\n        /* \"#utility.yul\":20175:20179   */\n      0x24\n        /* \"#utility.yul\":20172:20173   */\n      0x00\n        /* \"#utility.yul\":20165:20180   */\n      revert\n        /* \"#utility.yul\":20192:20425   */\n    tag_551:\n        /* \"#utility.yul\":20332:20366   */\n      0x42617463685472616e73666572206661696c65643a20526563697069656e7420\n        /* \"#utility.yul\":20328:20329   */\n      0x00\n        /* \"#utility.yul\":20320:20326   */\n      dup3\n        /* \"#utility.yul\":20316:20330   */\n      add\n        /* \"#utility.yul\":20309:20367   */\n      mstore\n        /* \"#utility.yul\":20401:20417   */\n      0x697320626c61636b6c6973746564000000000000000000000000000000000000\n        /* \"#utility.yul\":20396:20398   */\n      0x20\n        /* \"#utility.yul\":20388:20394   */\n      dup3\n        /* \"#utility.yul\":20384:20399   */\n      add\n        /* \"#utility.yul\":20377:20418   */\n      mstore\n        /* \"#utility.yul\":20192:20425   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20431:20797   */\n    tag_552:\n        /* \"#utility.yul\":20573:20576   */\n      0x00\n        /* \"#utility.yul\":20594:20661   */\n      tag_786\n        /* \"#utility.yul\":20658:20660   */\n      0x2e\n        /* \"#utility.yul\":20653:20656   */\n      dup4\n        /* \"#utility.yul\":20594:20661   */\n      tag_500\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":20587:20661   */\n      swap2\n      pop\n        /* \"#utility.yul\":20670:20763   */\n      tag_787\n        /* \"#utility.yul\":20759:20762   */\n      dup3\n        /* \"#utility.yul\":20670:20763   */\n      tag_551\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":20788:20790   */\n      0x40\n        /* \"#utility.yul\":20783:20786   */\n      dup3\n        /* \"#utility.yul\":20779:20791   */\n      add\n        /* \"#utility.yul\":20772:20791   */\n      swap1\n      pop\n        /* \"#utility.yul\":20431:20797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20803:21222   */\n    tag_254:\n        /* \"#utility.yul\":20969:20973   */\n      0x00\n        /* \"#utility.yul\":21007:21009   */\n      0x20\n        /* \"#utility.yul\":20996:21005   */\n      dup3\n        /* \"#utility.yul\":20992:21010   */\n      add\n        /* \"#utility.yul\":20984:21010   */\n      swap1\n      pop\n        /* \"#utility.yul\":21056:21065   */\n      dup2\n        /* \"#utility.yul\":21050:21054   */\n      dup2\n        /* \"#utility.yul\":21046:21066   */\n      sub\n        /* \"#utility.yul\":21042:21043   */\n      0x00\n        /* \"#utility.yul\":21031:21040   */\n      dup4\n        /* \"#utility.yul\":21027:21044   */\n      add\n        /* \"#utility.yul\":21020:21067   */\n      mstore\n        /* \"#utility.yul\":21084:21215   */\n      tag_789\n        /* \"#utility.yul\":21210:21214   */\n      dup2\n        /* \"#utility.yul\":21084:21215   */\n      tag_552\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":21076:21215   */\n      swap1\n      pop\n        /* \"#utility.yul\":20803:21222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21228:21313   */\n    tag_553:\n        /* \"#utility.yul\":21273:21280   */\n      0x00\n        /* \"#utility.yul\":21302:21307   */\n      dup2\n        /* \"#utility.yul\":21291:21307   */\n      swap1\n      pop\n        /* \"#utility.yul\":21228:21313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21319:21420   */\n    tag_554:\n        /* \"#utility.yul\":21355:21362   */\n      0x00\n        /* \"#utility.yul\":21395:21413   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":21388:21393   */\n      dup3\n        /* \"#utility.yul\":21384:21414   */\n      and\n        /* \"#utility.yul\":21373:21414   */\n      swap1\n      pop\n        /* \"#utility.yul\":21319:21420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21426:21486   */\n    tag_555:\n        /* \"#utility.yul\":21454:21457   */\n      0x00\n        /* \"#utility.yul\":21475:21480   */\n      dup2\n        /* \"#utility.yul\":21468:21480   */\n      swap1\n      pop\n        /* \"#utility.yul\":21426:21486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21492:21648   */\n    tag_556:\n        /* \"#utility.yul\":21549:21558   */\n      0x00\n        /* \"#utility.yul\":21582:21642   */\n      tag_794\n        /* \"#utility.yul\":21599:21641   */\n      tag_795\n        /* \"#utility.yul\":21608:21640   */\n      tag_796\n        /* \"#utility.yul\":21634:21639   */\n      dup5\n        /* \"#utility.yul\":21608:21640   */\n      tag_553\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":21599:21641   */\n      tag_555\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":21582:21642   */\n      tag_554\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":21569:21642   */\n      swap1\n      pop\n        /* \"#utility.yul\":21492:21648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21654:21799   */\n    tag_557:\n        /* \"#utility.yul\":21748:21792   */\n      tag_798\n        /* \"#utility.yul\":21786:21791   */\n      dup2\n        /* \"#utility.yul\":21748:21792   */\n      tag_556\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":21743:21746   */\n      dup3\n        /* \"#utility.yul\":21736:21793   */\n      mstore\n        /* \"#utility.yul\":21654:21799   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21805:22041   */\n    tag_305:\n        /* \"#utility.yul\":21905:21909   */\n      0x00\n        /* \"#utility.yul\":21943:21945   */\n      0x20\n        /* \"#utility.yul\":21932:21941   */\n      dup3\n        /* \"#utility.yul\":21928:21946   */\n      add\n        /* \"#utility.yul\":21920:21946   */\n      swap1\n      pop\n        /* \"#utility.yul\":21956:22034   */\n      tag_800\n        /* \"#utility.yul\":22031:22032   */\n      0x00\n        /* \"#utility.yul\":22020:22029   */\n      dup4\n        /* \"#utility.yul\":22016:22033   */\n      add\n        /* \"#utility.yul\":22007:22013   */\n      dup5\n        /* \"#utility.yul\":21956:22034   */\n      tag_557\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":21805:22041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22047:22213   */\n    tag_558:\n        /* \"#utility.yul\":22187:22205   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":22183:22184   */\n      0x00\n        /* \"#utility.yul\":22175:22181   */\n      dup3\n        /* \"#utility.yul\":22171:22185   */\n      add\n        /* \"#utility.yul\":22164:22206   */\n      mstore\n        /* \"#utility.yul\":22047:22213   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22219:22585   */\n    tag_559:\n        /* \"#utility.yul\":22361:22364   */\n      0x00\n        /* \"#utility.yul\":22382:22449   */\n      tag_803\n        /* \"#utility.yul\":22446:22448   */\n      0x10\n        /* \"#utility.yul\":22441:22444   */\n      dup4\n        /* \"#utility.yul\":22382:22449   */\n      tag_500\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":22375:22449   */\n      swap2\n      pop\n        /* \"#utility.yul\":22458:22551   */\n      tag_804\n        /* \"#utility.yul\":22547:22550   */\n      dup3\n        /* \"#utility.yul\":22458:22551   */\n      tag_558\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":22576:22578   */\n      0x20\n        /* \"#utility.yul\":22571:22574   */\n      dup3\n        /* \"#utility.yul\":22567:22579   */\n      add\n        /* \"#utility.yul\":22560:22579   */\n      swap1\n      pop\n        /* \"#utility.yul\":22219:22585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22591:23010   */\n    tag_330:\n        /* \"#utility.yul\":22757:22761   */\n      0x00\n        /* \"#utility.yul\":22795:22797   */\n      0x20\n        /* \"#utility.yul\":22784:22793   */\n      dup3\n        /* \"#utility.yul\":22780:22798   */\n      add\n        /* \"#utility.yul\":22772:22798   */\n      swap1\n      pop\n        /* \"#utility.yul\":22844:22853   */\n      dup2\n        /* \"#utility.yul\":22838:22842   */\n      dup2\n        /* \"#utility.yul\":22834:22854   */\n      sub\n        /* \"#utility.yul\":22830:22831   */\n      0x00\n        /* \"#utility.yul\":22819:22828   */\n      dup4\n        /* \"#utility.yul\":22815:22832   */\n      add\n        /* \"#utility.yul\":22808:22855   */\n      mstore\n        /* \"#utility.yul\":22872:23003   */\n      tag_806\n        /* \"#utility.yul\":22998:23002   */\n      dup2\n        /* \"#utility.yul\":22872:23003   */\n      tag_559\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":22864:23003   */\n      swap1\n      pop\n        /* \"#utility.yul\":22591:23010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23016:23138   */\n    tag_560:\n        /* \"#utility.yul\":23089:23113   */\n      tag_808\n        /* \"#utility.yul\":23107:23112   */\n      dup2\n        /* \"#utility.yul\":23089:23113   */\n      tag_530\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":23082:23087   */\n      dup2\n        /* \"#utility.yul\":23079:23114   */\n      eq\n        /* \"#utility.yul\":23069:23132   */\n      tag_809\n      jumpi\n        /* \"#utility.yul\":23128:23129   */\n      0x00\n        /* \"#utility.yul\":23125:23126   */\n      dup1\n        /* \"#utility.yul\":23118:23130   */\n      revert\n        /* \"#utility.yul\":23069:23132   */\n    tag_809:\n        /* \"#utility.yul\":23016:23138   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23144:23287   */\n    tag_561:\n        /* \"#utility.yul\":23201:23206   */\n      0x00\n        /* \"#utility.yul\":23232:23238   */\n      dup2\n        /* \"#utility.yul\":23226:23239   */\n      mload\n        /* \"#utility.yul\":23217:23239   */\n      swap1\n      pop\n        /* \"#utility.yul\":23248:23281   */\n      tag_811\n        /* \"#utility.yul\":23275:23280   */\n      dup2\n        /* \"#utility.yul\":23248:23281   */\n      tag_560\n      jump\t// in\n    tag_811:\n        /* \"#utility.yul\":23144:23287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23293:23644   */\n    tag_353:\n        /* \"#utility.yul\":23363:23369   */\n      0x00\n        /* \"#utility.yul\":23412:23414   */\n      0x20\n        /* \"#utility.yul\":23400:23409   */\n      dup3\n        /* \"#utility.yul\":23391:23398   */\n      dup5\n        /* \"#utility.yul\":23387:23410   */\n      sub\n        /* \"#utility.yul\":23383:23415   */\n      slt\n        /* \"#utility.yul\":23380:23499   */\n      iszero\n      tag_813\n      jumpi\n        /* \"#utility.yul\":23418:23497   */\n      tag_814\n      tag_505\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":23380:23499   */\n    tag_813:\n        /* \"#utility.yul\":23538:23539   */\n      0x00\n        /* \"#utility.yul\":23563:23627   */\n      tag_815\n        /* \"#utility.yul\":23619:23626   */\n      dup5\n        /* \"#utility.yul\":23610:23616   */\n      dup3\n        /* \"#utility.yul\":23599:23608   */\n      dup6\n        /* \"#utility.yul\":23595:23617   */\n      add\n        /* \"#utility.yul\":23563:23627   */\n      tag_561\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":23553:23627   */\n      swap2\n      pop\n        /* \"#utility.yul\":23509:23637   */\n      pop\n        /* \"#utility.yul\":23293:23644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23650:24092   */\n    tag_421:\n        /* \"#utility.yul\":23799:23803   */\n      0x00\n        /* \"#utility.yul\":23837:23839   */\n      0x60\n        /* \"#utility.yul\":23826:23835   */\n      dup3\n        /* \"#utility.yul\":23822:23840   */\n      add\n        /* \"#utility.yul\":23814:23840   */\n      swap1\n      pop\n        /* \"#utility.yul\":23850:23921   */\n      tag_817\n        /* \"#utility.yul\":23918:23919   */\n      0x00\n        /* \"#utility.yul\":23907:23916   */\n      dup4\n        /* \"#utility.yul\":23903:23920   */\n      add\n        /* \"#utility.yul\":23894:23900   */\n      dup7\n        /* \"#utility.yul\":23850:23921   */\n      tag_536\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":23931:24003   */\n      tag_818\n        /* \"#utility.yul\":23999:24001   */\n      0x20\n        /* \"#utility.yul\":23988:23997   */\n      dup4\n        /* \"#utility.yul\":23984:24002   */\n      add\n        /* \"#utility.yul\":23975:23981   */\n      dup6\n        /* \"#utility.yul\":23931:24003   */\n      tag_518\n      jump\t// in\n    tag_818:\n        /* \"#utility.yul\":24013:24085   */\n      tag_819\n        /* \"#utility.yul\":24081:24083   */\n      0x40\n        /* \"#utility.yul\":24070:24079   */\n      dup4\n        /* \"#utility.yul\":24066:24084   */\n      add\n        /* \"#utility.yul\":24057:24063   */\n      dup5\n        /* \"#utility.yul\":24013:24085   */\n      tag_518\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":23650:24092   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24098:24268   */\n    tag_562:\n        /* \"#utility.yul\":24238:24260   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":24234:24235   */\n      0x00\n        /* \"#utility.yul\":24226:24232   */\n      dup3\n        /* \"#utility.yul\":24222:24236   */\n      add\n        /* \"#utility.yul\":24215:24261   */\n      mstore\n        /* \"#utility.yul\":24098:24268   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24274:24640   */\n    tag_563:\n        /* \"#utility.yul\":24416:24419   */\n      0x00\n        /* \"#utility.yul\":24437:24504   */\n      tag_822\n        /* \"#utility.yul\":24501:24503   */\n      0x14\n        /* \"#utility.yul\":24496:24499   */\n      dup4\n        /* \"#utility.yul\":24437:24504   */\n      tag_500\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":24430:24504   */\n      swap2\n      pop\n        /* \"#utility.yul\":24513:24606   */\n      tag_823\n        /* \"#utility.yul\":24602:24605   */\n      dup3\n        /* \"#utility.yul\":24513:24606   */\n      tag_562\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":24631:24633   */\n      0x20\n        /* \"#utility.yul\":24626:24629   */\n      dup3\n        /* \"#utility.yul\":24622:24634   */\n      add\n        /* \"#utility.yul\":24615:24634   */\n      swap1\n      pop\n        /* \"#utility.yul\":24274:24640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24646:25065   */\n    tag_427:\n        /* \"#utility.yul\":24812:24816   */\n      0x00\n        /* \"#utility.yul\":24850:24852   */\n      0x20\n        /* \"#utility.yul\":24839:24848   */\n      dup3\n        /* \"#utility.yul\":24835:24853   */\n      add\n        /* \"#utility.yul\":24827:24853   */\n      swap1\n      pop\n        /* \"#utility.yul\":24899:24908   */\n      dup2\n        /* \"#utility.yul\":24893:24897   */\n      dup2\n        /* \"#utility.yul\":24889:24909   */\n      sub\n        /* \"#utility.yul\":24885:24886   */\n      0x00\n        /* \"#utility.yul\":24874:24883   */\n      dup4\n        /* \"#utility.yul\":24870:24887   */\n      add\n        /* \"#utility.yul\":24863:24910   */\n      mstore\n        /* \"#utility.yul\":24927:25058   */\n      tag_825\n        /* \"#utility.yul\":25053:25057   */\n      dup2\n        /* \"#utility.yul\":24927:25058   */\n      tag_563\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":24919:25058   */\n      swap1\n      pop\n        /* \"#utility.yul\":24646:25065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25071:25251   */\n    tag_564:\n        /* \"#utility.yul\":25119:25196   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25116:25117   */\n      0x00\n        /* \"#utility.yul\":25109:25197   */\n      mstore\n        /* \"#utility.yul\":25216:25220   */\n      0x11\n        /* \"#utility.yul\":25213:25214   */\n      0x04\n        /* \"#utility.yul\":25206:25221   */\n      mstore\n        /* \"#utility.yul\":25240:25244   */\n      0x24\n        /* \"#utility.yul\":25237:25238   */\n      0x00\n        /* \"#utility.yul\":25230:25245   */\n      revert\n        /* \"#utility.yul\":25257:25448   */\n    tag_444:\n        /* \"#utility.yul\":25297:25300   */\n      0x00\n        /* \"#utility.yul\":25316:25336   */\n      tag_828\n        /* \"#utility.yul\":25334:25335   */\n      dup3\n        /* \"#utility.yul\":25316:25336   */\n      tag_511\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":25311:25336   */\n      swap2\n      pop\n        /* \"#utility.yul\":25350:25370   */\n      tag_829\n        /* \"#utility.yul\":25368:25369   */\n      dup4\n        /* \"#utility.yul\":25350:25370   */\n      tag_511\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":25345:25370   */\n      swap3\n      pop\n        /* \"#utility.yul\":25393:25394   */\n      dup3\n        /* \"#utility.yul\":25390:25391   */\n      dup3\n        /* \"#utility.yul\":25386:25395   */\n      add\n        /* \"#utility.yul\":25379:25395   */\n      swap1\n      pop\n        /* \"#utility.yul\":25414:25417   */\n      dup1\n        /* \"#utility.yul\":25411:25412   */\n      dup3\n        /* \"#utility.yul\":25408:25418   */\n      gt\n        /* \"#utility.yul\":25405:25441   */\n      iszero\n      tag_830\n      jumpi\n        /* \"#utility.yul\":25421:25439   */\n      tag_831\n      tag_564\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":25405:25441   */\n    tag_830:\n        /* \"#utility.yul\":25257:25448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25454:25595   */\n    tag_565:\n        /* \"#utility.yul\":25503:25507   */\n      0x00\n        /* \"#utility.yul\":25526:25529   */\n      dup2\n        /* \"#utility.yul\":25518:25529   */\n      swap1\n      pop\n        /* \"#utility.yul\":25549:25552   */\n      dup2\n        /* \"#utility.yul\":25546:25547   */\n      0x00\n        /* \"#utility.yul\":25539:25553   */\n      mstore\n        /* \"#utility.yul\":25583:25587   */\n      0x20\n        /* \"#utility.yul\":25580:25581   */\n      0x00\n        /* \"#utility.yul\":25570:25588   */\n      keccak256\n        /* \"#utility.yul\":25562:25588   */\n      swap1\n      pop\n        /* \"#utility.yul\":25454:25595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25601:25694   */\n    tag_566:\n        /* \"#utility.yul\":25638:25644   */\n      0x00\n        /* \"#utility.yul\":25685:25687   */\n      0x20\n        /* \"#utility.yul\":25680:25682   */\n      0x1f\n        /* \"#utility.yul\":25673:25678   */\n      dup4\n        /* \"#utility.yul\":25669:25683   */\n      add\n        /* \"#utility.yul\":25665:25688   */\n      div\n        /* \"#utility.yul\":25655:25688   */\n      swap1\n      pop\n        /* \"#utility.yul\":25601:25694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25700:25807   */\n    tag_567:\n        /* \"#utility.yul\":25744:25752   */\n      0x00\n        /* \"#utility.yul\":25794:25799   */\n      dup3\n        /* \"#utility.yul\":25788:25792   */\n      dup3\n        /* \"#utility.yul\":25784:25800   */\n      shl\n        /* \"#utility.yul\":25763:25800   */\n      swap1\n      pop\n        /* \"#utility.yul\":25700:25807   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25813:26206   */\n    tag_568:\n        /* \"#utility.yul\":25882:25888   */\n      0x00\n        /* \"#utility.yul\":25932:25933   */\n      0x08\n        /* \"#utility.yul\":25920:25930   */\n      dup4\n        /* \"#utility.yul\":25916:25934   */\n      mul\n        /* \"#utility.yul\":25955:26052   */\n      tag_836\n        /* \"#utility.yul\":25985:26051   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25974:25983   */\n      dup3\n        /* \"#utility.yul\":25955:26052   */\n      tag_567\n      jump\t// in\n    tag_836:\n        /* \"#utility.yul\":26073:26112   */\n      tag_837\n        /* \"#utility.yul\":26103:26111   */\n      dup7\n        /* \"#utility.yul\":26092:26101   */\n      dup4\n        /* \"#utility.yul\":26073:26112   */\n      tag_567\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":26061:26112   */\n      swap6\n      pop\n        /* \"#utility.yul\":26145:26149   */\n      dup1\n        /* \"#utility.yul\":26141:26150   */\n      not\n        /* \"#utility.yul\":26134:26139   */\n      dup5\n        /* \"#utility.yul\":26130:26151   */\n      and\n        /* \"#utility.yul\":26121:26151   */\n      swap4\n      pop\n        /* \"#utility.yul\":26194:26198   */\n      dup1\n        /* \"#utility.yul\":26184:26192   */\n      dup7\n        /* \"#utility.yul\":26180:26199   */\n      and\n        /* \"#utility.yul\":26173:26178   */\n      dup5\n        /* \"#utility.yul\":26170:26200   */\n      or\n        /* \"#utility.yul\":26160:26200   */\n      swap3\n      pop\n        /* \"#utility.yul\":25889:26206   */\n      pop\n      pop\n        /* \"#utility.yul\":25813:26206   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26212:26354   */\n    tag_569:\n        /* \"#utility.yul\":26262:26271   */\n      0x00\n        /* \"#utility.yul\":26295:26348   */\n      tag_839\n        /* \"#utility.yul\":26313:26347   */\n      tag_840\n        /* \"#utility.yul\":26322:26346   */\n      tag_841\n        /* \"#utility.yul\":26340:26345   */\n      dup5\n        /* \"#utility.yul\":26322:26346   */\n      tag_511\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":26313:26347   */\n      tag_555\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":26295:26348   */\n      tag_511\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":26282:26348   */\n      swap1\n      pop\n        /* \"#utility.yul\":26212:26354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26360:26435   */\n    tag_570:\n        /* \"#utility.yul\":26403:26406   */\n      0x00\n        /* \"#utility.yul\":26424:26429   */\n      dup2\n        /* \"#utility.yul\":26417:26429   */\n      swap1\n      pop\n        /* \"#utility.yul\":26360:26435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26441:26710   */\n    tag_571:\n        /* \"#utility.yul\":26551:26590   */\n      tag_844\n        /* \"#utility.yul\":26582:26589   */\n      dup4\n        /* \"#utility.yul\":26551:26590   */\n      tag_569\n      jump\t// in\n    tag_844:\n        /* \"#utility.yul\":26612:26703   */\n      tag_845\n        /* \"#utility.yul\":26661:26702   */\n      tag_846\n        /* \"#utility.yul\":26685:26701   */\n      dup3\n        /* \"#utility.yul\":26661:26702   */\n      tag_570\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":26653:26659   */\n      dup5\n        /* \"#utility.yul\":26646:26650   */\n      dup5\n        /* \"#utility.yul\":26640:26651   */\n      sload\n        /* \"#utility.yul\":26612:26703   */\n      tag_568\n      jump\t// in\n    tag_845:\n        /* \"#utility.yul\":26606:26610   */\n      dup3\n        /* \"#utility.yul\":26599:26704   */\n      sstore\n        /* \"#utility.yul\":26517:26710   */\n      pop\n        /* \"#utility.yul\":26441:26710   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26716:26789   */\n    tag_572:\n        /* \"#utility.yul\":26761:26764   */\n      0x00\n        /* \"#utility.yul\":26716:26789   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":26795:26984   */\n    tag_573:\n        /* \"#utility.yul\":26872:26904   */\n      tag_849\n      tag_572\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":26913:26978   */\n      tag_850\n        /* \"#utility.yul\":26971:26977   */\n      dup2\n        /* \"#utility.yul\":26963:26969   */\n      dup5\n        /* \"#utility.yul\":26957:26961   */\n      dup5\n        /* \"#utility.yul\":26913:26978   */\n      tag_571\n      jump\t// in\n    tag_850:\n        /* \"#utility.yul\":26848:26984   */\n      pop\n        /* \"#utility.yul\":26795:26984   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26990:27176   */\n    tag_574:\n        /* \"#utility.yul\":27050:27170   */\n    tag_852:\n        /* \"#utility.yul\":27067:27070   */\n      dup2\n        /* \"#utility.yul\":27060:27065   */\n      dup2\n        /* \"#utility.yul\":27057:27071   */\n      lt\n        /* \"#utility.yul\":27050:27170   */\n      iszero\n      tag_854\n      jumpi\n        /* \"#utility.yul\":27121:27160   */\n      tag_855\n        /* \"#utility.yul\":27158:27159   */\n      0x00\n        /* \"#utility.yul\":27151:27156   */\n      dup3\n        /* \"#utility.yul\":27121:27160   */\n      tag_573\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":27094:27095   */\n      0x01\n        /* \"#utility.yul\":27087:27092   */\n      dup2\n        /* \"#utility.yul\":27083:27096   */\n      add\n        /* \"#utility.yul\":27074:27096   */\n      swap1\n      pop\n        /* \"#utility.yul\":27050:27170   */\n      jump(tag_852)\n    tag_854:\n        /* \"#utility.yul\":26990:27176   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27182:27725   */\n    tag_575:\n        /* \"#utility.yul\":27283:27285   */\n      0x1f\n        /* \"#utility.yul\":27278:27281   */\n      dup3\n        /* \"#utility.yul\":27275:27286   */\n      gt\n        /* \"#utility.yul\":27272:27718   */\n      iszero\n      tag_857\n      jumpi\n        /* \"#utility.yul\":27317:27355   */\n      tag_858\n        /* \"#utility.yul\":27349:27354   */\n      dup2\n        /* \"#utility.yul\":27317:27355   */\n      tag_565\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":27401:27430   */\n      tag_859\n        /* \"#utility.yul\":27419:27429   */\n      dup5\n        /* \"#utility.yul\":27401:27430   */\n      tag_566\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":27391:27399   */\n      dup2\n        /* \"#utility.yul\":27387:27431   */\n      add\n        /* \"#utility.yul\":27584:27586   */\n      0x20\n        /* \"#utility.yul\":27572:27582   */\n      dup6\n        /* \"#utility.yul\":27569:27587   */\n      lt\n        /* \"#utility.yul\":27566:27615   */\n      iszero\n      tag_860\n      jumpi\n        /* \"#utility.yul\":27605:27613   */\n      dup2\n        /* \"#utility.yul\":27590:27613   */\n      swap1\n      pop\n        /* \"#utility.yul\":27566:27615   */\n    tag_860:\n        /* \"#utility.yul\":27628:27708   */\n      tag_861\n        /* \"#utility.yul\":27684:27706   */\n      tag_862\n        /* \"#utility.yul\":27702:27705   */\n      dup6\n        /* \"#utility.yul\":27684:27706   */\n      tag_566\n      jump\t// in\n    tag_862:\n        /* \"#utility.yul\":27674:27682   */\n      dup4\n        /* \"#utility.yul\":27670:27707   */\n      add\n        /* \"#utility.yul\":27657:27668   */\n      dup3\n        /* \"#utility.yul\":27628:27708   */\n      tag_574\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":27287:27718   */\n      pop\n      pop\n        /* \"#utility.yul\":27272:27718   */\n    tag_857:\n        /* \"#utility.yul\":27182:27725   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27731:27848   */\n    tag_576:\n        /* \"#utility.yul\":27785:27793   */\n      0x00\n        /* \"#utility.yul\":27835:27840   */\n      dup3\n        /* \"#utility.yul\":27829:27833   */\n      dup3\n        /* \"#utility.yul\":27825:27841   */\n      shr\n        /* \"#utility.yul\":27804:27841   */\n      swap1\n      pop\n        /* \"#utility.yul\":27731:27848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27854:28023   */\n    tag_577:\n        /* \"#utility.yul\":27898:27904   */\n      0x00\n        /* \"#utility.yul\":27931:27982   */\n      tag_865\n        /* \"#utility.yul\":27979:27980   */\n      0x00\n        /* \"#utility.yul\":27975:27981   */\n      not\n        /* \"#utility.yul\":27967:27972   */\n      dup5\n        /* \"#utility.yul\":27964:27965   */\n      0x08\n        /* \"#utility.yul\":27960:27973   */\n      mul\n        /* \"#utility.yul\":27931:27982   */\n      tag_576\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":27927:27983   */\n      not\n        /* \"#utility.yul\":28012:28016   */\n      dup1\n        /* \"#utility.yul\":28006:28010   */\n      dup4\n        /* \"#utility.yul\":28002:28017   */\n      and\n        /* \"#utility.yul\":27992:28017   */\n      swap2\n      pop\n        /* \"#utility.yul\":27905:28023   */\n      pop\n        /* \"#utility.yul\":27854:28023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28028:28323   */\n    tag_578:\n        /* \"#utility.yul\":28104:28108   */\n      0x00\n        /* \"#utility.yul\":28250:28279   */\n      tag_867\n        /* \"#utility.yul\":28275:28278   */\n      dup4\n        /* \"#utility.yul\":28269:28273   */\n      dup4\n        /* \"#utility.yul\":28250:28279   */\n      tag_577\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":28242:28279   */\n      swap2\n      pop\n        /* \"#utility.yul\":28312:28315   */\n      dup3\n        /* \"#utility.yul\":28309:28310   */\n      0x02\n        /* \"#utility.yul\":28305:28316   */\n      mul\n        /* \"#utility.yul\":28299:28303   */\n      dup3\n        /* \"#utility.yul\":28296:28317   */\n      or\n        /* \"#utility.yul\":28288:28317   */\n      swap1\n      pop\n        /* \"#utility.yul\":28028:28323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28328:29723   */\n    tag_460:\n        /* \"#utility.yul\":28445:28482   */\n      tag_869\n        /* \"#utility.yul\":28478:28481   */\n      dup3\n        /* \"#utility.yul\":28445:28482   */\n      tag_499\n      jump\t// in\n    tag_869:\n        /* \"#utility.yul\":28547:28565   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":28539:28545   */\n      dup2\n        /* \"#utility.yul\":28536:28566   */\n      gt\n        /* \"#utility.yul\":28533:28589   */\n      iszero\n      tag_870\n      jumpi\n        /* \"#utility.yul\":28569:28587   */\n      tag_871\n      tag_523\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":28533:28589   */\n    tag_870:\n        /* \"#utility.yul\":28613:28651   */\n      tag_872\n        /* \"#utility.yul\":28645:28649   */\n      dup3\n        /* \"#utility.yul\":28639:28650   */\n      sload\n        /* \"#utility.yul\":28613:28651   */\n      tag_165\n      jump\t// in\n    tag_872:\n        /* \"#utility.yul\":28698:28765   */\n      tag_873\n        /* \"#utility.yul\":28758:28764   */\n      dup3\n        /* \"#utility.yul\":28750:28756   */\n      dup3\n        /* \"#utility.yul\":28744:28748   */\n      dup6\n        /* \"#utility.yul\":28698:28765   */\n      tag_575\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":28792:28793   */\n      0x00\n        /* \"#utility.yul\":28816:28820   */\n      0x20\n        /* \"#utility.yul\":28803:28820   */\n      swap1\n      pop\n        /* \"#utility.yul\":28848:28850   */\n      0x1f\n        /* \"#utility.yul\":28840:28846   */\n      dup4\n        /* \"#utility.yul\":28837:28851   */\n      gt\n        /* \"#utility.yul\":28865:28866   */\n      0x01\n        /* \"#utility.yul\":28860:29478   */\n      dup2\n      eq\n      tag_875\n      jumpi\n        /* \"#utility.yul\":29522:29523   */\n      0x00\n        /* \"#utility.yul\":29539:29545   */\n      dup5\n        /* \"#utility.yul\":29536:29613   */\n      iszero\n      tag_876\n      jumpi\n        /* \"#utility.yul\":29588:29597   */\n      dup3\n        /* \"#utility.yul\":29583:29586   */\n      dup8\n        /* \"#utility.yul\":29579:29598   */\n      add\n        /* \"#utility.yul\":29573:29599   */\n      mload\n        /* \"#utility.yul\":29564:29599   */\n      swap1\n      pop\n        /* \"#utility.yul\":29536:29613   */\n    tag_876:\n        /* \"#utility.yul\":29639:29706   */\n      tag_877\n        /* \"#utility.yul\":29699:29705   */\n      dup6\n        /* \"#utility.yul\":29692:29697   */\n      dup3\n        /* \"#utility.yul\":29639:29706   */\n      tag_578\n      jump\t// in\n    tag_877:\n        /* \"#utility.yul\":29633:29637   */\n      dup7\n        /* \"#utility.yul\":29626:29707   */\n      sstore\n        /* \"#utility.yul\":29495:29717   */\n      pop\n        /* \"#utility.yul\":28830:29717   */\n      jump(tag_874)\n        /* \"#utility.yul\":28860:29478   */\n    tag_875:\n        /* \"#utility.yul\":28912:28916   */\n      0x1f\n        /* \"#utility.yul\":28908:28917   */\n      not\n        /* \"#utility.yul\":28900:28906   */\n      dup5\n        /* \"#utility.yul\":28896:28918   */\n      and\n        /* \"#utility.yul\":28946:28983   */\n      tag_878\n        /* \"#utility.yul\":28978:28982   */\n      dup7\n        /* \"#utility.yul\":28946:28983   */\n      tag_565\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":29005:29006   */\n      0x00\n        /* \"#utility.yul\":29019:29227   */\n    tag_879:\n        /* \"#utility.yul\":29033:29040   */\n      dup3\n        /* \"#utility.yul\":29030:29031   */\n      dup2\n        /* \"#utility.yul\":29027:29041   */\n      lt\n        /* \"#utility.yul\":29019:29227   */\n      iszero\n      tag_881\n      jumpi\n        /* \"#utility.yul\":29112:29121   */\n      dup5\n        /* \"#utility.yul\":29107:29110   */\n      dup10\n        /* \"#utility.yul\":29103:29122   */\n      add\n        /* \"#utility.yul\":29097:29123   */\n      mload\n        /* \"#utility.yul\":29089:29095   */\n      dup3\n        /* \"#utility.yul\":29082:29124   */\n      sstore\n        /* \"#utility.yul\":29163:29164   */\n      0x01\n        /* \"#utility.yul\":29155:29161   */\n      dup3\n        /* \"#utility.yul\":29151:29165   */\n      add\n        /* \"#utility.yul\":29141:29165   */\n      swap2\n      pop\n        /* \"#utility.yul\":29210:29212   */\n      0x20\n        /* \"#utility.yul\":29199:29208   */\n      dup6\n        /* \"#utility.yul\":29195:29213   */\n      add\n        /* \"#utility.yul\":29182:29213   */\n      swap5\n      pop\n        /* \"#utility.yul\":29056:29060   */\n      0x20\n        /* \"#utility.yul\":29053:29054   */\n      dup2\n        /* \"#utility.yul\":29049:29061   */\n      add\n        /* \"#utility.yul\":29044:29061   */\n      swap1\n      pop\n        /* \"#utility.yul\":29019:29227   */\n      jump(tag_879)\n    tag_881:\n        /* \"#utility.yul\":29255:29261   */\n      dup7\n        /* \"#utility.yul\":29246:29253   */\n      dup4\n        /* \"#utility.yul\":29243:29262   */\n      lt\n        /* \"#utility.yul\":29240:29419   */\n      iszero\n      tag_882\n      jumpi\n        /* \"#utility.yul\":29313:29322   */\n      dup5\n        /* \"#utility.yul\":29308:29311   */\n      dup10\n        /* \"#utility.yul\":29304:29323   */\n      add\n        /* \"#utility.yul\":29298:29324   */\n      mload\n        /* \"#utility.yul\":29356:29404   */\n      tag_883\n        /* \"#utility.yul\":29398:29402   */\n      0x1f\n        /* \"#utility.yul\":29390:29396   */\n      dup10\n        /* \"#utility.yul\":29386:29403   */\n      and\n        /* \"#utility.yul\":29375:29384   */\n      dup3\n        /* \"#utility.yul\":29356:29404   */\n      tag_577\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":29348:29354   */\n      dup4\n        /* \"#utility.yul\":29341:29405   */\n      sstore\n        /* \"#utility.yul\":29263:29419   */\n      pop\n        /* \"#utility.yul\":29240:29419   */\n    tag_882:\n        /* \"#utility.yul\":29465:29466   */\n      0x01\n        /* \"#utility.yul\":29461:29462   */\n      0x02\n        /* \"#utility.yul\":29453:29459   */\n      dup9\n        /* \"#utility.yul\":29449:29463   */\n      mul\n        /* \"#utility.yul\":29445:29467   */\n      add\n        /* \"#utility.yul\":29439:29443   */\n      dup9\n        /* \"#utility.yul\":29432:29468   */\n      sstore\n        /* \"#utility.yul\":28867:29478   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":28830:29717   */\n    tag_874:\n      pop\n        /* \"#utility.yul\":28420:29723   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":28328:29723   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29729:29827   */\n    tag_579:\n        /* \"#utility.yul\":29780:29786   */\n      0x00\n        /* \"#utility.yul\":29814:29819   */\n      dup2\n        /* \"#utility.yul\":29808:29820   */\n      mload\n        /* \"#utility.yul\":29798:29820   */\n      swap1\n      pop\n        /* \"#utility.yul\":29729:29827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29833:29980   */\n    tag_580:\n        /* \"#utility.yul\":29934:29945   */\n      0x00\n        /* \"#utility.yul\":29971:29974   */\n      dup2\n        /* \"#utility.yul\":29956:29974   */\n      swap1\n      pop\n        /* \"#utility.yul\":29833:29980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29986:30372   */\n    tag_581:\n        /* \"#utility.yul\":30090:30093   */\n      0x00\n        /* \"#utility.yul\":30118:30156   */\n      tag_887\n        /* \"#utility.yul\":30150:30155   */\n      dup3\n        /* \"#utility.yul\":30118:30156   */\n      tag_579\n      jump\t// in\n    tag_887:\n        /* \"#utility.yul\":30172:30260   */\n      tag_888\n        /* \"#utility.yul\":30253:30259   */\n      dup2\n        /* \"#utility.yul\":30248:30251   */\n      dup6\n        /* \"#utility.yul\":30172:30260   */\n      tag_580\n      jump\t// in\n    tag_888:\n        /* \"#utility.yul\":30165:30260   */\n      swap4\n      pop\n        /* \"#utility.yul\":30269:30334   */\n      tag_889\n        /* \"#utility.yul\":30327:30333   */\n      dup2\n        /* \"#utility.yul\":30322:30325   */\n      dup6\n        /* \"#utility.yul\":30315:30319   */\n      0x20\n        /* \"#utility.yul\":30308:30313   */\n      dup7\n        /* \"#utility.yul\":30304:30320   */\n      add\n        /* \"#utility.yul\":30269:30334   */\n      tag_501\n      jump\t// in\n    tag_889:\n        /* \"#utility.yul\":30359:30365   */\n      dup1\n        /* \"#utility.yul\":30354:30357   */\n      dup5\n        /* \"#utility.yul\":30350:30366   */\n      add\n        /* \"#utility.yul\":30343:30366   */\n      swap2\n      pop\n        /* \"#utility.yul\":30094:30372   */\n      pop\n        /* \"#utility.yul\":29986:30372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30378:30649   */\n    tag_478:\n        /* \"#utility.yul\":30508:30511   */\n      0x00\n        /* \"#utility.yul\":30530:30623   */\n      tag_891\n        /* \"#utility.yul\":30619:30622   */\n      dup3\n        /* \"#utility.yul\":30610:30616   */\n      dup5\n        /* \"#utility.yul\":30530:30623   */\n      tag_581\n      jump\t// in\n    tag_891:\n        /* \"#utility.yul\":30523:30623   */\n      swap2\n      pop\n        /* \"#utility.yul\":30640:30643   */\n      dup2\n        /* \"#utility.yul\":30633:30643   */\n      swap1\n      pop\n        /* \"#utility.yul\":30378:30649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205f4a8e6fe10034a2f72b5c859bb633800554e8b74b243b7c79f5310d643d2c2164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2458": {
									"entryPoint": null,
									"id": 2458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_416": {
									"entryPoint": 87,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 347,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:456:17",
										"nodeType": "YulBlock",
										"src": "0:456:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:57:17",
													"nodeType": "YulBlock",
													"src": "51:57:17",
													"statements": [
														{
															"nativeSrc": "61:41:17",
															"nodeType": "YulAssignment",
															"src": "61:41:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:18:17",
																		"nodeType": "YulLiteral",
																		"src": "83:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:17"
																},
																"nativeSrc": "72:30:17",
																"nodeType": "YulFunctionCall",
																"src": "72:30:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7:101:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:17",
														"nodeType": "YulTypedName",
														"src": "33:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:17",
														"nodeType": "YulTypedName",
														"src": "43:7:17",
														"type": ""
													}
												],
												"src": "7:101:17"
											},
											{
												"body": {
													"nativeSrc": "177:52:17",
													"nodeType": "YulBlock",
													"src": "177:52:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "194:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "216:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "199:16:17",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:17"
																		},
																		"nativeSrc": "199:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "187:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nativeSrc": "187:36:17",
																"nodeType": "YulFunctionCall",
																"src": "187:36:17"
															},
															"nativeSrc": "187:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "187:36:17"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "114:115:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "165:5:17",
														"nodeType": "YulTypedName",
														"src": "165:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "172:3:17",
														"nodeType": "YulTypedName",
														"src": "172:3:17",
														"type": ""
													}
												],
												"src": "114:115:17"
											},
											{
												"body": {
													"nativeSrc": "331:122:17",
													"nodeType": "YulBlock",
													"src": "331:122:17",
													"statements": [
														{
															"nativeSrc": "341:26:17",
															"nodeType": "YulAssignment",
															"src": "341:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:17",
																		"nodeType": "YulLiteral",
																		"src": "364:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "349:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:17"
																},
																"nativeSrc": "349:18:17",
																"nodeType": "YulFunctionCall",
																"src": "349:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "341:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "419:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "432:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "443:1:17",
																				"nodeType": "YulLiteral",
																				"src": "443:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "428:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:17"
																		},
																		"nativeSrc": "428:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "377:41:17",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:17"
																},
																"nativeSrc": "377:69:17",
																"nodeType": "YulFunctionCall",
																"src": "377:69:17"
															},
															"nativeSrc": "377:69:17",
															"nodeType": "YulExpressionStatement",
															"src": "377:69:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "235:218:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "303:9:17",
														"nodeType": "YulTypedName",
														"src": "303:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "315:6:17",
														"nodeType": "YulTypedName",
														"src": "315:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "326:4:17",
														"nodeType": "YulTypedName",
														"src": "326:4:17",
														"type": ""
													}
												],
												"src": "235:218:17"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5061005261005760201b60201c565b6101c1565b600061006761015b60201b60201c565b90508060000160089054906101000a900460ff16156100b2576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101585767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff60405161014f91906101a6565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600067ffffffffffffffff82169050919050565b6101a081610183565b82525050565b60006020820190506101bb6000830184610197565b92915050565b6080516136f56101ea600039600081816116ae0152818161170301526118be01526136f56000f3fe60806040526004361061019c5760003560e01c8063715018a6116100ec578063ad3cb1cc1161008a578063dbac26e911610064578063dbac26e914610583578063dd62ed3e146105c0578063f2fde38b146105fd578063fe575a87146106265761019c565b8063ad3cb1cc14610504578063b119490e1461052f578063c66e4095146105585761019c565b80638da5cb5b116100c65780638da5cb5b1461043457806395d89b411461045f5780639bc289f11461048a578063a9059cbb146104c75761019c565b8063715018a6146103dd5780638456cb59146103f457806388d695b21461040b5761019c565b8063313ce567116101595780634f1ef286116101335780634f1ef2861461032e57806352d1902d1461034a5780635c975abb1461037557806370a08231146103a05761019c565b8063313ce567146102c35780633e579307146102ee5780633f4ba83a146103175761019c565b806306fdde03146101a1578063095ea7b3146101cc578063153b0d1e1461020957806318160ddd1461023257806323b872dd1461025d5780632e0d2a001461029a575b600080fd5b3480156101ad57600080fd5b506101b6610663565b6040516101c391906126ba565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee9190612784565b610704565b60405161020091906127df565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b9190612826565b610727565b005b34801561023e57600080fd5b506102476107d8565b6040516102549190612875565b60405180910390f35b34801561026957600080fd5b50610284600480360381019061027f9190612890565b6107f0565b60405161029191906127df565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc91906128e3565b6109f4565b005b3480156102cf57600080fd5b506102d8610a83565b6040516102e5919061292c565b60405180910390f35b3480156102fa57600080fd5b5061031560048036038101906103109190612784565b610a8c565b005b34801561032357600080fd5b5061032c610bf9565b005b61034860048036038101906103439190612a7c565b610c0b565b005b34801561035657600080fd5b5061035f610c2a565b60405161036c9190612af1565b60405180910390f35b34801561038157600080fd5b5061038a610c5d565b60405161039791906127df565b60405180910390f35b3480156103ac57600080fd5b506103c760048036038101906103c291906128e3565b610c73565b6040516103d49190612875565b60405180910390f35b3480156103e957600080fd5b506103f2610cca565b005b34801561040057600080fd5b50610409610cde565b005b34801561041757600080fd5b50610432600480360381019061042d9190612bc2565b610cf0565b005b34801561044057600080fd5b50610449610e67565b6040516104569190612c52565b60405180910390f35b34801561046b57600080fd5b50610474610e9f565b60405161048191906126ba565b60405180910390f35b34801561049657600080fd5b506104b160048036038101906104ac91906128e3565b610f40565b6040516104be9190612875565b60405180910390f35b3480156104d357600080fd5b506104ee60048036038101906104e99190612784565b610f58565b6040516104fb91906127df565b60405180910390f35b34801561051057600080fd5b5061051961115a565b60405161052691906126ba565b60405180910390f35b34801561053b57600080fd5b5061055660048036038101906105519190612d0e565b611193565b005b34801561056457600080fd5b5061056d611351565b60405161057a9190612c52565b60405180910390f35b34801561058f57600080fd5b506105aa60048036038101906105a591906128e3565b611377565b6040516105b791906127df565b60405180910390f35b3480156105cc57600080fd5b506105e760048036038101906105e29190612d99565b611397565b6040516105f49190612875565b60405180910390f35b34801561060957600080fd5b50610624600480360381019061061f91906128e3565b61142c565b005b34801561063257600080fd5b5061064d600480360381019061064891906128e3565b6114b2565b60405161065a91906127df565b60405180910390f35b6060600061066f611508565b905080600301805461068090612e08565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac90612e08565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b505050505091505090565b60008061070f611530565b905061071c818585611538565b600191505092915050565b61072f61154a565b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8826040516107cc91906127df565b60405180910390a25050565b6000806107e3611508565b9050806002015491505090565b60006107fa6115d1565b603560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e90612eab565b60405180910390fd5b603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090b90612f3d565b60405180910390fd5b603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054421015806109a157506000603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b6109e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d790612fcf565b60405180910390fd5b6109eb84848461161b565b90509392505050565b6109fc61154a565b80603260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad860405160405180910390a250565b60006012905090565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b139061303b565b60405180910390fd5b80603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610bf55780603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f82604051610bec9190612875565b60405180910390a25b5050565b610c0161154a565b610c0961164a565b565b610c136116ac565b610c1c82611792565b610c26828261179d565b5050565b6000610c346118bc565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008060009054906101000a900460ff16905090565b600080610c7e611508565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b610cd261154a565b610cdc6000611943565b565b610ce661154a565b610cee611a1a565b565b610cf86115d1565b818190508484905014610d40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d37906130cd565b60405180910390fd5b600084849050905060005b81811015610e5f5760356000878784818110610d6a57610d696130ed565b5b9050602002016020810190610d7f91906128e3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfe9061318e565b60405180910390fd5b610e5233878784818110610e1e57610e1d6130ed565b5b9050602002016020810190610e3391906128e3565b868685818110610e4657610e456130ed565b5b90506020020135611a7c565b8080600101915050610d4b565b505050505050565b600080610e72611b70565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60606000610eab611508565b9050806004018054610ebc90612e08565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee890612e08565b8015610f355780601f10610f0a57610100808354040283529160200191610f35565b820191906000526020600020905b815481529060010190602001808311610f1857829003601f168201915b505050505091505090565b60346020528060005260406000206000915090505481565b6000610f626115d1565b603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610fef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe690612eab565b60405180910390fd5b603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561107c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107390612f3d565b60405180910390fd5b603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544210158061110957506000603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f90612fcf565b60405180910390fd5b6111528383611b98565b905092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600061119d611bbb565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156111eb5750825b9050600060018367ffffffffffffffff16148015611220575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561122e575080155b15611265576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156112b55760018560000160086101000a81548160ff0219169083151502179055505b6112bf8888611be3565b6112c833611bf9565b6112d0611c0d565b6112d8611c1f565b856033819055506112eb33603354611c29565b83156113475760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161133e9190613207565b60405180910390a15b5050505050505050565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60356020528060005260406000206000915054906101000a900460ff1681565b6000806113a2611508565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b61143461154a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114a65760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161149d9190612c52565b60405180910390fd5b6114af81611943565b50565b6000603560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b6115458383836001611cab565b505050565b611552611530565b73ffffffffffffffffffffffffffffffffffffffff16611570610e67565b73ffffffffffffffffffffffffffffffffffffffff16146115cf57611593611530565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115c69190612c52565b60405180910390fd5b565b6115d9610c5d565b15611619576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116109061326e565b60405180910390fd5b565b600080611626611530565b9050611633858285611e91565b61163e858585611a7c565b60019150509392505050565b611652611f25565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611695611530565b6040516116a29190612c52565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061175957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611740611f6e565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611790576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61179a61154a565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561180557506040513d601f19601f8201168201806040525081019061180291906132ba565b60015b61184657816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161183d9190612c52565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146118ad57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016118a49190612af1565b60405180910390fd5b6118b78383611fc5565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611941576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061194d611b70565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b611a226115d1565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a65611530565b604051611a729190612c52565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611aee5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611ae59190612c52565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b605760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b579190612c52565b60405180910390fd5b611b6b838383612038565b505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600080611ba3611530565b9050611bb0818585611a7c565b600191505092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611beb612277565b611bf582826122b7565b5050565b611c01612277565b611c0a816122f4565b50565b611c15612277565b611c1d61237a565b565b611c27612277565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c9b5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611c929190612c52565b60405180910390fd5b611ca760008383612038565b5050565b6000611cb5611508565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611d295760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611d209190612c52565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611d9b5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611d929190612c52565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508115611e8a578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611e819190612875565b60405180910390a35b5050505050565b6000611e9d8484611397565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611f1f5781811015611f0f578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611f06939291906132e7565b60405180910390fd5b611f1e84848484036000611cab565b5b50505050565b611f2d610c5d565b611f6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f639061336a565b60405180910390fd5b565b6000611f9c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61239e565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611fce826123a8565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a260008151111561202b576120258282612475565b50612034565b6120336124f9565b5b5050565b6000612042611508565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612098578181600201600082825461208c91906133b9565b92505081905550612171565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612127578481846040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161211e939291906132e7565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036121bc5781816002016000828254039250508190555061220c565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516122699190612875565b60405180910390a350505050565b61227f612536565b6122b5576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6122bf612277565b60006122c9611508565b9050828160030190816122dc919061358f565b50818160040190816122ee919061358f565b50505050565b6122fc612277565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361236e5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016123659190612c52565b60405180910390fd5b61237781611943565b50565b612382612277565b60008060006101000a81548160ff021916908315150217905550565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361240457806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016123fb9190612c52565b60405180910390fd5b806124317f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61239e565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161249f91906136a8565b600060405180830381855af49150503d80600081146124da576040519150601f19603f3d011682016040523d82523d6000602084013e6124df565b606091505b50915091506124ef858383612556565b9250505092915050565b6000341115612534576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000612540611bbb565b60000160089054906101000a900460ff16905090565b60608261256b57612566826125e5565b6125dd565b60008251148015612593575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156125d557836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016125cc9190612c52565b60405180910390fd5b8190506125de565b5b9392505050565b6000815111156125f85780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081519050919050565b600082825260208201905092915050565b60005b83811015612664578082015181840152602081019050612649565b60008484015250505050565b6000601f19601f8301169050919050565b600061268c8261262a565b6126968185612635565b93506126a6818560208601612646565b6126af81612670565b840191505092915050565b600060208201905081810360008301526126d48184612681565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061271b826126f0565b9050919050565b61272b81612710565b811461273657600080fd5b50565b60008135905061274881612722565b92915050565b6000819050919050565b6127618161274e565b811461276c57600080fd5b50565b60008135905061277e81612758565b92915050565b6000806040838503121561279b5761279a6126e6565b5b60006127a985828601612739565b92505060206127ba8582860161276f565b9150509250929050565b60008115159050919050565b6127d9816127c4565b82525050565b60006020820190506127f460008301846127d0565b92915050565b612803816127c4565b811461280e57600080fd5b50565b600081359050612820816127fa565b92915050565b6000806040838503121561283d5761283c6126e6565b5b600061284b85828601612739565b925050602061285c85828601612811565b9150509250929050565b61286f8161274e565b82525050565b600060208201905061288a6000830184612866565b92915050565b6000806000606084860312156128a9576128a86126e6565b5b60006128b786828701612739565b93505060206128c886828701612739565b92505060406128d98682870161276f565b9150509250925092565b6000602082840312156128f9576128f86126e6565b5b600061290784828501612739565b91505092915050565b600060ff82169050919050565b61292681612910565b82525050565b6000602082019050612941600083018461291d565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61298982612670565b810181811067ffffffffffffffff821117156129a8576129a7612951565b5b80604052505050565b60006129bb6126dc565b90506129c78282612980565b919050565b600067ffffffffffffffff8211156129e7576129e6612951565b5b6129f082612670565b9050602081019050919050565b82818337600083830152505050565b6000612a1f612a1a846129cc565b6129b1565b905082815260208101848484011115612a3b57612a3a61294c565b5b612a468482856129fd565b509392505050565b600082601f830112612a6357612a62612947565b5b8135612a73848260208601612a0c565b91505092915050565b60008060408385031215612a9357612a926126e6565b5b6000612aa185828601612739565b925050602083013567ffffffffffffffff811115612ac257612ac16126eb565b5b612ace85828601612a4e565b9150509250929050565b6000819050919050565b612aeb81612ad8565b82525050565b6000602082019050612b066000830184612ae2565b92915050565b600080fd5b600080fd5b60008083601f840112612b2c57612b2b612947565b5b8235905067ffffffffffffffff811115612b4957612b48612b0c565b5b602083019150836020820283011115612b6557612b64612b11565b5b9250929050565b60008083601f840112612b8257612b81612947565b5b8235905067ffffffffffffffff811115612b9f57612b9e612b0c565b5b602083019150836020820283011115612bbb57612bba612b11565b5b9250929050565b60008060008060408587031215612bdc57612bdb6126e6565b5b600085013567ffffffffffffffff811115612bfa57612bf96126eb565b5b612c0687828801612b16565b9450945050602085013567ffffffffffffffff811115612c2957612c286126eb565b5b612c3587828801612b6c565b925092505092959194509250565b612c4c81612710565b82525050565b6000602082019050612c676000830184612c43565b92915050565b600067ffffffffffffffff821115612c8857612c87612951565b5b612c9182612670565b9050602081019050919050565b6000612cb1612cac84612c6d565b6129b1565b905082815260208101848484011115612ccd57612ccc61294c565b5b612cd88482856129fd565b509392505050565b600082601f830112612cf557612cf4612947565b5b8135612d05848260208601612c9e565b91505092915050565b600080600060608486031215612d2757612d266126e6565b5b600084013567ffffffffffffffff811115612d4557612d446126eb565b5b612d5186828701612ce0565b935050602084013567ffffffffffffffff811115612d7257612d716126eb565b5b612d7e86828701612ce0565b9250506040612d8f8682870161276f565b9150509250925092565b60008060408385031215612db057612daf6126e6565b5b6000612dbe85828601612739565b9250506020612dcf85828601612739565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612e2057607f821691505b602082108103612e3357612e32612dd9565b5b50919050565b7f5472616e73666572206661696c65643a2053656e64657220697320626c61636b60008201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b6000612e95602683612635565b9150612ea082612e39565b604082019050919050565b60006020820190508181036000830152612ec481612e88565b9050919050565b7f5472616e73666572206661696c65643a20526563697069656e7420697320626c60008201527f61636b6c69737465640000000000000000000000000000000000000000000000602082015250565b6000612f27602983612635565b9150612f3282612ecb565b604082019050919050565b60006020820190508181036000830152612f5681612f1a565b9050919050565b7f5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000612fb9602283612635565b9150612fc482612f5d565b604082019050919050565b60006020820190508181036000830152612fe881612fac565b9050919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000613025600e83612635565b915061303082612fef565b602082019050919050565b6000602082019050818103600083015261305481613018565b9050919050565b7f42617463685472616e73666572206661696c65643a204d69736d61746368656460008201527f2061727261797300000000000000000000000000000000000000000000000000602082015250565b60006130b7602783612635565b91506130c28261305b565b604082019050919050565b600060208201905081810360008301526130e6816130aa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f42617463685472616e73666572206661696c65643a20526563697069656e742060008201527f697320626c61636b6c6973746564000000000000000000000000000000000000602082015250565b6000613178602e83612635565b91506131838261311c565b604082019050919050565b600060208201905081810360008301526131a78161316b565b9050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006131f16131ec6131e7846131ae565b6131cc565b6131b8565b9050919050565b613201816131d6565b82525050565b600060208201905061321c60008301846131f8565b92915050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613258601083612635565b915061326382613222565b602082019050919050565b600060208201905081810360008301526132878161324b565b9050919050565b61329781612ad8565b81146132a257600080fd5b50565b6000815190506132b48161328e565b92915050565b6000602082840312156132d0576132cf6126e6565b5b60006132de848285016132a5565b91505092915050565b60006060820190506132fc6000830186612c43565b6133096020830185612866565b6133166040830184612866565b949350505050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000613354601483612635565b915061335f8261331e565b602082019050919050565b6000602082019050818103600083015261338381613347565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006133c48261274e565b91506133cf8361274e565b92508282019050808211156133e7576133e661338a565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261344f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613412565b6134598683613412565b95508019841693508086168417925050509392505050565b600061348c6134876134828461274e565b6131cc565b61274e565b9050919050565b6000819050919050565b6134a683613471565b6134ba6134b282613493565b84845461341f565b825550505050565b600090565b6134cf6134c2565b6134da81848461349d565b505050565b5b818110156134fe576134f36000826134c7565b6001810190506134e0565b5050565b601f82111561354357613514816133ed565b61351d84613402565b8101602085101561352c578190505b61354061353885613402565b8301826134df565b50505b505050565b600082821c905092915050565b600061356660001984600802613548565b1980831691505092915050565b600061357f8383613555565b9150826002028217905092915050565b6135988261262a565b67ffffffffffffffff8111156135b1576135b0612951565b5b6135bb8254612e08565b6135c6828285613502565b600060209050601f8311600181146135f957600084156135e7578287015190505b6135f18582613573565b865550613659565b601f198416613607866133ed565b60005b8281101561362f5784890151825560018201915060208501945060208101905061360a565b8683101561364c5784890151613648601f891682613555565b8355505b6001600288020188555050505b505050505050565b600081519050919050565b600081905092915050565b600061368282613661565b61368c818561366c565b935061369c818560208601612646565b80840191505092915050565b60006136b48284613677565b91508190509291505056fea26469706673582212205f4a8e6fe10034a2f72b5c859bb633800554e8b74b243b7c79f5310d643d2c2164736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67 PUSH2 0x15B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x158 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0 DUP2 PUSH2 0x183 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x36F5 PUSH2 0x1EA PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x16AE ADD MSTORE DUP2 DUP2 PUSH2 0x1703 ADD MSTORE PUSH2 0x18BE ADD MSTORE PUSH2 0x36F5 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDBAC26E9 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x626 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB119490E EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x558 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C7 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x40B JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A0 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x3E579307 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x317 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x29A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x2826 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x2890 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0x9F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x292C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0xBF9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2A7C JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0xCCA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0xCDE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0xCF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x449 PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x519 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x556 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x2D0E JUMP JUMPDEST PUSH2 0x1193 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56D PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x2D99 JUMP JUMPDEST PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x624 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0x142C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x66F PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x680 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AC SWAP1 PUSH2 0x2E08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70F PUSH2 0x1530 JUMP JUMPDEST SWAP1 POP PUSH2 0x71C DUP2 DUP6 DUP6 PUSH2 0x1538 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x72F PUSH2 0x154A JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7E3 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FA PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87E SWAP1 PUSH2 0x2EAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90B SWAP1 PUSH2 0x2F3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x9A1 JUMPI POP PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D7 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EB DUP5 DUP5 DUP5 PUSH2 0x161B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x9FC PUSH2 0x154A JUMP JUMPDEST DUP1 PUSH1 0x32 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB13 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xBF5 JUMPI DUP1 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F DUP3 PUSH1 0x40 MLOAD PUSH2 0xBEC SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC01 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xC09 PUSH2 0x164A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC13 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0xC1C DUP3 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0xC26 DUP3 DUP3 PUSH2 0x179D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC34 PUSH2 0x18BC JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC7E PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD2 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xCDC PUSH1 0x0 PUSH2 0x1943 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xCEE PUSH2 0x1A1A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCF8 PUSH2 0x15D1 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xD40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD37 SWAP1 PUSH2 0x30CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x35 PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xD6A JUMPI PUSH2 0xD69 PUSH2 0x30ED JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD7F SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFE SWAP1 PUSH2 0x318E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE52 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0x30ED JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0x30ED JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1A7C JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD4B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE72 PUSH2 0x1B70 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xEAB PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xEBC SWAP1 PUSH2 0x2E08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEE8 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF62 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE6 SWAP1 PUSH2 0x2EAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1073 SWAP1 PUSH2 0x2F3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x1109 JUMPI POP PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113F SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1152 DUP4 DUP4 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119D PUSH2 0x1BBB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x11EB JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1220 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x122E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1265 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x12BF DUP9 DUP9 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0x12C8 CALLER PUSH2 0x1BF9 JUMP JUMPDEST PUSH2 0x12D0 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x12D8 PUSH2 0x1C1F JUMP JUMPDEST DUP6 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH2 0x12EB CALLER PUSH1 0x33 SLOAD PUSH2 0x1C29 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1347 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x133E SWAP2 SWAP1 PUSH2 0x3207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13A2 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1434 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149D SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14AF DUP2 PUSH2 0x1943 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1545 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1CAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1552 PUSH2 0x1530 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1570 PUSH2 0xE67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15CF JUMPI PUSH2 0x1593 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C6 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x15D9 PUSH2 0xC5D JUMP JUMPDEST ISZERO PUSH2 0x1619 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1610 SWAP1 PUSH2 0x326E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1626 PUSH2 0x1530 JUMP JUMPDEST SWAP1 POP PUSH2 0x1633 DUP6 DUP3 DUP6 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x163E DUP6 DUP6 DUP6 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1652 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1695 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A2 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1759 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1740 PUSH2 0x1F6E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1790 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x179A PUSH2 0x154A JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1805 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1802 SWAP2 SWAP1 PUSH2 0x32BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1846 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x183D SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x18AD JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A4 SWAP2 SWAP1 PUSH2 0x2AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18B7 DUP4 DUP4 PUSH2 0x1FC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1941 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194D PUSH2 0x1B70 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1A22 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1A65 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A72 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AEE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE5 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B60 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B57 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B6B DUP4 DUP4 DUP4 PUSH2 0x2038 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BA3 PUSH2 0x1530 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BB0 DUP2 DUP6 DUP6 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BEB PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x1BF5 DUP3 DUP3 PUSH2 0x22B7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1C01 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x1C0A DUP2 PUSH2 0x22F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C15 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x1C1D PUSH2 0x237A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1C27 PUSH2 0x2277 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C9B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C92 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CA7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2038 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB5 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D29 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D20 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D9B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D92 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1E8A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1E81 SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9D DUP5 DUP5 PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1F1F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1F0F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F06 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F1E DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1CAB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1F2D PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x1F6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F63 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9C PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x239E JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FCE DUP3 PUSH2 0x23A8 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x202B JUMPI PUSH2 0x2025 DUP3 DUP3 PUSH2 0x2475 JUMP JUMPDEST POP PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x2033 PUSH2 0x24F9 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2042 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2098 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x208C SWAP2 SWAP1 PUSH2 0x33B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2171 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x2127 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21BC JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x220C JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2269 SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x227F PUSH2 0x2536 JUMP JUMPDEST PUSH2 0x22B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x22BF PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C9 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x22DC SWAP2 SWAP1 PUSH2 0x358F JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x22EE SWAP2 SWAP1 PUSH2 0x358F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x22FC PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x236E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2365 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2377 DUP2 PUSH2 0x1943 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2382 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2404 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23FB SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2431 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x239E JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x249F SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x24DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x24DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x24EF DUP6 DUP4 DUP4 PUSH2 0x2556 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2534 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2540 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x256B JUMPI PUSH2 0x2566 DUP3 PUSH2 0x25E5 JUMP JUMPDEST PUSH2 0x25DD JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2593 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x25D5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25CC SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x25DE JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x25F8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2664 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2649 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x268C DUP3 PUSH2 0x262A JUMP JUMPDEST PUSH2 0x2696 DUP2 DUP6 PUSH2 0x2635 JUMP JUMPDEST SWAP4 POP PUSH2 0x26A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST PUSH2 0x26AF DUP2 PUSH2 0x2670 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D4 DUP2 DUP5 PUSH2 0x2681 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271B DUP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272B DUP2 PUSH2 0x2710 JUMP JUMPDEST DUP2 EQ PUSH2 0x2736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2748 DUP2 PUSH2 0x2722 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2761 DUP2 PUSH2 0x274E JUMP JUMPDEST DUP2 EQ PUSH2 0x276C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x277E DUP2 PUSH2 0x2758 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x279B JUMPI PUSH2 0x279A PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27A9 DUP6 DUP3 DUP7 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27BA DUP6 DUP3 DUP7 ADD PUSH2 0x276F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27D9 DUP2 PUSH2 0x27C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2803 DUP2 PUSH2 0x27C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x280E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2820 DUP2 PUSH2 0x27FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x283D JUMPI PUSH2 0x283C PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x284B DUP6 DUP3 DUP7 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x285C DUP6 DUP3 DUP7 ADD PUSH2 0x2811 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x286F DUP2 PUSH2 0x274E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x288A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28A9 JUMPI PUSH2 0x28A8 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28B7 DUP7 DUP3 DUP8 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x28C8 DUP7 DUP3 DUP8 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28D9 DUP7 DUP3 DUP8 ADD PUSH2 0x276F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28F9 JUMPI PUSH2 0x28F8 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2907 DUP5 DUP3 DUP6 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2926 DUP2 PUSH2 0x2910 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2941 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x291D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2989 DUP3 PUSH2 0x2670 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x29A8 JUMPI PUSH2 0x29A7 PUSH2 0x2951 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BB PUSH2 0x26DC JUMP JUMPDEST SWAP1 POP PUSH2 0x29C7 DUP3 DUP3 PUSH2 0x2980 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x29E7 JUMPI PUSH2 0x29E6 PUSH2 0x2951 JUMP JUMPDEST JUMPDEST PUSH2 0x29F0 DUP3 PUSH2 0x2670 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1F PUSH2 0x2A1A DUP5 PUSH2 0x29CC JUMP JUMPDEST PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2A3B JUMPI PUSH2 0x2A3A PUSH2 0x294C JUMP JUMPDEST JUMPDEST PUSH2 0x2A46 DUP5 DUP3 DUP6 PUSH2 0x29FD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A63 JUMPI PUSH2 0x2A62 PUSH2 0x2947 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A73 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2A0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A93 JUMPI PUSH2 0x2A92 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AA1 DUP6 DUP3 DUP7 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AC2 JUMPI PUSH2 0x2AC1 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2ACE DUP6 DUP3 DUP7 ADD PUSH2 0x2A4E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AEB DUP2 PUSH2 0x2AD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2B2C JUMPI PUSH2 0x2B2B PUSH2 0x2947 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B49 JUMPI PUSH2 0x2B48 PUSH2 0x2B0C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2B65 JUMPI PUSH2 0x2B64 PUSH2 0x2B11 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2B82 JUMPI PUSH2 0x2B81 PUSH2 0x2947 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B9F JUMPI PUSH2 0x2B9E PUSH2 0x2B0C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2BBB JUMPI PUSH2 0x2BBA PUSH2 0x2B11 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2BDC JUMPI PUSH2 0x2BDB PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BFA JUMPI PUSH2 0x2BF9 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2C06 DUP8 DUP3 DUP9 ADD PUSH2 0x2B16 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C29 JUMPI PUSH2 0x2C28 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2C35 DUP8 DUP3 DUP9 ADD PUSH2 0x2B6C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2C4C DUP2 PUSH2 0x2710 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C67 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C88 JUMPI PUSH2 0x2C87 PUSH2 0x2951 JUMP JUMPDEST JUMPDEST PUSH2 0x2C91 DUP3 PUSH2 0x2670 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB1 PUSH2 0x2CAC DUP5 PUSH2 0x2C6D JUMP JUMPDEST PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2CCD JUMPI PUSH2 0x2CCC PUSH2 0x294C JUMP JUMPDEST JUMPDEST PUSH2 0x2CD8 DUP5 DUP3 DUP6 PUSH2 0x29FD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CF5 JUMPI PUSH2 0x2CF4 PUSH2 0x2947 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D05 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D27 JUMPI PUSH2 0x2D26 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D45 JUMPI PUSH2 0x2D44 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2D51 DUP7 DUP3 DUP8 ADD PUSH2 0x2CE0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D72 JUMPI PUSH2 0x2D71 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2D7E DUP7 DUP3 DUP8 ADD PUSH2 0x2CE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D8F DUP7 DUP3 DUP8 ADD PUSH2 0x276F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DB0 JUMPI PUSH2 0x2DAF PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DBE DUP6 DUP3 DUP7 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DCF DUP6 DUP3 DUP7 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E20 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E33 JUMPI PUSH2 0x2E32 PUSH2 0x2DD9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C69737465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E95 PUSH1 0x26 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA0 DUP3 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EC4 DUP2 PUSH2 0x2E88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61636B6C69737465640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F27 PUSH1 0x29 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F32 DUP3 PUSH2 0x2ECB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F56 DUP2 PUSH2 0x2F1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB9 PUSH1 0x22 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC4 DUP3 PUSH2 0x2F5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FE8 DUP2 PUSH2 0x2FAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3025 PUSH1 0xE DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x3030 DUP3 PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3054 DUP2 PUSH2 0x3018 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061727261797300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B7 PUSH1 0x27 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C2 DUP3 PUSH2 0x305B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30E6 DUP2 PUSH2 0x30AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697320626C61636B6C6973746564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3178 PUSH1 0x2E DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x3183 DUP3 PUSH2 0x311C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31A7 DUP2 PUSH2 0x316B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F1 PUSH2 0x31EC PUSH2 0x31E7 DUP5 PUSH2 0x31AE JUMP JUMPDEST PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x31B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3201 DUP2 PUSH2 0x31D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x321C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3258 PUSH1 0x10 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x3263 DUP3 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3287 DUP2 PUSH2 0x324B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3297 DUP2 PUSH2 0x2AD8 JUMP JUMPDEST DUP2 EQ PUSH2 0x32A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32B4 DUP2 PUSH2 0x328E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32D0 JUMPI PUSH2 0x32CF PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32DE DUP5 DUP3 DUP6 ADD PUSH2 0x32A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32FC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2C43 JUMP JUMPDEST PUSH2 0x3309 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0x3316 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2866 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3354 PUSH1 0x14 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x335F DUP3 PUSH2 0x331E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3383 DUP2 PUSH2 0x3347 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33C4 DUP3 PUSH2 0x274E JUMP JUMPDEST SWAP2 POP PUSH2 0x33CF DUP4 PUSH2 0x274E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x33E7 JUMPI PUSH2 0x33E6 PUSH2 0x338A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x344F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3412 JUMP JUMPDEST PUSH2 0x3459 DUP7 DUP4 PUSH2 0x3412 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x348C PUSH2 0x3487 PUSH2 0x3482 DUP5 PUSH2 0x274E JUMP JUMPDEST PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x274E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34A6 DUP4 PUSH2 0x3471 JUMP JUMPDEST PUSH2 0x34BA PUSH2 0x34B2 DUP3 PUSH2 0x3493 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x341F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x34CF PUSH2 0x34C2 JUMP JUMPDEST PUSH2 0x34DA DUP2 DUP5 DUP5 PUSH2 0x349D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x34FE JUMPI PUSH2 0x34F3 PUSH1 0x0 DUP3 PUSH2 0x34C7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x34E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3543 JUMPI PUSH2 0x3514 DUP2 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x351D DUP5 PUSH2 0x3402 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x352C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3540 PUSH2 0x3538 DUP6 PUSH2 0x3402 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x34DF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3566 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3548 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357F DUP4 DUP4 PUSH2 0x3555 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3598 DUP3 PUSH2 0x262A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35B1 JUMPI PUSH2 0x35B0 PUSH2 0x2951 JUMP JUMPDEST JUMPDEST PUSH2 0x35BB DUP3 SLOAD PUSH2 0x2E08 JUMP JUMPDEST PUSH2 0x35C6 DUP3 DUP3 DUP6 PUSH2 0x3502 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x35F9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x35E7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x35F1 DUP6 DUP3 PUSH2 0x3573 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3659 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3607 DUP7 PUSH2 0x33ED JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x362F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x360A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x364C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3648 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3555 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3682 DUP3 PUSH2 0x3661 JUMP JUMPDEST PUSH2 0x368C DUP2 DUP6 PUSH2 0x366C JUMP JUMPDEST SWAP4 POP PUSH2 0x369C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B4 DUP3 DUP5 PUSH2 0x3677 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 BLOBBASEFEE DUP15 PUSH16 0xE10034A2F72B5C859BB633800554E8B7 0x4B 0x24 EXTCODESIZE PUSH29 0x79F5310D643D2C2164736F6C634300081A003300000000000000000000 ",
							"sourceMap": "371:3630:16:-:0;;;1171:4:2;1128:48;;;;;;;;;971:105:16;;;;;;;;;;995:22;:20;;;:22;;:::i;:::-;371:3630;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:17:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;371:3630:16:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_472": {
									"entryPoint": 4442,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_826": {
									"entryPoint": 7139,
									"id": 826,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_854": {
									"entryPoint": 8887,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 7161,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 8948,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_662": {
									"entryPoint": 7181,
									"id": 662,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_672": {
									"entryPoint": 9082,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_502": {
									"entryPoint": 7199,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1258": {
									"entryPoint": 5432,
									"id": 1258,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1326": {
									"entryPoint": 7339,
									"id": 1326,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2781": {
									"entryPoint": 6034,
									"id": 2781,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 8823,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1882": {
									"entryPoint": 9465,
									"id": 1882,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_578": {
									"entryPoint": 6332,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 5450,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_562": {
									"entryPoint": 5804,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_810": {
									"entryPoint": 5384,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 7099,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 7024,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 9526,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1207": {
									"entryPoint": 7209,
									"id": 1207,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1403": {
									"entryPoint": 5424,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_736": {
									"entryPoint": 6682,
									"id": 736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_709": {
									"entryPoint": 5585,
									"id": 709,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_720": {
									"entryPoint": 7973,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2255": {
									"entryPoint": 9701,
									"id": 2255,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1662": {
									"entryPoint": 9128,
									"id": 1662,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1374": {
									"entryPoint": 7825,
									"id": 1374,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 6467,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1082": {
									"entryPoint": 6780,
									"id": 1082,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_752": {
									"entryPoint": 5706,
									"id": 752,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1174": {
									"entryPoint": 8248,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_629": {
									"entryPoint": 6045,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_979": {
									"entryPoint": 5015,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1003": {
									"entryPoint": 1796,
									"id": 1003,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_931": {
									"entryPoint": 3187,
									"id": 931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchTransfer_2772": {
									"entryPoint": 3312,
									"id": 2772,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@blacklisted_2428": {
									"entryPoint": 4983,
									"id": 2428,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_895": {
									"entryPoint": 2691,
									"id": 895,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_2173": {
									"entryPoint": 9333,
									"id": 2173,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2313": {
									"entryPoint": 9118,
									"id": 2313,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1635": {
									"entryPoint": 8046,
									"id": 1635,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@icoContract_2418": {
									"entryPoint": 4945,
									"id": 2418,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_2496": {
									"entryPoint": 4499,
									"id": 2496,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isBlacklisted_2587": {
									"entryPoint": 5298,
									"id": 2587,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockedUntil_2424": {
									"entryPoint": 3904,
									"id": 2424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_870": {
									"entryPoint": 1635,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 3687,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2517": {
									"entryPoint": 3294,
									"id": 2517,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_697": {
									"entryPoint": 3165,
									"id": 697,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_520": {
									"entryPoint": 3114,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 3274,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBlacklist_2575": {
									"entryPoint": 1831,
									"id": 2575,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setICOContract_2711": {
									"entryPoint": 2548,
									"id": 2711,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockup_2554": {
									"entryPoint": 2700,
									"id": 2554,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_886": {
									"entryPoint": 3743,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_911": {
									"entryPoint": 2008,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1035": {
									"entryPoint": 5659,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_2695": {
									"entryPoint": 2032,
									"id": 2695,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 5164,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_2641": {
									"entryPoint": 3928,
									"id": 2641,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_955": {
									"entryPoint": 7064,
									"id": 955,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_2526": {
									"entryPoint": 3065,
									"id": 2526,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1698": {
									"entryPoint": 8133,
									"id": 1698,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_540": {
									"entryPoint": 3083,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2213": {
									"entryPoint": 9558,
									"id": 2213,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 10764,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 11422,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 10041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 11030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 11116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool": {
									"entryPoint": 10257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 12965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 10830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 11488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 10278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 10876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 11202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 12986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 11534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 10978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 12792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 10525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 13992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13031,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 10993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 12807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 10540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 9948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 11373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 13293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 13921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 13241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 13570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 10000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 10968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 12718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 12728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 10512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 13535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 12758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 13425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 13711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 10749,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9798,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 13314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 11784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 13683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 10624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 12748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 13653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 13194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 11737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 12525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 13459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 11020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 10567,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 11025,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 10572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9958,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 13330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 13640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 13511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 13086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f": {
									"entryPoint": 12379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc": {
									"entryPoint": 12572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 12834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e": {
									"entryPoint": 12125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940": {
									"entryPoint": 11979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4": {
									"entryPoint": 11833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 12271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 13343,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 13469,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 12942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 13506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:30652:17",
										"nodeType": "YulBlock",
										"src": "0:30652:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:17",
													"nodeType": "YulBlock",
													"src": "66:40:17",
													"statements": [
														{
															"nativeSrc": "77:22:17",
															"nodeType": "YulAssignment",
															"src": "77:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:17"
																},
																"nativeSrc": "87:12:17",
																"nodeType": "YulFunctionCall",
																"src": "87:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:17",
														"nodeType": "YulTypedName",
														"src": "49:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:17",
														"nodeType": "YulTypedName",
														"src": "59:6:17",
														"type": ""
													}
												],
												"src": "7:99:17"
											},
											{
												"body": {
													"nativeSrc": "208:73:17",
													"nodeType": "YulBlock",
													"src": "208:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:17"
																},
																"nativeSrc": "218:19:17",
																"nodeType": "YulFunctionCall",
																"src": "218:19:17"
															},
															"nativeSrc": "218:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:17"
														},
														{
															"nativeSrc": "246:29:17",
															"nodeType": "YulAssignment",
															"src": "246:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:17",
																		"nodeType": "YulLiteral",
																		"src": "270:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:17"
																},
																"nativeSrc": "261:14:17",
																"nodeType": "YulFunctionCall",
																"src": "261:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:17",
														"nodeType": "YulTypedName",
														"src": "180:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:17",
														"nodeType": "YulTypedName",
														"src": "185:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:17",
														"nodeType": "YulTypedName",
														"src": "196:11:17",
														"type": ""
													}
												],
												"src": "112:169:17"
											},
											{
												"body": {
													"nativeSrc": "349:186:17",
													"nodeType": "YulBlock",
													"src": "349:186:17",
													"statements": [
														{
															"nativeSrc": "360:10:17",
															"nodeType": "YulVariableDeclaration",
															"src": "360:10:17",
															"value": {
																"kind": "number",
																"nativeSrc": "369:1:17",
																"nodeType": "YulLiteral",
																"src": "369:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "364:1:17",
																	"nodeType": "YulTypedName",
																	"src": "364:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:63:17",
																"nodeType": "YulBlock",
																"src": "429:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "454:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "454:3:17"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "459:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "459:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "450:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "450:3:17"
																					},
																					"nativeSrc": "450:11:17",
																					"nodeType": "YulFunctionCall",
																					"src": "450:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "473:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:17"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "478:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "478:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "469:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "469:3:17"
																							},
																							"nativeSrc": "469:11:17",
																							"nodeType": "YulFunctionCall",
																							"src": "469:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "463:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "463:5:17"
																					},
																					"nativeSrc": "463:18:17",
																					"nodeType": "YulFunctionCall",
																					"src": "463:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "443:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:17"
																			},
																			"nativeSrc": "443:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "443:39:17"
																		},
																		"nativeSrc": "443:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "390:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "393:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "393:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "387:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:17"
																},
																"nativeSrc": "387:13:17",
																"nodeType": "YulFunctionCall",
																"src": "387:13:17"
															},
															"nativeSrc": "379:113:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "401:19:17",
																"nodeType": "YulBlock",
																"src": "401:19:17",
																"statements": [
																	{
																		"nativeSrc": "403:15:17",
																		"nodeType": "YulAssignment",
																		"src": "403:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "412:1:17",
																					"nodeType": "YulIdentifier",
																					"src": "412:1:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:2:17",
																					"nodeType": "YulLiteral",
																					"src": "415:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "408:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "408:3:17"
																			},
																			"nativeSrc": "408:10:17",
																			"nodeType": "YulFunctionCall",
																			"src": "408:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "403:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "403:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "383:3:17",
																"nodeType": "YulBlock",
																"src": "383:3:17",
																"statements": []
															},
															"src": "379:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "512:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "517:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:17"
																		},
																		"nativeSrc": "508:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "508:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:1:17",
																		"nodeType": "YulLiteral",
																		"src": "526:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "501:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:17"
																},
																"nativeSrc": "501:27:17",
																"nodeType": "YulFunctionCall",
																"src": "501:27:17"
															},
															"nativeSrc": "501:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "501:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:248:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:17",
														"nodeType": "YulTypedName",
														"src": "331:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:17",
														"nodeType": "YulTypedName",
														"src": "336:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:17",
														"nodeType": "YulTypedName",
														"src": "341:6:17",
														"type": ""
													}
												],
												"src": "287:248:17"
											},
											{
												"body": {
													"nativeSrc": "589:54:17",
													"nodeType": "YulBlock",
													"src": "589:54:17",
													"statements": [
														{
															"nativeSrc": "599:38:17",
															"nodeType": "YulAssignment",
															"src": "599:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "617:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "617:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:17",
																				"nodeType": "YulLiteral",
																				"src": "624:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "613:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:17"
																		},
																		"nativeSrc": "613:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "613:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:17",
																				"nodeType": "YulLiteral",
																				"src": "633:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "629:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:17"
																		},
																		"nativeSrc": "629:7:17",
																		"nodeType": "YulFunctionCall",
																		"src": "629:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "609:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:17"
																},
																"nativeSrc": "609:28:17",
																"nodeType": "YulFunctionCall",
																"src": "609:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "599:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "541:102:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "572:5:17",
														"nodeType": "YulTypedName",
														"src": "572:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "582:6:17",
														"nodeType": "YulTypedName",
														"src": "582:6:17",
														"type": ""
													}
												],
												"src": "541:102:17"
											},
											{
												"body": {
													"nativeSrc": "741:285:17",
													"nodeType": "YulBlock",
													"src": "741:285:17",
													"statements": [
														{
															"nativeSrc": "751:53:17",
															"nodeType": "YulVariableDeclaration",
															"src": "751:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "798:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "798:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "765:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "765:32:17"
																},
																"nativeSrc": "765:39:17",
																"nodeType": "YulFunctionCall",
																"src": "765:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "755:6:17",
																	"nodeType": "YulTypedName",
																	"src": "755:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "813:78:17",
															"nodeType": "YulAssignment",
															"src": "813:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "879:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "879:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "884:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "820:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "820:58:17"
																},
																"nativeSrc": "820:71:17",
																"nodeType": "YulFunctionCall",
																"src": "820:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "813:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "939:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "939:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "946:4:17",
																				"nodeType": "YulLiteral",
																				"src": "946:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "935:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:17"
																		},
																		"nativeSrc": "935:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "953:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "900:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "900:34:17"
																},
																"nativeSrc": "900:65:17",
																"nodeType": "YulFunctionCall",
																"src": "900:65:17"
															},
															"nativeSrc": "900:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "900:65:17"
														},
														{
															"nativeSrc": "974:46:17",
															"nodeType": "YulAssignment",
															"src": "974:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "985:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "985:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1012:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "990:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "990:21:17"
																		},
																		"nativeSrc": "990:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "990:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:17"
																},
																"nativeSrc": "981:39:17",
																"nodeType": "YulFunctionCall",
																"src": "981:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "974:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "649:377:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:17",
														"nodeType": "YulTypedName",
														"src": "722:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "729:3:17",
														"nodeType": "YulTypedName",
														"src": "729:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "737:3:17",
														"nodeType": "YulTypedName",
														"src": "737:3:17",
														"type": ""
													}
												],
												"src": "649:377:17"
											},
											{
												"body": {
													"nativeSrc": "1150:195:17",
													"nodeType": "YulBlock",
													"src": "1150:195:17",
													"statements": [
														{
															"nativeSrc": "1160:26:17",
															"nodeType": "YulAssignment",
															"src": "1160:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1172:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1172:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1168:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:17"
																},
																"nativeSrc": "1168:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1168:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1160:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1160:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1207:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1218:1:17",
																				"nodeType": "YulLiteral",
																				"src": "1218:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1203:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:17"
																		},
																		"nativeSrc": "1203:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1226:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "1226:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1232:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1222:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:17"
																		},
																		"nativeSrc": "1222:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1196:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:17"
																},
																"nativeSrc": "1196:47:17",
																"nodeType": "YulFunctionCall",
																"src": "1196:47:17"
															},
															"nativeSrc": "1196:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "1196:47:17"
														},
														{
															"nativeSrc": "1252:86:17",
															"nodeType": "YulAssignment",
															"src": "1252:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1324:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1333:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1333:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1260:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "1260:63:17"
																},
																"nativeSrc": "1260:78:17",
																"nodeType": "YulFunctionCall",
																"src": "1260:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1252:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:313:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:17",
														"nodeType": "YulTypedName",
														"src": "1122:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1134:6:17",
														"nodeType": "YulTypedName",
														"src": "1134:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1145:4:17",
														"nodeType": "YulTypedName",
														"src": "1145:4:17",
														"type": ""
													}
												],
												"src": "1032:313:17"
											},
											{
												"body": {
													"nativeSrc": "1391:35:17",
													"nodeType": "YulBlock",
													"src": "1391:35:17",
													"statements": [
														{
															"nativeSrc": "1401:19:17",
															"nodeType": "YulAssignment",
															"src": "1401:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1411:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:17"
																},
																"nativeSrc": "1411:9:17",
																"nodeType": "YulFunctionCall",
																"src": "1411:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1401:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1351:75:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1384:6:17",
														"nodeType": "YulTypedName",
														"src": "1384:6:17",
														"type": ""
													}
												],
												"src": "1351:75:17"
											},
											{
												"body": {
													"nativeSrc": "1521:28:17",
													"nodeType": "YulBlock",
													"src": "1521:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1541:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1531:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:17"
																},
																"nativeSrc": "1531:12:17",
																"nodeType": "YulFunctionCall",
																"src": "1531:12:17"
															},
															"nativeSrc": "1531:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "1531:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1432:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "1432:117:17"
											},
											{
												"body": {
													"nativeSrc": "1644:28:17",
													"nodeType": "YulBlock",
													"src": "1644:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1661:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1654:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:17"
																},
																"nativeSrc": "1654:12:17",
																"nodeType": "YulFunctionCall",
																"src": "1654:12:17"
															},
															"nativeSrc": "1654:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "1654:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1555:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:117:17"
											},
											{
												"body": {
													"nativeSrc": "1723:81:17",
													"nodeType": "YulBlock",
													"src": "1723:81:17",
													"statements": [
														{
															"nativeSrc": "1733:65:17",
															"nodeType": "YulAssignment",
															"src": "1733:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1748:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1748:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1755:42:17",
																		"nodeType": "YulLiteral",
																		"src": "1755:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1744:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:17"
																},
																"nativeSrc": "1744:54:17",
																"nodeType": "YulFunctionCall",
																"src": "1744:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1733:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1733:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1678:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1705:5:17",
														"nodeType": "YulTypedName",
														"src": "1705:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1715:7:17",
														"nodeType": "YulTypedName",
														"src": "1715:7:17",
														"type": ""
													}
												],
												"src": "1678:126:17"
											},
											{
												"body": {
													"nativeSrc": "1855:51:17",
													"nodeType": "YulBlock",
													"src": "1855:51:17",
													"statements": [
														{
															"nativeSrc": "1865:35:17",
															"nodeType": "YulAssignment",
															"src": "1865:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1894:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1894:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1876:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "1876:17:17"
																},
																"nativeSrc": "1876:24:17",
																"nodeType": "YulFunctionCall",
																"src": "1876:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1865:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1865:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1810:96:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1837:5:17",
														"nodeType": "YulTypedName",
														"src": "1837:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1847:7:17",
														"nodeType": "YulTypedName",
														"src": "1847:7:17",
														"type": ""
													}
												],
												"src": "1810:96:17"
											},
											{
												"body": {
													"nativeSrc": "1955:79:17",
													"nodeType": "YulBlock",
													"src": "1955:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2012:16:17",
																"nodeType": "YulBlock",
																"src": "2012:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:17"
																			},
																			"nativeSrc": "2014:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:12:17"
																		},
																		"nativeSrc": "2014:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1978:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1978:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2003:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2003:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1985:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "1985:17:17"
																				},
																				"nativeSrc": "1985:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1985:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1975:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1975:2:17"
																		},
																		"nativeSrc": "1975:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1975:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1968:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:17"
																},
																"nativeSrc": "1968:43:17",
																"nodeType": "YulFunctionCall",
																"src": "1968:43:17"
															},
															"nativeSrc": "1965:63:17",
															"nodeType": "YulIf",
															"src": "1965:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1912:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1948:5:17",
														"nodeType": "YulTypedName",
														"src": "1948:5:17",
														"type": ""
													}
												],
												"src": "1912:122:17"
											},
											{
												"body": {
													"nativeSrc": "2092:87:17",
													"nodeType": "YulBlock",
													"src": "2092:87:17",
													"statements": [
														{
															"nativeSrc": "2102:29:17",
															"nodeType": "YulAssignment",
															"src": "2102:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2124:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2111:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2111:12:17"
																},
																"nativeSrc": "2111:20:17",
																"nodeType": "YulFunctionCall",
																"src": "2111:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2102:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2102:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2167:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2167:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2140:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "2140:26:17"
																},
																"nativeSrc": "2140:33:17",
																"nodeType": "YulFunctionCall",
																"src": "2140:33:17"
															},
															"nativeSrc": "2140:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "2140:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2040:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2070:6:17",
														"nodeType": "YulTypedName",
														"src": "2070:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2078:3:17",
														"nodeType": "YulTypedName",
														"src": "2078:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2086:5:17",
														"nodeType": "YulTypedName",
														"src": "2086:5:17",
														"type": ""
													}
												],
												"src": "2040:139:17"
											},
											{
												"body": {
													"nativeSrc": "2230:32:17",
													"nodeType": "YulBlock",
													"src": "2230:32:17",
													"statements": [
														{
															"nativeSrc": "2240:16:17",
															"nodeType": "YulAssignment",
															"src": "2240:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "2251:5:17",
																"nodeType": "YulIdentifier",
																"src": "2251:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2240:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "2240:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2185:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2212:5:17",
														"nodeType": "YulTypedName",
														"src": "2212:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2222:7:17",
														"nodeType": "YulTypedName",
														"src": "2222:7:17",
														"type": ""
													}
												],
												"src": "2185:77:17"
											},
											{
												"body": {
													"nativeSrc": "2311:79:17",
													"nodeType": "YulBlock",
													"src": "2311:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:17",
																"nodeType": "YulBlock",
																"src": "2368:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:17"
																			},
																			"nativeSrc": "2370:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:17"
																		},
																		"nativeSrc": "2370:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2341:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:17"
																				},
																				"nativeSrc": "2341:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:17"
																		},
																		"nativeSrc": "2331:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:17"
																},
																"nativeSrc": "2324:43:17",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:17"
															},
															"nativeSrc": "2321:63:17",
															"nodeType": "YulIf",
															"src": "2321:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2268:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:17",
														"nodeType": "YulTypedName",
														"src": "2304:5:17",
														"type": ""
													}
												],
												"src": "2268:122:17"
											},
											{
												"body": {
													"nativeSrc": "2448:87:17",
													"nodeType": "YulBlock",
													"src": "2448:87:17",
													"statements": [
														{
															"nativeSrc": "2458:29:17",
															"nodeType": "YulAssignment",
															"src": "2458:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:17"
																},
																"nativeSrc": "2467:20:17",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2496:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:17"
																},
																"nativeSrc": "2496:33:17",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:17"
															},
															"nativeSrc": "2496:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2396:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:17",
														"nodeType": "YulTypedName",
														"src": "2426:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:17",
														"nodeType": "YulTypedName",
														"src": "2434:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:17",
														"nodeType": "YulTypedName",
														"src": "2442:5:17",
														"type": ""
													}
												],
												"src": "2396:139:17"
											},
											{
												"body": {
													"nativeSrc": "2624:391:17",
													"nodeType": "YulBlock",
													"src": "2624:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2670:83:17",
																"nodeType": "YulBlock",
																"src": "2670:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2672:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:17"
																			},
																			"nativeSrc": "2672:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:17"
																		},
																		"nativeSrc": "2672:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2641:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:17"
																		},
																		"nativeSrc": "2641:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2637:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:17"
																},
																"nativeSrc": "2637:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2637:32:17"
															},
															"nativeSrc": "2634:119:17",
															"nodeType": "YulIf",
															"src": "2634:119:17"
														},
														{
															"nativeSrc": "2763:117:17",
															"nodeType": "YulBlock",
															"src": "2763:117:17",
															"statements": [
																{
																	"nativeSrc": "2778:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2792:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2782:6:17",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2807:63:17",
																	"nodeType": "YulAssignment",
																	"src": "2807:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2853:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:17"
																				},
																				"nativeSrc": "2838:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2862:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2817:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "2817:20:17"
																		},
																		"nativeSrc": "2817:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2817:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2807:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2890:118:17",
															"nodeType": "YulBlock",
															"src": "2890:118:17",
															"statements": [
																{
																	"nativeSrc": "2905:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2919:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2909:6:17",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2935:63:17",
																	"nodeType": "YulAssignment",
																	"src": "2935:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2970:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2981:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2966:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:17"
																				},
																				"nativeSrc": "2966:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2990:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2945:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:17"
																		},
																		"nativeSrc": "2945:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2935:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2541:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2586:9:17",
														"nodeType": "YulTypedName",
														"src": "2586:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2597:7:17",
														"nodeType": "YulTypedName",
														"src": "2597:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2609:6:17",
														"nodeType": "YulTypedName",
														"src": "2609:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2617:6:17",
														"nodeType": "YulTypedName",
														"src": "2617:6:17",
														"type": ""
													}
												],
												"src": "2541:474:17"
											},
											{
												"body": {
													"nativeSrc": "3063:48:17",
													"nodeType": "YulBlock",
													"src": "3063:48:17",
													"statements": [
														{
															"nativeSrc": "3073:32:17",
															"nodeType": "YulAssignment",
															"src": "3073:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3098:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3098:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3091:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3091:6:17"
																		},
																		"nativeSrc": "3091:13:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3084:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:17"
																},
																"nativeSrc": "3084:21:17",
																"nodeType": "YulFunctionCall",
																"src": "3084:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3073:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "3073:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3021:90:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3045:5:17",
														"nodeType": "YulTypedName",
														"src": "3045:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3055:7:17",
														"nodeType": "YulTypedName",
														"src": "3055:7:17",
														"type": ""
													}
												],
												"src": "3021:90:17"
											},
											{
												"body": {
													"nativeSrc": "3176:50:17",
													"nodeType": "YulBlock",
													"src": "3176:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3193:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3193:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3213:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3213:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3198:14:17",
																			"nodeType": "YulIdentifier",
																			"src": "3198:14:17"
																		},
																		"nativeSrc": "3198:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:17"
																},
																"nativeSrc": "3186:34:17",
																"nodeType": "YulFunctionCall",
																"src": "3186:34:17"
															},
															"nativeSrc": "3186:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "3186:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3117:109:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3164:5:17",
														"nodeType": "YulTypedName",
														"src": "3164:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3171:3:17",
														"nodeType": "YulTypedName",
														"src": "3171:3:17",
														"type": ""
													}
												],
												"src": "3117:109:17"
											},
											{
												"body": {
													"nativeSrc": "3324:118:17",
													"nodeType": "YulBlock",
													"src": "3324:118:17",
													"statements": [
														{
															"nativeSrc": "3334:26:17",
															"nodeType": "YulAssignment",
															"src": "3334:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3346:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3346:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3342:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3342:3:17"
																},
																"nativeSrc": "3342:18:17",
																"nodeType": "YulFunctionCall",
																"src": "3342:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3334:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:17",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:17"
																		},
																		"nativeSrc": "3417:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3370:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "3370:37:17"
																},
																"nativeSrc": "3370:65:17",
																"nodeType": "YulFunctionCall",
																"src": "3370:65:17"
															},
															"nativeSrc": "3370:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "3370:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3232:210:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3296:9:17",
														"nodeType": "YulTypedName",
														"src": "3296:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3308:6:17",
														"nodeType": "YulTypedName",
														"src": "3308:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3319:4:17",
														"nodeType": "YulTypedName",
														"src": "3319:4:17",
														"type": ""
													}
												],
												"src": "3232:210:17"
											},
											{
												"body": {
													"nativeSrc": "3488:76:17",
													"nodeType": "YulBlock",
													"src": "3488:76:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3542:16:17",
																"nodeType": "YulBlock",
																"src": "3542:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3551:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3551:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3554:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3544:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3544:6:17"
																			},
																			"nativeSrc": "3544:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3544:12:17"
																		},
																		"nativeSrc": "3544:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3544:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3511:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3511:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3533:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "3533:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3518:14:17",
																					"nodeType": "YulIdentifier",
																					"src": "3518:14:17"
																				},
																				"nativeSrc": "3518:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3518:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3508:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "3508:2:17"
																		},
																		"nativeSrc": "3508:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3508:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3501:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:17"
																},
																"nativeSrc": "3501:40:17",
																"nodeType": "YulFunctionCall",
																"src": "3501:40:17"
															},
															"nativeSrc": "3498:60:17",
															"nodeType": "YulIf",
															"src": "3498:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3448:116:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3481:5:17",
														"nodeType": "YulTypedName",
														"src": "3481:5:17",
														"type": ""
													}
												],
												"src": "3448:116:17"
											},
											{
												"body": {
													"nativeSrc": "3619:84:17",
													"nodeType": "YulBlock",
													"src": "3619:84:17",
													"statements": [
														{
															"nativeSrc": "3629:29:17",
															"nodeType": "YulAssignment",
															"src": "3629:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3651:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3638:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3638:12:17"
																},
																"nativeSrc": "3638:20:17",
																"nodeType": "YulFunctionCall",
																"src": "3638:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3629:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3629:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3691:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3691:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3667:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "3667:23:17"
																},
																"nativeSrc": "3667:30:17",
																"nodeType": "YulFunctionCall",
																"src": "3667:30:17"
															},
															"nativeSrc": "3667:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "3667:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3570:133:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3597:6:17",
														"nodeType": "YulTypedName",
														"src": "3597:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3605:3:17",
														"nodeType": "YulTypedName",
														"src": "3605:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3613:5:17",
														"nodeType": "YulTypedName",
														"src": "3613:5:17",
														"type": ""
													}
												],
												"src": "3570:133:17"
											},
											{
												"body": {
													"nativeSrc": "3789:388:17",
													"nodeType": "YulBlock",
													"src": "3789:388:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3835:83:17",
																"nodeType": "YulBlock",
																"src": "3835:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3837:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "3837:77:17"
																			},
																			"nativeSrc": "3837:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3837:79:17"
																		},
																		"nativeSrc": "3837:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3837:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3810:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3810:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3819:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3806:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3806:3:17"
																		},
																		"nativeSrc": "3806:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3806:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3831:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3831:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3802:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:17"
																},
																"nativeSrc": "3802:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3802:32:17"
															},
															"nativeSrc": "3799:119:17",
															"nodeType": "YulIf",
															"src": "3799:119:17"
														},
														{
															"nativeSrc": "3928:117:17",
															"nodeType": "YulBlock",
															"src": "3928:117:17",
															"statements": [
																{
																	"nativeSrc": "3943:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3943:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3957:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3957:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3947:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3947:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3972:63:17",
																	"nodeType": "YulAssignment",
																	"src": "3972:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4007:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4007:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4018:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4018:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4003:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:17"
																				},
																				"nativeSrc": "4003:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4003:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4027:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4027:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3982:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "3982:20:17"
																		},
																		"nativeSrc": "3982:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3982:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3972:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3972:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4055:115:17",
															"nodeType": "YulBlock",
															"src": "4055:115:17",
															"statements": [
																{
																	"nativeSrc": "4070:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4070:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4084:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4084:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4074:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4074:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4100:60:17",
																	"nodeType": "YulAssignment",
																	"src": "4100:60:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4132:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4132:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4143:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4143:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4128:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4128:3:17"
																				},
																				"nativeSrc": "4128:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4128:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4152:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4152:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4110:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "4110:17:17"
																		},
																		"nativeSrc": "4110:50:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4110:50:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4100:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4100:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3709:468:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3751:9:17",
														"nodeType": "YulTypedName",
														"src": "3751:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3762:7:17",
														"nodeType": "YulTypedName",
														"src": "3762:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3774:6:17",
														"nodeType": "YulTypedName",
														"src": "3774:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3782:6:17",
														"nodeType": "YulTypedName",
														"src": "3782:6:17",
														"type": ""
													}
												],
												"src": "3709:468:17"
											},
											{
												"body": {
													"nativeSrc": "4248:53:17",
													"nodeType": "YulBlock",
													"src": "4248:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4265:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4265:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4288:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4288:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4270:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "4270:17:17"
																		},
																		"nativeSrc": "4270:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4270:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4258:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:17"
																},
																"nativeSrc": "4258:37:17",
																"nodeType": "YulFunctionCall",
																"src": "4258:37:17"
															},
															"nativeSrc": "4258:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "4258:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4183:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4236:5:17",
														"nodeType": "YulTypedName",
														"src": "4236:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4243:3:17",
														"nodeType": "YulTypedName",
														"src": "4243:3:17",
														"type": ""
													}
												],
												"src": "4183:118:17"
											},
											{
												"body": {
													"nativeSrc": "4405:124:17",
													"nodeType": "YulBlock",
													"src": "4405:124:17",
													"statements": [
														{
															"nativeSrc": "4415:26:17",
															"nodeType": "YulAssignment",
															"src": "4415:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4427:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4427:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4438:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4438:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4423:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4423:3:17"
																},
																"nativeSrc": "4423:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4423:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4415:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4415:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4495:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4495:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4508:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4508:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4519:1:17",
																				"nodeType": "YulLiteral",
																				"src": "4519:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4504:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4504:3:17"
																		},
																		"nativeSrc": "4504:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4504:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4451:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "4451:43:17"
																},
																"nativeSrc": "4451:71:17",
																"nodeType": "YulFunctionCall",
																"src": "4451:71:17"
															},
															"nativeSrc": "4451:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "4451:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4307:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4377:9:17",
														"nodeType": "YulTypedName",
														"src": "4377:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4389:6:17",
														"nodeType": "YulTypedName",
														"src": "4389:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4400:4:17",
														"nodeType": "YulTypedName",
														"src": "4400:4:17",
														"type": ""
													}
												],
												"src": "4307:222:17"
											},
											{
												"body": {
													"nativeSrc": "4635:519:17",
													"nodeType": "YulBlock",
													"src": "4635:519:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4681:83:17",
																"nodeType": "YulBlock",
																"src": "4681:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4683:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "4683:77:17"
																			},
																			"nativeSrc": "4683:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4683:79:17"
																		},
																		"nativeSrc": "4683:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4683:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4656:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4656:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4665:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4665:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4652:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4652:3:17"
																		},
																		"nativeSrc": "4652:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4652:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4677:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4677:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4648:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4648:3:17"
																},
																"nativeSrc": "4648:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4648:32:17"
															},
															"nativeSrc": "4645:119:17",
															"nodeType": "YulIf",
															"src": "4645:119:17"
														},
														{
															"nativeSrc": "4774:117:17",
															"nodeType": "YulBlock",
															"src": "4774:117:17",
															"statements": [
																{
																	"nativeSrc": "4789:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4789:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4803:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4803:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4793:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4793:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4818:63:17",
																	"nodeType": "YulAssignment",
																	"src": "4818:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4853:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4853:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4864:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4864:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4849:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4849:3:17"
																				},
																				"nativeSrc": "4849:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4849:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4873:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4873:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4828:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "4828:20:17"
																		},
																		"nativeSrc": "4828:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4828:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4818:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4818:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4901:118:17",
															"nodeType": "YulBlock",
															"src": "4901:118:17",
															"statements": [
																{
																	"nativeSrc": "4916:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4916:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4930:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4930:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4920:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4920:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4946:63:17",
																	"nodeType": "YulAssignment",
																	"src": "4946:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4981:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4981:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4992:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4992:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4977:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4977:3:17"
																				},
																				"nativeSrc": "4977:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4977:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5001:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5001:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4956:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "4956:20:17"
																		},
																		"nativeSrc": "4956:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4956:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4946:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4946:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5029:118:17",
															"nodeType": "YulBlock",
															"src": "5029:118:17",
															"statements": [
																{
																	"nativeSrc": "5044:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5044:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5058:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5058:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5048:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5048:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5074:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5074:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5109:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5109:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5120:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5120:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5105:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5105:3:17"
																				},
																				"nativeSrc": "5105:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5105:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5129:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5129:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5084:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5084:20:17"
																		},
																		"nativeSrc": "5084:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5084:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5074:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5074:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4535:619:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4589:9:17",
														"nodeType": "YulTypedName",
														"src": "4589:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4600:7:17",
														"nodeType": "YulTypedName",
														"src": "4600:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4612:6:17",
														"nodeType": "YulTypedName",
														"src": "4612:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4620:6:17",
														"nodeType": "YulTypedName",
														"src": "4620:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4628:6:17",
														"nodeType": "YulTypedName",
														"src": "4628:6:17",
														"type": ""
													}
												],
												"src": "4535:619:17"
											},
											{
												"body": {
													"nativeSrc": "5226:263:17",
													"nodeType": "YulBlock",
													"src": "5226:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5272:83:17",
																"nodeType": "YulBlock",
																"src": "5272:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5274:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "5274:77:17"
																			},
																			"nativeSrc": "5274:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5274:79:17"
																		},
																		"nativeSrc": "5274:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5274:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5247:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5247:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5256:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5256:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5243:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5243:3:17"
																		},
																		"nativeSrc": "5243:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5243:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5268:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5268:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5239:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5239:3:17"
																},
																"nativeSrc": "5239:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5239:32:17"
															},
															"nativeSrc": "5236:119:17",
															"nodeType": "YulIf",
															"src": "5236:119:17"
														},
														{
															"nativeSrc": "5365:117:17",
															"nodeType": "YulBlock",
															"src": "5365:117:17",
															"statements": [
																{
																	"nativeSrc": "5380:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5380:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5394:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5394:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5384:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5384:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5409:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5409:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5444:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5444:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5455:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5455:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5440:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5440:3:17"
																				},
																				"nativeSrc": "5440:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5440:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5464:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5464:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5419:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5419:20:17"
																		},
																		"nativeSrc": "5419:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5419:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5409:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5409:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5160:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5196:9:17",
														"nodeType": "YulTypedName",
														"src": "5196:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5207:7:17",
														"nodeType": "YulTypedName",
														"src": "5207:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5219:6:17",
														"nodeType": "YulTypedName",
														"src": "5219:6:17",
														"type": ""
													}
												],
												"src": "5160:329:17"
											},
											{
												"body": {
													"nativeSrc": "5538:43:17",
													"nodeType": "YulBlock",
													"src": "5538:43:17",
													"statements": [
														{
															"nativeSrc": "5548:27:17",
															"nodeType": "YulAssignment",
															"src": "5548:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5563:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5563:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5570:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5570:4:17",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5559:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5559:3:17"
																},
																"nativeSrc": "5559:16:17",
																"nodeType": "YulFunctionCall",
																"src": "5559:16:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5548:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "5548:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5495:86:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5520:5:17",
														"nodeType": "YulTypedName",
														"src": "5520:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5530:7:17",
														"nodeType": "YulTypedName",
														"src": "5530:7:17",
														"type": ""
													}
												],
												"src": "5495:86:17"
											},
											{
												"body": {
													"nativeSrc": "5648:51:17",
													"nodeType": "YulBlock",
													"src": "5648:51:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5665:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5665:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5686:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5686:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5670:15:17",
																			"nodeType": "YulIdentifier",
																			"src": "5670:15:17"
																		},
																		"nativeSrc": "5670:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5670:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5658:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:17"
																},
																"nativeSrc": "5658:35:17",
																"nodeType": "YulFunctionCall",
																"src": "5658:35:17"
															},
															"nativeSrc": "5658:35:17",
															"nodeType": "YulExpressionStatement",
															"src": "5658:35:17"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5587:112:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5636:5:17",
														"nodeType": "YulTypedName",
														"src": "5636:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5643:3:17",
														"nodeType": "YulTypedName",
														"src": "5643:3:17",
														"type": ""
													}
												],
												"src": "5587:112:17"
											},
											{
												"body": {
													"nativeSrc": "5799:120:17",
													"nodeType": "YulBlock",
													"src": "5799:120:17",
													"statements": [
														{
															"nativeSrc": "5809:26:17",
															"nodeType": "YulAssignment",
															"src": "5809:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5821:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5821:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5832:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5832:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5817:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5817:3:17"
																},
																"nativeSrc": "5817:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5817:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5809:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5809:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5885:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5885:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5898:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5898:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5909:1:17",
																				"nodeType": "YulLiteral",
																				"src": "5909:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5894:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:17"
																		},
																		"nativeSrc": "5894:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5894:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5845:39:17",
																	"nodeType": "YulIdentifier",
																	"src": "5845:39:17"
																},
																"nativeSrc": "5845:67:17",
																"nodeType": "YulFunctionCall",
																"src": "5845:67:17"
															},
															"nativeSrc": "5845:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "5845:67:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5705:214:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5771:9:17",
														"nodeType": "YulTypedName",
														"src": "5771:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5783:6:17",
														"nodeType": "YulTypedName",
														"src": "5783:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5794:4:17",
														"nodeType": "YulTypedName",
														"src": "5794:4:17",
														"type": ""
													}
												],
												"src": "5705:214:17"
											},
											{
												"body": {
													"nativeSrc": "6014:28:17",
													"nodeType": "YulBlock",
													"src": "6014:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6031:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6031:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6034:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6034:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6024:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6024:6:17"
																},
																"nativeSrc": "6024:12:17",
																"nodeType": "YulFunctionCall",
																"src": "6024:12:17"
															},
															"nativeSrc": "6024:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "6024:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5925:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "5925:117:17"
											},
											{
												"body": {
													"nativeSrc": "6137:28:17",
													"nodeType": "YulBlock",
													"src": "6137:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6154:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6154:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6157:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6157:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6147:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6147:6:17"
																},
																"nativeSrc": "6147:12:17",
																"nodeType": "YulFunctionCall",
																"src": "6147:12:17"
															},
															"nativeSrc": "6147:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "6147:12:17"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6048:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "6048:117:17"
											},
											{
												"body": {
													"nativeSrc": "6199:152:17",
													"nodeType": "YulBlock",
													"src": "6199:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6216:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6216:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6219:77:17",
																		"nodeType": "YulLiteral",
																		"src": "6219:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6209:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6209:6:17"
																},
																"nativeSrc": "6209:88:17",
																"nodeType": "YulFunctionCall",
																"src": "6209:88:17"
															},
															"nativeSrc": "6209:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "6209:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6313:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6313:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6316:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6316:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6306:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6306:6:17"
																},
																"nativeSrc": "6306:15:17",
																"nodeType": "YulFunctionCall",
																"src": "6306:15:17"
															},
															"nativeSrc": "6306:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "6306:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6337:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6337:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6340:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6340:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6330:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6330:6:17"
																},
																"nativeSrc": "6330:15:17",
																"nodeType": "YulFunctionCall",
																"src": "6330:15:17"
															},
															"nativeSrc": "6330:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "6330:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6171:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "6171:180:17"
											},
											{
												"body": {
													"nativeSrc": "6400:238:17",
													"nodeType": "YulBlock",
													"src": "6400:238:17",
													"statements": [
														{
															"nativeSrc": "6410:58:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6410:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6432:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6432:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6462:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "6462:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6440:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "6440:21:17"
																		},
																		"nativeSrc": "6440:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6440:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6428:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6428:3:17"
																},
																"nativeSrc": "6428:40:17",
																"nodeType": "YulFunctionCall",
																"src": "6428:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6414:10:17",
																	"nodeType": "YulTypedName",
																	"src": "6414:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6579:22:17",
																"nodeType": "YulBlock",
																"src": "6579:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6581:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "6581:16:17"
																			},
																			"nativeSrc": "6581:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6581:18:17"
																		},
																		"nativeSrc": "6581:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6581:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6522:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "6522:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6534:18:17",
																				"nodeType": "YulLiteral",
																				"src": "6534:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6519:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "6519:2:17"
																		},
																		"nativeSrc": "6519:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6519:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6558:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "6558:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6570:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6570:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6555:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "6555:2:17"
																		},
																		"nativeSrc": "6555:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6555:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6516:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6516:2:17"
																},
																"nativeSrc": "6516:62:17",
																"nodeType": "YulFunctionCall",
																"src": "6516:62:17"
															},
															"nativeSrc": "6513:88:17",
															"nodeType": "YulIf",
															"src": "6513:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6617:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6617:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6621:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "6621:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6610:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6610:6:17"
																},
																"nativeSrc": "6610:22:17",
																"nodeType": "YulFunctionCall",
																"src": "6610:22:17"
															},
															"nativeSrc": "6610:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "6610:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6357:281:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6386:6:17",
														"nodeType": "YulTypedName",
														"src": "6386:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6394:4:17",
														"nodeType": "YulTypedName",
														"src": "6394:4:17",
														"type": ""
													}
												],
												"src": "6357:281:17"
											},
											{
												"body": {
													"nativeSrc": "6685:88:17",
													"nodeType": "YulBlock",
													"src": "6685:88:17",
													"statements": [
														{
															"nativeSrc": "6695:30:17",
															"nodeType": "YulAssignment",
															"src": "6695:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6705:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "6705:18:17"
																},
																"nativeSrc": "6705:20:17",
																"nodeType": "YulFunctionCall",
																"src": "6705:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6695:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6695:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6754:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6754:6:17"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6762:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "6762:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6734:19:17",
																	"nodeType": "YulIdentifier",
																	"src": "6734:19:17"
																},
																"nativeSrc": "6734:33:17",
																"nodeType": "YulFunctionCall",
																"src": "6734:33:17"
															},
															"nativeSrc": "6734:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "6734:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6644:129:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6669:4:17",
														"nodeType": "YulTypedName",
														"src": "6669:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6678:6:17",
														"nodeType": "YulTypedName",
														"src": "6678:6:17",
														"type": ""
													}
												],
												"src": "6644:129:17"
											},
											{
												"body": {
													"nativeSrc": "6845:241:17",
													"nodeType": "YulBlock",
													"src": "6845:241:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6950:22:17",
																"nodeType": "YulBlock",
																"src": "6950:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6952:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "6952:16:17"
																			},
																			"nativeSrc": "6952:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6952:18:17"
																		},
																		"nativeSrc": "6952:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6952:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6922:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6930:18:17",
																		"nodeType": "YulLiteral",
																		"src": "6930:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6919:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6919:2:17"
																},
																"nativeSrc": "6919:30:17",
																"nodeType": "YulFunctionCall",
																"src": "6919:30:17"
															},
															"nativeSrc": "6916:56:17",
															"nodeType": "YulIf",
															"src": "6916:56:17"
														},
														{
															"nativeSrc": "6982:37:17",
															"nodeType": "YulAssignment",
															"src": "6982:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7012:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7012:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6990:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "6990:21:17"
																},
																"nativeSrc": "6990:29:17",
																"nodeType": "YulFunctionCall",
																"src": "6990:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6982:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6982:4:17"
																}
															]
														},
														{
															"nativeSrc": "7056:23:17",
															"nodeType": "YulAssignment",
															"src": "7056:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7068:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7068:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7074:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7074:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7064:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7064:3:17"
																},
																"nativeSrc": "7064:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7064:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7056:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7056:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "6779:307:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6829:6:17",
														"nodeType": "YulTypedName",
														"src": "6829:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6840:4:17",
														"nodeType": "YulTypedName",
														"src": "6840:4:17",
														"type": ""
													}
												],
												"src": "6779:307:17"
											},
											{
												"body": {
													"nativeSrc": "7156:84:17",
													"nodeType": "YulBlock",
													"src": "7156:84:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7180:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7180:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7185:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7185:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7190:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7190:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7167:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "7167:12:17"
																},
																"nativeSrc": "7167:30:17",
																"nodeType": "YulFunctionCall",
																"src": "7167:30:17"
															},
															"nativeSrc": "7167:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "7167:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7217:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7217:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7222:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7222:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7213:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7213:3:17"
																		},
																		"nativeSrc": "7213:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7213:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7231:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7206:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7206:6:17"
																},
																"nativeSrc": "7206:27:17",
																"nodeType": "YulFunctionCall",
																"src": "7206:27:17"
															},
															"nativeSrc": "7206:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "7206:27:17"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7092:148:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7138:3:17",
														"nodeType": "YulTypedName",
														"src": "7138:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7143:3:17",
														"nodeType": "YulTypedName",
														"src": "7143:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7148:6:17",
														"nodeType": "YulTypedName",
														"src": "7148:6:17",
														"type": ""
													}
												],
												"src": "7092:148:17"
											},
											{
												"body": {
													"nativeSrc": "7329:340:17",
													"nodeType": "YulBlock",
													"src": "7329:340:17",
													"statements": [
														{
															"nativeSrc": "7339:74:17",
															"nodeType": "YulAssignment",
															"src": "7339:74:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7405:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7405:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "7364:40:17",
																			"nodeType": "YulIdentifier",
																			"src": "7364:40:17"
																		},
																		"nativeSrc": "7364:48:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7364:48:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7348:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "7348:15:17"
																},
																"nativeSrc": "7348:65:17",
																"nodeType": "YulFunctionCall",
																"src": "7348:65:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7339:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "7339:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7429:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7429:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7436:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7436:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7422:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7422:6:17"
																},
																"nativeSrc": "7422:21:17",
																"nodeType": "YulFunctionCall",
																"src": "7422:21:17"
															},
															"nativeSrc": "7422:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "7422:21:17"
														},
														{
															"nativeSrc": "7452:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7452:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7467:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7467:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7474:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7474:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7463:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7463:3:17"
																},
																"nativeSrc": "7463:16:17",
																"nodeType": "YulFunctionCall",
																"src": "7463:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7456:3:17",
																	"nodeType": "YulTypedName",
																	"src": "7456:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7517:83:17",
																"nodeType": "YulBlock",
																"src": "7517:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7519:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "7519:77:17"
																			},
																			"nativeSrc": "7519:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7519:79:17"
																		},
																		"nativeSrc": "7519:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7519:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7498:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7498:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7503:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7503:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7494:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7494:3:17"
																		},
																		"nativeSrc": "7494:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7494:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7512:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7512:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7491:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7491:2:17"
																},
																"nativeSrc": "7491:25:17",
																"nodeType": "YulFunctionCall",
																"src": "7491:25:17"
															},
															"nativeSrc": "7488:112:17",
															"nodeType": "YulIf",
															"src": "7488:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7646:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7646:3:17"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7651:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7651:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7656:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7656:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7609:36:17",
																	"nodeType": "YulIdentifier",
																	"src": "7609:36:17"
																},
																"nativeSrc": "7609:54:17",
																"nodeType": "YulFunctionCall",
																"src": "7609:54:17"
															},
															"nativeSrc": "7609:54:17",
															"nodeType": "YulExpressionStatement",
															"src": "7609:54:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "7246:423:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7302:3:17",
														"nodeType": "YulTypedName",
														"src": "7302:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7307:6:17",
														"nodeType": "YulTypedName",
														"src": "7307:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7315:3:17",
														"nodeType": "YulTypedName",
														"src": "7315:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7323:5:17",
														"nodeType": "YulTypedName",
														"src": "7323:5:17",
														"type": ""
													}
												],
												"src": "7246:423:17"
											},
											{
												"body": {
													"nativeSrc": "7749:277:17",
													"nodeType": "YulBlock",
													"src": "7749:277:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7798:83:17",
																"nodeType": "YulBlock",
																"src": "7798:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7800:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "7800:77:17"
																			},
																			"nativeSrc": "7800:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7800:79:17"
																		},
																		"nativeSrc": "7800:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7800:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7777:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "7777:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7785:4:17",
																						"nodeType": "YulLiteral",
																						"src": "7785:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7773:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7773:3:17"
																				},
																				"nativeSrc": "7773:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7773:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7792:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7792:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7769:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7769:3:17"
																		},
																		"nativeSrc": "7769:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7769:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7762:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7762:6:17"
																},
																"nativeSrc": "7762:35:17",
																"nodeType": "YulFunctionCall",
																"src": "7762:35:17"
															},
															"nativeSrc": "7759:122:17",
															"nodeType": "YulIf",
															"src": "7759:122:17"
														},
														{
															"nativeSrc": "7890:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7890:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7917:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7904:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "7904:12:17"
																},
																"nativeSrc": "7904:20:17",
																"nodeType": "YulFunctionCall",
																"src": "7904:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7894:6:17",
																	"nodeType": "YulTypedName",
																	"src": "7894:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7933:87:17",
															"nodeType": "YulAssignment",
															"src": "7933:87:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7993:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7993:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8001:4:17",
																				"nodeType": "YulLiteral",
																				"src": "8001:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7989:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7989:3:17"
																		},
																		"nativeSrc": "7989:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7989:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8008:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8008:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8016:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "8016:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "7942:46:17",
																	"nodeType": "YulIdentifier",
																	"src": "7942:46:17"
																},
																"nativeSrc": "7942:78:17",
																"nodeType": "YulFunctionCall",
																"src": "7942:78:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7933:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "7933:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "7688:338:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7727:6:17",
														"nodeType": "YulTypedName",
														"src": "7727:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7735:3:17",
														"nodeType": "YulTypedName",
														"src": "7735:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7743:5:17",
														"nodeType": "YulTypedName",
														"src": "7743:5:17",
														"type": ""
													}
												],
												"src": "7688:338:17"
											},
											{
												"body": {
													"nativeSrc": "8124:560:17",
													"nodeType": "YulBlock",
													"src": "8124:560:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8170:83:17",
																"nodeType": "YulBlock",
																"src": "8170:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8172:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "8172:77:17"
																			},
																			"nativeSrc": "8172:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8172:79:17"
																		},
																		"nativeSrc": "8172:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8172:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8145:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8145:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8154:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8154:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8141:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8141:3:17"
																		},
																		"nativeSrc": "8141:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8141:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8166:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8166:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8137:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8137:3:17"
																},
																"nativeSrc": "8137:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8137:32:17"
															},
															"nativeSrc": "8134:119:17",
															"nodeType": "YulIf",
															"src": "8134:119:17"
														},
														{
															"nativeSrc": "8263:117:17",
															"nodeType": "YulBlock",
															"src": "8263:117:17",
															"statements": [
																{
																	"nativeSrc": "8278:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8278:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8292:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8292:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8282:6:17",
																			"nodeType": "YulTypedName",
																			"src": "8282:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8307:63:17",
																	"nodeType": "YulAssignment",
																	"src": "8307:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8342:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8342:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8353:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8353:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8338:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8338:3:17"
																				},
																				"nativeSrc": "8338:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8338:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8362:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8362:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8317:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "8317:20:17"
																		},
																		"nativeSrc": "8317:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8317:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8307:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8307:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8390:287:17",
															"nodeType": "YulBlock",
															"src": "8390:287:17",
															"statements": [
																{
																	"nativeSrc": "8405:46:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8405:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8436:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8436:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8447:2:17",
																						"nodeType": "YulLiteral",
																						"src": "8447:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8432:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8432:3:17"
																				},
																				"nativeSrc": "8432:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8432:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8419:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "8419:12:17"
																		},
																		"nativeSrc": "8419:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8419:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8409:6:17",
																			"nodeType": "YulTypedName",
																			"src": "8409:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8498:83:17",
																		"nodeType": "YulBlock",
																		"src": "8498:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8500:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "8500:77:17"
																					},
																					"nativeSrc": "8500:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8500:79:17"
																				},
																				"nativeSrc": "8500:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "8500:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8470:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8470:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8478:18:17",
																				"nodeType": "YulLiteral",
																				"src": "8478:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8467:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "8467:2:17"
																		},
																		"nativeSrc": "8467:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8467:30:17"
																	},
																	"nativeSrc": "8464:117:17",
																	"nodeType": "YulIf",
																	"src": "8464:117:17"
																},
																{
																	"nativeSrc": "8595:72:17",
																	"nodeType": "YulAssignment",
																	"src": "8595:72:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8639:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8639:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8650:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8650:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8635:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8635:3:17"
																				},
																				"nativeSrc": "8635:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8635:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8659:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8659:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "8605:29:17",
																			"nodeType": "YulIdentifier",
																			"src": "8605:29:17"
																		},
																		"nativeSrc": "8605:62:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8605:62:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8595:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8595:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "8032:652:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8086:9:17",
														"nodeType": "YulTypedName",
														"src": "8086:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8097:7:17",
														"nodeType": "YulTypedName",
														"src": "8097:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8109:6:17",
														"nodeType": "YulTypedName",
														"src": "8109:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8117:6:17",
														"nodeType": "YulTypedName",
														"src": "8117:6:17",
														"type": ""
													}
												],
												"src": "8032:652:17"
											},
											{
												"body": {
													"nativeSrc": "8735:32:17",
													"nodeType": "YulBlock",
													"src": "8735:32:17",
													"statements": [
														{
															"nativeSrc": "8745:16:17",
															"nodeType": "YulAssignment",
															"src": "8745:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "8756:5:17",
																"nodeType": "YulIdentifier",
																"src": "8756:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8745:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "8745:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "8690:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8717:5:17",
														"nodeType": "YulTypedName",
														"src": "8717:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8727:7:17",
														"nodeType": "YulTypedName",
														"src": "8727:7:17",
														"type": ""
													}
												],
												"src": "8690:77:17"
											},
											{
												"body": {
													"nativeSrc": "8838:53:17",
													"nodeType": "YulBlock",
													"src": "8838:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8855:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "8855:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8878:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "8878:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8860:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "8860:17:17"
																		},
																		"nativeSrc": "8860:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8860:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8848:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8848:6:17"
																},
																"nativeSrc": "8848:37:17",
																"nodeType": "YulFunctionCall",
																"src": "8848:37:17"
															},
															"nativeSrc": "8848:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "8848:37:17"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8773:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8826:5:17",
														"nodeType": "YulTypedName",
														"src": "8826:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8833:3:17",
														"nodeType": "YulTypedName",
														"src": "8833:3:17",
														"type": ""
													}
												],
												"src": "8773:118:17"
											},
											{
												"body": {
													"nativeSrc": "8995:124:17",
													"nodeType": "YulBlock",
													"src": "8995:124:17",
													"statements": [
														{
															"nativeSrc": "9005:26:17",
															"nodeType": "YulAssignment",
															"src": "9005:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9017:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9017:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9028:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9028:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9013:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9013:3:17"
																},
																"nativeSrc": "9013:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9013:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9005:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9005:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9085:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9085:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9098:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9098:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9109:1:17",
																				"nodeType": "YulLiteral",
																				"src": "9109:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9094:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9094:3:17"
																		},
																		"nativeSrc": "9094:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9094:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9041:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "9041:43:17"
																},
																"nativeSrc": "9041:71:17",
																"nodeType": "YulFunctionCall",
																"src": "9041:71:17"
															},
															"nativeSrc": "9041:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "9041:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "8897:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8967:9:17",
														"nodeType": "YulTypedName",
														"src": "8967:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8979:6:17",
														"nodeType": "YulTypedName",
														"src": "8979:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8990:4:17",
														"nodeType": "YulTypedName",
														"src": "8990:4:17",
														"type": ""
													}
												],
												"src": "8897:222:17"
											},
											{
												"body": {
													"nativeSrc": "9214:28:17",
													"nodeType": "YulBlock",
													"src": "9214:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9231:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9231:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9234:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9234:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9224:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9224:6:17"
																},
																"nativeSrc": "9224:12:17",
																"nodeType": "YulFunctionCall",
																"src": "9224:12:17"
															},
															"nativeSrc": "9224:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "9224:12:17"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "9125:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "9125:117:17"
											},
											{
												"body": {
													"nativeSrc": "9337:28:17",
													"nodeType": "YulBlock",
													"src": "9337:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9354:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9354:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9357:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9357:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9347:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9347:6:17"
																},
																"nativeSrc": "9347:12:17",
																"nodeType": "YulFunctionCall",
																"src": "9347:12:17"
															},
															"nativeSrc": "9347:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "9347:12:17"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "9248:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "9248:117:17"
											},
											{
												"body": {
													"nativeSrc": "9478:478:17",
													"nodeType": "YulBlock",
													"src": "9478:478:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9527:83:17",
																"nodeType": "YulBlock",
																"src": "9527:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9529:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9529:77:17"
																			},
																			"nativeSrc": "9529:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9529:79:17"
																		},
																		"nativeSrc": "9529:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9529:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9506:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9506:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9514:4:17",
																						"nodeType": "YulLiteral",
																						"src": "9514:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9502:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9502:3:17"
																				},
																				"nativeSrc": "9502:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9502:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9521:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "9521:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9498:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:17"
																		},
																		"nativeSrc": "9498:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9498:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9491:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9491:6:17"
																},
																"nativeSrc": "9491:35:17",
																"nodeType": "YulFunctionCall",
																"src": "9491:35:17"
															},
															"nativeSrc": "9488:122:17",
															"nodeType": "YulIf",
															"src": "9488:122:17"
														},
														{
															"nativeSrc": "9619:30:17",
															"nodeType": "YulAssignment",
															"src": "9619:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9642:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9642:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9629:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "9629:12:17"
																},
																"nativeSrc": "9629:20:17",
																"nodeType": "YulFunctionCall",
																"src": "9629:20:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9619:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9619:6:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9692:83:17",
																"nodeType": "YulBlock",
																"src": "9692:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "9694:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9694:77:17"
																			},
																			"nativeSrc": "9694:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9694:79:17"
																		},
																		"nativeSrc": "9694:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9694:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9664:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9664:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9672:18:17",
																		"nodeType": "YulLiteral",
																		"src": "9672:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9661:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "9661:2:17"
																},
																"nativeSrc": "9661:30:17",
																"nodeType": "YulFunctionCall",
																"src": "9661:30:17"
															},
															"nativeSrc": "9658:117:17",
															"nodeType": "YulIf",
															"src": "9658:117:17"
														},
														{
															"nativeSrc": "9784:29:17",
															"nodeType": "YulAssignment",
															"src": "9784:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9800:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9800:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9808:4:17",
																		"nodeType": "YulLiteral",
																		"src": "9808:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9796:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9796:3:17"
																},
																"nativeSrc": "9796:17:17",
																"nodeType": "YulFunctionCall",
																"src": "9796:17:17"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "9784:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "9784:8:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9867:83:17",
																"nodeType": "YulBlock",
																"src": "9867:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9869:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9869:77:17"
																			},
																			"nativeSrc": "9869:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9869:79:17"
																		},
																		"nativeSrc": "9869:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9869:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "9832:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "9832:8:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "9846:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9854:4:17",
																						"nodeType": "YulLiteral",
																						"src": "9854:4:17",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9842:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9842:3:17"
																				},
																				"nativeSrc": "9842:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9842:17:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9828:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9828:3:17"
																		},
																		"nativeSrc": "9828:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9828:32:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9862:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "9862:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9825:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "9825:2:17"
																},
																"nativeSrc": "9825:41:17",
																"nodeType": "YulFunctionCall",
																"src": "9825:41:17"
															},
															"nativeSrc": "9822:128:17",
															"nodeType": "YulIf",
															"src": "9822:128:17"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "9388:568:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9445:6:17",
														"nodeType": "YulTypedName",
														"src": "9445:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9453:3:17",
														"nodeType": "YulTypedName",
														"src": "9453:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "9461:8:17",
														"nodeType": "YulTypedName",
														"src": "9461:8:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9471:6:17",
														"nodeType": "YulTypedName",
														"src": "9471:6:17",
														"type": ""
													}
												],
												"src": "9388:568:17"
											},
											{
												"body": {
													"nativeSrc": "10069:478:17",
													"nodeType": "YulBlock",
													"src": "10069:478:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10118:83:17",
																"nodeType": "YulBlock",
																"src": "10118:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10120:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10120:77:17"
																			},
																			"nativeSrc": "10120:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10120:79:17"
																		},
																		"nativeSrc": "10120:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10120:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10097:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10097:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10105:4:17",
																						"nodeType": "YulLiteral",
																						"src": "10105:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10093:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10093:3:17"
																				},
																				"nativeSrc": "10093:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10093:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10112:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "10112:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10089:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10089:3:17"
																		},
																		"nativeSrc": "10089:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10089:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10082:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10082:6:17"
																},
																"nativeSrc": "10082:35:17",
																"nodeType": "YulFunctionCall",
																"src": "10082:35:17"
															},
															"nativeSrc": "10079:122:17",
															"nodeType": "YulIf",
															"src": "10079:122:17"
														},
														{
															"nativeSrc": "10210:30:17",
															"nodeType": "YulAssignment",
															"src": "10210:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10233:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10233:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10220:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "10220:12:17"
																},
																"nativeSrc": "10220:20:17",
																"nodeType": "YulFunctionCall",
																"src": "10220:20:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10210:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10210:6:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10283:83:17",
																"nodeType": "YulBlock",
																"src": "10283:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "10285:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10285:77:17"
																			},
																			"nativeSrc": "10285:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10285:79:17"
																		},
																		"nativeSrc": "10285:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10285:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10255:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10255:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10263:18:17",
																		"nodeType": "YulLiteral",
																		"src": "10263:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10252:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "10252:2:17"
																},
																"nativeSrc": "10252:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10252:30:17"
															},
															"nativeSrc": "10249:117:17",
															"nodeType": "YulIf",
															"src": "10249:117:17"
														},
														{
															"nativeSrc": "10375:29:17",
															"nodeType": "YulAssignment",
															"src": "10375:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10391:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10391:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10399:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10399:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10387:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10387:3:17"
																},
																"nativeSrc": "10387:17:17",
																"nodeType": "YulFunctionCall",
																"src": "10387:17:17"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "10375:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "10375:8:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10458:83:17",
																"nodeType": "YulBlock",
																"src": "10458:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10460:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10460:77:17"
																			},
																			"nativeSrc": "10460:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10460:79:17"
																		},
																		"nativeSrc": "10460:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10460:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "10423:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "10423:8:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "10437:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10437:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10445:4:17",
																						"nodeType": "YulLiteral",
																						"src": "10445:4:17",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10433:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10433:3:17"
																				},
																				"nativeSrc": "10433:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10433:17:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10419:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10419:3:17"
																		},
																		"nativeSrc": "10419:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10419:32:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10453:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10453:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10416:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "10416:2:17"
																},
																"nativeSrc": "10416:41:17",
																"nodeType": "YulFunctionCall",
																"src": "10416:41:17"
															},
															"nativeSrc": "10413:128:17",
															"nodeType": "YulIf",
															"src": "10413:128:17"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "9979:568:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10036:6:17",
														"nodeType": "YulTypedName",
														"src": "10036:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10044:3:17",
														"nodeType": "YulTypedName",
														"src": "10044:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "10052:8:17",
														"nodeType": "YulTypedName",
														"src": "10052:8:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10062:6:17",
														"nodeType": "YulTypedName",
														"src": "10062:6:17",
														"type": ""
													}
												],
												"src": "9979:568:17"
											},
											{
												"body": {
													"nativeSrc": "10706:781:17",
													"nodeType": "YulBlock",
													"src": "10706:781:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10752:83:17",
																"nodeType": "YulBlock",
																"src": "10752:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10754:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10754:77:17"
																			},
																			"nativeSrc": "10754:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10754:79:17"
																		},
																		"nativeSrc": "10754:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10754:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10727:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "10727:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10736:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10736:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10723:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10723:3:17"
																		},
																		"nativeSrc": "10723:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10723:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10748:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10748:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10719:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10719:3:17"
																},
																"nativeSrc": "10719:32:17",
																"nodeType": "YulFunctionCall",
																"src": "10719:32:17"
															},
															"nativeSrc": "10716:119:17",
															"nodeType": "YulIf",
															"src": "10716:119:17"
														},
														{
															"nativeSrc": "10845:312:17",
															"nodeType": "YulBlock",
															"src": "10845:312:17",
															"statements": [
																{
																	"nativeSrc": "10860:45:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10860:45:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10891:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "10891:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10902:1:17",
																						"nodeType": "YulLiteral",
																						"src": "10902:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10887:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10887:3:17"
																				},
																				"nativeSrc": "10887:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10887:17:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10874:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "10874:12:17"
																		},
																		"nativeSrc": "10874:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10874:31:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10864:6:17",
																			"nodeType": "YulTypedName",
																			"src": "10864:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10952:83:17",
																		"nodeType": "YulBlock",
																		"src": "10952:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10954:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "10954:77:17"
																					},
																					"nativeSrc": "10954:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "10954:79:17"
																				},
																				"nativeSrc": "10954:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "10954:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10924:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10924:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10932:18:17",
																				"nodeType": "YulLiteral",
																				"src": "10932:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10921:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "10921:2:17"
																		},
																		"nativeSrc": "10921:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10921:30:17"
																	},
																	"nativeSrc": "10918:117:17",
																	"nodeType": "YulIf",
																	"src": "10918:117:17"
																},
																{
																	"nativeSrc": "11049:98:17",
																	"nodeType": "YulAssignment",
																	"src": "11049:98:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11119:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11119:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11130:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11130:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11115:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11115:3:17"
																				},
																				"nativeSrc": "11115:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11115:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11139:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11139:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "11067:47:17",
																			"nodeType": "YulIdentifier",
																			"src": "11067:47:17"
																		},
																		"nativeSrc": "11067:80:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11067:80:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11049:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11049:6:17"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "11057:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11057:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11167:313:17",
															"nodeType": "YulBlock",
															"src": "11167:313:17",
															"statements": [
																{
																	"nativeSrc": "11182:46:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11182:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11213:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11213:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11224:2:17",
																						"nodeType": "YulLiteral",
																						"src": "11224:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11209:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11209:3:17"
																				},
																				"nativeSrc": "11209:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11209:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11196:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "11196:12:17"
																		},
																		"nativeSrc": "11196:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11196:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11186:6:17",
																			"nodeType": "YulTypedName",
																			"src": "11186:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11275:83:17",
																		"nodeType": "YulBlock",
																		"src": "11275:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11277:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "11277:77:17"
																					},
																					"nativeSrc": "11277:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "11277:79:17"
																				},
																				"nativeSrc": "11277:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "11277:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11247:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11247:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11255:18:17",
																				"nodeType": "YulLiteral",
																				"src": "11255:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11244:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "11244:2:17"
																		},
																		"nativeSrc": "11244:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11244:30:17"
																	},
																	"nativeSrc": "11241:117:17",
																	"nodeType": "YulIf",
																	"src": "11241:117:17"
																},
																{
																	"nativeSrc": "11372:98:17",
																	"nodeType": "YulAssignment",
																	"src": "11372:98:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11442:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11442:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11453:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11453:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11438:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11438:3:17"
																				},
																				"nativeSrc": "11438:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11438:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11462:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11462:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "11390:47:17",
																			"nodeType": "YulIdentifier",
																			"src": "11390:47:17"
																		},
																		"nativeSrc": "11390:80:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11390:80:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11372:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11372:6:17"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "11380:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11380:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "10553:934:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10652:9:17",
														"nodeType": "YulTypedName",
														"src": "10652:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10663:7:17",
														"nodeType": "YulTypedName",
														"src": "10663:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10675:6:17",
														"nodeType": "YulTypedName",
														"src": "10675:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10683:6:17",
														"nodeType": "YulTypedName",
														"src": "10683:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10691:6:17",
														"nodeType": "YulTypedName",
														"src": "10691:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10699:6:17",
														"nodeType": "YulTypedName",
														"src": "10699:6:17",
														"type": ""
													}
												],
												"src": "10553:934:17"
											},
											{
												"body": {
													"nativeSrc": "11558:53:17",
													"nodeType": "YulBlock",
													"src": "11558:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11575:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11575:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11598:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "11598:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11580:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "11580:17:17"
																		},
																		"nativeSrc": "11580:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11580:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11568:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11568:6:17"
																},
																"nativeSrc": "11568:37:17",
																"nodeType": "YulFunctionCall",
																"src": "11568:37:17"
															},
															"nativeSrc": "11568:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "11568:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11493:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11546:5:17",
														"nodeType": "YulTypedName",
														"src": "11546:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11553:3:17",
														"nodeType": "YulTypedName",
														"src": "11553:3:17",
														"type": ""
													}
												],
												"src": "11493:118:17"
											},
											{
												"body": {
													"nativeSrc": "11715:124:17",
													"nodeType": "YulBlock",
													"src": "11715:124:17",
													"statements": [
														{
															"nativeSrc": "11725:26:17",
															"nodeType": "YulAssignment",
															"src": "11725:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11737:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11737:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11748:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11748:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11733:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11733:3:17"
																},
																"nativeSrc": "11733:18:17",
																"nodeType": "YulFunctionCall",
																"src": "11733:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11725:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11725:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11805:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11805:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11818:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11818:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11829:1:17",
																				"nodeType": "YulLiteral",
																				"src": "11829:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11814:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11814:3:17"
																		},
																		"nativeSrc": "11814:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11814:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11761:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "11761:43:17"
																},
																"nativeSrc": "11761:71:17",
																"nodeType": "YulFunctionCall",
																"src": "11761:71:17"
															},
															"nativeSrc": "11761:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "11761:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11617:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11687:9:17",
														"nodeType": "YulTypedName",
														"src": "11687:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11699:6:17",
														"nodeType": "YulTypedName",
														"src": "11699:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11710:4:17",
														"nodeType": "YulTypedName",
														"src": "11710:4:17",
														"type": ""
													}
												],
												"src": "11617:222:17"
											},
											{
												"body": {
													"nativeSrc": "11912:241:17",
													"nodeType": "YulBlock",
													"src": "11912:241:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "12017:22:17",
																"nodeType": "YulBlock",
																"src": "12017:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12019:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "12019:16:17"
																			},
																			"nativeSrc": "12019:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12019:18:17"
																		},
																		"nativeSrc": "12019:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12019:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11989:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11989:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11997:18:17",
																		"nodeType": "YulLiteral",
																		"src": "11997:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11986:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11986:2:17"
																},
																"nativeSrc": "11986:30:17",
																"nodeType": "YulFunctionCall",
																"src": "11986:30:17"
															},
															"nativeSrc": "11983:56:17",
															"nodeType": "YulIf",
															"src": "11983:56:17"
														},
														{
															"nativeSrc": "12049:37:17",
															"nodeType": "YulAssignment",
															"src": "12049:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12079:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12079:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "12057:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "12057:21:17"
																},
																"nativeSrc": "12057:29:17",
																"nodeType": "YulFunctionCall",
																"src": "12057:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12049:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12049:4:17"
																}
															]
														},
														{
															"nativeSrc": "12123:23:17",
															"nodeType": "YulAssignment",
															"src": "12123:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "12135:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "12135:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12141:4:17",
																		"nodeType": "YulLiteral",
																		"src": "12141:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12131:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12131:3:17"
																},
																"nativeSrc": "12131:15:17",
																"nodeType": "YulFunctionCall",
																"src": "12131:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12123:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12123:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "11845:308:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "11896:6:17",
														"nodeType": "YulTypedName",
														"src": "11896:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "11907:4:17",
														"nodeType": "YulTypedName",
														"src": "11907:4:17",
														"type": ""
													}
												],
												"src": "11845:308:17"
											},
											{
												"body": {
													"nativeSrc": "12243:341:17",
													"nodeType": "YulBlock",
													"src": "12243:341:17",
													"statements": [
														{
															"nativeSrc": "12253:75:17",
															"nodeType": "YulAssignment",
															"src": "12253:75:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12320:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12320:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "12278:41:17",
																			"nodeType": "YulIdentifier",
																			"src": "12278:41:17"
																		},
																		"nativeSrc": "12278:49:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12278:49:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12262:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "12262:15:17"
																},
																"nativeSrc": "12262:66:17",
																"nodeType": "YulFunctionCall",
																"src": "12262:66:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12253:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "12253:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12344:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "12344:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12351:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12351:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12337:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12337:6:17"
																},
																"nativeSrc": "12337:21:17",
																"nodeType": "YulFunctionCall",
																"src": "12337:21:17"
															},
															"nativeSrc": "12337:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "12337:21:17"
														},
														{
															"nativeSrc": "12367:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "12367:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12382:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "12382:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12389:4:17",
																		"nodeType": "YulLiteral",
																		"src": "12389:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12378:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12378:3:17"
																},
																"nativeSrc": "12378:16:17",
																"nodeType": "YulFunctionCall",
																"src": "12378:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12371:3:17",
																	"nodeType": "YulTypedName",
																	"src": "12371:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12432:83:17",
																"nodeType": "YulBlock",
																"src": "12432:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "12434:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "12434:77:17"
																			},
																			"nativeSrc": "12434:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12434:79:17"
																		},
																		"nativeSrc": "12434:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12434:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "12413:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "12413:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12418:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12418:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12409:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12409:3:17"
																		},
																		"nativeSrc": "12409:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12409:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12427:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12427:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12406:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "12406:2:17"
																},
																"nativeSrc": "12406:25:17",
																"nodeType": "YulFunctionCall",
																"src": "12406:25:17"
															},
															"nativeSrc": "12403:112:17",
															"nodeType": "YulIf",
															"src": "12403:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12561:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12561:3:17"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "12566:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12566:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12571:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12571:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "12524:36:17",
																	"nodeType": "YulIdentifier",
																	"src": "12524:36:17"
																},
																"nativeSrc": "12524:54:17",
																"nodeType": "YulFunctionCall",
																"src": "12524:54:17"
															},
															"nativeSrc": "12524:54:17",
															"nodeType": "YulExpressionStatement",
															"src": "12524:54:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "12159:425:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12216:3:17",
														"nodeType": "YulTypedName",
														"src": "12216:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12221:6:17",
														"nodeType": "YulTypedName",
														"src": "12221:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12229:3:17",
														"nodeType": "YulTypedName",
														"src": "12229:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12237:5:17",
														"nodeType": "YulTypedName",
														"src": "12237:5:17",
														"type": ""
													}
												],
												"src": "12159:425:17"
											},
											{
												"body": {
													"nativeSrc": "12666:278:17",
													"nodeType": "YulBlock",
													"src": "12666:278:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "12715:83:17",
																"nodeType": "YulBlock",
																"src": "12715:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12717:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "12717:77:17"
																			},
																			"nativeSrc": "12717:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12717:79:17"
																		},
																		"nativeSrc": "12717:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12717:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12694:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12694:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12702:4:17",
																						"nodeType": "YulLiteral",
																						"src": "12702:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12690:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12690:3:17"
																				},
																				"nativeSrc": "12690:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12690:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12709:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "12709:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12686:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12686:3:17"
																		},
																		"nativeSrc": "12686:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12686:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12679:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12679:6:17"
																},
																"nativeSrc": "12679:35:17",
																"nodeType": "YulFunctionCall",
																"src": "12679:35:17"
															},
															"nativeSrc": "12676:122:17",
															"nodeType": "YulIf",
															"src": "12676:122:17"
														},
														{
															"nativeSrc": "12807:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "12807:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12834:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12834:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12821:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "12821:12:17"
																},
																"nativeSrc": "12821:20:17",
																"nodeType": "YulFunctionCall",
																"src": "12821:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12811:6:17",
																	"nodeType": "YulTypedName",
																	"src": "12811:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12850:88:17",
															"nodeType": "YulAssignment",
															"src": "12850:88:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12911:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12911:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12919:4:17",
																				"nodeType": "YulLiteral",
																				"src": "12919:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12907:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12907:3:17"
																		},
																		"nativeSrc": "12907:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12907:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12926:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12926:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12934:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12934:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "12859:47:17",
																	"nodeType": "YulIdentifier",
																	"src": "12859:47:17"
																},
																"nativeSrc": "12859:79:17",
																"nodeType": "YulFunctionCall",
																"src": "12859:79:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12850:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "12850:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "12604:340:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12644:6:17",
														"nodeType": "YulTypedName",
														"src": "12644:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12652:3:17",
														"nodeType": "YulTypedName",
														"src": "12652:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12660:5:17",
														"nodeType": "YulTypedName",
														"src": "12660:5:17",
														"type": ""
													}
												],
												"src": "12604:340:17"
											},
											{
												"body": {
													"nativeSrc": "13070:859:17",
													"nodeType": "YulBlock",
													"src": "13070:859:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "13116:83:17",
																"nodeType": "YulBlock",
																"src": "13116:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13118:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "13118:77:17"
																			},
																			"nativeSrc": "13118:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13118:79:17"
																		},
																		"nativeSrc": "13118:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13118:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13091:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "13091:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13100:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13100:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13087:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13087:3:17"
																		},
																		"nativeSrc": "13087:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13087:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13112:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13112:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13083:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13083:3:17"
																},
																"nativeSrc": "13083:32:17",
																"nodeType": "YulFunctionCall",
																"src": "13083:32:17"
															},
															"nativeSrc": "13080:119:17",
															"nodeType": "YulIf",
															"src": "13080:119:17"
														},
														{
															"nativeSrc": "13209:287:17",
															"nodeType": "YulBlock",
															"src": "13209:287:17",
															"statements": [
																{
																	"nativeSrc": "13224:45:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13224:45:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13255:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "13255:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13266:1:17",
																						"nodeType": "YulLiteral",
																						"src": "13266:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13251:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13251:3:17"
																				},
																				"nativeSrc": "13251:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13251:17:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13238:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "13238:12:17"
																		},
																		"nativeSrc": "13238:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13238:31:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13228:6:17",
																			"nodeType": "YulTypedName",
																			"src": "13228:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13316:83:17",
																		"nodeType": "YulBlock",
																		"src": "13316:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13318:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "13318:77:17"
																					},
																					"nativeSrc": "13318:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "13318:79:17"
																				},
																				"nativeSrc": "13318:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "13318:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13288:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13288:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13296:18:17",
																				"nodeType": "YulLiteral",
																				"src": "13296:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13285:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "13285:2:17"
																		},
																		"nativeSrc": "13285:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13285:30:17"
																	},
																	"nativeSrc": "13282:117:17",
																	"nodeType": "YulIf",
																	"src": "13282:117:17"
																},
																{
																	"nativeSrc": "13413:73:17",
																	"nodeType": "YulAssignment",
																	"src": "13413:73:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13458:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "13458:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13469:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "13469:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13454:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13454:3:17"
																				},
																				"nativeSrc": "13454:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13454:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13478:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "13478:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "13423:30:17",
																			"nodeType": "YulIdentifier",
																			"src": "13423:30:17"
																		},
																		"nativeSrc": "13423:63:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13423:63:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13413:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "13413:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13506:288:17",
															"nodeType": "YulBlock",
															"src": "13506:288:17",
															"statements": [
																{
																	"nativeSrc": "13521:46:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13521:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13552:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "13552:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13563:2:17",
																						"nodeType": "YulLiteral",
																						"src": "13563:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13548:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13548:3:17"
																				},
																				"nativeSrc": "13548:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13548:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13535:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "13535:12:17"
																		},
																		"nativeSrc": "13535:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13535:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13525:6:17",
																			"nodeType": "YulTypedName",
																			"src": "13525:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13614:83:17",
																		"nodeType": "YulBlock",
																		"src": "13614:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13616:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "13616:77:17"
																					},
																					"nativeSrc": "13616:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "13616:79:17"
																				},
																				"nativeSrc": "13616:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "13616:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13586:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13586:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13594:18:17",
																				"nodeType": "YulLiteral",
																				"src": "13594:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13583:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "13583:2:17"
																		},
																		"nativeSrc": "13583:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13583:30:17"
																	},
																	"nativeSrc": "13580:117:17",
																	"nodeType": "YulIf",
																	"src": "13580:117:17"
																},
																{
																	"nativeSrc": "13711:73:17",
																	"nodeType": "YulAssignment",
																	"src": "13711:73:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13756:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "13756:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13767:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "13767:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13752:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13752:3:17"
																				},
																				"nativeSrc": "13752:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13752:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13776:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "13776:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "13721:30:17",
																			"nodeType": "YulIdentifier",
																			"src": "13721:30:17"
																		},
																		"nativeSrc": "13721:63:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13721:63:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13711:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "13711:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13804:118:17",
															"nodeType": "YulBlock",
															"src": "13804:118:17",
															"statements": [
																{
																	"nativeSrc": "13819:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13819:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13833:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13833:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13823:6:17",
																			"nodeType": "YulTypedName",
																			"src": "13823:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13849:63:17",
																	"nodeType": "YulAssignment",
																	"src": "13849:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13884:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "13884:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13895:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "13895:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13880:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13880:3:17"
																				},
																				"nativeSrc": "13880:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13880:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13904:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "13904:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13859:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "13859:20:17"
																		},
																		"nativeSrc": "13859:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13859:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13849:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "13849:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
												"nativeSrc": "12950:979:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13024:9:17",
														"nodeType": "YulTypedName",
														"src": "13024:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13035:7:17",
														"nodeType": "YulTypedName",
														"src": "13035:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13047:6:17",
														"nodeType": "YulTypedName",
														"src": "13047:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13055:6:17",
														"nodeType": "YulTypedName",
														"src": "13055:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13063:6:17",
														"nodeType": "YulTypedName",
														"src": "13063:6:17",
														"type": ""
													}
												],
												"src": "12950:979:17"
											},
											{
												"body": {
													"nativeSrc": "14018:391:17",
													"nodeType": "YulBlock",
													"src": "14018:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "14064:83:17",
																"nodeType": "YulBlock",
																"src": "14064:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14066:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "14066:77:17"
																			},
																			"nativeSrc": "14066:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14066:79:17"
																		},
																		"nativeSrc": "14066:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14066:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14039:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "14039:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14048:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14048:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14035:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14035:3:17"
																		},
																		"nativeSrc": "14035:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14035:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14060:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14060:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14031:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14031:3:17"
																},
																"nativeSrc": "14031:32:17",
																"nodeType": "YulFunctionCall",
																"src": "14031:32:17"
															},
															"nativeSrc": "14028:119:17",
															"nodeType": "YulIf",
															"src": "14028:119:17"
														},
														{
															"nativeSrc": "14157:117:17",
															"nodeType": "YulBlock",
															"src": "14157:117:17",
															"statements": [
																{
																	"nativeSrc": "14172:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14172:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14186:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14186:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14176:6:17",
																			"nodeType": "YulTypedName",
																			"src": "14176:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14201:63:17",
																	"nodeType": "YulAssignment",
																	"src": "14201:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14236:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "14236:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14247:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "14247:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14232:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "14232:3:17"
																				},
																				"nativeSrc": "14232:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "14232:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14256:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "14256:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14211:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "14211:20:17"
																		},
																		"nativeSrc": "14211:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14211:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14201:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "14201:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14284:118:17",
															"nodeType": "YulBlock",
															"src": "14284:118:17",
															"statements": [
																{
																	"nativeSrc": "14299:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14299:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14313:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14313:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14303:6:17",
																			"nodeType": "YulTypedName",
																			"src": "14303:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14329:63:17",
																	"nodeType": "YulAssignment",
																	"src": "14329:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14364:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "14364:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14375:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "14375:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14360:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "14360:3:17"
																				},
																				"nativeSrc": "14360:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "14360:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14384:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "14384:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14339:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "14339:20:17"
																		},
																		"nativeSrc": "14339:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14339:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14329:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "14329:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13935:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13980:9:17",
														"nodeType": "YulTypedName",
														"src": "13980:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13991:7:17",
														"nodeType": "YulTypedName",
														"src": "13991:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14003:6:17",
														"nodeType": "YulTypedName",
														"src": "14003:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14011:6:17",
														"nodeType": "YulTypedName",
														"src": "14011:6:17",
														"type": ""
													}
												],
												"src": "13935:474:17"
											},
											{
												"body": {
													"nativeSrc": "14443:152:17",
													"nodeType": "YulBlock",
													"src": "14443:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14460:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14460:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14463:77:17",
																		"nodeType": "YulLiteral",
																		"src": "14463:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14453:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14453:6:17"
																},
																"nativeSrc": "14453:88:17",
																"nodeType": "YulFunctionCall",
																"src": "14453:88:17"
															},
															"nativeSrc": "14453:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "14453:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14557:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14557:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14560:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14560:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14550:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14550:6:17"
																},
																"nativeSrc": "14550:15:17",
																"nodeType": "YulFunctionCall",
																"src": "14550:15:17"
															},
															"nativeSrc": "14550:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "14550:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14581:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14581:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14584:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14584:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14574:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14574:6:17"
																},
																"nativeSrc": "14574:15:17",
																"nodeType": "YulFunctionCall",
																"src": "14574:15:17"
															},
															"nativeSrc": "14574:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "14574:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "14415:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "14415:180:17"
											},
											{
												"body": {
													"nativeSrc": "14652:269:17",
													"nodeType": "YulBlock",
													"src": "14652:269:17",
													"statements": [
														{
															"nativeSrc": "14662:22:17",
															"nodeType": "YulAssignment",
															"src": "14662:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14676:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "14676:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14682:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14682:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14672:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14672:3:17"
																},
																"nativeSrc": "14672:12:17",
																"nodeType": "YulFunctionCall",
																"src": "14672:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14662:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14662:6:17"
																}
															]
														},
														{
															"nativeSrc": "14693:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14693:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14723:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "14723:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14729:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14729:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14719:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14719:3:17"
																},
																"nativeSrc": "14719:12:17",
																"nodeType": "YulFunctionCall",
																"src": "14719:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "14697:18:17",
																	"nodeType": "YulTypedName",
																	"src": "14697:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14770:51:17",
																"nodeType": "YulBlock",
																"src": "14770:51:17",
																"statements": [
																	{
																		"nativeSrc": "14784:27:17",
																		"nodeType": "YulAssignment",
																		"src": "14784:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14798:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "14798:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14806:4:17",
																					"nodeType": "YulLiteral",
																					"src": "14806:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14794:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "14794:3:17"
																			},
																			"nativeSrc": "14794:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14794:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14784:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14784:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14750:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "14750:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14743:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14743:6:17"
																},
																"nativeSrc": "14743:26:17",
																"nodeType": "YulFunctionCall",
																"src": "14743:26:17"
															},
															"nativeSrc": "14740:81:17",
															"nodeType": "YulIf",
															"src": "14740:81:17"
														},
														{
															"body": {
																"nativeSrc": "14873:42:17",
																"nodeType": "YulBlock",
																"src": "14873:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14887:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "14887:16:17"
																			},
																			"nativeSrc": "14887:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14887:18:17"
																		},
																		"nativeSrc": "14887:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14887:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14837:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "14837:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14860:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14860:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14868:2:17",
																				"nodeType": "YulLiteral",
																				"src": "14868:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14857:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "14857:2:17"
																		},
																		"nativeSrc": "14857:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14857:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14834:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "14834:2:17"
																},
																"nativeSrc": "14834:38:17",
																"nodeType": "YulFunctionCall",
																"src": "14834:38:17"
															},
															"nativeSrc": "14831:84:17",
															"nodeType": "YulIf",
															"src": "14831:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "14601:320:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14636:4:17",
														"nodeType": "YulTypedName",
														"src": "14636:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14645:6:17",
														"nodeType": "YulTypedName",
														"src": "14645:6:17",
														"type": ""
													}
												],
												"src": "14601:320:17"
											},
											{
												"body": {
													"nativeSrc": "15033:119:17",
													"nodeType": "YulBlock",
													"src": "15033:119:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15055:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15055:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15063:1:17",
																				"nodeType": "YulLiteral",
																				"src": "15063:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15051:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15051:3:17"
																		},
																		"nativeSrc": "15051:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15051:14:17"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b",
																		"kind": "string",
																		"nativeSrc": "15067:34:17",
																		"nodeType": "YulLiteral",
																		"src": "15067:34:17",
																		"type": "",
																		"value": "Transfer failed: Sender is black"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15044:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15044:6:17"
																},
																"nativeSrc": "15044:58:17",
																"nodeType": "YulFunctionCall",
																"src": "15044:58:17"
															},
															"nativeSrc": "15044:58:17",
															"nodeType": "YulExpressionStatement",
															"src": "15044:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15123:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15123:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15131:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15131:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15119:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15119:3:17"
																		},
																		"nativeSrc": "15119:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15119:15:17"
																	},
																	{
																		"hexValue": "6c6973746564",
																		"kind": "string",
																		"nativeSrc": "15136:8:17",
																		"nodeType": "YulLiteral",
																		"src": "15136:8:17",
																		"type": "",
																		"value": "listed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15112:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15112:6:17"
																},
																"nativeSrc": "15112:33:17",
																"nodeType": "YulFunctionCall",
																"src": "15112:33:17"
															},
															"nativeSrc": "15112:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "15112:33:17"
														}
													]
												},
												"name": "store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
												"nativeSrc": "14927:225:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15025:6:17",
														"nodeType": "YulTypedName",
														"src": "15025:6:17",
														"type": ""
													}
												],
												"src": "14927:225:17"
											},
											{
												"body": {
													"nativeSrc": "15304:220:17",
													"nodeType": "YulBlock",
													"src": "15304:220:17",
													"statements": [
														{
															"nativeSrc": "15314:74:17",
															"nodeType": "YulAssignment",
															"src": "15314:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15380:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15380:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15385:2:17",
																		"nodeType": "YulLiteral",
																		"src": "15385:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15321:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "15321:58:17"
																},
																"nativeSrc": "15321:67:17",
																"nodeType": "YulFunctionCall",
																"src": "15321:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15314:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15314:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15486:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15486:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																	"nativeSrc": "15397:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "15397:88:17"
																},
																"nativeSrc": "15397:93:17",
																"nodeType": "YulFunctionCall",
																"src": "15397:93:17"
															},
															"nativeSrc": "15397:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "15397:93:17"
														},
														{
															"nativeSrc": "15499:19:17",
															"nodeType": "YulAssignment",
															"src": "15499:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15510:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15510:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15515:2:17",
																		"nodeType": "YulLiteral",
																		"src": "15515:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15506:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15506:3:17"
																},
																"nativeSrc": "15506:12:17",
																"nodeType": "YulFunctionCall",
																"src": "15506:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15499:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15499:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15158:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15292:3:17",
														"nodeType": "YulTypedName",
														"src": "15292:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15300:3:17",
														"nodeType": "YulTypedName",
														"src": "15300:3:17",
														"type": ""
													}
												],
												"src": "15158:366:17"
											},
											{
												"body": {
													"nativeSrc": "15701:248:17",
													"nodeType": "YulBlock",
													"src": "15701:248:17",
													"statements": [
														{
															"nativeSrc": "15711:26:17",
															"nodeType": "YulAssignment",
															"src": "15711:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15723:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "15723:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15734:2:17",
																		"nodeType": "YulLiteral",
																		"src": "15734:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15719:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15719:3:17"
																},
																"nativeSrc": "15719:18:17",
																"nodeType": "YulFunctionCall",
																"src": "15719:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15711:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "15711:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15758:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "15758:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15769:1:17",
																				"nodeType": "YulLiteral",
																				"src": "15769:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15754:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15754:3:17"
																		},
																		"nativeSrc": "15754:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15754:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15777:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "15777:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15783:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "15783:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15773:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15773:3:17"
																		},
																		"nativeSrc": "15773:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15773:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15747:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15747:6:17"
																},
																"nativeSrc": "15747:47:17",
																"nodeType": "YulFunctionCall",
																"src": "15747:47:17"
															},
															"nativeSrc": "15747:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "15747:47:17"
														},
														{
															"nativeSrc": "15803:139:17",
															"nodeType": "YulAssignment",
															"src": "15803:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15937:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "15937:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15811:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "15811:124:17"
																},
																"nativeSrc": "15811:131:17",
																"nodeType": "YulFunctionCall",
																"src": "15811:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15803:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "15803:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15530:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15681:9:17",
														"nodeType": "YulTypedName",
														"src": "15681:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15696:4:17",
														"nodeType": "YulTypedName",
														"src": "15696:4:17",
														"type": ""
													}
												],
												"src": "15530:419:17"
											},
											{
												"body": {
													"nativeSrc": "16061:122:17",
													"nodeType": "YulBlock",
													"src": "16061:122:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16083:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "16083:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16091:1:17",
																				"nodeType": "YulLiteral",
																				"src": "16091:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16079:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16079:3:17"
																		},
																		"nativeSrc": "16079:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16079:14:17"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c",
																		"kind": "string",
																		"nativeSrc": "16095:34:17",
																		"nodeType": "YulLiteral",
																		"src": "16095:34:17",
																		"type": "",
																		"value": "Transfer failed: Recipient is bl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16072:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16072:6:17"
																},
																"nativeSrc": "16072:58:17",
																"nodeType": "YulFunctionCall",
																"src": "16072:58:17"
															},
															"nativeSrc": "16072:58:17",
															"nodeType": "YulExpressionStatement",
															"src": "16072:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16151:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "16151:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16159:2:17",
																				"nodeType": "YulLiteral",
																				"src": "16159:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16147:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16147:3:17"
																		},
																		"nativeSrc": "16147:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16147:15:17"
																	},
																	{
																		"hexValue": "61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "16164:11:17",
																		"nodeType": "YulLiteral",
																		"src": "16164:11:17",
																		"type": "",
																		"value": "acklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16140:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16140:6:17"
																},
																"nativeSrc": "16140:36:17",
																"nodeType": "YulFunctionCall",
																"src": "16140:36:17"
															},
															"nativeSrc": "16140:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "16140:36:17"
														}
													]
												},
												"name": "store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
												"nativeSrc": "15955:228:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16053:6:17",
														"nodeType": "YulTypedName",
														"src": "16053:6:17",
														"type": ""
													}
												],
												"src": "15955:228:17"
											},
											{
												"body": {
													"nativeSrc": "16335:220:17",
													"nodeType": "YulBlock",
													"src": "16335:220:17",
													"statements": [
														{
															"nativeSrc": "16345:74:17",
															"nodeType": "YulAssignment",
															"src": "16345:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16411:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16411:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16416:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16416:2:17",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16352:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "16352:58:17"
																},
																"nativeSrc": "16352:67:17",
																"nodeType": "YulFunctionCall",
																"src": "16352:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16345:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16345:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16517:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16517:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																	"nativeSrc": "16428:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "16428:88:17"
																},
																"nativeSrc": "16428:93:17",
																"nodeType": "YulFunctionCall",
																"src": "16428:93:17"
															},
															"nativeSrc": "16428:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "16428:93:17"
														},
														{
															"nativeSrc": "16530:19:17",
															"nodeType": "YulAssignment",
															"src": "16530:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16541:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16541:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16546:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16546:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16537:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16537:3:17"
																},
																"nativeSrc": "16537:12:17",
																"nodeType": "YulFunctionCall",
																"src": "16537:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16530:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16530:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16189:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16323:3:17",
														"nodeType": "YulTypedName",
														"src": "16323:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16331:3:17",
														"nodeType": "YulTypedName",
														"src": "16331:3:17",
														"type": ""
													}
												],
												"src": "16189:366:17"
											},
											{
												"body": {
													"nativeSrc": "16732:248:17",
													"nodeType": "YulBlock",
													"src": "16732:248:17",
													"statements": [
														{
															"nativeSrc": "16742:26:17",
															"nodeType": "YulAssignment",
															"src": "16742:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16754:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "16754:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16765:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16765:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16750:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16750:3:17"
																},
																"nativeSrc": "16750:18:17",
																"nodeType": "YulFunctionCall",
																"src": "16750:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16742:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16742:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16789:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16789:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16800:1:17",
																				"nodeType": "YulLiteral",
																				"src": "16800:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16785:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16785:3:17"
																		},
																		"nativeSrc": "16785:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16785:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16808:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "16808:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16814:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16814:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16804:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16804:3:17"
																		},
																		"nativeSrc": "16804:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16804:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16778:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16778:6:17"
																},
																"nativeSrc": "16778:47:17",
																"nodeType": "YulFunctionCall",
																"src": "16778:47:17"
															},
															"nativeSrc": "16778:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "16778:47:17"
														},
														{
															"nativeSrc": "16834:139:17",
															"nodeType": "YulAssignment",
															"src": "16834:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16968:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "16968:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16842:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "16842:124:17"
																},
																"nativeSrc": "16842:131:17",
																"nodeType": "YulFunctionCall",
																"src": "16842:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16834:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16834:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16561:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16712:9:17",
														"nodeType": "YulTypedName",
														"src": "16712:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16727:4:17",
														"nodeType": "YulTypedName",
														"src": "16727:4:17",
														"type": ""
													}
												],
												"src": "16561:419:17"
											},
											{
												"body": {
													"nativeSrc": "17092:115:17",
													"nodeType": "YulBlock",
													"src": "17092:115:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17114:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17114:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17122:1:17",
																				"nodeType": "YulLiteral",
																				"src": "17122:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17110:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17110:3:17"
																		},
																		"nativeSrc": "17110:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17110:14:17"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b",
																		"kind": "string",
																		"nativeSrc": "17126:34:17",
																		"nodeType": "YulLiteral",
																		"src": "17126:34:17",
																		"type": "",
																		"value": "Transfer failed: Tokens are lock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17103:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17103:6:17"
																},
																"nativeSrc": "17103:58:17",
																"nodeType": "YulFunctionCall",
																"src": "17103:58:17"
															},
															"nativeSrc": "17103:58:17",
															"nodeType": "YulExpressionStatement",
															"src": "17103:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17182:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17182:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17190:2:17",
																				"nodeType": "YulLiteral",
																				"src": "17190:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17178:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17178:3:17"
																		},
																		"nativeSrc": "17178:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17178:15:17"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "17195:4:17",
																		"nodeType": "YulLiteral",
																		"src": "17195:4:17",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17171:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17171:6:17"
																},
																"nativeSrc": "17171:29:17",
																"nodeType": "YulFunctionCall",
																"src": "17171:29:17"
															},
															"nativeSrc": "17171:29:17",
															"nodeType": "YulExpressionStatement",
															"src": "17171:29:17"
														}
													]
												},
												"name": "store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
												"nativeSrc": "16986:221:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17084:6:17",
														"nodeType": "YulTypedName",
														"src": "17084:6:17",
														"type": ""
													}
												],
												"src": "16986:221:17"
											},
											{
												"body": {
													"nativeSrc": "17359:220:17",
													"nodeType": "YulBlock",
													"src": "17359:220:17",
													"statements": [
														{
															"nativeSrc": "17369:74:17",
															"nodeType": "YulAssignment",
															"src": "17369:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17435:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17435:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17440:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17440:2:17",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17376:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "17376:58:17"
																},
																"nativeSrc": "17376:67:17",
																"nodeType": "YulFunctionCall",
																"src": "17376:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17369:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17369:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17541:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17541:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																	"nativeSrc": "17452:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "17452:88:17"
																},
																"nativeSrc": "17452:93:17",
																"nodeType": "YulFunctionCall",
																"src": "17452:93:17"
															},
															"nativeSrc": "17452:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "17452:93:17"
														},
														{
															"nativeSrc": "17554:19:17",
															"nodeType": "YulAssignment",
															"src": "17554:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17565:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17565:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17570:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17570:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17561:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17561:3:17"
																},
																"nativeSrc": "17561:12:17",
																"nodeType": "YulFunctionCall",
																"src": "17561:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17554:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17554:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17213:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17347:3:17",
														"nodeType": "YulTypedName",
														"src": "17347:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17355:3:17",
														"nodeType": "YulTypedName",
														"src": "17355:3:17",
														"type": ""
													}
												],
												"src": "17213:366:17"
											},
											{
												"body": {
													"nativeSrc": "17756:248:17",
													"nodeType": "YulBlock",
													"src": "17756:248:17",
													"statements": [
														{
															"nativeSrc": "17766:26:17",
															"nodeType": "YulAssignment",
															"src": "17766:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17778:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "17778:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17789:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17789:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17774:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17774:3:17"
																},
																"nativeSrc": "17774:18:17",
																"nodeType": "YulFunctionCall",
																"src": "17774:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17766:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17766:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17813:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17813:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17824:1:17",
																				"nodeType": "YulLiteral",
																				"src": "17824:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17809:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17809:3:17"
																		},
																		"nativeSrc": "17809:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17809:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17832:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "17832:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17838:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17838:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17828:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17828:3:17"
																		},
																		"nativeSrc": "17828:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17828:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17802:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17802:6:17"
																},
																"nativeSrc": "17802:47:17",
																"nodeType": "YulFunctionCall",
																"src": "17802:47:17"
															},
															"nativeSrc": "17802:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "17802:47:17"
														},
														{
															"nativeSrc": "17858:139:17",
															"nodeType": "YulAssignment",
															"src": "17858:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17992:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17992:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17866:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "17866:124:17"
																},
																"nativeSrc": "17866:131:17",
																"nodeType": "YulFunctionCall",
																"src": "17866:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17858:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17858:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17585:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17736:9:17",
														"nodeType": "YulTypedName",
														"src": "17736:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17751:4:17",
														"nodeType": "YulTypedName",
														"src": "17751:4:17",
														"type": ""
													}
												],
												"src": "17585:419:17"
											},
											{
												"body": {
													"nativeSrc": "18116:58:17",
													"nodeType": "YulBlock",
													"src": "18116:58:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18138:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "18138:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18146:1:17",
																				"nodeType": "YulLiteral",
																				"src": "18146:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18134:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18134:3:17"
																		},
																		"nativeSrc": "18134:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18134:14:17"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "18150:16:17",
																		"nodeType": "YulLiteral",
																		"src": "18150:16:17",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18127:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18127:6:17"
																},
																"nativeSrc": "18127:40:17",
																"nodeType": "YulFunctionCall",
																"src": "18127:40:17"
															},
															"nativeSrc": "18127:40:17",
															"nodeType": "YulExpressionStatement",
															"src": "18127:40:17"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nativeSrc": "18010:164:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18108:6:17",
														"nodeType": "YulTypedName",
														"src": "18108:6:17",
														"type": ""
													}
												],
												"src": "18010:164:17"
											},
											{
												"body": {
													"nativeSrc": "18326:220:17",
													"nodeType": "YulBlock",
													"src": "18326:220:17",
													"statements": [
														{
															"nativeSrc": "18336:74:17",
															"nodeType": "YulAssignment",
															"src": "18336:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18402:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18402:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18407:2:17",
																		"nodeType": "YulLiteral",
																		"src": "18407:2:17",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18343:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "18343:58:17"
																},
																"nativeSrc": "18343:67:17",
																"nodeType": "YulFunctionCall",
																"src": "18343:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18336:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18336:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18508:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18508:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nativeSrc": "18419:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "18419:88:17"
																},
																"nativeSrc": "18419:93:17",
																"nodeType": "YulFunctionCall",
																"src": "18419:93:17"
															},
															"nativeSrc": "18419:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "18419:93:17"
														},
														{
															"nativeSrc": "18521:19:17",
															"nodeType": "YulAssignment",
															"src": "18521:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18532:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18532:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18537:2:17",
																		"nodeType": "YulLiteral",
																		"src": "18537:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18528:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18528:3:17"
																},
																"nativeSrc": "18528:12:17",
																"nodeType": "YulFunctionCall",
																"src": "18528:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18521:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18521:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18180:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18314:3:17",
														"nodeType": "YulTypedName",
														"src": "18314:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18322:3:17",
														"nodeType": "YulTypedName",
														"src": "18322:3:17",
														"type": ""
													}
												],
												"src": "18180:366:17"
											},
											{
												"body": {
													"nativeSrc": "18723:248:17",
													"nodeType": "YulBlock",
													"src": "18723:248:17",
													"statements": [
														{
															"nativeSrc": "18733:26:17",
															"nodeType": "YulAssignment",
															"src": "18733:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18745:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "18745:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18756:2:17",
																		"nodeType": "YulLiteral",
																		"src": "18756:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18741:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18741:3:17"
																},
																"nativeSrc": "18741:18:17",
																"nodeType": "YulFunctionCall",
																"src": "18741:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18733:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "18733:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18780:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "18780:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18791:1:17",
																				"nodeType": "YulLiteral",
																				"src": "18791:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18776:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18776:3:17"
																		},
																		"nativeSrc": "18776:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18776:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18799:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "18799:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18805:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "18805:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18795:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18795:3:17"
																		},
																		"nativeSrc": "18795:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18795:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18769:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18769:6:17"
																},
																"nativeSrc": "18769:47:17",
																"nodeType": "YulFunctionCall",
																"src": "18769:47:17"
															},
															"nativeSrc": "18769:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "18769:47:17"
														},
														{
															"nativeSrc": "18825:139:17",
															"nodeType": "YulAssignment",
															"src": "18825:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18959:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "18959:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18833:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "18833:124:17"
																},
																"nativeSrc": "18833:131:17",
																"nodeType": "YulFunctionCall",
																"src": "18833:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18825:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "18825:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18552:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18703:9:17",
														"nodeType": "YulTypedName",
														"src": "18703:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18718:4:17",
														"nodeType": "YulTypedName",
														"src": "18718:4:17",
														"type": ""
													}
												],
												"src": "18552:419:17"
											},
											{
												"body": {
													"nativeSrc": "19083:120:17",
													"nodeType": "YulBlock",
													"src": "19083:120:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19105:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "19105:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19113:1:17",
																				"nodeType": "YulLiteral",
																				"src": "19113:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19101:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19101:3:17"
																		},
																		"nativeSrc": "19101:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19101:14:17"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a204d69736d617463686564",
																		"kind": "string",
																		"nativeSrc": "19117:34:17",
																		"nodeType": "YulLiteral",
																		"src": "19117:34:17",
																		"type": "",
																		"value": "BatchTransfer failed: Mismatched"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19094:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "19094:6:17"
																},
																"nativeSrc": "19094:58:17",
																"nodeType": "YulFunctionCall",
																"src": "19094:58:17"
															},
															"nativeSrc": "19094:58:17",
															"nodeType": "YulExpressionStatement",
															"src": "19094:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19173:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "19173:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19181:2:17",
																				"nodeType": "YulLiteral",
																				"src": "19181:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19169:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19169:3:17"
																		},
																		"nativeSrc": "19169:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19169:15:17"
																	},
																	{
																		"hexValue": "20617272617973",
																		"kind": "string",
																		"nativeSrc": "19186:9:17",
																		"nodeType": "YulLiteral",
																		"src": "19186:9:17",
																		"type": "",
																		"value": " arrays"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19162:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "19162:6:17"
																},
																"nativeSrc": "19162:34:17",
																"nodeType": "YulFunctionCall",
																"src": "19162:34:17"
															},
															"nativeSrc": "19162:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "19162:34:17"
														}
													]
												},
												"name": "store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
												"nativeSrc": "18977:226:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19075:6:17",
														"nodeType": "YulTypedName",
														"src": "19075:6:17",
														"type": ""
													}
												],
												"src": "18977:226:17"
											},
											{
												"body": {
													"nativeSrc": "19355:220:17",
													"nodeType": "YulBlock",
													"src": "19355:220:17",
													"statements": [
														{
															"nativeSrc": "19365:74:17",
															"nodeType": "YulAssignment",
															"src": "19365:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19431:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19431:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19436:2:17",
																		"nodeType": "YulLiteral",
																		"src": "19436:2:17",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19372:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "19372:58:17"
																},
																"nativeSrc": "19372:67:17",
																"nodeType": "YulFunctionCall",
																"src": "19372:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19365:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19365:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19537:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19537:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																	"nativeSrc": "19448:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "19448:88:17"
																},
																"nativeSrc": "19448:93:17",
																"nodeType": "YulFunctionCall",
																"src": "19448:93:17"
															},
															"nativeSrc": "19448:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "19448:93:17"
														},
														{
															"nativeSrc": "19550:19:17",
															"nodeType": "YulAssignment",
															"src": "19550:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19561:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19561:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19566:2:17",
																		"nodeType": "YulLiteral",
																		"src": "19566:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19557:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19557:3:17"
																},
																"nativeSrc": "19557:12:17",
																"nodeType": "YulFunctionCall",
																"src": "19557:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19550:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19550:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19209:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19343:3:17",
														"nodeType": "YulTypedName",
														"src": "19343:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19351:3:17",
														"nodeType": "YulTypedName",
														"src": "19351:3:17",
														"type": ""
													}
												],
												"src": "19209:366:17"
											},
											{
												"body": {
													"nativeSrc": "19752:248:17",
													"nodeType": "YulBlock",
													"src": "19752:248:17",
													"statements": [
														{
															"nativeSrc": "19762:26:17",
															"nodeType": "YulAssignment",
															"src": "19762:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19774:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "19774:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19785:2:17",
																		"nodeType": "YulLiteral",
																		"src": "19785:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19770:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19770:3:17"
																},
																"nativeSrc": "19770:18:17",
																"nodeType": "YulFunctionCall",
																"src": "19770:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19762:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "19762:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19809:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "19809:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19820:1:17",
																				"nodeType": "YulLiteral",
																				"src": "19820:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19805:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19805:3:17"
																		},
																		"nativeSrc": "19805:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19805:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19828:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "19828:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19834:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "19834:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19824:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19824:3:17"
																		},
																		"nativeSrc": "19824:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19824:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19798:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "19798:6:17"
																},
																"nativeSrc": "19798:47:17",
																"nodeType": "YulFunctionCall",
																"src": "19798:47:17"
															},
															"nativeSrc": "19798:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "19798:47:17"
														},
														{
															"nativeSrc": "19854:139:17",
															"nodeType": "YulAssignment",
															"src": "19854:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19988:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "19988:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19862:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "19862:124:17"
																},
																"nativeSrc": "19862:131:17",
																"nodeType": "YulFunctionCall",
																"src": "19862:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19854:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "19854:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19581:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19732:9:17",
														"nodeType": "YulTypedName",
														"src": "19732:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19747:4:17",
														"nodeType": "YulTypedName",
														"src": "19747:4:17",
														"type": ""
													}
												],
												"src": "19581:419:17"
											},
											{
												"body": {
													"nativeSrc": "20034:152:17",
													"nodeType": "YulBlock",
													"src": "20034:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20051:1:17",
																		"nodeType": "YulLiteral",
																		"src": "20051:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20054:77:17",
																		"nodeType": "YulLiteral",
																		"src": "20054:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20044:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20044:6:17"
																},
																"nativeSrc": "20044:88:17",
																"nodeType": "YulFunctionCall",
																"src": "20044:88:17"
															},
															"nativeSrc": "20044:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "20044:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20148:1:17",
																		"nodeType": "YulLiteral",
																		"src": "20148:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20151:4:17",
																		"nodeType": "YulLiteral",
																		"src": "20151:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20141:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20141:6:17"
																},
																"nativeSrc": "20141:15:17",
																"nodeType": "YulFunctionCall",
																"src": "20141:15:17"
															},
															"nativeSrc": "20141:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "20141:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20172:1:17",
																		"nodeType": "YulLiteral",
																		"src": "20172:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20175:4:17",
																		"nodeType": "YulLiteral",
																		"src": "20175:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20165:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20165:6:17"
																},
																"nativeSrc": "20165:15:17",
																"nodeType": "YulFunctionCall",
																"src": "20165:15:17"
															},
															"nativeSrc": "20165:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "20165:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "20006:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "20006:180:17"
											},
											{
												"body": {
													"nativeSrc": "20298:127:17",
													"nodeType": "YulBlock",
													"src": "20298:127:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20320:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "20320:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20328:1:17",
																				"nodeType": "YulLiteral",
																				"src": "20328:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20316:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20316:3:17"
																		},
																		"nativeSrc": "20316:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20316:14:17"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420",
																		"kind": "string",
																		"nativeSrc": "20332:34:17",
																		"nodeType": "YulLiteral",
																		"src": "20332:34:17",
																		"type": "",
																		"value": "BatchTransfer failed: Recipient "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20309:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20309:6:17"
																},
																"nativeSrc": "20309:58:17",
																"nodeType": "YulFunctionCall",
																"src": "20309:58:17"
															},
															"nativeSrc": "20309:58:17",
															"nodeType": "YulExpressionStatement",
															"src": "20309:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20388:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "20388:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20396:2:17",
																				"nodeType": "YulLiteral",
																				"src": "20396:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20384:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20384:3:17"
																		},
																		"nativeSrc": "20384:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20384:15:17"
																	},
																	{
																		"hexValue": "697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "20401:16:17",
																		"nodeType": "YulLiteral",
																		"src": "20401:16:17",
																		"type": "",
																		"value": "is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20377:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20377:6:17"
																},
																"nativeSrc": "20377:41:17",
																"nodeType": "YulFunctionCall",
																"src": "20377:41:17"
															},
															"nativeSrc": "20377:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "20377:41:17"
														}
													]
												},
												"name": "store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
												"nativeSrc": "20192:233:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20290:6:17",
														"nodeType": "YulTypedName",
														"src": "20290:6:17",
														"type": ""
													}
												],
												"src": "20192:233:17"
											},
											{
												"body": {
													"nativeSrc": "20577:220:17",
													"nodeType": "YulBlock",
													"src": "20577:220:17",
													"statements": [
														{
															"nativeSrc": "20587:74:17",
															"nodeType": "YulAssignment",
															"src": "20587:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20653:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20653:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20658:2:17",
																		"nodeType": "YulLiteral",
																		"src": "20658:2:17",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20594:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "20594:58:17"
																},
																"nativeSrc": "20594:67:17",
																"nodeType": "YulFunctionCall",
																"src": "20594:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20587:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20587:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20759:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20759:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																	"nativeSrc": "20670:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "20670:88:17"
																},
																"nativeSrc": "20670:93:17",
																"nodeType": "YulFunctionCall",
																"src": "20670:93:17"
															},
															"nativeSrc": "20670:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "20670:93:17"
														},
														{
															"nativeSrc": "20772:19:17",
															"nodeType": "YulAssignment",
															"src": "20772:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20783:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20783:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20788:2:17",
																		"nodeType": "YulLiteral",
																		"src": "20788:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20779:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20779:3:17"
																},
																"nativeSrc": "20779:12:17",
																"nodeType": "YulFunctionCall",
																"src": "20779:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20772:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20772:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20431:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20565:3:17",
														"nodeType": "YulTypedName",
														"src": "20565:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20573:3:17",
														"nodeType": "YulTypedName",
														"src": "20573:3:17",
														"type": ""
													}
												],
												"src": "20431:366:17"
											},
											{
												"body": {
													"nativeSrc": "20974:248:17",
													"nodeType": "YulBlock",
													"src": "20974:248:17",
													"statements": [
														{
															"nativeSrc": "20984:26:17",
															"nodeType": "YulAssignment",
															"src": "20984:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20996:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "20996:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21007:2:17",
																		"nodeType": "YulLiteral",
																		"src": "21007:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20992:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20992:3:17"
																},
																"nativeSrc": "20992:18:17",
																"nodeType": "YulFunctionCall",
																"src": "20992:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20984:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "20984:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21031:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "21031:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21042:1:17",
																				"nodeType": "YulLiteral",
																				"src": "21042:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21027:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "21027:3:17"
																		},
																		"nativeSrc": "21027:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21027:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21050:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "21050:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21056:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "21056:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21046:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "21046:3:17"
																		},
																		"nativeSrc": "21046:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21046:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21020:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21020:6:17"
																},
																"nativeSrc": "21020:47:17",
																"nodeType": "YulFunctionCall",
																"src": "21020:47:17"
															},
															"nativeSrc": "21020:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "21020:47:17"
														},
														{
															"nativeSrc": "21076:139:17",
															"nodeType": "YulAssignment",
															"src": "21076:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21210:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "21210:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21084:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "21084:124:17"
																},
																"nativeSrc": "21084:131:17",
																"nodeType": "YulFunctionCall",
																"src": "21084:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21076:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21076:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20803:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20954:9:17",
														"nodeType": "YulTypedName",
														"src": "20954:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20969:4:17",
														"nodeType": "YulTypedName",
														"src": "20969:4:17",
														"type": ""
													}
												],
												"src": "20803:419:17"
											},
											{
												"body": {
													"nativeSrc": "21281:32:17",
													"nodeType": "YulBlock",
													"src": "21281:32:17",
													"statements": [
														{
															"nativeSrc": "21291:16:17",
															"nodeType": "YulAssignment",
															"src": "21291:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "21302:5:17",
																"nodeType": "YulIdentifier",
																"src": "21302:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "21291:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "21291:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "21228:85:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21263:5:17",
														"nodeType": "YulTypedName",
														"src": "21263:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "21273:7:17",
														"nodeType": "YulTypedName",
														"src": "21273:7:17",
														"type": ""
													}
												],
												"src": "21228:85:17"
											},
											{
												"body": {
													"nativeSrc": "21363:57:17",
													"nodeType": "YulBlock",
													"src": "21363:57:17",
													"statements": [
														{
															"nativeSrc": "21373:41:17",
															"nodeType": "YulAssignment",
															"src": "21373:41:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21388:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "21388:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21395:18:17",
																		"nodeType": "YulLiteral",
																		"src": "21395:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21384:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21384:3:17"
																},
																"nativeSrc": "21384:30:17",
																"nodeType": "YulFunctionCall",
																"src": "21384:30:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "21373:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "21373:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "21319:101:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21345:5:17",
														"nodeType": "YulTypedName",
														"src": "21345:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "21355:7:17",
														"nodeType": "YulTypedName",
														"src": "21355:7:17",
														"type": ""
													}
												],
												"src": "21319:101:17"
											},
											{
												"body": {
													"nativeSrc": "21458:28:17",
													"nodeType": "YulBlock",
													"src": "21458:28:17",
													"statements": [
														{
															"nativeSrc": "21468:12:17",
															"nodeType": "YulAssignment",
															"src": "21468:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "21475:5:17",
																"nodeType": "YulIdentifier",
																"src": "21475:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21468:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21468:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "21426:60:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21444:5:17",
														"nodeType": "YulTypedName",
														"src": "21444:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21454:3:17",
														"nodeType": "YulTypedName",
														"src": "21454:3:17",
														"type": ""
													}
												],
												"src": "21426:60:17"
											},
											{
												"body": {
													"nativeSrc": "21559:89:17",
													"nodeType": "YulBlock",
													"src": "21559:89:17",
													"statements": [
														{
															"nativeSrc": "21569:73:17",
															"nodeType": "YulAssignment",
															"src": "21569:73:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21634:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "21634:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "21608:25:17",
																					"nodeType": "YulIdentifier",
																					"src": "21608:25:17"
																				},
																				"nativeSrc": "21608:32:17",
																				"nodeType": "YulFunctionCall",
																				"src": "21608:32:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "21599:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "21599:8:17"
																		},
																		"nativeSrc": "21599:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21599:42:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "21582:16:17",
																	"nodeType": "YulIdentifier",
																	"src": "21582:16:17"
																},
																"nativeSrc": "21582:60:17",
																"nodeType": "YulFunctionCall",
																"src": "21582:60:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "21569:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "21569:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "21492:156:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21539:5:17",
														"nodeType": "YulTypedName",
														"src": "21539:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "21549:9:17",
														"nodeType": "YulTypedName",
														"src": "21549:9:17",
														"type": ""
													}
												],
												"src": "21492:156:17"
											},
											{
												"body": {
													"nativeSrc": "21726:73:17",
													"nodeType": "YulBlock",
													"src": "21726:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21743:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21743:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21786:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "21786:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "21748:37:17",
																			"nodeType": "YulIdentifier",
																			"src": "21748:37:17"
																		},
																		"nativeSrc": "21748:44:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21748:44:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21736:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21736:6:17"
																},
																"nativeSrc": "21736:57:17",
																"nodeType": "YulFunctionCall",
																"src": "21736:57:17"
															},
															"nativeSrc": "21736:57:17",
															"nodeType": "YulExpressionStatement",
															"src": "21736:57:17"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "21654:145:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21714:5:17",
														"nodeType": "YulTypedName",
														"src": "21714:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21721:3:17",
														"nodeType": "YulTypedName",
														"src": "21721:3:17",
														"type": ""
													}
												],
												"src": "21654:145:17"
											},
											{
												"body": {
													"nativeSrc": "21910:131:17",
													"nodeType": "YulBlock",
													"src": "21910:131:17",
													"statements": [
														{
															"nativeSrc": "21920:26:17",
															"nodeType": "YulAssignment",
															"src": "21920:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21932:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "21932:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21943:2:17",
																		"nodeType": "YulLiteral",
																		"src": "21943:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21928:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21928:3:17"
																},
																"nativeSrc": "21928:18:17",
																"nodeType": "YulFunctionCall",
																"src": "21928:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21920:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21920:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22007:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22007:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22020:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22020:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22031:1:17",
																				"nodeType": "YulLiteral",
																				"src": "22031:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22016:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22016:3:17"
																		},
																		"nativeSrc": "22016:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22016:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "21956:50:17",
																	"nodeType": "YulIdentifier",
																	"src": "21956:50:17"
																},
																"nativeSrc": "21956:78:17",
																"nodeType": "YulFunctionCall",
																"src": "21956:78:17"
															},
															"nativeSrc": "21956:78:17",
															"nodeType": "YulExpressionStatement",
															"src": "21956:78:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "21805:236:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21882:9:17",
														"nodeType": "YulTypedName",
														"src": "21882:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21894:6:17",
														"nodeType": "YulTypedName",
														"src": "21894:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21905:4:17",
														"nodeType": "YulTypedName",
														"src": "21905:4:17",
														"type": ""
													}
												],
												"src": "21805:236:17"
											},
											{
												"body": {
													"nativeSrc": "22153:60:17",
													"nodeType": "YulBlock",
													"src": "22153:60:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22175:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "22175:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22183:1:17",
																				"nodeType": "YulLiteral",
																				"src": "22183:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22171:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22171:3:17"
																		},
																		"nativeSrc": "22171:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22171:14:17"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "22187:18:17",
																		"nodeType": "YulLiteral",
																		"src": "22187:18:17",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22164:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "22164:6:17"
																},
																"nativeSrc": "22164:42:17",
																"nodeType": "YulFunctionCall",
																"src": "22164:42:17"
															},
															"nativeSrc": "22164:42:17",
															"nodeType": "YulExpressionStatement",
															"src": "22164:42:17"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "22047:166:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22145:6:17",
														"nodeType": "YulTypedName",
														"src": "22145:6:17",
														"type": ""
													}
												],
												"src": "22047:166:17"
											},
											{
												"body": {
													"nativeSrc": "22365:220:17",
													"nodeType": "YulBlock",
													"src": "22365:220:17",
													"statements": [
														{
															"nativeSrc": "22375:74:17",
															"nodeType": "YulAssignment",
															"src": "22375:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22441:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "22441:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22446:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22446:2:17",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22382:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "22382:58:17"
																},
																"nativeSrc": "22382:67:17",
																"nodeType": "YulFunctionCall",
																"src": "22382:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22375:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22375:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22547:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "22547:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "22458:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "22458:88:17"
																},
																"nativeSrc": "22458:93:17",
																"nodeType": "YulFunctionCall",
																"src": "22458:93:17"
															},
															"nativeSrc": "22458:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "22458:93:17"
														},
														{
															"nativeSrc": "22560:19:17",
															"nodeType": "YulAssignment",
															"src": "22560:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22571:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "22571:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22576:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22576:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22567:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22567:3:17"
																},
																"nativeSrc": "22567:12:17",
																"nodeType": "YulFunctionCall",
																"src": "22567:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22560:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22560:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22219:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22353:3:17",
														"nodeType": "YulTypedName",
														"src": "22353:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22361:3:17",
														"nodeType": "YulTypedName",
														"src": "22361:3:17",
														"type": ""
													}
												],
												"src": "22219:366:17"
											},
											{
												"body": {
													"nativeSrc": "22762:248:17",
													"nodeType": "YulBlock",
													"src": "22762:248:17",
													"statements": [
														{
															"nativeSrc": "22772:26:17",
															"nodeType": "YulAssignment",
															"src": "22772:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22784:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "22784:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22795:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22795:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22780:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22780:3:17"
																},
																"nativeSrc": "22780:18:17",
																"nodeType": "YulFunctionCall",
																"src": "22780:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22772:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "22772:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22819:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22819:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22830:1:17",
																				"nodeType": "YulLiteral",
																				"src": "22830:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22815:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22815:3:17"
																		},
																		"nativeSrc": "22815:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22815:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22838:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "22838:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22844:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22844:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22834:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22834:3:17"
																		},
																		"nativeSrc": "22834:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22834:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22808:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "22808:6:17"
																},
																"nativeSrc": "22808:47:17",
																"nodeType": "YulFunctionCall",
																"src": "22808:47:17"
															},
															"nativeSrc": "22808:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "22808:47:17"
														},
														{
															"nativeSrc": "22864:139:17",
															"nodeType": "YulAssignment",
															"src": "22864:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22998:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "22998:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22872:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "22872:124:17"
																},
																"nativeSrc": "22872:131:17",
																"nodeType": "YulFunctionCall",
																"src": "22872:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22864:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "22864:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22591:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22742:9:17",
														"nodeType": "YulTypedName",
														"src": "22742:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22757:4:17",
														"nodeType": "YulTypedName",
														"src": "22757:4:17",
														"type": ""
													}
												],
												"src": "22591:419:17"
											},
											{
												"body": {
													"nativeSrc": "23059:79:17",
													"nodeType": "YulBlock",
													"src": "23059:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "23116:16:17",
																"nodeType": "YulBlock",
																"src": "23116:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23125:1:17",
																					"nodeType": "YulLiteral",
																					"src": "23125:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23128:1:17",
																					"nodeType": "YulLiteral",
																					"src": "23128:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "23118:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "23118:6:17"
																			},
																			"nativeSrc": "23118:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "23118:12:17"
																		},
																		"nativeSrc": "23118:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "23118:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23082:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "23082:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23107:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "23107:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "23089:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "23089:17:17"
																				},
																				"nativeSrc": "23089:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "23089:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "23079:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "23079:2:17"
																		},
																		"nativeSrc": "23079:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23079:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23072:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "23072:6:17"
																},
																"nativeSrc": "23072:43:17",
																"nodeType": "YulFunctionCall",
																"src": "23072:43:17"
															},
															"nativeSrc": "23069:63:17",
															"nodeType": "YulIf",
															"src": "23069:63:17"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "23016:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23052:5:17",
														"nodeType": "YulTypedName",
														"src": "23052:5:17",
														"type": ""
													}
												],
												"src": "23016:122:17"
											},
											{
												"body": {
													"nativeSrc": "23207:80:17",
													"nodeType": "YulBlock",
													"src": "23207:80:17",
													"statements": [
														{
															"nativeSrc": "23217:22:17",
															"nodeType": "YulAssignment",
															"src": "23217:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "23232:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23232:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23226:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "23226:5:17"
																},
																"nativeSrc": "23226:13:17",
																"nodeType": "YulFunctionCall",
																"src": "23226:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23217:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "23217:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23275:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "23275:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "23248:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "23248:26:17"
																},
																"nativeSrc": "23248:33:17",
																"nodeType": "YulFunctionCall",
																"src": "23248:33:17"
															},
															"nativeSrc": "23248:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "23248:33:17"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "23144:143:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23185:6:17",
														"nodeType": "YulTypedName",
														"src": "23185:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23193:3:17",
														"nodeType": "YulTypedName",
														"src": "23193:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "23201:5:17",
														"nodeType": "YulTypedName",
														"src": "23201:5:17",
														"type": ""
													}
												],
												"src": "23144:143:17"
											},
											{
												"body": {
													"nativeSrc": "23370:274:17",
													"nodeType": "YulBlock",
													"src": "23370:274:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "23416:83:17",
																"nodeType": "YulBlock",
																"src": "23416:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "23418:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "23418:77:17"
																			},
																			"nativeSrc": "23418:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "23418:79:17"
																		},
																		"nativeSrc": "23418:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "23418:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23391:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "23391:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23400:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "23400:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23387:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "23387:3:17"
																		},
																		"nativeSrc": "23387:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23387:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23412:2:17",
																		"nodeType": "YulLiteral",
																		"src": "23412:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "23383:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "23383:3:17"
																},
																"nativeSrc": "23383:32:17",
																"nodeType": "YulFunctionCall",
																"src": "23383:32:17"
															},
															"nativeSrc": "23380:119:17",
															"nodeType": "YulIf",
															"src": "23380:119:17"
														},
														{
															"nativeSrc": "23509:128:17",
															"nodeType": "YulBlock",
															"src": "23509:128:17",
															"statements": [
																{
																	"nativeSrc": "23524:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "23524:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23538:1:17",
																		"nodeType": "YulLiteral",
																		"src": "23538:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "23528:6:17",
																			"nodeType": "YulTypedName",
																			"src": "23528:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "23553:74:17",
																	"nodeType": "YulAssignment",
																	"src": "23553:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "23599:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "23599:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "23610:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "23610:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23595:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "23595:3:17"
																				},
																				"nativeSrc": "23595:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "23595:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23619:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "23619:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "23563:31:17",
																			"nodeType": "YulIdentifier",
																			"src": "23563:31:17"
																		},
																		"nativeSrc": "23563:64:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23563:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "23553:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "23553:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "23293:351:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23340:9:17",
														"nodeType": "YulTypedName",
														"src": "23340:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "23351:7:17",
														"nodeType": "YulTypedName",
														"src": "23351:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "23363:6:17",
														"nodeType": "YulTypedName",
														"src": "23363:6:17",
														"type": ""
													}
												],
												"src": "23293:351:17"
											},
											{
												"body": {
													"nativeSrc": "23804:288:17",
													"nodeType": "YulBlock",
													"src": "23804:288:17",
													"statements": [
														{
															"nativeSrc": "23814:26:17",
															"nodeType": "YulAssignment",
															"src": "23814:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23826:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "23826:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23837:2:17",
																		"nodeType": "YulLiteral",
																		"src": "23837:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23822:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "23822:3:17"
																},
																"nativeSrc": "23822:18:17",
																"nodeType": "YulFunctionCall",
																"src": "23822:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23814:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "23814:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23894:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23894:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23907:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "23907:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23918:1:17",
																				"nodeType": "YulLiteral",
																				"src": "23918:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23903:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "23903:3:17"
																		},
																		"nativeSrc": "23903:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23903:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23850:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "23850:43:17"
																},
																"nativeSrc": "23850:71:17",
																"nodeType": "YulFunctionCall",
																"src": "23850:71:17"
															},
															"nativeSrc": "23850:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "23850:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23975:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23975:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23988:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "23988:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23999:2:17",
																				"nodeType": "YulLiteral",
																				"src": "23999:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23984:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "23984:3:17"
																		},
																		"nativeSrc": "23984:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23984:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23931:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "23931:43:17"
																},
																"nativeSrc": "23931:72:17",
																"nodeType": "YulFunctionCall",
																"src": "23931:72:17"
															},
															"nativeSrc": "23931:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "23931:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24057:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "24057:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24070:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "24070:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24081:2:17",
																				"nodeType": "YulLiteral",
																				"src": "24081:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24066:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "24066:3:17"
																		},
																		"nativeSrc": "24066:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "24066:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24013:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "24013:43:17"
																},
																"nativeSrc": "24013:72:17",
																"nodeType": "YulFunctionCall",
																"src": "24013:72:17"
															},
															"nativeSrc": "24013:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "24013:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "23650:442:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23760:9:17",
														"nodeType": "YulTypedName",
														"src": "23760:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23772:6:17",
														"nodeType": "YulTypedName",
														"src": "23772:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23780:6:17",
														"nodeType": "YulTypedName",
														"src": "23780:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23788:6:17",
														"nodeType": "YulTypedName",
														"src": "23788:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23799:4:17",
														"nodeType": "YulTypedName",
														"src": "23799:4:17",
														"type": ""
													}
												],
												"src": "23650:442:17"
											},
											{
												"body": {
													"nativeSrc": "24204:64:17",
													"nodeType": "YulBlock",
													"src": "24204:64:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24226:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "24226:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24234:1:17",
																				"nodeType": "YulLiteral",
																				"src": "24234:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24222:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "24222:3:17"
																		},
																		"nativeSrc": "24222:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "24222:14:17"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "24238:22:17",
																		"nodeType": "YulLiteral",
																		"src": "24238:22:17",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24215:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "24215:6:17"
																},
																"nativeSrc": "24215:46:17",
																"nodeType": "YulFunctionCall",
																"src": "24215:46:17"
															},
															"nativeSrc": "24215:46:17",
															"nodeType": "YulExpressionStatement",
															"src": "24215:46:17"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "24098:170:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24196:6:17",
														"nodeType": "YulTypedName",
														"src": "24196:6:17",
														"type": ""
													}
												],
												"src": "24098:170:17"
											},
											{
												"body": {
													"nativeSrc": "24420:220:17",
													"nodeType": "YulBlock",
													"src": "24420:220:17",
													"statements": [
														{
															"nativeSrc": "24430:74:17",
															"nodeType": "YulAssignment",
															"src": "24430:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24496:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "24496:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24501:2:17",
																		"nodeType": "YulLiteral",
																		"src": "24501:2:17",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24437:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "24437:58:17"
																},
																"nativeSrc": "24437:67:17",
																"nodeType": "YulFunctionCall",
																"src": "24437:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24430:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24430:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24602:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "24602:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "24513:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "24513:88:17"
																},
																"nativeSrc": "24513:93:17",
																"nodeType": "YulFunctionCall",
																"src": "24513:93:17"
															},
															"nativeSrc": "24513:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "24513:93:17"
														},
														{
															"nativeSrc": "24615:19:17",
															"nodeType": "YulAssignment",
															"src": "24615:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24626:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "24626:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24631:2:17",
																		"nodeType": "YulLiteral",
																		"src": "24631:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24622:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24622:3:17"
																},
																"nativeSrc": "24622:12:17",
																"nodeType": "YulFunctionCall",
																"src": "24622:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24615:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24615:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24274:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24408:3:17",
														"nodeType": "YulTypedName",
														"src": "24408:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24416:3:17",
														"nodeType": "YulTypedName",
														"src": "24416:3:17",
														"type": ""
													}
												],
												"src": "24274:366:17"
											},
											{
												"body": {
													"nativeSrc": "24817:248:17",
													"nodeType": "YulBlock",
													"src": "24817:248:17",
													"statements": [
														{
															"nativeSrc": "24827:26:17",
															"nodeType": "YulAssignment",
															"src": "24827:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24839:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "24839:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24850:2:17",
																		"nodeType": "YulLiteral",
																		"src": "24850:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24835:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24835:3:17"
																},
																"nativeSrc": "24835:18:17",
																"nodeType": "YulFunctionCall",
																"src": "24835:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24827:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "24827:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24874:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "24874:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24885:1:17",
																				"nodeType": "YulLiteral",
																				"src": "24885:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24870:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "24870:3:17"
																		},
																		"nativeSrc": "24870:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "24870:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24893:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "24893:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24899:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "24899:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24889:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "24889:3:17"
																		},
																		"nativeSrc": "24889:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "24889:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24863:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "24863:6:17"
																},
																"nativeSrc": "24863:47:17",
																"nodeType": "YulFunctionCall",
																"src": "24863:47:17"
															},
															"nativeSrc": "24863:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "24863:47:17"
														},
														{
															"nativeSrc": "24919:139:17",
															"nodeType": "YulAssignment",
															"src": "24919:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25053:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "25053:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24927:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "24927:124:17"
																},
																"nativeSrc": "24927:131:17",
																"nodeType": "YulFunctionCall",
																"src": "24927:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24919:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "24919:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24646:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24797:9:17",
														"nodeType": "YulTypedName",
														"src": "24797:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24812:4:17",
														"nodeType": "YulTypedName",
														"src": "24812:4:17",
														"type": ""
													}
												],
												"src": "24646:419:17"
											},
											{
												"body": {
													"nativeSrc": "25099:152:17",
													"nodeType": "YulBlock",
													"src": "25099:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25116:1:17",
																		"nodeType": "YulLiteral",
																		"src": "25116:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25119:77:17",
																		"nodeType": "YulLiteral",
																		"src": "25119:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25109:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "25109:6:17"
																},
																"nativeSrc": "25109:88:17",
																"nodeType": "YulFunctionCall",
																"src": "25109:88:17"
															},
															"nativeSrc": "25109:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "25109:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25213:1:17",
																		"nodeType": "YulLiteral",
																		"src": "25213:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25216:4:17",
																		"nodeType": "YulLiteral",
																		"src": "25216:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25206:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "25206:6:17"
																},
																"nativeSrc": "25206:15:17",
																"nodeType": "YulFunctionCall",
																"src": "25206:15:17"
															},
															"nativeSrc": "25206:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "25206:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25237:1:17",
																		"nodeType": "YulLiteral",
																		"src": "25237:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25240:4:17",
																		"nodeType": "YulLiteral",
																		"src": "25240:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "25230:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "25230:6:17"
																},
																"nativeSrc": "25230:15:17",
																"nodeType": "YulFunctionCall",
																"src": "25230:15:17"
															},
															"nativeSrc": "25230:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "25230:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "25071:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "25071:180:17"
											},
											{
												"body": {
													"nativeSrc": "25301:147:17",
													"nodeType": "YulBlock",
													"src": "25301:147:17",
													"statements": [
														{
															"nativeSrc": "25311:25:17",
															"nodeType": "YulAssignment",
															"src": "25311:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25334:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "25334:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25316:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "25316:17:17"
																},
																"nativeSrc": "25316:20:17",
																"nodeType": "YulFunctionCall",
																"src": "25316:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "25311:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "25311:1:17"
																}
															]
														},
														{
															"nativeSrc": "25345:25:17",
															"nodeType": "YulAssignment",
															"src": "25345:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25368:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "25368:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25350:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "25350:17:17"
																},
																"nativeSrc": "25350:20:17",
																"nodeType": "YulFunctionCall",
																"src": "25350:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25345:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "25345:1:17"
																}
															]
														},
														{
															"nativeSrc": "25379:16:17",
															"nodeType": "YulAssignment",
															"src": "25379:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25390:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "25390:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25393:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "25393:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25386:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "25386:3:17"
																},
																"nativeSrc": "25386:9:17",
																"nodeType": "YulFunctionCall",
																"src": "25386:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "25379:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "25379:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25419:22:17",
																"nodeType": "YulBlock",
																"src": "25419:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "25421:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "25421:16:17"
																			},
																			"nativeSrc": "25421:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "25421:18:17"
																		},
																		"nativeSrc": "25421:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "25421:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25411:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "25411:1:17"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "25414:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "25414:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25408:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "25408:2:17"
																},
																"nativeSrc": "25408:10:17",
																"nodeType": "YulFunctionCall",
																"src": "25408:10:17"
															},
															"nativeSrc": "25405:36:17",
															"nodeType": "YulIf",
															"src": "25405:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "25257:191:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "25288:1:17",
														"nodeType": "YulTypedName",
														"src": "25288:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "25291:1:17",
														"nodeType": "YulTypedName",
														"src": "25291:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "25297:3:17",
														"nodeType": "YulTypedName",
														"src": "25297:3:17",
														"type": ""
													}
												],
												"src": "25257:191:17"
											},
											{
												"body": {
													"nativeSrc": "25508:87:17",
													"nodeType": "YulBlock",
													"src": "25508:87:17",
													"statements": [
														{
															"nativeSrc": "25518:11:17",
															"nodeType": "YulAssignment",
															"src": "25518:11:17",
															"value": {
																"name": "ptr",
																"nativeSrc": "25526:3:17",
																"nodeType": "YulIdentifier",
																"src": "25526:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "25518:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "25518:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25546:1:17",
																		"nodeType": "YulLiteral",
																		"src": "25546:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "25549:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "25549:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25539:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "25539:6:17"
																},
																"nativeSrc": "25539:14:17",
																"nodeType": "YulFunctionCall",
																"src": "25539:14:17"
															},
															"nativeSrc": "25539:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "25539:14:17"
														},
														{
															"nativeSrc": "25562:26:17",
															"nodeType": "YulAssignment",
															"src": "25562:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25580:1:17",
																		"nodeType": "YulLiteral",
																		"src": "25580:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25583:4:17",
																		"nodeType": "YulLiteral",
																		"src": "25583:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "25570:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "25570:9:17"
																},
																"nativeSrc": "25570:18:17",
																"nodeType": "YulFunctionCall",
																"src": "25570:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "25562:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "25562:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "25454:141:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "25495:3:17",
														"nodeType": "YulTypedName",
														"src": "25495:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "25503:4:17",
														"nodeType": "YulTypedName",
														"src": "25503:4:17",
														"type": ""
													}
												],
												"src": "25454:141:17"
											},
											{
												"body": {
													"nativeSrc": "25645:49:17",
													"nodeType": "YulBlock",
													"src": "25645:49:17",
													"statements": [
														{
															"nativeSrc": "25655:33:17",
															"nodeType": "YulAssignment",
															"src": "25655:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25673:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "25673:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25680:2:17",
																				"nodeType": "YulLiteral",
																				"src": "25680:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25669:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "25669:3:17"
																		},
																		"nativeSrc": "25669:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "25669:14:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25685:2:17",
																		"nodeType": "YulLiteral",
																		"src": "25685:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "25665:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "25665:3:17"
																},
																"nativeSrc": "25665:23:17",
																"nodeType": "YulFunctionCall",
																"src": "25665:23:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "25655:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "25655:6:17"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "25601:93:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25628:5:17",
														"nodeType": "YulTypedName",
														"src": "25628:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "25638:6:17",
														"nodeType": "YulTypedName",
														"src": "25638:6:17",
														"type": ""
													}
												],
												"src": "25601:93:17"
											},
											{
												"body": {
													"nativeSrc": "25753:54:17",
													"nodeType": "YulBlock",
													"src": "25753:54:17",
													"statements": [
														{
															"nativeSrc": "25763:37:17",
															"nodeType": "YulAssignment",
															"src": "25763:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "25788:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "25788:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "25794:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "25794:5:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "25784:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "25784:3:17"
																},
																"nativeSrc": "25784:16:17",
																"nodeType": "YulFunctionCall",
																"src": "25784:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "25763:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "25763:8:17"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "25700:107:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "25728:4:17",
														"nodeType": "YulTypedName",
														"src": "25728:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "25734:5:17",
														"nodeType": "YulTypedName",
														"src": "25734:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "25744:8:17",
														"nodeType": "YulTypedName",
														"src": "25744:8:17",
														"type": ""
													}
												],
												"src": "25700:107:17"
											},
											{
												"body": {
													"nativeSrc": "25889:317:17",
													"nodeType": "YulBlock",
													"src": "25889:317:17",
													"statements": [
														{
															"nativeSrc": "25899:35:17",
															"nodeType": "YulVariableDeclaration",
															"src": "25899:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "25920:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "25920:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25932:1:17",
																		"nodeType": "YulLiteral",
																		"src": "25932:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "25916:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "25916:3:17"
																},
																"nativeSrc": "25916:18:17",
																"nodeType": "YulFunctionCall",
																"src": "25916:18:17"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "25903:9:17",
																	"nodeType": "YulTypedName",
																	"src": "25903:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25943:109:17",
															"nodeType": "YulVariableDeclaration",
															"src": "25943:109:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "25974:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "25974:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25985:66:17",
																		"nodeType": "YulLiteral",
																		"src": "25985:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "25955:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "25955:18:17"
																},
																"nativeSrc": "25955:97:17",
																"nodeType": "YulFunctionCall",
																"src": "25955:97:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "25947:4:17",
																	"nodeType": "YulTypedName",
																	"src": "25947:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26061:51:17",
															"nodeType": "YulAssignment",
															"src": "26061:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "26092:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "26092:9:17"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "26103:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "26103:8:17"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "26073:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "26073:18:17"
																},
																"nativeSrc": "26073:39:17",
																"nodeType": "YulFunctionCall",
																"src": "26073:39:17"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "26061:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "26061:8:17"
																}
															]
														},
														{
															"nativeSrc": "26121:30:17",
															"nodeType": "YulAssignment",
															"src": "26121:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26134:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "26134:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "26145:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "26145:4:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "26141:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "26141:3:17"
																		},
																		"nativeSrc": "26141:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "26141:9:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "26130:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "26130:3:17"
																},
																"nativeSrc": "26130:21:17",
																"nodeType": "YulFunctionCall",
																"src": "26130:21:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "26121:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "26121:5:17"
																}
															]
														},
														{
															"nativeSrc": "26160:40:17",
															"nodeType": "YulAssignment",
															"src": "26160:40:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26173:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "26173:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "26184:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "26184:8:17"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "26194:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "26194:4:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "26180:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "26180:3:17"
																		},
																		"nativeSrc": "26180:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "26180:19:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "26170:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "26170:2:17"
																},
																"nativeSrc": "26170:30:17",
																"nodeType": "YulFunctionCall",
																"src": "26170:30:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "26160:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "26160:6:17"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "25813:393:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25850:5:17",
														"nodeType": "YulTypedName",
														"src": "25850:5:17",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "25857:10:17",
														"nodeType": "YulTypedName",
														"src": "25857:10:17",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "25869:8:17",
														"nodeType": "YulTypedName",
														"src": "25869:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "25882:6:17",
														"nodeType": "YulTypedName",
														"src": "25882:6:17",
														"type": ""
													}
												],
												"src": "25813:393:17"
											},
											{
												"body": {
													"nativeSrc": "26272:82:17",
													"nodeType": "YulBlock",
													"src": "26272:82:17",
													"statements": [
														{
															"nativeSrc": "26282:66:17",
															"nodeType": "YulAssignment",
															"src": "26282:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "26340:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "26340:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "26322:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "26322:17:17"
																				},
																				"nativeSrc": "26322:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "26322:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "26313:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "26313:8:17"
																		},
																		"nativeSrc": "26313:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "26313:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "26295:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "26295:17:17"
																},
																"nativeSrc": "26295:53:17",
																"nodeType": "YulFunctionCall",
																"src": "26295:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "26282:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "26282:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "26212:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26252:5:17",
														"nodeType": "YulTypedName",
														"src": "26252:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "26262:9:17",
														"nodeType": "YulTypedName",
														"src": "26262:9:17",
														"type": ""
													}
												],
												"src": "26212:142:17"
											},
											{
												"body": {
													"nativeSrc": "26407:28:17",
													"nodeType": "YulBlock",
													"src": "26407:28:17",
													"statements": [
														{
															"nativeSrc": "26417:12:17",
															"nodeType": "YulAssignment",
															"src": "26417:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "26424:5:17",
																"nodeType": "YulIdentifier",
																"src": "26424:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "26417:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "26417:3:17"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "26360:75:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26393:5:17",
														"nodeType": "YulTypedName",
														"src": "26393:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "26403:3:17",
														"nodeType": "YulTypedName",
														"src": "26403:3:17",
														"type": ""
													}
												],
												"src": "26360:75:17"
											},
											{
												"body": {
													"nativeSrc": "26517:193:17",
													"nodeType": "YulBlock",
													"src": "26517:193:17",
													"statements": [
														{
															"nativeSrc": "26527:63:17",
															"nodeType": "YulVariableDeclaration",
															"src": "26527:63:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "26582:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "26582:7:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "26551:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "26551:30:17"
																},
																"nativeSrc": "26551:39:17",
																"nodeType": "YulFunctionCall",
																"src": "26551:39:17"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "26531:16:17",
																	"nodeType": "YulTypedName",
																	"src": "26531:16:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "26606:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "26606:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "26646:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "26646:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "26640:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "26640:5:17"
																				},
																				"nativeSrc": "26640:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "26640:11:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "26653:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "26653:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "26685:16:17",
																						"nodeType": "YulIdentifier",
																						"src": "26685:16:17"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "26661:23:17",
																					"nodeType": "YulIdentifier",
																					"src": "26661:23:17"
																				},
																				"nativeSrc": "26661:41:17",
																				"nodeType": "YulFunctionCall",
																				"src": "26661:41:17"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "26612:27:17",
																			"nodeType": "YulIdentifier",
																			"src": "26612:27:17"
																		},
																		"nativeSrc": "26612:91:17",
																		"nodeType": "YulFunctionCall",
																		"src": "26612:91:17"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "26599:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "26599:6:17"
																},
																"nativeSrc": "26599:105:17",
																"nodeType": "YulFunctionCall",
																"src": "26599:105:17"
															},
															"nativeSrc": "26599:105:17",
															"nodeType": "YulExpressionStatement",
															"src": "26599:105:17"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "26441:269:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "26494:4:17",
														"nodeType": "YulTypedName",
														"src": "26494:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "26500:6:17",
														"nodeType": "YulTypedName",
														"src": "26500:6:17",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "26508:7:17",
														"nodeType": "YulTypedName",
														"src": "26508:7:17",
														"type": ""
													}
												],
												"src": "26441:269:17"
											},
											{
												"body": {
													"nativeSrc": "26765:24:17",
													"nodeType": "YulBlock",
													"src": "26765:24:17",
													"statements": [
														{
															"nativeSrc": "26775:8:17",
															"nodeType": "YulAssignment",
															"src": "26775:8:17",
															"value": {
																"kind": "number",
																"nativeSrc": "26782:1:17",
																"nodeType": "YulLiteral",
																"src": "26782:1:17",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "26775:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "26775:3:17"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "26716:73:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "26761:3:17",
														"nodeType": "YulTypedName",
														"src": "26761:3:17",
														"type": ""
													}
												],
												"src": "26716:73:17"
											},
											{
												"body": {
													"nativeSrc": "26848:136:17",
													"nodeType": "YulBlock",
													"src": "26848:136:17",
													"statements": [
														{
															"nativeSrc": "26858:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "26858:46:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "26872:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "26872:30:17"
																},
																"nativeSrc": "26872:32:17",
																"nodeType": "YulFunctionCall",
																"src": "26872:32:17"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "26862:6:17",
																	"nodeType": "YulTypedName",
																	"src": "26862:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "26957:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "26957:4:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "26963:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "26963:6:17"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "26971:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "26971:6:17"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "26913:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "26913:43:17"
																},
																"nativeSrc": "26913:65:17",
																"nodeType": "YulFunctionCall",
																"src": "26913:65:17"
															},
															"nativeSrc": "26913:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "26913:65:17"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "26795:189:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "26834:4:17",
														"nodeType": "YulTypedName",
														"src": "26834:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "26840:6:17",
														"nodeType": "YulTypedName",
														"src": "26840:6:17",
														"type": ""
													}
												],
												"src": "26795:189:17"
											},
											{
												"body": {
													"nativeSrc": "27040:136:17",
													"nodeType": "YulBlock",
													"src": "27040:136:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "27107:63:17",
																"nodeType": "YulBlock",
																"src": "27107:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "27151:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "27151:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "27158:1:17",
																					"nodeType": "YulLiteral",
																					"src": "27158:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "27121:29:17",
																				"nodeType": "YulIdentifier",
																				"src": "27121:29:17"
																			},
																			"nativeSrc": "27121:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "27121:39:17"
																		},
																		"nativeSrc": "27121:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "27121:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "27060:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "27060:5:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "27067:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "27067:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "27057:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "27057:2:17"
																},
																"nativeSrc": "27057:14:17",
																"nodeType": "YulFunctionCall",
																"src": "27057:14:17"
															},
															"nativeSrc": "27050:120:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "27072:26:17",
																"nodeType": "YulBlock",
																"src": "27072:26:17",
																"statements": [
																	{
																		"nativeSrc": "27074:22:17",
																		"nodeType": "YulAssignment",
																		"src": "27074:22:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "27087:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "27087:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "27094:1:17",
																					"nodeType": "YulLiteral",
																					"src": "27094:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "27083:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "27083:3:17"
																			},
																			"nativeSrc": "27083:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "27083:13:17"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "27074:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "27074:5:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "27054:2:17",
																"nodeType": "YulBlock",
																"src": "27054:2:17",
																"statements": []
															},
															"src": "27050:120:17"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "26990:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "27028:5:17",
														"nodeType": "YulTypedName",
														"src": "27028:5:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "27035:3:17",
														"nodeType": "YulTypedName",
														"src": "27035:3:17",
														"type": ""
													}
												],
												"src": "26990:186:17"
											},
											{
												"body": {
													"nativeSrc": "27261:464:17",
													"nodeType": "YulBlock",
													"src": "27261:464:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "27287:431:17",
																"nodeType": "YulBlock",
																"src": "27287:431:17",
																"statements": [
																	{
																		"nativeSrc": "27301:54:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "27301:54:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "27349:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "27349:5:17"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "27317:31:17",
																				"nodeType": "YulIdentifier",
																				"src": "27317:31:17"
																			},
																			"nativeSrc": "27317:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "27317:38:17"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "27305:8:17",
																				"nodeType": "YulTypedName",
																				"src": "27305:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "27368:63:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "27368:63:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "27391:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "27391:8:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "27419:10:17",
																							"nodeType": "YulIdentifier",
																							"src": "27419:10:17"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "27401:17:17",
																						"nodeType": "YulIdentifier",
																						"src": "27401:17:17"
																					},
																					"nativeSrc": "27401:29:17",
																					"nodeType": "YulFunctionCall",
																					"src": "27401:29:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "27387:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "27387:3:17"
																			},
																			"nativeSrc": "27387:44:17",
																			"nodeType": "YulFunctionCall",
																			"src": "27387:44:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "27372:11:17",
																				"nodeType": "YulTypedName",
																				"src": "27372:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "27588:27:17",
																			"nodeType": "YulBlock",
																			"src": "27588:27:17",
																			"statements": [
																				{
																					"nativeSrc": "27590:23:17",
																					"nodeType": "YulAssignment",
																					"src": "27590:23:17",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "27605:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "27605:8:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "27590:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "27590:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "27572:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "27572:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "27584:2:17",
																					"nodeType": "YulLiteral",
																					"src": "27584:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "27569:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "27569:2:17"
																			},
																			"nativeSrc": "27569:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "27569:18:17"
																		},
																		"nativeSrc": "27566:49:17",
																		"nodeType": "YulIf",
																		"src": "27566:49:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "27657:11:17",
																					"nodeType": "YulIdentifier",
																					"src": "27657:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "27674:8:17",
																							"nodeType": "YulIdentifier",
																							"src": "27674:8:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "27702:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "27702:3:17"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "27684:17:17",
																								"nodeType": "YulIdentifier",
																								"src": "27684:17:17"
																							},
																							"nativeSrc": "27684:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "27684:22:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "27670:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "27670:3:17"
																					},
																					"nativeSrc": "27670:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "27670:37:17"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "27628:28:17",
																				"nodeType": "YulIdentifier",
																				"src": "27628:28:17"
																			},
																			"nativeSrc": "27628:80:17",
																			"nodeType": "YulFunctionCall",
																			"src": "27628:80:17"
																		},
																		"nativeSrc": "27628:80:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "27628:80:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "27278:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "27278:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27283:2:17",
																		"nodeType": "YulLiteral",
																		"src": "27283:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27275:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "27275:2:17"
																},
																"nativeSrc": "27275:11:17",
																"nodeType": "YulFunctionCall",
																"src": "27275:11:17"
															},
															"nativeSrc": "27272:446:17",
															"nodeType": "YulIf",
															"src": "27272:446:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "27182:543:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "27237:5:17",
														"nodeType": "YulTypedName",
														"src": "27237:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "27244:3:17",
														"nodeType": "YulTypedName",
														"src": "27244:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "27249:10:17",
														"nodeType": "YulTypedName",
														"src": "27249:10:17",
														"type": ""
													}
												],
												"src": "27182:543:17"
											},
											{
												"body": {
													"nativeSrc": "27794:54:17",
													"nodeType": "YulBlock",
													"src": "27794:54:17",
													"statements": [
														{
															"nativeSrc": "27804:37:17",
															"nodeType": "YulAssignment",
															"src": "27804:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "27829:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "27829:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "27835:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "27835:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "27825:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "27825:3:17"
																},
																"nativeSrc": "27825:16:17",
																"nodeType": "YulFunctionCall",
																"src": "27825:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "27804:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "27804:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "27731:117:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "27769:4:17",
														"nodeType": "YulTypedName",
														"src": "27769:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "27775:5:17",
														"nodeType": "YulTypedName",
														"src": "27775:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "27785:8:17",
														"nodeType": "YulTypedName",
														"src": "27785:8:17",
														"type": ""
													}
												],
												"src": "27731:117:17"
											},
											{
												"body": {
													"nativeSrc": "27905:118:17",
													"nodeType": "YulBlock",
													"src": "27905:118:17",
													"statements": [
														{
															"nativeSrc": "27915:68:17",
															"nodeType": "YulVariableDeclaration",
															"src": "27915:68:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "27964:1:17",
																						"nodeType": "YulLiteral",
																						"src": "27964:1:17",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "27967:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "27967:5:17"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "27960:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "27960:3:17"
																				},
																				"nativeSrc": "27960:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "27960:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "27979:1:17",
																						"nodeType": "YulLiteral",
																						"src": "27979:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "27975:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "27975:3:17"
																				},
																				"nativeSrc": "27975:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "27975:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "27931:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "27931:28:17"
																		},
																		"nativeSrc": "27931:51:17",
																		"nodeType": "YulFunctionCall",
																		"src": "27931:51:17"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "27927:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "27927:3:17"
																},
																"nativeSrc": "27927:56:17",
																"nodeType": "YulFunctionCall",
																"src": "27927:56:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "27919:4:17",
																	"nodeType": "YulTypedName",
																	"src": "27919:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27992:25:17",
															"nodeType": "YulAssignment",
															"src": "27992:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "28006:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "28006:4:17"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "28012:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "28012:4:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "28002:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "28002:3:17"
																},
																"nativeSrc": "28002:15:17",
																"nodeType": "YulFunctionCall",
																"src": "28002:15:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "27992:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "27992:6:17"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "27854:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "27882:4:17",
														"nodeType": "YulTypedName",
														"src": "27882:4:17",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "27888:5:17",
														"nodeType": "YulTypedName",
														"src": "27888:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "27898:6:17",
														"nodeType": "YulTypedName",
														"src": "27898:6:17",
														"type": ""
													}
												],
												"src": "27854:169:17"
											},
											{
												"body": {
													"nativeSrc": "28109:214:17",
													"nodeType": "YulBlock",
													"src": "28109:214:17",
													"statements": [
														{
															"nativeSrc": "28242:37:17",
															"nodeType": "YulAssignment",
															"src": "28242:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "28269:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "28269:4:17"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "28275:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "28275:3:17"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "28250:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "28250:18:17"
																},
																"nativeSrc": "28250:29:17",
																"nodeType": "YulFunctionCall",
																"src": "28250:29:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "28242:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "28242:4:17"
																}
															]
														},
														{
															"nativeSrc": "28288:29:17",
															"nodeType": "YulAssignment",
															"src": "28288:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "28299:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "28299:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "28309:1:17",
																				"nodeType": "YulLiteral",
																				"src": "28309:1:17",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "28312:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "28312:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "28305:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "28305:3:17"
																		},
																		"nativeSrc": "28305:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "28305:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "28296:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "28296:2:17"
																},
																"nativeSrc": "28296:21:17",
																"nodeType": "YulFunctionCall",
																"src": "28296:21:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "28288:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "28288:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "28028:295:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "28090:4:17",
														"nodeType": "YulTypedName",
														"src": "28090:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "28096:3:17",
														"nodeType": "YulTypedName",
														"src": "28096:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "28104:4:17",
														"nodeType": "YulTypedName",
														"src": "28104:4:17",
														"type": ""
													}
												],
												"src": "28028:295:17"
											},
											{
												"body": {
													"nativeSrc": "28420:1303:17",
													"nodeType": "YulBlock",
													"src": "28420:1303:17",
													"statements": [
														{
															"nativeSrc": "28431:51:17",
															"nodeType": "YulVariableDeclaration",
															"src": "28431:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "28478:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "28478:3:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "28445:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "28445:32:17"
																},
																"nativeSrc": "28445:37:17",
																"nodeType": "YulFunctionCall",
																"src": "28445:37:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "28435:6:17",
																	"nodeType": "YulTypedName",
																	"src": "28435:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "28567:22:17",
																"nodeType": "YulBlock",
																"src": "28567:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "28569:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "28569:16:17"
																			},
																			"nativeSrc": "28569:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "28569:18:17"
																		},
																		"nativeSrc": "28569:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "28569:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "28539:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "28539:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28547:18:17",
																		"nodeType": "YulLiteral",
																		"src": "28547:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "28536:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "28536:2:17"
																},
																"nativeSrc": "28536:30:17",
																"nodeType": "YulFunctionCall",
																"src": "28536:30:17"
															},
															"nativeSrc": "28533:56:17",
															"nodeType": "YulIf",
															"src": "28533:56:17"
														},
														{
															"nativeSrc": "28599:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "28599:52:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "28645:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "28645:4:17"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "28639:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "28639:5:17"
																		},
																		"nativeSrc": "28639:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "28639:11:17"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "28613:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "28613:25:17"
																},
																"nativeSrc": "28613:38:17",
																"nodeType": "YulFunctionCall",
																"src": "28613:38:17"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "28603:6:17",
																	"nodeType": "YulTypedName",
																	"src": "28603:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "28744:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "28744:4:17"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "28750:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "28750:6:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "28758:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "28758:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "28698:45:17",
																	"nodeType": "YulIdentifier",
																	"src": "28698:45:17"
																},
																"nativeSrc": "28698:67:17",
																"nodeType": "YulFunctionCall",
																"src": "28698:67:17"
															},
															"nativeSrc": "28698:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "28698:67:17"
														},
														{
															"nativeSrc": "28775:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "28775:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "28792:1:17",
																"nodeType": "YulLiteral",
																"src": "28792:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "28779:9:17",
																	"nodeType": "YulTypedName",
																	"src": "28779:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "28803:17:17",
															"nodeType": "YulAssignment",
															"src": "28803:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "28816:4:17",
																"nodeType": "YulLiteral",
																"src": "28816:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "28803:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "28803:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "28867:611:17",
																		"nodeType": "YulBlock",
																		"src": "28867:611:17",
																		"statements": [
																			{
																				"nativeSrc": "28881:37:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28881:37:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "28900:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "28900:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "28912:4:17",
																									"nodeType": "YulLiteral",
																									"src": "28912:4:17",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "28908:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "28908:3:17"
																							},
																							"nativeSrc": "28908:9:17",
																							"nodeType": "YulFunctionCall",
																							"src": "28908:9:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "28896:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "28896:3:17"
																					},
																					"nativeSrc": "28896:22:17",
																					"nodeType": "YulFunctionCall",
																					"src": "28896:22:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "28885:7:17",
																						"nodeType": "YulTypedName",
																						"src": "28885:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "28932:51:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28932:51:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28978:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "28978:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "28946:31:17",
																						"nodeType": "YulIdentifier",
																						"src": "28946:31:17"
																					},
																					"nativeSrc": "28946:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "28946:37:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "28936:6:17",
																						"nodeType": "YulTypedName",
																						"src": "28936:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "28996:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28996:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "29005:1:17",
																					"nodeType": "YulLiteral",
																					"src": "29005:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "29000:1:17",
																						"nodeType": "YulTypedName",
																						"src": "29000:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "29064:163:17",
																					"nodeType": "YulBlock",
																					"src": "29064:163:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "29089:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "29089:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "29107:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "29107:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "29112:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "29112:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "29103:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "29103:3:17"
																												},
																												"nativeSrc": "29103:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "29103:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "29097:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "29097:5:17"
																										},
																										"nativeSrc": "29097:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "29097:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "29082:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "29082:6:17"
																								},
																								"nativeSrc": "29082:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "29082:42:17"
																							},
																							"nativeSrc": "29082:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "29082:42:17"
																						},
																						{
																							"nativeSrc": "29141:24:17",
																							"nodeType": "YulAssignment",
																							"src": "29141:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "29155:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "29155:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "29163:1:17",
																										"nodeType": "YulLiteral",
																										"src": "29163:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "29151:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "29151:3:17"
																								},
																								"nativeSrc": "29151:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "29151:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "29141:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "29141:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "29182:31:17",
																							"nodeType": "YulAssignment",
																							"src": "29182:31:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "29199:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "29199:9:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "29210:2:17",
																										"nodeType": "YulLiteral",
																										"src": "29210:2:17",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "29195:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "29195:3:17"
																								},
																								"nativeSrc": "29195:18:17",
																								"nodeType": "YulFunctionCall",
																								"src": "29195:18:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "29182:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "29182:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "29030:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "29030:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "29033:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "29033:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "29027:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "29027:2:17"
																					},
																					"nativeSrc": "29027:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "29027:14:17"
																				},
																				"nativeSrc": "29019:208:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "29042:21:17",
																					"nodeType": "YulBlock",
																					"src": "29042:21:17",
																					"statements": [
																						{
																							"nativeSrc": "29044:17:17",
																							"nodeType": "YulAssignment",
																							"src": "29044:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "29053:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "29053:1:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "29056:4:17",
																										"nodeType": "YulLiteral",
																										"src": "29056:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "29049:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "29049:3:17"
																								},
																								"nativeSrc": "29049:12:17",
																								"nodeType": "YulFunctionCall",
																								"src": "29049:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "29044:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "29044:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "29023:3:17",
																					"nodeType": "YulBlock",
																					"src": "29023:3:17",
																					"statements": []
																				},
																				"src": "29019:208:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "29263:156:17",
																					"nodeType": "YulBlock",
																					"src": "29263:156:17",
																					"statements": [
																						{
																							"nativeSrc": "29281:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "29281:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "29308:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "29308:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "29313:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "29313:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "29304:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "29304:3:17"
																										},
																										"nativeSrc": "29304:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "29304:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "29298:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "29298:5:17"
																								},
																								"nativeSrc": "29298:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "29298:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "29285:9:17",
																									"nodeType": "YulTypedName",
																									"src": "29285:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "29348:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "29348:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "29375:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "29375:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "29390:6:17",
																														"nodeType": "YulIdentifier",
																														"src": "29390:6:17"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "29398:4:17",
																														"nodeType": "YulLiteral",
																														"src": "29398:4:17",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "29386:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "29386:3:17"
																												},
																												"nativeSrc": "29386:17:17",
																												"nodeType": "YulFunctionCall",
																												"src": "29386:17:17"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "29356:18:17",
																											"nodeType": "YulIdentifier",
																											"src": "29356:18:17"
																										},
																										"nativeSrc": "29356:48:17",
																										"nodeType": "YulFunctionCall",
																										"src": "29356:48:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "29341:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "29341:6:17"
																								},
																								"nativeSrc": "29341:64:17",
																								"nodeType": "YulFunctionCall",
																								"src": "29341:64:17"
																							},
																							"nativeSrc": "29341:64:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "29341:64:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "29246:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "29246:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "29255:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "29255:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "29243:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "29243:2:17"
																					},
																					"nativeSrc": "29243:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "29243:19:17"
																				},
																				"nativeSrc": "29240:179:17",
																				"nodeType": "YulIf",
																				"src": "29240:179:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "29439:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "29439:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "29453:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "29453:6:17"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "29461:1:17",
																											"nodeType": "YulLiteral",
																											"src": "29461:1:17",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "29449:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "29449:3:17"
																									},
																									"nativeSrc": "29449:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "29449:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "29465:1:17",
																									"nodeType": "YulLiteral",
																									"src": "29465:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "29445:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "29445:3:17"
																							},
																							"nativeSrc": "29445:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "29445:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "29432:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "29432:6:17"
																					},
																					"nativeSrc": "29432:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "29432:36:17"
																				},
																				"nativeSrc": "29432:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "29432:36:17"
																			}
																		]
																	},
																	"nativeSrc": "28860:618:17",
																	"nodeType": "YulCase",
																	"src": "28860:618:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28865:1:17",
																		"nodeType": "YulLiteral",
																		"src": "28865:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "29495:222:17",
																		"nodeType": "YulBlock",
																		"src": "29495:222:17",
																		"statements": [
																			{
																				"nativeSrc": "29509:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "29509:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "29522:1:17",
																					"nodeType": "YulLiteral",
																					"src": "29522:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "29513:5:17",
																						"nodeType": "YulTypedName",
																						"src": "29513:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "29546:67:17",
																					"nodeType": "YulBlock",
																					"src": "29546:67:17",
																					"statements": [
																						{
																							"nativeSrc": "29564:35:17",
																							"nodeType": "YulAssignment",
																							"src": "29564:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "29583:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "29583:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "29588:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "29588:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "29579:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "29579:3:17"
																										},
																										"nativeSrc": "29579:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "29579:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "29573:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "29573:5:17"
																								},
																								"nativeSrc": "29573:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "29573:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "29564:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "29564:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "29539:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "29539:6:17"
																				},
																				"nativeSrc": "29536:77:17",
																				"nodeType": "YulIf",
																				"src": "29536:77:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "29633:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "29633:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "29692:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "29692:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "29699:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "29699:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "29639:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "29639:52:17"
																							},
																							"nativeSrc": "29639:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "29639:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "29626:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "29626:6:17"
																					},
																					"nativeSrc": "29626:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "29626:81:17"
																				},
																				"nativeSrc": "29626:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "29626:81:17"
																			}
																		]
																	},
																	"nativeSrc": "29487:230:17",
																	"nodeType": "YulCase",
																	"src": "29487:230:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "28840:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "28840:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28848:2:17",
																		"nodeType": "YulLiteral",
																		"src": "28848:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "28837:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "28837:2:17"
																},
																"nativeSrc": "28837:14:17",
																"nodeType": "YulFunctionCall",
																"src": "28837:14:17"
															},
															"nativeSrc": "28830:887:17",
															"nodeType": "YulSwitch",
															"src": "28830:887:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "28328:1395:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "28409:4:17",
														"nodeType": "YulTypedName",
														"src": "28409:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "28415:3:17",
														"nodeType": "YulTypedName",
														"src": "28415:3:17",
														"type": ""
													}
												],
												"src": "28328:1395:17"
											},
											{
												"body": {
													"nativeSrc": "29787:40:17",
													"nodeType": "YulBlock",
													"src": "29787:40:17",
													"statements": [
														{
															"nativeSrc": "29798:22:17",
															"nodeType": "YulAssignment",
															"src": "29798:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29814:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "29814:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "29808:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "29808:5:17"
																},
																"nativeSrc": "29808:12:17",
																"nodeType": "YulFunctionCall",
																"src": "29808:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "29798:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "29798:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "29729:98:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29770:5:17",
														"nodeType": "YulTypedName",
														"src": "29770:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "29780:6:17",
														"nodeType": "YulTypedName",
														"src": "29780:6:17",
														"type": ""
													}
												],
												"src": "29729:98:17"
											},
											{
												"body": {
													"nativeSrc": "29946:34:17",
													"nodeType": "YulBlock",
													"src": "29946:34:17",
													"statements": [
														{
															"nativeSrc": "29956:18:17",
															"nodeType": "YulAssignment",
															"src": "29956:18:17",
															"value": {
																"name": "pos",
																"nativeSrc": "29971:3:17",
																"nodeType": "YulIdentifier",
																"src": "29971:3:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "29956:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "29956:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "29833:147:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29918:3:17",
														"nodeType": "YulTypedName",
														"src": "29918:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "29923:6:17",
														"nodeType": "YulTypedName",
														"src": "29923:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "29934:11:17",
														"nodeType": "YulTypedName",
														"src": "29934:11:17",
														"type": ""
													}
												],
												"src": "29833:147:17"
											},
											{
												"body": {
													"nativeSrc": "30094:278:17",
													"nodeType": "YulBlock",
													"src": "30094:278:17",
													"statements": [
														{
															"nativeSrc": "30104:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "30104:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30150:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "30150:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "30118:31:17",
																	"nodeType": "YulIdentifier",
																	"src": "30118:31:17"
																},
																"nativeSrc": "30118:38:17",
																"nodeType": "YulFunctionCall",
																"src": "30118:38:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "30108:6:17",
																	"nodeType": "YulTypedName",
																	"src": "30108:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "30165:95:17",
															"nodeType": "YulAssignment",
															"src": "30165:95:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30248:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "30248:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "30253:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "30253:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "30172:75:17",
																	"nodeType": "YulIdentifier",
																	"src": "30172:75:17"
																},
																"nativeSrc": "30172:88:17",
																"nodeType": "YulFunctionCall",
																"src": "30172:88:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30165:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "30165:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "30308:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "30308:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30315:4:17",
																				"nodeType": "YulLiteral",
																				"src": "30315:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30304:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "30304:3:17"
																		},
																		"nativeSrc": "30304:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "30304:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "30322:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "30322:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "30327:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "30327:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "30269:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "30269:34:17"
																},
																"nativeSrc": "30269:65:17",
																"nodeType": "YulFunctionCall",
																"src": "30269:65:17"
															},
															"nativeSrc": "30269:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "30269:65:17"
														},
														{
															"nativeSrc": "30343:23:17",
															"nodeType": "YulAssignment",
															"src": "30343:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30354:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "30354:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "30359:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "30359:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30350:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "30350:3:17"
																},
																"nativeSrc": "30350:16:17",
																"nodeType": "YulFunctionCall",
																"src": "30350:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30343:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "30343:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "29986:386:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "30075:5:17",
														"nodeType": "YulTypedName",
														"src": "30075:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "30082:3:17",
														"nodeType": "YulTypedName",
														"src": "30082:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30090:3:17",
														"nodeType": "YulTypedName",
														"src": "30090:3:17",
														"type": ""
													}
												],
												"src": "29986:386:17"
											},
											{
												"body": {
													"nativeSrc": "30512:137:17",
													"nodeType": "YulBlock",
													"src": "30512:137:17",
													"statements": [
														{
															"nativeSrc": "30523:100:17",
															"nodeType": "YulAssignment",
															"src": "30523:100:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30610:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "30610:6:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "30619:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "30619:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "30530:79:17",
																	"nodeType": "YulIdentifier",
																	"src": "30530:79:17"
																},
																"nativeSrc": "30530:93:17",
																"nodeType": "YulFunctionCall",
																"src": "30530:93:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30523:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "30523:3:17"
																}
															]
														},
														{
															"nativeSrc": "30633:10:17",
															"nodeType": "YulAssignment",
															"src": "30633:10:17",
															"value": {
																"name": "pos",
																"nativeSrc": "30640:3:17",
																"nodeType": "YulIdentifier",
																"src": "30640:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30633:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "30633:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "30378:271:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30491:3:17",
														"nodeType": "YulTypedName",
														"src": "30491:3:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30497:6:17",
														"nodeType": "YulTypedName",
														"src": "30497:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30508:3:17",
														"nodeType": "YulTypedName",
														"src": "30508:3:17",
														"type": ""
													}
												],
												"src": "30378:271:17"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Sender is black\")\n\n        mstore(add(memPtr, 32), \"listed\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Recipient is bl\")\n\n        mstore(add(memPtr, 32), \"acklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Tokens are lock\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f(memPtr) {\n\n        mstore(add(memPtr, 0), \"BatchTransfer failed: Mismatched\")\n\n        mstore(add(memPtr, 32), \" arrays\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc(memPtr) {\n\n        mstore(add(memPtr, 0), \"BatchTransfer failed: Recipient \")\n\n        mstore(add(memPtr, 32), \"is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"468": [
									{
										"length": 32,
										"start": 5806
									},
									{
										"length": 32,
										"start": 5891
									},
									{
										"length": 32,
										"start": 6334
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061019c5760003560e01c8063715018a6116100ec578063ad3cb1cc1161008a578063dbac26e911610064578063dbac26e914610583578063dd62ed3e146105c0578063f2fde38b146105fd578063fe575a87146106265761019c565b8063ad3cb1cc14610504578063b119490e1461052f578063c66e4095146105585761019c565b80638da5cb5b116100c65780638da5cb5b1461043457806395d89b411461045f5780639bc289f11461048a578063a9059cbb146104c75761019c565b8063715018a6146103dd5780638456cb59146103f457806388d695b21461040b5761019c565b8063313ce567116101595780634f1ef286116101335780634f1ef2861461032e57806352d1902d1461034a5780635c975abb1461037557806370a08231146103a05761019c565b8063313ce567146102c35780633e579307146102ee5780633f4ba83a146103175761019c565b806306fdde03146101a1578063095ea7b3146101cc578063153b0d1e1461020957806318160ddd1461023257806323b872dd1461025d5780632e0d2a001461029a575b600080fd5b3480156101ad57600080fd5b506101b6610663565b6040516101c391906126ba565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee9190612784565b610704565b60405161020091906127df565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b9190612826565b610727565b005b34801561023e57600080fd5b506102476107d8565b6040516102549190612875565b60405180910390f35b34801561026957600080fd5b50610284600480360381019061027f9190612890565b6107f0565b60405161029191906127df565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc91906128e3565b6109f4565b005b3480156102cf57600080fd5b506102d8610a83565b6040516102e5919061292c565b60405180910390f35b3480156102fa57600080fd5b5061031560048036038101906103109190612784565b610a8c565b005b34801561032357600080fd5b5061032c610bf9565b005b61034860048036038101906103439190612a7c565b610c0b565b005b34801561035657600080fd5b5061035f610c2a565b60405161036c9190612af1565b60405180910390f35b34801561038157600080fd5b5061038a610c5d565b60405161039791906127df565b60405180910390f35b3480156103ac57600080fd5b506103c760048036038101906103c291906128e3565b610c73565b6040516103d49190612875565b60405180910390f35b3480156103e957600080fd5b506103f2610cca565b005b34801561040057600080fd5b50610409610cde565b005b34801561041757600080fd5b50610432600480360381019061042d9190612bc2565b610cf0565b005b34801561044057600080fd5b50610449610e67565b6040516104569190612c52565b60405180910390f35b34801561046b57600080fd5b50610474610e9f565b60405161048191906126ba565b60405180910390f35b34801561049657600080fd5b506104b160048036038101906104ac91906128e3565b610f40565b6040516104be9190612875565b60405180910390f35b3480156104d357600080fd5b506104ee60048036038101906104e99190612784565b610f58565b6040516104fb91906127df565b60405180910390f35b34801561051057600080fd5b5061051961115a565b60405161052691906126ba565b60405180910390f35b34801561053b57600080fd5b5061055660048036038101906105519190612d0e565b611193565b005b34801561056457600080fd5b5061056d611351565b60405161057a9190612c52565b60405180910390f35b34801561058f57600080fd5b506105aa60048036038101906105a591906128e3565b611377565b6040516105b791906127df565b60405180910390f35b3480156105cc57600080fd5b506105e760048036038101906105e29190612d99565b611397565b6040516105f49190612875565b60405180910390f35b34801561060957600080fd5b50610624600480360381019061061f91906128e3565b61142c565b005b34801561063257600080fd5b5061064d600480360381019061064891906128e3565b6114b2565b60405161065a91906127df565b60405180910390f35b6060600061066f611508565b905080600301805461068090612e08565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac90612e08565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b505050505091505090565b60008061070f611530565b905061071c818585611538565b600191505092915050565b61072f61154a565b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8826040516107cc91906127df565b60405180910390a25050565b6000806107e3611508565b9050806002015491505090565b60006107fa6115d1565b603560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e90612eab565b60405180910390fd5b603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090b90612f3d565b60405180910390fd5b603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054421015806109a157506000603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b6109e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d790612fcf565b60405180910390fd5b6109eb84848461161b565b90509392505050565b6109fc61154a565b80603260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad860405160405180910390a250565b60006012905090565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b139061303b565b60405180910390fd5b80603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610bf55780603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f82604051610bec9190612875565b60405180910390a25b5050565b610c0161154a565b610c0961164a565b565b610c136116ac565b610c1c82611792565b610c26828261179d565b5050565b6000610c346118bc565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008060009054906101000a900460ff16905090565b600080610c7e611508565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b610cd261154a565b610cdc6000611943565b565b610ce661154a565b610cee611a1a565b565b610cf86115d1565b818190508484905014610d40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d37906130cd565b60405180910390fd5b600084849050905060005b81811015610e5f5760356000878784818110610d6a57610d696130ed565b5b9050602002016020810190610d7f91906128e3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfe9061318e565b60405180910390fd5b610e5233878784818110610e1e57610e1d6130ed565b5b9050602002016020810190610e3391906128e3565b868685818110610e4657610e456130ed565b5b90506020020135611a7c565b8080600101915050610d4b565b505050505050565b600080610e72611b70565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60606000610eab611508565b9050806004018054610ebc90612e08565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee890612e08565b8015610f355780601f10610f0a57610100808354040283529160200191610f35565b820191906000526020600020905b815481529060010190602001808311610f1857829003601f168201915b505050505091505090565b60346020528060005260406000206000915090505481565b6000610f626115d1565b603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610fef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe690612eab565b60405180910390fd5b603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561107c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107390612f3d565b60405180910390fd5b603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544210158061110957506000603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f90612fcf565b60405180910390fd5b6111528383611b98565b905092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600061119d611bbb565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156111eb5750825b9050600060018367ffffffffffffffff16148015611220575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561122e575080155b15611265576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156112b55760018560000160086101000a81548160ff0219169083151502179055505b6112bf8888611be3565b6112c833611bf9565b6112d0611c0d565b6112d8611c1f565b856033819055506112eb33603354611c29565b83156113475760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161133e9190613207565b60405180910390a15b5050505050505050565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60356020528060005260406000206000915054906101000a900460ff1681565b6000806113a2611508565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b61143461154a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114a65760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161149d9190612c52565b60405180910390fd5b6114af81611943565b50565b6000603560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b6115458383836001611cab565b505050565b611552611530565b73ffffffffffffffffffffffffffffffffffffffff16611570610e67565b73ffffffffffffffffffffffffffffffffffffffff16146115cf57611593611530565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115c69190612c52565b60405180910390fd5b565b6115d9610c5d565b15611619576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116109061326e565b60405180910390fd5b565b600080611626611530565b9050611633858285611e91565b61163e858585611a7c565b60019150509392505050565b611652611f25565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611695611530565b6040516116a29190612c52565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061175957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611740611f6e565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611790576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61179a61154a565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561180557506040513d601f19601f8201168201806040525081019061180291906132ba565b60015b61184657816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161183d9190612c52565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146118ad57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016118a49190612af1565b60405180910390fd5b6118b78383611fc5565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611941576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061194d611b70565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b611a226115d1565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a65611530565b604051611a729190612c52565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611aee5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611ae59190612c52565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b605760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b579190612c52565b60405180910390fd5b611b6b838383612038565b505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600080611ba3611530565b9050611bb0818585611a7c565b600191505092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611beb612277565b611bf582826122b7565b5050565b611c01612277565b611c0a816122f4565b50565b611c15612277565b611c1d61237a565b565b611c27612277565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c9b5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611c929190612c52565b60405180910390fd5b611ca760008383612038565b5050565b6000611cb5611508565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611d295760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611d209190612c52565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611d9b5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611d929190612c52565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508115611e8a578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611e819190612875565b60405180910390a35b5050505050565b6000611e9d8484611397565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611f1f5781811015611f0f578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611f06939291906132e7565b60405180910390fd5b611f1e84848484036000611cab565b5b50505050565b611f2d610c5d565b611f6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f639061336a565b60405180910390fd5b565b6000611f9c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61239e565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611fce826123a8565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a260008151111561202b576120258282612475565b50612034565b6120336124f9565b5b5050565b6000612042611508565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612098578181600201600082825461208c91906133b9565b92505081905550612171565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612127578481846040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161211e939291906132e7565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036121bc5781816002016000828254039250508190555061220c565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516122699190612875565b60405180910390a350505050565b61227f612536565b6122b5576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6122bf612277565b60006122c9611508565b9050828160030190816122dc919061358f565b50818160040190816122ee919061358f565b50505050565b6122fc612277565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361236e5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016123659190612c52565b60405180910390fd5b61237781611943565b50565b612382612277565b60008060006101000a81548160ff021916908315150217905550565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361240457806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016123fb9190612c52565b60405180910390fd5b806124317f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61239e565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161249f91906136a8565b600060405180830381855af49150503d80600081146124da576040519150601f19603f3d011682016040523d82523d6000602084013e6124df565b606091505b50915091506124ef858383612556565b9250505092915050565b6000341115612534576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000612540611bbb565b60000160089054906101000a900460ff16905090565b60608261256b57612566826125e5565b6125dd565b60008251148015612593575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156125d557836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016125cc9190612c52565b60405180910390fd5b8190506125de565b5b9392505050565b6000815111156125f85780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081519050919050565b600082825260208201905092915050565b60005b83811015612664578082015181840152602081019050612649565b60008484015250505050565b6000601f19601f8301169050919050565b600061268c8261262a565b6126968185612635565b93506126a6818560208601612646565b6126af81612670565b840191505092915050565b600060208201905081810360008301526126d48184612681565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061271b826126f0565b9050919050565b61272b81612710565b811461273657600080fd5b50565b60008135905061274881612722565b92915050565b6000819050919050565b6127618161274e565b811461276c57600080fd5b50565b60008135905061277e81612758565b92915050565b6000806040838503121561279b5761279a6126e6565b5b60006127a985828601612739565b92505060206127ba8582860161276f565b9150509250929050565b60008115159050919050565b6127d9816127c4565b82525050565b60006020820190506127f460008301846127d0565b92915050565b612803816127c4565b811461280e57600080fd5b50565b600081359050612820816127fa565b92915050565b6000806040838503121561283d5761283c6126e6565b5b600061284b85828601612739565b925050602061285c85828601612811565b9150509250929050565b61286f8161274e565b82525050565b600060208201905061288a6000830184612866565b92915050565b6000806000606084860312156128a9576128a86126e6565b5b60006128b786828701612739565b93505060206128c886828701612739565b92505060406128d98682870161276f565b9150509250925092565b6000602082840312156128f9576128f86126e6565b5b600061290784828501612739565b91505092915050565b600060ff82169050919050565b61292681612910565b82525050565b6000602082019050612941600083018461291d565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61298982612670565b810181811067ffffffffffffffff821117156129a8576129a7612951565b5b80604052505050565b60006129bb6126dc565b90506129c78282612980565b919050565b600067ffffffffffffffff8211156129e7576129e6612951565b5b6129f082612670565b9050602081019050919050565b82818337600083830152505050565b6000612a1f612a1a846129cc565b6129b1565b905082815260208101848484011115612a3b57612a3a61294c565b5b612a468482856129fd565b509392505050565b600082601f830112612a6357612a62612947565b5b8135612a73848260208601612a0c565b91505092915050565b60008060408385031215612a9357612a926126e6565b5b6000612aa185828601612739565b925050602083013567ffffffffffffffff811115612ac257612ac16126eb565b5b612ace85828601612a4e565b9150509250929050565b6000819050919050565b612aeb81612ad8565b82525050565b6000602082019050612b066000830184612ae2565b92915050565b600080fd5b600080fd5b60008083601f840112612b2c57612b2b612947565b5b8235905067ffffffffffffffff811115612b4957612b48612b0c565b5b602083019150836020820283011115612b6557612b64612b11565b5b9250929050565b60008083601f840112612b8257612b81612947565b5b8235905067ffffffffffffffff811115612b9f57612b9e612b0c565b5b602083019150836020820283011115612bbb57612bba612b11565b5b9250929050565b60008060008060408587031215612bdc57612bdb6126e6565b5b600085013567ffffffffffffffff811115612bfa57612bf96126eb565b5b612c0687828801612b16565b9450945050602085013567ffffffffffffffff811115612c2957612c286126eb565b5b612c3587828801612b6c565b925092505092959194509250565b612c4c81612710565b82525050565b6000602082019050612c676000830184612c43565b92915050565b600067ffffffffffffffff821115612c8857612c87612951565b5b612c9182612670565b9050602081019050919050565b6000612cb1612cac84612c6d565b6129b1565b905082815260208101848484011115612ccd57612ccc61294c565b5b612cd88482856129fd565b509392505050565b600082601f830112612cf557612cf4612947565b5b8135612d05848260208601612c9e565b91505092915050565b600080600060608486031215612d2757612d266126e6565b5b600084013567ffffffffffffffff811115612d4557612d446126eb565b5b612d5186828701612ce0565b935050602084013567ffffffffffffffff811115612d7257612d716126eb565b5b612d7e86828701612ce0565b9250506040612d8f8682870161276f565b9150509250925092565b60008060408385031215612db057612daf6126e6565b5b6000612dbe85828601612739565b9250506020612dcf85828601612739565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612e2057607f821691505b602082108103612e3357612e32612dd9565b5b50919050565b7f5472616e73666572206661696c65643a2053656e64657220697320626c61636b60008201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b6000612e95602683612635565b9150612ea082612e39565b604082019050919050565b60006020820190508181036000830152612ec481612e88565b9050919050565b7f5472616e73666572206661696c65643a20526563697069656e7420697320626c60008201527f61636b6c69737465640000000000000000000000000000000000000000000000602082015250565b6000612f27602983612635565b9150612f3282612ecb565b604082019050919050565b60006020820190508181036000830152612f5681612f1a565b9050919050565b7f5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000612fb9602283612635565b9150612fc482612f5d565b604082019050919050565b60006020820190508181036000830152612fe881612fac565b9050919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000613025600e83612635565b915061303082612fef565b602082019050919050565b6000602082019050818103600083015261305481613018565b9050919050565b7f42617463685472616e73666572206661696c65643a204d69736d61746368656460008201527f2061727261797300000000000000000000000000000000000000000000000000602082015250565b60006130b7602783612635565b91506130c28261305b565b604082019050919050565b600060208201905081810360008301526130e6816130aa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f42617463685472616e73666572206661696c65643a20526563697069656e742060008201527f697320626c61636b6c6973746564000000000000000000000000000000000000602082015250565b6000613178602e83612635565b91506131838261311c565b604082019050919050565b600060208201905081810360008301526131a78161316b565b9050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006131f16131ec6131e7846131ae565b6131cc565b6131b8565b9050919050565b613201816131d6565b82525050565b600060208201905061321c60008301846131f8565b92915050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613258601083612635565b915061326382613222565b602082019050919050565b600060208201905081810360008301526132878161324b565b9050919050565b61329781612ad8565b81146132a257600080fd5b50565b6000815190506132b48161328e565b92915050565b6000602082840312156132d0576132cf6126e6565b5b60006132de848285016132a5565b91505092915050565b60006060820190506132fc6000830186612c43565b6133096020830185612866565b6133166040830184612866565b949350505050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000613354601483612635565b915061335f8261331e565b602082019050919050565b6000602082019050818103600083015261338381613347565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006133c48261274e565b91506133cf8361274e565b92508282019050808211156133e7576133e661338a565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261344f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613412565b6134598683613412565b95508019841693508086168417925050509392505050565b600061348c6134876134828461274e565b6131cc565b61274e565b9050919050565b6000819050919050565b6134a683613471565b6134ba6134b282613493565b84845461341f565b825550505050565b600090565b6134cf6134c2565b6134da81848461349d565b505050565b5b818110156134fe576134f36000826134c7565b6001810190506134e0565b5050565b601f82111561354357613514816133ed565b61351d84613402565b8101602085101561352c578190505b61354061353885613402565b8301826134df565b50505b505050565b600082821c905092915050565b600061356660001984600802613548565b1980831691505092915050565b600061357f8383613555565b9150826002028217905092915050565b6135988261262a565b67ffffffffffffffff8111156135b1576135b0612951565b5b6135bb8254612e08565b6135c6828285613502565b600060209050601f8311600181146135f957600084156135e7578287015190505b6135f18582613573565b865550613659565b601f198416613607866133ed565b60005b8281101561362f5784890151825560018201915060208501945060208101905061360a565b8683101561364c5784890151613648601f891682613555565b8355505b6001600288020188555050505b505050505050565b600081519050919050565b600081905092915050565b600061368282613661565b61368c818561366c565b935061369c818560208601612646565b80840191505092915050565b60006136b48284613677565b91508190509291505056fea26469706673582212205f4a8e6fe10034a2f72b5c859bb633800554e8b74b243b7c79f5310d643d2c2164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDBAC26E9 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x626 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB119490E EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x558 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C7 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x40B JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A0 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x3E579307 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x317 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x29A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x2826 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x2890 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0x9F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x292C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0xBF9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2A7C JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0xCCA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0xCDE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0xCF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x449 PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x519 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x556 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x2D0E JUMP JUMPDEST PUSH2 0x1193 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56D PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x2D99 JUMP JUMPDEST PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x624 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0x142C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x66F PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x680 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AC SWAP1 PUSH2 0x2E08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70F PUSH2 0x1530 JUMP JUMPDEST SWAP1 POP PUSH2 0x71C DUP2 DUP6 DUP6 PUSH2 0x1538 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x72F PUSH2 0x154A JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7E3 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FA PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87E SWAP1 PUSH2 0x2EAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90B SWAP1 PUSH2 0x2F3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x9A1 JUMPI POP PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D7 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EB DUP5 DUP5 DUP5 PUSH2 0x161B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x9FC PUSH2 0x154A JUMP JUMPDEST DUP1 PUSH1 0x32 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB13 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xBF5 JUMPI DUP1 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F DUP3 PUSH1 0x40 MLOAD PUSH2 0xBEC SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC01 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xC09 PUSH2 0x164A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC13 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0xC1C DUP3 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0xC26 DUP3 DUP3 PUSH2 0x179D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC34 PUSH2 0x18BC JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC7E PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD2 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xCDC PUSH1 0x0 PUSH2 0x1943 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xCEE PUSH2 0x1A1A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCF8 PUSH2 0x15D1 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xD40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD37 SWAP1 PUSH2 0x30CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x35 PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xD6A JUMPI PUSH2 0xD69 PUSH2 0x30ED JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD7F SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFE SWAP1 PUSH2 0x318E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE52 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0x30ED JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0x30ED JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1A7C JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD4B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE72 PUSH2 0x1B70 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xEAB PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xEBC SWAP1 PUSH2 0x2E08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEE8 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF62 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE6 SWAP1 PUSH2 0x2EAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1073 SWAP1 PUSH2 0x2F3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x1109 JUMPI POP PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113F SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1152 DUP4 DUP4 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119D PUSH2 0x1BBB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x11EB JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1220 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x122E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1265 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x12BF DUP9 DUP9 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0x12C8 CALLER PUSH2 0x1BF9 JUMP JUMPDEST PUSH2 0x12D0 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x12D8 PUSH2 0x1C1F JUMP JUMPDEST DUP6 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH2 0x12EB CALLER PUSH1 0x33 SLOAD PUSH2 0x1C29 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1347 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x133E SWAP2 SWAP1 PUSH2 0x3207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13A2 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1434 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149D SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14AF DUP2 PUSH2 0x1943 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1545 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1CAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1552 PUSH2 0x1530 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1570 PUSH2 0xE67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15CF JUMPI PUSH2 0x1593 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C6 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x15D9 PUSH2 0xC5D JUMP JUMPDEST ISZERO PUSH2 0x1619 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1610 SWAP1 PUSH2 0x326E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1626 PUSH2 0x1530 JUMP JUMPDEST SWAP1 POP PUSH2 0x1633 DUP6 DUP3 DUP6 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x163E DUP6 DUP6 DUP6 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1652 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1695 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A2 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1759 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1740 PUSH2 0x1F6E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1790 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x179A PUSH2 0x154A JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1805 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1802 SWAP2 SWAP1 PUSH2 0x32BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1846 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x183D SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x18AD JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A4 SWAP2 SWAP1 PUSH2 0x2AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18B7 DUP4 DUP4 PUSH2 0x1FC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1941 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194D PUSH2 0x1B70 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1A22 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1A65 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A72 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AEE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE5 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B60 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B57 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B6B DUP4 DUP4 DUP4 PUSH2 0x2038 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BA3 PUSH2 0x1530 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BB0 DUP2 DUP6 DUP6 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BEB PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x1BF5 DUP3 DUP3 PUSH2 0x22B7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1C01 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x1C0A DUP2 PUSH2 0x22F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C15 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x1C1D PUSH2 0x237A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1C27 PUSH2 0x2277 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C9B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C92 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CA7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2038 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB5 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D29 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D20 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D9B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D92 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1E8A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1E81 SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9D DUP5 DUP5 PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1F1F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1F0F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F06 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F1E DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1CAB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1F2D PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x1F6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F63 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9C PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x239E JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FCE DUP3 PUSH2 0x23A8 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x202B JUMPI PUSH2 0x2025 DUP3 DUP3 PUSH2 0x2475 JUMP JUMPDEST POP PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x2033 PUSH2 0x24F9 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2042 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2098 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x208C SWAP2 SWAP1 PUSH2 0x33B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2171 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x2127 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21BC JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x220C JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2269 SWAP2 SWAP1 PUSH2 0x2875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x227F PUSH2 0x2536 JUMP JUMPDEST PUSH2 0x22B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x22BF PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C9 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x22DC SWAP2 SWAP1 PUSH2 0x358F JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x22EE SWAP2 SWAP1 PUSH2 0x358F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x22FC PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x236E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2365 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2377 DUP2 PUSH2 0x1943 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2382 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2404 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23FB SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2431 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x239E JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x249F SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x24DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x24DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x24EF DUP6 DUP4 DUP4 PUSH2 0x2556 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2534 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2540 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x256B JUMPI PUSH2 0x2566 DUP3 PUSH2 0x25E5 JUMP JUMPDEST PUSH2 0x25DD JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2593 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x25D5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25CC SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x25DE JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x25F8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2664 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2649 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x268C DUP3 PUSH2 0x262A JUMP JUMPDEST PUSH2 0x2696 DUP2 DUP6 PUSH2 0x2635 JUMP JUMPDEST SWAP4 POP PUSH2 0x26A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST PUSH2 0x26AF DUP2 PUSH2 0x2670 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D4 DUP2 DUP5 PUSH2 0x2681 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271B DUP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272B DUP2 PUSH2 0x2710 JUMP JUMPDEST DUP2 EQ PUSH2 0x2736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2748 DUP2 PUSH2 0x2722 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2761 DUP2 PUSH2 0x274E JUMP JUMPDEST DUP2 EQ PUSH2 0x276C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x277E DUP2 PUSH2 0x2758 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x279B JUMPI PUSH2 0x279A PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27A9 DUP6 DUP3 DUP7 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27BA DUP6 DUP3 DUP7 ADD PUSH2 0x276F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27D9 DUP2 PUSH2 0x27C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2803 DUP2 PUSH2 0x27C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x280E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2820 DUP2 PUSH2 0x27FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x283D JUMPI PUSH2 0x283C PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x284B DUP6 DUP3 DUP7 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x285C DUP6 DUP3 DUP7 ADD PUSH2 0x2811 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x286F DUP2 PUSH2 0x274E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x288A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28A9 JUMPI PUSH2 0x28A8 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28B7 DUP7 DUP3 DUP8 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x28C8 DUP7 DUP3 DUP8 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28D9 DUP7 DUP3 DUP8 ADD PUSH2 0x276F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28F9 JUMPI PUSH2 0x28F8 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2907 DUP5 DUP3 DUP6 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2926 DUP2 PUSH2 0x2910 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2941 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x291D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2989 DUP3 PUSH2 0x2670 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x29A8 JUMPI PUSH2 0x29A7 PUSH2 0x2951 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BB PUSH2 0x26DC JUMP JUMPDEST SWAP1 POP PUSH2 0x29C7 DUP3 DUP3 PUSH2 0x2980 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x29E7 JUMPI PUSH2 0x29E6 PUSH2 0x2951 JUMP JUMPDEST JUMPDEST PUSH2 0x29F0 DUP3 PUSH2 0x2670 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1F PUSH2 0x2A1A DUP5 PUSH2 0x29CC JUMP JUMPDEST PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2A3B JUMPI PUSH2 0x2A3A PUSH2 0x294C JUMP JUMPDEST JUMPDEST PUSH2 0x2A46 DUP5 DUP3 DUP6 PUSH2 0x29FD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A63 JUMPI PUSH2 0x2A62 PUSH2 0x2947 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A73 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2A0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A93 JUMPI PUSH2 0x2A92 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AA1 DUP6 DUP3 DUP7 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AC2 JUMPI PUSH2 0x2AC1 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2ACE DUP6 DUP3 DUP7 ADD PUSH2 0x2A4E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AEB DUP2 PUSH2 0x2AD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2B2C JUMPI PUSH2 0x2B2B PUSH2 0x2947 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B49 JUMPI PUSH2 0x2B48 PUSH2 0x2B0C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2B65 JUMPI PUSH2 0x2B64 PUSH2 0x2B11 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2B82 JUMPI PUSH2 0x2B81 PUSH2 0x2947 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B9F JUMPI PUSH2 0x2B9E PUSH2 0x2B0C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2BBB JUMPI PUSH2 0x2BBA PUSH2 0x2B11 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2BDC JUMPI PUSH2 0x2BDB PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BFA JUMPI PUSH2 0x2BF9 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2C06 DUP8 DUP3 DUP9 ADD PUSH2 0x2B16 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C29 JUMPI PUSH2 0x2C28 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2C35 DUP8 DUP3 DUP9 ADD PUSH2 0x2B6C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2C4C DUP2 PUSH2 0x2710 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C67 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C88 JUMPI PUSH2 0x2C87 PUSH2 0x2951 JUMP JUMPDEST JUMPDEST PUSH2 0x2C91 DUP3 PUSH2 0x2670 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB1 PUSH2 0x2CAC DUP5 PUSH2 0x2C6D JUMP JUMPDEST PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2CCD JUMPI PUSH2 0x2CCC PUSH2 0x294C JUMP JUMPDEST JUMPDEST PUSH2 0x2CD8 DUP5 DUP3 DUP6 PUSH2 0x29FD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CF5 JUMPI PUSH2 0x2CF4 PUSH2 0x2947 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D05 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D27 JUMPI PUSH2 0x2D26 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D45 JUMPI PUSH2 0x2D44 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2D51 DUP7 DUP3 DUP8 ADD PUSH2 0x2CE0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D72 JUMPI PUSH2 0x2D71 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2D7E DUP7 DUP3 DUP8 ADD PUSH2 0x2CE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D8F DUP7 DUP3 DUP8 ADD PUSH2 0x276F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DB0 JUMPI PUSH2 0x2DAF PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DBE DUP6 DUP3 DUP7 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DCF DUP6 DUP3 DUP7 ADD PUSH2 0x2739 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E20 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E33 JUMPI PUSH2 0x2E32 PUSH2 0x2DD9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C69737465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E95 PUSH1 0x26 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA0 DUP3 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EC4 DUP2 PUSH2 0x2E88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61636B6C69737465640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F27 PUSH1 0x29 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F32 DUP3 PUSH2 0x2ECB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F56 DUP2 PUSH2 0x2F1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB9 PUSH1 0x22 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC4 DUP3 PUSH2 0x2F5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FE8 DUP2 PUSH2 0x2FAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3025 PUSH1 0xE DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x3030 DUP3 PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3054 DUP2 PUSH2 0x3018 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061727261797300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B7 PUSH1 0x27 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C2 DUP3 PUSH2 0x305B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30E6 DUP2 PUSH2 0x30AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697320626C61636B6C6973746564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3178 PUSH1 0x2E DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x3183 DUP3 PUSH2 0x311C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31A7 DUP2 PUSH2 0x316B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F1 PUSH2 0x31EC PUSH2 0x31E7 DUP5 PUSH2 0x31AE JUMP JUMPDEST PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x31B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3201 DUP2 PUSH2 0x31D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x321C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3258 PUSH1 0x10 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x3263 DUP3 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3287 DUP2 PUSH2 0x324B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3297 DUP2 PUSH2 0x2AD8 JUMP JUMPDEST DUP2 EQ PUSH2 0x32A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32B4 DUP2 PUSH2 0x328E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32D0 JUMPI PUSH2 0x32CF PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32DE DUP5 DUP3 DUP6 ADD PUSH2 0x32A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32FC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2C43 JUMP JUMPDEST PUSH2 0x3309 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0x3316 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2866 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3354 PUSH1 0x14 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x335F DUP3 PUSH2 0x331E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3383 DUP2 PUSH2 0x3347 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33C4 DUP3 PUSH2 0x274E JUMP JUMPDEST SWAP2 POP PUSH2 0x33CF DUP4 PUSH2 0x274E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x33E7 JUMPI PUSH2 0x33E6 PUSH2 0x338A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x344F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3412 JUMP JUMPDEST PUSH2 0x3459 DUP7 DUP4 PUSH2 0x3412 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x348C PUSH2 0x3487 PUSH2 0x3482 DUP5 PUSH2 0x274E JUMP JUMPDEST PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x274E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34A6 DUP4 PUSH2 0x3471 JUMP JUMPDEST PUSH2 0x34BA PUSH2 0x34B2 DUP3 PUSH2 0x3493 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x341F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x34CF PUSH2 0x34C2 JUMP JUMPDEST PUSH2 0x34DA DUP2 DUP5 DUP5 PUSH2 0x349D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x34FE JUMPI PUSH2 0x34F3 PUSH1 0x0 DUP3 PUSH2 0x34C7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x34E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3543 JUMPI PUSH2 0x3514 DUP2 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x351D DUP5 PUSH2 0x3402 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x352C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3540 PUSH2 0x3538 DUP6 PUSH2 0x3402 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x34DF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3566 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3548 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357F DUP4 DUP4 PUSH2 0x3555 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3598 DUP3 PUSH2 0x262A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35B1 JUMPI PUSH2 0x35B0 PUSH2 0x2951 JUMP JUMPDEST JUMPDEST PUSH2 0x35BB DUP3 SLOAD PUSH2 0x2E08 JUMP JUMPDEST PUSH2 0x35C6 DUP3 DUP3 DUP6 PUSH2 0x3502 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x35F9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x35E7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x35F1 DUP6 DUP3 PUSH2 0x3573 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3659 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3607 DUP7 PUSH2 0x33ED JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x362F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x360A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x364C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3648 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3555 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3682 DUP3 PUSH2 0x3661 JUMP JUMPDEST PUSH2 0x368C DUP2 DUP6 PUSH2 0x366C JUMP JUMPDEST SWAP4 POP PUSH2 0x369C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B4 DUP3 DUP5 PUSH2 0x3677 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 BLOBBASEFEE DUP15 PUSH16 0xE10034A2F72B5C859BB633800554E8B7 0x4B 0x24 EXTCODESIZE PUSH29 0x79F5310D643D2C2164736F6C634300081A003300000000000000000000 ",
							"sourceMap": "371:3630:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1948:160:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3896:152:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2695:478:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3179:151;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3754:82:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1702:240:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1631:65;;;;;;;;;;;;;:::i;:::-;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1879:84:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4106:171:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;1564:61:16;;;;;;;;;;;;;:::i;:::-;;3336:573;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2973:148:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;542:46:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2231:458;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1082:363:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;475:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;594:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4708:195:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2114:111:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2716:144:4;2761:13;2786:22;2811:18;:16;:18::i;:::-;2786:43;;2846:1;:7;;2839:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144;:::o;5210:186::-;5283:4;5299:13;5315:12;:10;:12::i;:::-;5299:28;;5337:31;5346:5;5353:7;5362:5;5337:8;:31::i;:::-;5385:4;5378:11;;;5210:186;;;;:::o;1948:160:16:-;2334:13:0;:11;:13::i;:::-;2052:6:16::1;2029:11;:20;2041:7;2029:20;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2085:7;2073:28;;;2094:6;2073:28;;;;;;:::i;:::-;;;;;;;;1948:160:::0;;:::o;3896:152:4:-;3948:7;3967:22;3992:18;:16;:18::i;:::-;3967:43;;4027:1;:14;;;4020:21;;;3896:152;:::o;2695:478:16:-;2807:4;1503:19:3;:17;:19::i;:::-;2832:11:16::1;:19;2844:6;2832:19;;;;;;;;;;;;;;;;;;;;;;;;;2831:20;2823:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2913:11;:22;2925:9;2913:22;;;;;;;;;;;;;;;;;;;;;;;;;2912:23;2904:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3018:11;:19;3030:6;3018:19;;;;;;;;;;;;;;;;2999:15;:38;;:66;;;;3064:1;3041:11;:19;3053:6;3041:19;;;;;;;;;;;;;;;;:24;2999:66;2991:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;3121:45;3140:6;3148:9;3159:6;3121:18;:45::i;:::-;3114:52;;2695:478:::0;;;;;:::o;3179:151::-;2334:13:0;:11;:13::i;:::-;3268:12:16::1;3254:11;;:26;;;;;;;;;;;;;;;;;;3310:12;3295:28;;;;;;;;;;;;3179:151:::0;:::o;3754:82:4:-;3803:5;3827:2;3820:9;;3754:82;:::o;1702:240:16:-;1510:11;;;;;;;;;;;1496:25;;:10;:25;;;1488:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1820:9:::1;1796:11;:20;1808:7;1796:20;;;;;;;;;;;;;;;;:33;1792:144;;1868:9;1845:11;:20;1857:7;1845:20;;;;;;;;;;;;;;;:32;;;;1906:7;1896:29;;;1915:9;1896:29;;;;;;:::i;:::-;;;;;;;;1792:144;1702:240:::0;;:::o;1631:65::-;2334:13:0;:11;:13::i;:::-;1679:10:16::1;:8;:10::i;:::-;1631:65::o:0;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:9::1;3803:32:2;;3796:39;;3708:134:::0;:::o;1879:84:3:-;1926:4;1949:7;;;;;;;;;;;1942:14;;1879:84;:::o;4106:171:4:-;4171:7;4190:22;4215:18;:16;:18::i;:::-;4190:43;;4250:1;:11;;:20;4262:7;4250:20;;;;;;;;;;;;;;;;4243:27;;;4106:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1564:61:16:-;2334:13:0;:11;:13::i;:::-;1610:8:16::1;:6;:8::i;:::-;1564:61::o:0;3336:573::-;1503:19:3;:17;:19::i;:::-;3480:7:16::1;;:14;;3459:10;;:17;;:35;3451:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3548:23;3574:10;;:17;;3548:43;;3606:9;3601:302;3625:15;3621:1;:19;3601:302;;;3692:11;:26;3704:10;;3715:1;3704:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3692:26;;;;;;;;;;;;;;;;;;;;;;;;;3688:129;;;3742:56;;;;;;;;;;:::i;:::-;;;;;;;;3688:129;3830:48;3840:10;3852;;3863:1;3852:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3867:7;;3875:1;3867:10;;;;;;;:::i;:::-;;;;;;;;3830:9;:48::i;:::-;3642:3;;;;;;;3601:302;;;;3441:468;3336:573:::0;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2973:148:4:-;3020:13;3045:22;3070:18;:16;:18::i;:::-;3045:43;;3105:1;:9;;3098:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:148;:::o;542:46:16:-;;;;;;;;;;;;;;;;;:::o;2231:458::-;2323:4;1503:19:3;:17;:19::i;:::-;2348:11:16::1;:23;2360:10;2348:23;;;;;;;;;;;;;;;;;;;;;;;;;2347:24;2339:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2433:11;:22;2445:9;2433:22;;;;;;;;;;;;;;;;;;;;;;;;;2432:23;2424:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2538:11;:23;2550:10;2538:23;;;;;;;;;;;;;;;;2519:15;:42;;:74;;;;2592:1;2565:11;:23;2577:10;2565:23;;;;;;;;;;;;;;;;:28;2519:74;2511:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;2649:33;2664:9;2675:6;2649:14;:33::i;:::-;2642:40;;2231:458:::0;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;1082:363:16:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1197:26:16::1;1210:4;1216:6;1197:12;:26::i;:::-;1233;1248:10;1233:14;:26::i;:::-;1269:17;:15;:17::i;:::-;1296:24;:22;:24::i;:::-;1346:12;1331;:27;;;;1368:31;1374:10;1386:12;;1368:5;:31::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1082:363:16;;;:::o;475:26::-;;;;;;;;;;;;;:::o;594:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;4708:195:4:-;4788:7;4807:22;4832:18;:16;:18::i;:::-;4807:43;;4867:1;:13;;:20;4881:5;4867:20;;;;;;;;;;;;;;;:29;4888:7;4867:29;;;;;;;;;;;;;;;;4860:36;;;4708:195;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2114:111:16:-;2175:4;2198:11;:20;2210:7;2198:20;;;;;;;;;;;;;;;;;;;;;;;;;2191:27;;2114:111;;;:::o;1947:153:4:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:5:-;940:7;966:10;959:17;;887:96;:::o;10001:128:4:-;10085:37;10094:5;10101:7;10110:5;10117:4;10085:8;:37::i;:::-;10001:128;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;2031:106:3:-;2101:8;:6;:8::i;:::-;2100:9;2092:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:106::o;5988:244:4:-;6075:4;6091:15;6109:12;:10;:12::i;:::-;6091:30;;6131:37;6147:4;6153:7;6162:5;6131:15;:37::i;:::-;6178:26;6188:4;6194:2;6198:5;6178:9;:26::i;:::-;6221:4;6214:11;;;5988:244;;;;;:::o;2697:117:3:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2785:22;2794:12;:10;:12::i;:::-;2785:22;;;;;;:::i;:::-;;;;;;;;2697:117::o:0;4603:312:2:-;4692:6;4675:23;;4683:4;4675:23;;;:120;;;;4789:6;4753:42;;:32;:30;:32::i;:::-;:42;;;;4675:120;4658:251;;;4869:29;;;;;;;;;;;;;;4658:251;4603:312::o;3915:84:16:-;2334:13:0;:11;:13::i;:::-;3915:84:16;:::o;6057:538:2:-;6174:17;6156:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6152:437;;6560:17;6518:60;;;;;;;;;;;:::i;:::-;;;;;;;;6152:437;811:66:9;6258:32:2;;6250:4;:40;6246:120;;6346:4;6317:34;;;;;;;;;;;:::i;:::-;;;;;;;;6246:120;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;5032:213::-;5115:6;5098:23;;5106:4;5098:23;;;5094:145;;5199:29;;;;;;;;;;;;;;5094:145;5032:213::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;2450:115:3:-;1503:19;:17;:19::i;:::-;2519:4:::1;2509:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;2538:20;2545:12;:10;:12::i;:::-;2538:20;;;;;;:::i;:::-;;;;;;;;2450:115::o:0;6605:300:4:-;6704:1;6688:18;;:4;:18;;;6684:86;;6756:1;6729:30;;;;;;;;;;;:::i;:::-;;;;;;;;6684:86;6797:1;6783:16;;:2;:16;;;6779:86;;6851:1;6822:32;;;;;;;;;;;:::i;:::-;;;;;;;;6779:86;6874:24;6882:4;6888:2;6892:5;6874:7;:24::i;:::-;6605:300;;;:::o;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;4472:178:4:-;4541:4;4557:13;4573:12;:10;:12::i;:::-;4557:28;;4595:27;4605:5;4612:2;4616:5;4595:9;:27::i;:::-;4639:4;4632:11;;;4472:178;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2282:147:4:-;6931:20:1;:18;:20::i;:::-;2384:38:4::1;2407:5;2414:7;2384:22;:38::i;:::-;2282:147:::0;;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1084:97:3:-;6931:20:1;:18;:20::i;:::-;1147:27:3::1;:25;:27::i;:::-;1084:97::o:0;2970:67:2:-;6931:20:1;:18;:20::i;:::-;2970:67:2:o;8733:208:4:-;8822:1;8803:21;;:7;:21;;;8799:91;;8876:1;8847:32;;;;;;;;;;;:::i;:::-;;;;;;;;8799:91;8899:35;8915:1;8919:7;8928:5;8899:7;:35::i;:::-;8733:208;;:::o;10976:487::-;11084:22;11109:18;:16;:18::i;:::-;11084:43;;11158:1;11141:19;;:5;:19;;;11137:89;;11212:1;11183:32;;;;;;;;;;;:::i;:::-;;;;;;;;11137:89;11258:1;11239:21;;:7;:21;;;11235:90;;11311:1;11283:31;;;;;;;;;;;:::i;:::-;;;;;;;;11235:90;11366:5;11334:1;:13;;:20;11348:5;11334:20;;;;;;;;;;;;;;;:29;11355:7;11334:29;;;;;;;;;;;;;;;:37;;;;11385:9;11381:76;;;11431:7;11415:31;;11424:5;11415:31;;;11440:5;11415:31;;;;;;:::i;:::-;;;;;;;;11381:76;11074:389;10976:487;;;;:::o;11745:477::-;11844:24;11871:25;11881:5;11888:7;11871:9;:25::i;:::-;11844:52;;11930:17;11910:16;:37;11906:310;;11986:5;11967:16;:24;11963:130;;;12045:7;12054:16;12072:5;12018:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11963:130;12134:57;12143:5;12150:7;12178:5;12159:16;:24;12185:5;12134:8;:57::i;:::-;11906:310;11834:388;11745:477;;;:::o;2209:106:3:-;2275:8;:6;:8::i;:::-;2267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:106::o;1441:138:9:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;7220:1170:4:-;7305:22;7330:18;:16;:18::i;:::-;7305:43;;7378:1;7362:18;;:4;:18;;;7358:546;;7516:5;7498:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7358:546;;;7552:19;7574:1;:11;;:17;7586:4;7574:17;;;;;;;;;;;;;;;;7552:39;;7623:5;7609:11;:19;7605:115;;;7680:4;7686:11;7699:5;7655:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7605:115;7874:5;7860:11;:19;7840:1;:11;;:17;7852:4;7840:17;;;;;;;;;;;;;;;:39;;;;7538:366;7358:546;7932:1;7918:16;;:2;:16;;;7914:429;;8099:5;8081:1;:14;;;:23;;;;;;;;;;;7914:429;;;8313:5;8294:1;:11;;:15;8306:2;8294:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7914:429;8373:2;8358:25;;8367:4;8358:25;;;8377:5;8358:25;;;;;;:::i;:::-;;;;;;;;7295:1095;7220:1170;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2435:216:4:-;6931:20:1;:18;:20::i;:::-;2547:22:4::1;2572:18;:16;:18::i;:::-;2547:43;;2610:5;2600:1;:7;;:15;;;;;;:::i;:::-;;2637:7;2625:1;:9;;:19;;;;;;:::i;:::-;;2537:114;2435:216:::0;;:::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1187:95:3:-;6931:20:1;:18;:20::i;:::-;1270:5:3::1;1260:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;1187:95::o:0;1899:163:15:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:9:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3900:253:13:-;3983:12;4008;4022:23;4049:6;:19;;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;:55::i;:::-;4084:62;;;;3900:253;;;;:::o;6113:122:9:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4421:582:13:-;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4862:1;4841:10;:17;:22;:49;;;;;4889:1;4867:6;:18;;;:23;4841:49;4837:119;;;4934:6;4917:24;;;;;;;;;;;:::i;:::-;;;;;;;;4837:119;4976:10;4969:17;;;;4589:408;4421:582;;;;;;:::o;5543:487::-;5694:1;5674:10;:17;:21;5670:354;;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;;;;;;;;;;;;;7:99:17;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1351:75::-;1384:6;1417:2;1411:9;1401:19;;1351:75;:::o;1432:117::-;1541:1;1538;1531:12;1555:117;1664:1;1661;1654:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:116::-;3518:21;3533:5;3518:21;:::i;:::-;3511:5;3508:32;3498:60;;3554:1;3551;3544:12;3498:60;3448:116;:::o;3570:133::-;3613:5;3651:6;3638:20;3629:29;;3667:30;3691:5;3667:30;:::i;:::-;3570:133;;;;:::o;3709:468::-;3774:6;3782;3831:2;3819:9;3810:7;3806:23;3802:32;3799:119;;;3837:79;;:::i;:::-;3799:119;3957:1;3982:53;4027:7;4018:6;4007:9;4003:22;3982:53;:::i;:::-;3972:63;;3928:117;4084:2;4110:50;4152:7;4143:6;4132:9;4128:22;4110:50;:::i;:::-;4100:60;;4055:115;3709:468;;;;;:::o;4183:118::-;4270:24;4288:5;4270:24;:::i;:::-;4265:3;4258:37;4183:118;;:::o;4307:222::-;4400:4;4438:2;4427:9;4423:18;4415:26;;4451:71;4519:1;4508:9;4504:17;4495:6;4451:71;:::i;:::-;4307:222;;;;:::o;4535:619::-;4612:6;4620;4628;4677:2;4665:9;4656:7;4652:23;4648:32;4645:119;;;4683:79;;:::i;:::-;4645:119;4803:1;4828:53;4873:7;4864:6;4853:9;4849:22;4828:53;:::i;:::-;4818:63;;4774:117;4930:2;4956:53;5001:7;4992:6;4981:9;4977:22;4956:53;:::i;:::-;4946:63;;4901:118;5058:2;5084:53;5129:7;5120:6;5109:9;5105:22;5084:53;:::i;:::-;5074:63;;5029:118;4535:619;;;;;:::o;5160:329::-;5219:6;5268:2;5256:9;5247:7;5243:23;5239:32;5236:119;;;5274:79;;:::i;:::-;5236:119;5394:1;5419:53;5464:7;5455:6;5444:9;5440:22;5419:53;:::i;:::-;5409:63;;5365:117;5160:329;;;;:::o;5495:86::-;5530:7;5570:4;5563:5;5559:16;5548:27;;5495:86;;;:::o;5587:112::-;5670:22;5686:5;5670:22;:::i;:::-;5665:3;5658:35;5587:112;;:::o;5705:214::-;5794:4;5832:2;5821:9;5817:18;5809:26;;5845:67;5909:1;5898:9;5894:17;5885:6;5845:67;:::i;:::-;5705:214;;;;:::o;5925:117::-;6034:1;6031;6024:12;6048:117;6157:1;6154;6147:12;6171:180;6219:77;6216:1;6209:88;6316:4;6313:1;6306:15;6340:4;6337:1;6330:15;6357:281;6440:27;6462:4;6440:27;:::i;:::-;6432:6;6428:40;6570:6;6558:10;6555:22;6534:18;6522:10;6519:34;6516:62;6513:88;;;6581:18;;:::i;:::-;6513:88;6621:10;6617:2;6610:22;6400:238;6357:281;;:::o;6644:129::-;6678:6;6705:20;;:::i;:::-;6695:30;;6734:33;6762:4;6754:6;6734:33;:::i;:::-;6644:129;;;:::o;6779:307::-;6840:4;6930:18;6922:6;6919:30;6916:56;;;6952:18;;:::i;:::-;6916:56;6990:29;7012:6;6990:29;:::i;:::-;6982:37;;7074:4;7068;7064:15;7056:23;;6779:307;;;:::o;7092:148::-;7190:6;7185:3;7180;7167:30;7231:1;7222:6;7217:3;7213:16;7206:27;7092:148;;;:::o;7246:423::-;7323:5;7348:65;7364:48;7405:6;7364:48;:::i;:::-;7348:65;:::i;:::-;7339:74;;7436:6;7429:5;7422:21;7474:4;7467:5;7463:16;7512:3;7503:6;7498:3;7494:16;7491:25;7488:112;;;7519:79;;:::i;:::-;7488:112;7609:54;7656:6;7651:3;7646;7609:54;:::i;:::-;7329:340;7246:423;;;;;:::o;7688:338::-;7743:5;7792:3;7785:4;7777:6;7773:17;7769:27;7759:122;;7800:79;;:::i;:::-;7759:122;7917:6;7904:20;7942:78;8016:3;8008:6;8001:4;7993:6;7989:17;7942:78;:::i;:::-;7933:87;;7749:277;7688:338;;;;:::o;8032:652::-;8109:6;8117;8166:2;8154:9;8145:7;8141:23;8137:32;8134:119;;;8172:79;;:::i;:::-;8134:119;8292:1;8317:53;8362:7;8353:6;8342:9;8338:22;8317:53;:::i;:::-;8307:63;;8263:117;8447:2;8436:9;8432:18;8419:32;8478:18;8470:6;8467:30;8464:117;;;8500:79;;:::i;:::-;8464:117;8605:62;8659:7;8650:6;8639:9;8635:22;8605:62;:::i;:::-;8595:72;;8390:287;8032:652;;;;;:::o;8690:77::-;8727:7;8756:5;8745:16;;8690:77;;;:::o;8773:118::-;8860:24;8878:5;8860:24;:::i;:::-;8855:3;8848:37;8773:118;;:::o;8897:222::-;8990:4;9028:2;9017:9;9013:18;9005:26;;9041:71;9109:1;9098:9;9094:17;9085:6;9041:71;:::i;:::-;8897:222;;;;:::o;9125:117::-;9234:1;9231;9224:12;9248:117;9357:1;9354;9347:12;9388:568;9461:8;9471:6;9521:3;9514:4;9506:6;9502:17;9498:27;9488:122;;9529:79;;:::i;:::-;9488:122;9642:6;9629:20;9619:30;;9672:18;9664:6;9661:30;9658:117;;;9694:79;;:::i;:::-;9658:117;9808:4;9800:6;9796:17;9784:29;;9862:3;9854:4;9846:6;9842:17;9832:8;9828:32;9825:41;9822:128;;;9869:79;;:::i;:::-;9822:128;9388:568;;;;;:::o;9979:::-;10052:8;10062:6;10112:3;10105:4;10097:6;10093:17;10089:27;10079:122;;10120:79;;:::i;:::-;10079:122;10233:6;10220:20;10210:30;;10263:18;10255:6;10252:30;10249:117;;;10285:79;;:::i;:::-;10249:117;10399:4;10391:6;10387:17;10375:29;;10453:3;10445:4;10437:6;10433:17;10423:8;10419:32;10416:41;10413:128;;;10460:79;;:::i;:::-;10413:128;9979:568;;;;;:::o;10553:934::-;10675:6;10683;10691;10699;10748:2;10736:9;10727:7;10723:23;10719:32;10716:119;;;10754:79;;:::i;:::-;10716:119;10902:1;10891:9;10887:17;10874:31;10932:18;10924:6;10921:30;10918:117;;;10954:79;;:::i;:::-;10918:117;11067:80;11139:7;11130:6;11119:9;11115:22;11067:80;:::i;:::-;11049:98;;;;10845:312;11224:2;11213:9;11209:18;11196:32;11255:18;11247:6;11244:30;11241:117;;;11277:79;;:::i;:::-;11241:117;11390:80;11462:7;11453:6;11442:9;11438:22;11390:80;:::i;:::-;11372:98;;;;11167:313;10553:934;;;;;;;:::o;11493:118::-;11580:24;11598:5;11580:24;:::i;:::-;11575:3;11568:37;11493:118;;:::o;11617:222::-;11710:4;11748:2;11737:9;11733:18;11725:26;;11761:71;11829:1;11818:9;11814:17;11805:6;11761:71;:::i;:::-;11617:222;;;;:::o;11845:308::-;11907:4;11997:18;11989:6;11986:30;11983:56;;;12019:18;;:::i;:::-;11983:56;12057:29;12079:6;12057:29;:::i;:::-;12049:37;;12141:4;12135;12131:15;12123:23;;11845:308;;;:::o;12159:425::-;12237:5;12262:66;12278:49;12320:6;12278:49;:::i;:::-;12262:66;:::i;:::-;12253:75;;12351:6;12344:5;12337:21;12389:4;12382:5;12378:16;12427:3;12418:6;12413:3;12409:16;12406:25;12403:112;;;12434:79;;:::i;:::-;12403:112;12524:54;12571:6;12566:3;12561;12524:54;:::i;:::-;12243:341;12159:425;;;;;:::o;12604:340::-;12660:5;12709:3;12702:4;12694:6;12690:17;12686:27;12676:122;;12717:79;;:::i;:::-;12676:122;12834:6;12821:20;12859:79;12934:3;12926:6;12919:4;12911:6;12907:17;12859:79;:::i;:::-;12850:88;;12666:278;12604:340;;;;:::o;12950:979::-;13047:6;13055;13063;13112:2;13100:9;13091:7;13087:23;13083:32;13080:119;;;13118:79;;:::i;:::-;13080:119;13266:1;13255:9;13251:17;13238:31;13296:18;13288:6;13285:30;13282:117;;;13318:79;;:::i;:::-;13282:117;13423:63;13478:7;13469:6;13458:9;13454:22;13423:63;:::i;:::-;13413:73;;13209:287;13563:2;13552:9;13548:18;13535:32;13594:18;13586:6;13583:30;13580:117;;;13616:79;;:::i;:::-;13580:117;13721:63;13776:7;13767:6;13756:9;13752:22;13721:63;:::i;:::-;13711:73;;13506:288;13833:2;13859:53;13904:7;13895:6;13884:9;13880:22;13859:53;:::i;:::-;13849:63;;13804:118;12950:979;;;;;:::o;13935:474::-;14003:6;14011;14060:2;14048:9;14039:7;14035:23;14031:32;14028:119;;;14066:79;;:::i;:::-;14028:119;14186:1;14211:53;14256:7;14247:6;14236:9;14232:22;14211:53;:::i;:::-;14201:63;;14157:117;14313:2;14339:53;14384:7;14375:6;14364:9;14360:22;14339:53;:::i;:::-;14329:63;;14284:118;13935:474;;;;;:::o;14415:180::-;14463:77;14460:1;14453:88;14560:4;14557:1;14550:15;14584:4;14581:1;14574:15;14601:320;14645:6;14682:1;14676:4;14672:12;14662:22;;14729:1;14723:4;14719:12;14750:18;14740:81;;14806:4;14798:6;14794:17;14784:27;;14740:81;14868:2;14860:6;14857:14;14837:18;14834:38;14831:84;;14887:18;;:::i;:::-;14831:84;14652:269;14601:320;;;:::o;14927:225::-;15067:34;15063:1;15055:6;15051:14;15044:58;15136:8;15131:2;15123:6;15119:15;15112:33;14927:225;:::o;15158:366::-;15300:3;15321:67;15385:2;15380:3;15321:67;:::i;:::-;15314:74;;15397:93;15486:3;15397:93;:::i;:::-;15515:2;15510:3;15506:12;15499:19;;15158:366;;;:::o;15530:419::-;15696:4;15734:2;15723:9;15719:18;15711:26;;15783:9;15777:4;15773:20;15769:1;15758:9;15754:17;15747:47;15811:131;15937:4;15811:131;:::i;:::-;15803:139;;15530:419;;;:::o;15955:228::-;16095:34;16091:1;16083:6;16079:14;16072:58;16164:11;16159:2;16151:6;16147:15;16140:36;15955:228;:::o;16189:366::-;16331:3;16352:67;16416:2;16411:3;16352:67;:::i;:::-;16345:74;;16428:93;16517:3;16428:93;:::i;:::-;16546:2;16541:3;16537:12;16530:19;;16189:366;;;:::o;16561:419::-;16727:4;16765:2;16754:9;16750:18;16742:26;;16814:9;16808:4;16804:20;16800:1;16789:9;16785:17;16778:47;16842:131;16968:4;16842:131;:::i;:::-;16834:139;;16561:419;;;:::o;16986:221::-;17126:34;17122:1;17114:6;17110:14;17103:58;17195:4;17190:2;17182:6;17178:15;17171:29;16986:221;:::o;17213:366::-;17355:3;17376:67;17440:2;17435:3;17376:67;:::i;:::-;17369:74;;17452:93;17541:3;17452:93;:::i;:::-;17570:2;17565:3;17561:12;17554:19;;17213:366;;;:::o;17585:419::-;17751:4;17789:2;17778:9;17774:18;17766:26;;17838:9;17832:4;17828:20;17824:1;17813:9;17809:17;17802:47;17866:131;17992:4;17866:131;:::i;:::-;17858:139;;17585:419;;;:::o;18010:164::-;18150:16;18146:1;18138:6;18134:14;18127:40;18010:164;:::o;18180:366::-;18322:3;18343:67;18407:2;18402:3;18343:67;:::i;:::-;18336:74;;18419:93;18508:3;18419:93;:::i;:::-;18537:2;18532:3;18528:12;18521:19;;18180:366;;;:::o;18552:419::-;18718:4;18756:2;18745:9;18741:18;18733:26;;18805:9;18799:4;18795:20;18791:1;18780:9;18776:17;18769:47;18833:131;18959:4;18833:131;:::i;:::-;18825:139;;18552:419;;;:::o;18977:226::-;19117:34;19113:1;19105:6;19101:14;19094:58;19186:9;19181:2;19173:6;19169:15;19162:34;18977:226;:::o;19209:366::-;19351:3;19372:67;19436:2;19431:3;19372:67;:::i;:::-;19365:74;;19448:93;19537:3;19448:93;:::i;:::-;19566:2;19561:3;19557:12;19550:19;;19209:366;;;:::o;19581:419::-;19747:4;19785:2;19774:9;19770:18;19762:26;;19834:9;19828:4;19824:20;19820:1;19809:9;19805:17;19798:47;19862:131;19988:4;19862:131;:::i;:::-;19854:139;;19581:419;;;:::o;20006:180::-;20054:77;20051:1;20044:88;20151:4;20148:1;20141:15;20175:4;20172:1;20165:15;20192:233;20332:34;20328:1;20320:6;20316:14;20309:58;20401:16;20396:2;20388:6;20384:15;20377:41;20192:233;:::o;20431:366::-;20573:3;20594:67;20658:2;20653:3;20594:67;:::i;:::-;20587:74;;20670:93;20759:3;20670:93;:::i;:::-;20788:2;20783:3;20779:12;20772:19;;20431:366;;;:::o;20803:419::-;20969:4;21007:2;20996:9;20992:18;20984:26;;21056:9;21050:4;21046:20;21042:1;21031:9;21027:17;21020:47;21084:131;21210:4;21084:131;:::i;:::-;21076:139;;20803:419;;;:::o;21228:85::-;21273:7;21302:5;21291:16;;21228:85;;;:::o;21319:101::-;21355:7;21395:18;21388:5;21384:30;21373:41;;21319:101;;;:::o;21426:60::-;21454:3;21475:5;21468:12;;21426:60;;;:::o;21492:156::-;21549:9;21582:60;21599:42;21608:32;21634:5;21608:32;:::i;:::-;21599:42;:::i;:::-;21582:60;:::i;:::-;21569:73;;21492:156;;;:::o;21654:145::-;21748:44;21786:5;21748:44;:::i;:::-;21743:3;21736:57;21654:145;;:::o;21805:236::-;21905:4;21943:2;21932:9;21928:18;21920:26;;21956:78;22031:1;22020:9;22016:17;22007:6;21956:78;:::i;:::-;21805:236;;;;:::o;22047:166::-;22187:18;22183:1;22175:6;22171:14;22164:42;22047:166;:::o;22219:366::-;22361:3;22382:67;22446:2;22441:3;22382:67;:::i;:::-;22375:74;;22458:93;22547:3;22458:93;:::i;:::-;22576:2;22571:3;22567:12;22560:19;;22219:366;;;:::o;22591:419::-;22757:4;22795:2;22784:9;22780:18;22772:26;;22844:9;22838:4;22834:20;22830:1;22819:9;22815:17;22808:47;22872:131;22998:4;22872:131;:::i;:::-;22864:139;;22591:419;;;:::o;23016:122::-;23089:24;23107:5;23089:24;:::i;:::-;23082:5;23079:35;23069:63;;23128:1;23125;23118:12;23069:63;23016:122;:::o;23144:143::-;23201:5;23232:6;23226:13;23217:22;;23248:33;23275:5;23248:33;:::i;:::-;23144:143;;;;:::o;23293:351::-;23363:6;23412:2;23400:9;23391:7;23387:23;23383:32;23380:119;;;23418:79;;:::i;:::-;23380:119;23538:1;23563:64;23619:7;23610:6;23599:9;23595:22;23563:64;:::i;:::-;23553:74;;23509:128;23293:351;;;;:::o;23650:442::-;23799:4;23837:2;23826:9;23822:18;23814:26;;23850:71;23918:1;23907:9;23903:17;23894:6;23850:71;:::i;:::-;23931:72;23999:2;23988:9;23984:18;23975:6;23931:72;:::i;:::-;24013;24081:2;24070:9;24066:18;24057:6;24013:72;:::i;:::-;23650:442;;;;;;:::o;24098:170::-;24238:22;24234:1;24226:6;24222:14;24215:46;24098:170;:::o;24274:366::-;24416:3;24437:67;24501:2;24496:3;24437:67;:::i;:::-;24430:74;;24513:93;24602:3;24513:93;:::i;:::-;24631:2;24626:3;24622:12;24615:19;;24274:366;;;:::o;24646:419::-;24812:4;24850:2;24839:9;24835:18;24827:26;;24899:9;24893:4;24889:20;24885:1;24874:9;24870:17;24863:47;24927:131;25053:4;24927:131;:::i;:::-;24919:139;;24646:419;;;:::o;25071:180::-;25119:77;25116:1;25109:88;25216:4;25213:1;25206:15;25240:4;25237:1;25230:15;25257:191;25297:3;25316:20;25334:1;25316:20;:::i;:::-;25311:25;;25350:20;25368:1;25350:20;:::i;:::-;25345:25;;25393:1;25390;25386:9;25379:16;;25414:3;25411:1;25408:10;25405:36;;;25421:18;;:::i;:::-;25405:36;25257:191;;;;:::o;25454:141::-;25503:4;25526:3;25518:11;;25549:3;25546:1;25539:14;25583:4;25580:1;25570:18;25562:26;;25454:141;;;:::o;25601:93::-;25638:6;25685:2;25680;25673:5;25669:14;25665:23;25655:33;;25601:93;;;:::o;25700:107::-;25744:8;25794:5;25788:4;25784:16;25763:37;;25700:107;;;;:::o;25813:393::-;25882:6;25932:1;25920:10;25916:18;25955:97;25985:66;25974:9;25955:97;:::i;:::-;26073:39;26103:8;26092:9;26073:39;:::i;:::-;26061:51;;26145:4;26141:9;26134:5;26130:21;26121:30;;26194:4;26184:8;26180:19;26173:5;26170:30;26160:40;;25889:317;;25813:393;;;;;:::o;26212:142::-;26262:9;26295:53;26313:34;26322:24;26340:5;26322:24;:::i;:::-;26313:34;:::i;:::-;26295:53;:::i;:::-;26282:66;;26212:142;;;:::o;26360:75::-;26403:3;26424:5;26417:12;;26360:75;;;:::o;26441:269::-;26551:39;26582:7;26551:39;:::i;:::-;26612:91;26661:41;26685:16;26661:41;:::i;:::-;26653:6;26646:4;26640:11;26612:91;:::i;:::-;26606:4;26599:105;26517:193;26441:269;;;:::o;26716:73::-;26761:3;26716:73;:::o;26795:189::-;26872:32;;:::i;:::-;26913:65;26971:6;26963;26957:4;26913:65;:::i;:::-;26848:136;26795:189;;:::o;26990:186::-;27050:120;27067:3;27060:5;27057:14;27050:120;;;27121:39;27158:1;27151:5;27121:39;:::i;:::-;27094:1;27087:5;27083:13;27074:22;;27050:120;;;26990:186;;:::o;27182:543::-;27283:2;27278:3;27275:11;27272:446;;;27317:38;27349:5;27317:38;:::i;:::-;27401:29;27419:10;27401:29;:::i;:::-;27391:8;27387:44;27584:2;27572:10;27569:18;27566:49;;;27605:8;27590:23;;27566:49;27628:80;27684:22;27702:3;27684:22;:::i;:::-;27674:8;27670:37;27657:11;27628:80;:::i;:::-;27287:431;;27272:446;27182:543;;;:::o;27731:117::-;27785:8;27835:5;27829:4;27825:16;27804:37;;27731:117;;;;:::o;27854:169::-;27898:6;27931:51;27979:1;27975:6;27967:5;27964:1;27960:13;27931:51;:::i;:::-;27927:56;28012:4;28006;28002:15;27992:25;;27905:118;27854:169;;;;:::o;28028:295::-;28104:4;28250:29;28275:3;28269:4;28250:29;:::i;:::-;28242:37;;28312:3;28309:1;28305:11;28299:4;28296:21;28288:29;;28028:295;;;;:::o;28328:1395::-;28445:37;28478:3;28445:37;:::i;:::-;28547:18;28539:6;28536:30;28533:56;;;28569:18;;:::i;:::-;28533:56;28613:38;28645:4;28639:11;28613:38;:::i;:::-;28698:67;28758:6;28750;28744:4;28698:67;:::i;:::-;28792:1;28816:4;28803:17;;28848:2;28840:6;28837:14;28865:1;28860:618;;;;29522:1;29539:6;29536:77;;;29588:9;29583:3;29579:19;29573:26;29564:35;;29536:77;29639:67;29699:6;29692:5;29639:67;:::i;:::-;29633:4;29626:81;29495:222;28830:887;;28860:618;28912:4;28908:9;28900:6;28896:22;28946:37;28978:4;28946:37;:::i;:::-;29005:1;29019:208;29033:7;29030:1;29027:14;29019:208;;;29112:9;29107:3;29103:19;29097:26;29089:6;29082:42;29163:1;29155:6;29151:14;29141:24;;29210:2;29199:9;29195:18;29182:31;;29056:4;29053:1;29049:12;29044:17;;29019:208;;;29255:6;29246:7;29243:19;29240:179;;;29313:9;29308:3;29304:19;29298:26;29356:48;29398:4;29390:6;29386:17;29375:9;29356:48;:::i;:::-;29348:6;29341:64;29263:156;29240:179;29465:1;29461;29453:6;29449:14;29445:22;29439:4;29432:36;28867:611;;;28830:887;;28420:1303;;;28328:1395;;:::o;29729:98::-;29780:6;29814:5;29808:12;29798:22;;29729:98;;;:::o;29833:147::-;29934:11;29971:3;29956:18;;29833:147;;;;:::o;29986:386::-;30090:3;30118:38;30150:5;30118:38;:::i;:::-;30172:88;30253:6;30248:3;30172:88;:::i;:::-;30165:95;;30269:65;30327:6;30322:3;30315:4;30308:5;30304:16;30269:65;:::i;:::-;30359:6;30354:3;30350:16;30343:23;;30094:278;29986:386;;;;:::o;30378:271::-;30508:3;30530:93;30619:3;30610:6;30530:93;:::i;:::-;30523:100;;30640:3;30633:10;;30378:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2813800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "3006",
								"batchTransfer(address[],uint256[])": "infinite",
								"blacklisted(address)": "2889",
								"decimals()": "389",
								"icoContract()": "2603",
								"initialize(string,string,uint256)": "infinite",
								"isBlacklisted(address)": "2993",
								"lockedUntil(address)": "2903",
								"name()": "infinite",
								"owner()": "2621",
								"pause()": "infinite",
								"paused()": "2568",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"setBlacklist(address,bool)": "infinite",
								"setICOContract(address)": "infinite",
								"setLockup(address,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2581",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 371,
									"end": 4001,
									"name": "PUSH",
									"source": 16,
									"value": "A0"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 971,
									"end": 1076,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 971,
									"end": 1076,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 971,
									"end": 1076,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 971,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 971,
									"end": 1076,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 971,
									"end": 1076,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 971,
									"end": 1076,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 971,
									"end": 1076,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 971,
									"end": 1076,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 971,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 971,
									"end": 1076,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 995,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 995,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 995,
									"end": 1015,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 995,
									"end": 1015,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 995,
									"end": 1017,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 995,
									"end": 1017,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 995,
									"end": 1017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 995,
									"end": 1017,
									"name": "tag",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 995,
									"end": 1017,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "6"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7986,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8052,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8036,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8099,
									"end": 8115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 8087,
									"end": 8116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8795,
									"end": 8825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 108,
									"name": "tag",
									"source": 17,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 108,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 43,
									"end": 50,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 101,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 76,
									"end": 81,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 72,
									"end": 102,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 61,
									"end": 102,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 61,
									"end": 102,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 7,
									"end": 108,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 114,
									"end": 229,
									"name": "tag",
									"source": 17,
									"value": "16"
								},
								{
									"begin": 114,
									"end": 229,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 221,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "15"
								},
								{
									"begin": 199,
									"end": 222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 199,
									"end": 222,
									"name": "tag",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 194,
									"end": 197,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 187,
									"end": 223,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 114,
									"end": 229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"name": "tag",
									"source": 17,
									"value": "13"
								},
								{
									"begin": 235,
									"end": 453,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 366,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 362,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 349,
									"end": 367,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 341,
									"end": 367,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 341,
									"end": 367,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 441,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 428,
									"end": 445,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "16"
								},
								{
									"begin": 377,
									"end": 446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 377,
									"end": 446,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 377,
									"end": 446,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "tag",
									"source": 16,
									"value": "6"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "ASSIGNIMMUTABLE",
									"source": 16,
									"value": "468"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 4001,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205f4a8e6fe10034a2f72b5c859bb633800554e8b74b243b7c79f5310d643d2c2164736f6c634300081a0033",
									".code": [
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "AD3CB1CC"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "DBAC26E9"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "DBAC26E9"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "DD62ED3E"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "F2FDE38B"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "FE575A87"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "AD3CB1CC"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "B119490E"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "C66E4095"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "95D89B41"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "9BC289F1"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "A9059CBB"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "8456CB59"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "88D695B2"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "313CE567"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "4F1EF286"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "4F1EF286"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "52D1902D"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "5C975ABB"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "70A08231"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "313CE567"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "3E579307"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "3F4BA83A"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "6FDDE03"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "95EA7B3"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "153B0D1E"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "18160DDD"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "2E0D2A00"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 371,
											"end": 4001,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 1948,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 1948,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "tag",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2695,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "tag",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 2695,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "tag",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 2695,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "tag",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "tag",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "tag",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 3179,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 3179,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "tag",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "tag",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 1702,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "tag",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1702,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "tag",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "tag",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 1631,
											"end": 1696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "101"
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "tag",
											"source": 16,
											"value": "101"
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "102"
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "103"
										},
										{
											"begin": 1564,
											"end": 1625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "tag",
											"source": 16,
											"value": "102"
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "tag",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "tag",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "105"
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 3336,
											"end": 3909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "tag",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 3336,
											"end": 3909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "tag",
											"source": 16,
											"value": "105"
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 542,
											"end": 588,
											"name": "tag",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "tag",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 542,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "tag",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 542,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "tag",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 542,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "tag",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "123"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "tag",
											"source": 16,
											"value": "123"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "125"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 2231,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "tag",
											"source": 16,
											"value": "125"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "126"
										},
										{
											"begin": 2231,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "tag",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "127"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 2231,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "tag",
											"source": 16,
											"value": "127"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "tag",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "134"
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 1082,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "tag",
											"source": 16,
											"value": "134"
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 1082,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "tag",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "tag",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 475,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "tag",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 475,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "tag",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "tag",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 594,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "tag",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 594,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "tag",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 594,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "tag",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "156"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "tag",
											"source": 16,
											"value": "156"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "158"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 2114,
											"end": 2225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "tag",
											"source": 16,
											"value": "158"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 2114,
											"end": 2225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "tag",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 2114,
											"end": 2225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "tag",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2786,
											"end": 2808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2811,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5315,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5315,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5337,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5385,
											"end": 5389,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "tag",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2058,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2048,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2058,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2085,
											"end": 2092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "CF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8"
										},
										{
											"begin": 2094,
											"end": 2100,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 2073,
											"end": 2101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2101,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3992,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3992,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "tag",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2850,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2832,
											"end": 2851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2831,
											"end": 2851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 2823,
											"end": 2894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 2823,
											"end": 2894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2934,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2913,
											"end": 2935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 2935,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 2904,
											"end": 2981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 2904,
											"end": 2981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3036,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 3018,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2999,
											"end": 3014,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 16
										},
										{
											"begin": 2999,
											"end": 3037,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2999,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2999,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2999,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 2999,
											"end": 3065,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2999,
											"end": 3065,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3064,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3059,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3060,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3041,
											"end": 3065,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2999,
											"end": 3065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 2999,
											"end": 3065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 2991,
											"end": 3104,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 2991,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3121,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 3140,
											"end": 3146,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3148,
											"end": 3157,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3159,
											"end": 3165,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3121,
											"end": 3139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 3121,
											"end": 3166,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3121,
											"end": 3166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 3121,
											"end": 3166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3114,
											"end": 3166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3114,
											"end": 3166,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2695,
											"end": 3173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3280,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 3254,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3254,
											"end": 3280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8"
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3295,
											"end": 3323,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1496,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1496,
											"end": 1521,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1496,
											"end": 1506,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1496,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1496,
											"end": 1521,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1496,
											"end": 1521,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 1488,
											"end": 1540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "tag",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "tag",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1820,
											"end": 1829,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1815,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1829,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1792,
											"end": 1936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 1792,
											"end": 1936,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1868,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1864,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1865,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1906,
											"end": 1913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F"
										},
										{
											"begin": 1915,
											"end": 1924,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 1896,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1896,
											"end": 1925,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 16
										},
										{
											"begin": 1792,
											"end": 1936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 1792,
											"end": 1936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "tag",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 1631,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 1679,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 1679,
											"end": 1689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1679,
											"end": 1689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 1679,
											"end": 1689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1631,
											"end": 1696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 4215,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4215,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "tag",
											"source": 16,
											"value": "103"
										},
										{
											"begin": 1564,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 1610,
											"end": 1616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 1610,
											"end": 1618,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1610,
											"end": 1618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 1610,
											"end": 1618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "tag",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3480,
											"end": 3487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3480,
											"end": 3494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3480,
											"end": 3494,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3459,
											"end": 3469,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3459,
											"end": 3469,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3459,
											"end": 3476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3459,
											"end": 3476,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3459,
											"end": 3494,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 3451,
											"end": 3538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 3451,
											"end": 3538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3548,
											"end": 3571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3584,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3574,
											"end": 3584,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3574,
											"end": 3591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3574,
											"end": 3591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3548,
											"end": 3591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3548,
											"end": 3591,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3606,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 3903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 3601,
											"end": 3903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3625,
											"end": 3640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3621,
											"end": 3622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3621,
											"end": 3640,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3601,
											"end": 3903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3601,
											"end": 3903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 3601,
											"end": 3903,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 3714,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3714,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3715,
											"end": 3716,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "250"
										},
										{
											"begin": 3704,
											"end": 3717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 3704,
											"end": 3717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 3704,
											"end": 3717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 3692,
											"end": 3718,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3688,
											"end": 3817,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3688,
											"end": 3817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 3688,
											"end": 3817,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 3742,
											"end": 3798,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3742,
											"end": 3798,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3688,
											"end": 3817,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 3688,
											"end": 3817,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3830,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "255"
										},
										{
											"begin": 3840,
											"end": 3850,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3862,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3862,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3863,
											"end": 3864,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "256"
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "250"
										},
										{
											"begin": 3852,
											"end": 3865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "256"
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 3852,
											"end": 3865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3874,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3874,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3875,
											"end": 3876,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "260"
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "250"
										},
										{
											"begin": 3867,
											"end": 3877,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "260"
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3877,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3830,
											"end": 3839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 3830,
											"end": 3878,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3830,
											"end": 3878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "255"
										},
										{
											"begin": 3830,
											"end": 3878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3642,
											"end": 3645,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3642,
											"end": 3645,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3642,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3642,
											"end": 3645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3642,
											"end": 3645,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3642,
											"end": 3645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3642,
											"end": 3645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3601,
											"end": 3903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 3601,
											"end": 3903,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3601,
											"end": 3903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 3601,
											"end": 3903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3601,
											"end": 3903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3441,
											"end": 3909,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3336,
											"end": 3909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 3070,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3070,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 542,
											"end": 588,
											"name": "tag",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 542,
											"end": 588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "tag",
											"source": 16,
											"value": "126"
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2323,
											"end": 2327,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2348,
											"end": 2371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2347,
											"end": 2371,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 2339,
											"end": 2414,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 2339,
											"end": 2414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2454,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2433,
											"end": 2455,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2455,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "277"
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 2424,
											"end": 2501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "277"
										},
										{
											"begin": 2424,
											"end": 2501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2560,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2538,
											"end": 2561,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2519,
											"end": 2534,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 16
										},
										{
											"begin": 2519,
											"end": 2561,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2519,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2519,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2519,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "279"
										},
										{
											"begin": 2519,
											"end": 2593,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2519,
											"end": 2593,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2592,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2587,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2593,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2519,
											"end": 2593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "279"
										},
										{
											"begin": 2519,
											"end": 2593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 2511,
											"end": 2632,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 2511,
											"end": 2632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2649,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "282"
										},
										{
											"begin": 2664,
											"end": 2673,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2675,
											"end": 2681,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2649,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 2649,
											"end": 2682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2649,
											"end": 2682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "282"
										},
										{
											"begin": 2649,
											"end": 2682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2642,
											"end": 2682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "tag",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 1210,
											"end": 1214,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 1216,
											"end": 1222,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 1197,
											"end": 1209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 1197,
											"end": 1223,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1197,
											"end": 1223,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 1197,
											"end": 1223,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1233,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 1248,
											"end": 1258,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1233,
											"end": 1247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 1233,
											"end": 1259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1233,
											"end": 1259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 1233,
											"end": 1259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1269,
											"end": 1286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 1269,
											"end": 1284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 1269,
											"end": 1286,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1269,
											"end": 1286,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 1269,
											"end": 1286,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1296,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 1296,
											"end": 1318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 1296,
											"end": 1320,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1296,
											"end": 1320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 1296,
											"end": 1320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1346,
											"end": 1358,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1331,
											"end": 1343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 1331,
											"end": 1358,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1331,
											"end": 1358,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1331,
											"end": 1358,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1331,
											"end": 1358,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 1374,
											"end": 1384,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1386,
											"end": 1398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 1386,
											"end": 1398,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 1368,
											"end": 1399,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 1368,
											"end": 1399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1082,
											"end": 1445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "tag",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 475,
											"end": 501,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 475,
											"end": 501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "tag",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 594,
											"end": 637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 4832,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4832,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "tag",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2209,
											"name": "PUSH",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2217,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2191,
											"end": 2218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2191,
											"end": 2218,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2114,
											"end": 2225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10085,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 10085,
											"end": 10122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2101,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 2092,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 6109,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6109,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6167,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 6131,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6194,
											"end": 6196,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6198,
											"end": 6203,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6178,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 1750,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 2794,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2794,
											"end": 2806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2785,
											"end": 2807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 4753,
											"end": 4783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 4753,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3999,
											"name": "tag",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 3915,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3915,
											"end": 3999,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6518,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6317,
											"end": 6351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6209,
											"end": 6444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 2545,
											"end": 2555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2545,
											"end": 2557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2538,
											"end": 2558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6729,
											"end": 6759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "tag",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "tag",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6822,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 6874,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 4573,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4573,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "tag",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 4605,
											"end": 4610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 4595,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 2407,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 2384,
											"end": 2422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 1147,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8822,
											"end": 8823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8847,
											"end": 8879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "tag",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "tag",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 8915,
											"end": 8916,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8928,
											"end": 8933,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 8899,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "tag",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "409"
										},
										{
											"begin": 11109,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 11109,
											"end": 11127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "tag",
											"source": 4,
											"value": "409"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11158,
											"end": 11159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11146,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 11183,
											"end": 11215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "tag",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "tag",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11246,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 11283,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "tag",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11366,
											"end": 11371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11355,
											"end": 11362,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11440,
											"end": 11445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 11415,
											"end": 11446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "tag",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "tag",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 11881,
											"end": 11886,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11888,
											"end": 11895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 11871,
											"end": 11896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11930,
											"end": 11947,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11910,
											"end": 11926,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11910,
											"end": 11947,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11986,
											"end": 11991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11967,
											"end": 11983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11967,
											"end": 11991,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12045,
											"end": 12052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12072,
											"end": 12077,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 12018,
											"end": 12078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "tag",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "tag",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 12143,
											"end": 12148,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12150,
											"end": 12157,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12178,
											"end": 12183,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12159,
											"end": 12183,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12185,
											"end": 12190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 12134,
											"end": 12191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "tag",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11834,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2275,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "tag",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 2267,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 9,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "tag",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 7330,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 7498,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "tag",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7590,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7623,
											"end": 7628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7699,
											"end": 7704,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 7655,
											"end": 7705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "tag",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "tag",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7874,
											"end": 7879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7538,
											"end": 7904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8099,
											"end": 8104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8373,
											"end": 8375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8377,
											"end": 8382,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 8358,
											"end": 8383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "tag",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7295,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 2572,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2572,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 2600,
											"end": 2615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2637,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 2625,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 4049,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 4091,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4617,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 4617,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4851,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4873,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 13,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 4917,
											"end": 4941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5684,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 5882,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5942,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5924,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5899,
											"end": 5943,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 13,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 287,
											"end": 535,
											"name": "tag",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 287,
											"end": 535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 387,
											"end": 400,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 379,
											"end": 492,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 469,
											"end": 480,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 463,
											"end": 481,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 450,
											"end": 461,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 443,
											"end": 482,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 408,
											"end": 418,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 403,
											"end": 418,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 403,
											"end": 418,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 508,
											"end": 524,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 501,
											"end": 528,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 349,
											"end": 535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 287,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 613,
											"end": 627,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 609,
											"end": 637,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 599,
											"end": 637,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 599,
											"end": 637,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 541,
											"end": 643,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "tag",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 765,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 765,
											"end": 804,
											"name": "tag",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 879,
											"end": 882,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 820,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 820,
											"end": 891,
											"name": "tag",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 820,
											"end": 891,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 813,
											"end": 891,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 813,
											"end": 891,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 900,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 900,
											"end": 965,
											"name": "tag",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 900,
											"end": 965,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 990,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 741,
											"end": 1026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 649,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "tag",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1196,
											"end": 1243,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 1260,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "tag",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1351,
											"end": 1426,
											"name": "tag",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 1351,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1384,
											"end": 1390,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1351,
											"end": 1426,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1351,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "tag",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1531,
											"end": 1543,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1555,
											"end": 1672,
											"name": "tag",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 1555,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "tag",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1797,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1744,
											"end": 1798,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1678,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1810,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "tag",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 1985,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "tag",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1975,
											"end": 2010,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "tag",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1912,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "tag",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2111,
											"end": 2131,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 2167,
											"end": 2172,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 2140,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "tag",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2040,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "tag",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "tag",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 2672,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 2817,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "tag",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2880,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 2945,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "tag",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3021,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "tag",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 3198,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "tag",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3117,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "tag",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 3370,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "tag",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3232,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3448,
											"end": 3564,
											"name": "tag",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 3448,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "625"
										},
										{
											"begin": 3533,
											"end": 3538,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 3518,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "tag",
											"source": 17,
											"value": "625"
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3511,
											"end": 3516,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3508,
											"end": 3540,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3544,
											"end": 3556,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "tag",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3448,
											"end": 3564,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3448,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "tag",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3618,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3629,
											"end": 3658,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3629,
											"end": 3658,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 3667,
											"end": 3697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "tag",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3774,
											"end": 3780,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3788,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 3833,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3806,
											"end": 3829,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3802,
											"end": 3834,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 3837,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "tag",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "tag",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "632"
										},
										{
											"begin": 4027,
											"end": 4034,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4007,
											"end": 4016,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4003,
											"end": 4025,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 3982,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "tag",
											"source": 17,
											"value": "632"
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3972,
											"end": 4035,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3972,
											"end": 4035,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 4045,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 4152,
											"end": 4159,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4143,
											"end": 4149,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 4110,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "tag",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4055,
											"end": 4170,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3709,
											"end": 4177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "tag",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 4288,
											"end": 4293,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 4270,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "tag",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4268,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4258,
											"end": 4295,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "tag",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4400,
											"end": 4404,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4440,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4427,
											"end": 4436,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4423,
											"end": 4441,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4415,
											"end": 4441,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4415,
											"end": 4441,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 4519,
											"end": 4520,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4517,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4521,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 4451,
											"end": 4522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "tag",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4307,
											"end": 4529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4679,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4665,
											"end": 4674,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4652,
											"end": 4675,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "640"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 4683,
											"end": 4762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "tag",
											"source": 17,
											"value": "640"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "tag",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 4873,
											"end": 4880,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4849,
											"end": 4871,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 4828,
											"end": 4881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "tag",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4774,
											"end": 4891,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4930,
											"end": 4932,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 5001,
											"end": 5008,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4992,
											"end": 4998,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4981,
											"end": 4990,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 4999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 4956,
											"end": 5009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "tag",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4946,
											"end": 5009,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4946,
											"end": 5009,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4901,
											"end": 5019,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "643"
										},
										{
											"begin": 5129,
											"end": 5136,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5120,
											"end": 5126,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5109,
											"end": 5118,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5105,
											"end": 5127,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 5084,
											"end": 5137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "tag",
											"source": 17,
											"value": "643"
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5074,
											"end": 5137,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5074,
											"end": 5137,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5029,
											"end": 5147,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 5154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "tag",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5270,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5254,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5243,
											"end": 5266,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5239,
											"end": 5271,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "646"
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 5274,
											"end": 5353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "tag",
											"source": 17,
											"value": "646"
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "tag",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5394,
											"end": 5395,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 5464,
											"end": 5471,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5455,
											"end": 5461,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5444,
											"end": 5453,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 5419,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "tag",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5472,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5365,
											"end": 5482,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5160,
											"end": 5489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "tag",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5574,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 5563,
											"end": 5568,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5559,
											"end": 5575,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 5686,
											"end": 5691,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 5670,
											"end": 5692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "tag",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5665,
											"end": 5668,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5693,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5794,
											"end": 5798,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5834,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5830,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5809,
											"end": 5835,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5809,
											"end": 5835,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "652"
										},
										{
											"begin": 5909,
											"end": 5910,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5907,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5894,
											"end": 5911,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5885,
											"end": 5891,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 5845,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "tag",
											"source": 17,
											"value": "652"
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 5919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5925,
											"end": 6042,
											"name": "tag",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 5925,
											"end": 6042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6035,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6032,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6024,
											"end": 6036,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6048,
											"end": 6165,
											"name": "tag",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 6048,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6155,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6147,
											"end": 6159,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6171,
											"end": 6351,
											"name": "tag",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 6171,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6219,
											"end": 6296,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6216,
											"end": 6217,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6209,
											"end": 6297,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 6313,
											"end": 6314,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6306,
											"end": 6321,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6340,
											"end": 6344,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6330,
											"end": 6345,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6357,
											"end": 6638,
											"name": "tag",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 6357,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6440,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 6462,
											"end": 6466,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6440,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 6440,
											"end": 6467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6440,
											"end": 6467,
											"name": "tag",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 6440,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6432,
											"end": 6438,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6428,
											"end": 6468,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6570,
											"end": 6576,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6558,
											"end": 6568,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6555,
											"end": 6577,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 6534,
											"end": 6552,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6522,
											"end": 6532,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6519,
											"end": 6553,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6516,
											"end": 6578,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 6513,
											"end": 6601,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6513,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "658"
										},
										{
											"begin": 6513,
											"end": 6601,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 6581,
											"end": 6599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "tag",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6513,
											"end": 6601,
											"name": "tag",
											"source": 17,
											"value": "658"
										},
										{
											"begin": 6513,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6621,
											"end": 6631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6617,
											"end": 6619,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6610,
											"end": 6632,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6357,
											"end": 6638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6357,
											"end": 6638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6357,
											"end": 6638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6644,
											"end": 6773,
											"name": "tag",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 6644,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6678,
											"end": 6684,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 6705,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "tag",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6695,
											"end": 6725,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6695,
											"end": 6725,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6734,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 6762,
											"end": 6766,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6754,
											"end": 6760,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6734,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 6734,
											"end": 6767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6734,
											"end": 6767,
											"name": "tag",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 6734,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6644,
											"end": 6773,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6644,
											"end": 6773,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6644,
											"end": 6773,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6644,
											"end": 6773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6779,
											"end": 7086,
											"name": "tag",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 6779,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6948,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6919,
											"end": 6949,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6916,
											"end": 6972,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6916,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 6916,
											"end": 6972,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 6952,
											"end": 6970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "tag",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6916,
											"end": 6972,
											"name": "tag",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 6916,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6990,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 7012,
											"end": 7018,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6990,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 6990,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6990,
											"end": 7019,
											"name": "tag",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 6990,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6982,
											"end": 7019,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6982,
											"end": 7019,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7074,
											"end": 7078,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7072,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7064,
											"end": 7079,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7056,
											"end": 7079,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7056,
											"end": 7079,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6779,
											"end": 7086,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6779,
											"end": 7086,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6779,
											"end": 7086,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6779,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7092,
											"end": 7240,
											"name": "tag",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 7092,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7190,
											"end": 7196,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7185,
											"end": 7188,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7180,
											"end": 7183,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7197,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 7231,
											"end": 7232,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7228,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7217,
											"end": 7220,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7213,
											"end": 7229,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7206,
											"end": 7233,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7092,
											"end": 7240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7092,
											"end": 7240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7092,
											"end": 7240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7092,
											"end": 7240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "tag",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7323,
											"end": 7328,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 7364,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "670"
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7364,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 7364,
											"end": 7412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7364,
											"end": 7412,
											"name": "tag",
											"source": 17,
											"value": "670"
										},
										{
											"begin": 7364,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7348,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 7348,
											"end": 7413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7348,
											"end": 7413,
											"name": "tag",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 7348,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7339,
											"end": 7413,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7339,
											"end": 7413,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7436,
											"end": 7442,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7429,
											"end": 7434,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7422,
											"end": 7443,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7467,
											"end": 7472,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7463,
											"end": 7479,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7512,
											"end": 7515,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7503,
											"end": 7509,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7494,
											"end": 7510,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7491,
											"end": 7516,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7488,
											"end": 7600,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7488,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 7488,
											"end": 7600,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7519,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 7519,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 7519,
											"end": 7598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7519,
											"end": 7598,
											"name": "tag",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 7519,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7488,
											"end": 7600,
											"name": "tag",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 7488,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7609,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 7656,
											"end": 7662,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7651,
											"end": 7654,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7646,
											"end": 7649,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7609,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 7609,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7609,
											"end": 7663,
											"name": "tag",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 7609,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7329,
											"end": 7669,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7246,
											"end": 7669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "tag",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7743,
											"end": 7748,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7792,
											"end": 7795,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7785,
											"end": 7789,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7777,
											"end": 7783,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7773,
											"end": 7790,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7769,
											"end": 7796,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7759,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "675"
										},
										{
											"begin": 7759,
											"end": 7881,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7800,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 7800,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 7800,
											"end": 7879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7800,
											"end": 7879,
											"name": "tag",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 7800,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7759,
											"end": 7881,
											"name": "tag",
											"source": 17,
											"value": "675"
										},
										{
											"begin": 7759,
											"end": 7881,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7904,
											"end": 7924,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 7942,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 8016,
											"end": 8019,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8001,
											"end": 8005,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7989,
											"end": 8006,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7942,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 7942,
											"end": 8020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7942,
											"end": 8020,
											"name": "tag",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 7942,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7933,
											"end": 8020,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7933,
											"end": 8020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7749,
											"end": 8026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7688,
											"end": 8026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8109,
											"end": 8115,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8123,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8166,
											"end": 8168,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8145,
											"end": 8152,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8141,
											"end": 8164,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8137,
											"end": 8169,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8134,
											"end": 8253,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8134,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "679"
										},
										{
											"begin": 8134,
											"end": 8253,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 8172,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 8172,
											"end": 8251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8251,
											"name": "tag",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 8172,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8134,
											"end": 8253,
											"name": "tag",
											"source": 17,
											"value": "679"
										},
										{
											"begin": 8134,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8292,
											"end": 8293,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "681"
										},
										{
											"begin": 8362,
											"end": 8369,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8353,
											"end": 8359,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8342,
											"end": 8351,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8338,
											"end": 8360,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8317,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 8317,
											"end": 8370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8317,
											"end": 8370,
											"name": "tag",
											"source": 17,
											"value": "681"
										},
										{
											"begin": 8317,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8307,
											"end": 8370,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8307,
											"end": 8370,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8263,
											"end": 8380,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8447,
											"end": 8449,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8436,
											"end": 8445,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8419,
											"end": 8451,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8467,
											"end": 8497,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "682"
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8500,
											"end": 8579,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 8500,
											"end": 8579,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 8500,
											"end": 8579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8500,
											"end": 8579,
											"name": "tag",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 8500,
											"end": 8579,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "tag",
											"source": 17,
											"value": "682"
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8605,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 8659,
											"end": 8666,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8650,
											"end": 8656,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8639,
											"end": 8648,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8635,
											"end": 8657,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8605,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 8605,
											"end": 8667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8605,
											"end": 8667,
											"name": "tag",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 8605,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8595,
											"end": 8667,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8595,
											"end": 8667,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8390,
											"end": 8677,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8032,
											"end": 8684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8690,
											"end": 8767,
											"name": "tag",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 8690,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8727,
											"end": 8734,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8756,
											"end": 8761,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8745,
											"end": 8761,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8745,
											"end": 8761,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8690,
											"end": 8767,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8690,
											"end": 8767,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8690,
											"end": 8767,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8690,
											"end": 8767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8773,
											"end": 8891,
											"name": "tag",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 8773,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8860,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "687"
										},
										{
											"begin": 8878,
											"end": 8883,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8860,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 8860,
											"end": 8884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8860,
											"end": 8884,
											"name": "tag",
											"source": 17,
											"value": "687"
										},
										{
											"begin": 8860,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8855,
											"end": 8858,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8848,
											"end": 8885,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8773,
											"end": 8891,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8773,
											"end": 8891,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8773,
											"end": 8891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "tag",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8990,
											"end": 8994,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9030,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9026,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9013,
											"end": 9031,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9005,
											"end": 9031,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9005,
											"end": 9031,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9041,
											"end": 9112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 9109,
											"end": 9110,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9098,
											"end": 9107,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9094,
											"end": 9111,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9085,
											"end": 9091,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9041,
											"end": 9112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 9041,
											"end": 9112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9041,
											"end": 9112,
											"name": "tag",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 9041,
											"end": 9112,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8897,
											"end": 9119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9125,
											"end": 9242,
											"name": "tag",
											"source": 17,
											"value": "532"
										},
										{
											"begin": 9125,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9235,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9232,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9224,
											"end": 9236,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9248,
											"end": 9365,
											"name": "tag",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 9248,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9357,
											"end": 9358,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9355,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9347,
											"end": 9359,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "tag",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9461,
											"end": 9469,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9477,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9521,
											"end": 9524,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9514,
											"end": 9518,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 9506,
											"end": 9512,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9502,
											"end": 9519,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9498,
											"end": 9525,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9488,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 9488,
											"end": 9610,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "694"
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 9529,
											"end": 9608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "tag",
											"source": 17,
											"value": "694"
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9488,
											"end": 9610,
											"name": "tag",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 9488,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9642,
											"end": 9648,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9629,
											"end": 9649,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9619,
											"end": 9649,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9619,
											"end": 9649,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9664,
											"end": 9670,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9661,
											"end": 9691,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9658,
											"end": 9775,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9658,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "695"
										},
										{
											"begin": 9658,
											"end": 9775,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9694,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 9694,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "532"
										},
										{
											"begin": 9694,
											"end": 9773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9694,
											"end": 9773,
											"name": "tag",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 9694,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9658,
											"end": 9775,
											"name": "tag",
											"source": 17,
											"value": "695"
										},
										{
											"begin": 9658,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9800,
											"end": 9806,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9796,
											"end": 9813,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9784,
											"end": 9813,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9784,
											"end": 9813,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9862,
											"end": 9865,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9854,
											"end": 9858,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 9832,
											"end": 9840,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9828,
											"end": 9860,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9825,
											"end": 9866,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9822,
											"end": 9950,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9822,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "697"
										},
										{
											"begin": 9822,
											"end": 9950,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9869,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 9869,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 9869,
											"end": 9948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9869,
											"end": 9948,
											"name": "tag",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 9869,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9822,
											"end": 9950,
											"name": "tag",
											"source": 17,
											"value": "697"
										},
										{
											"begin": 9822,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9388,
											"end": 9956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "tag",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10060,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10062,
											"end": 10068,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10112,
											"end": 10115,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10105,
											"end": 10109,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10097,
											"end": 10103,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10093,
											"end": 10110,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10089,
											"end": 10116,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10079,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "700"
										},
										{
											"begin": 10079,
											"end": 10201,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10120,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "701"
										},
										{
											"begin": 10120,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 10120,
											"end": 10199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10120,
											"end": 10199,
											"name": "tag",
											"source": 17,
											"value": "701"
										},
										{
											"begin": 10120,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10079,
											"end": 10201,
											"name": "tag",
											"source": 17,
											"value": "700"
										},
										{
											"begin": 10079,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10233,
											"end": 10239,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 10210,
											"end": 10240,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10210,
											"end": 10240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10255,
											"end": 10261,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10252,
											"end": 10282,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10249,
											"end": 10366,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10249,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "702"
										},
										{
											"begin": 10249,
											"end": 10366,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10285,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 10285,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "532"
										},
										{
											"begin": 10285,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10285,
											"end": 10364,
											"name": "tag",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 10285,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10249,
											"end": 10366,
											"name": "tag",
											"source": 17,
											"value": "702"
										},
										{
											"begin": 10249,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10399,
											"end": 10403,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10391,
											"end": 10397,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10387,
											"end": 10404,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10375,
											"end": 10404,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10375,
											"end": 10404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10453,
											"end": 10456,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10445,
											"end": 10449,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10433,
											"end": 10450,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 10423,
											"end": 10431,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10419,
											"end": 10451,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10416,
											"end": 10457,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10413,
											"end": 10541,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10413,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 10413,
											"end": 10541,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10460,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "705"
										},
										{
											"begin": 10460,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 10460,
											"end": 10539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10460,
											"end": 10539,
											"name": "tag",
											"source": 17,
											"value": "705"
										},
										{
											"begin": 10460,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10413,
											"end": 10541,
											"name": "tag",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 10413,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9979,
											"end": 10547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "tag",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10675,
											"end": 10681,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10691,
											"end": 10697,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10699,
											"end": 10705,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10748,
											"end": 10750,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10736,
											"end": 10745,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10727,
											"end": 10734,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 10723,
											"end": 10746,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10719,
											"end": 10751,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10716,
											"end": 10835,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10716,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "707"
										},
										{
											"begin": 10716,
											"end": 10835,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10754,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "708"
										},
										{
											"begin": 10754,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 10754,
											"end": 10833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10754,
											"end": 10833,
											"name": "tag",
											"source": 17,
											"value": "708"
										},
										{
											"begin": 10754,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10716,
											"end": 10835,
											"name": "tag",
											"source": 17,
											"value": "707"
										},
										{
											"begin": 10716,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10902,
											"end": 10903,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10891,
											"end": 10900,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10887,
											"end": 10904,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10874,
											"end": 10905,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 10932,
											"end": 10950,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10924,
											"end": 10930,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10921,
											"end": 10951,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10918,
											"end": 11035,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10918,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "709"
										},
										{
											"begin": 10918,
											"end": 11035,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10954,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 10954,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 10954,
											"end": 11033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10954,
											"end": 11033,
											"name": "tag",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 10954,
											"end": 11033,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10918,
											"end": 11035,
											"name": "tag",
											"source": 17,
											"value": "709"
										},
										{
											"begin": 10918,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11067,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "711"
										},
										{
											"begin": 11139,
											"end": 11146,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11130,
											"end": 11136,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11119,
											"end": 11128,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 11115,
											"end": 11137,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11067,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 11067,
											"end": 11147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11067,
											"end": 11147,
											"name": "tag",
											"source": 17,
											"value": "711"
										},
										{
											"begin": 11067,
											"end": 11147,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11049,
											"end": 11147,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 11049,
											"end": 11147,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11049,
											"end": 11147,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 11049,
											"end": 11147,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10845,
											"end": 11157,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11224,
											"end": 11226,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11213,
											"end": 11222,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11209,
											"end": 11227,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11196,
											"end": 11228,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 11255,
											"end": 11273,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11247,
											"end": 11253,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11244,
											"end": 11274,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11241,
											"end": 11358,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11241,
											"end": 11358,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "712"
										},
										{
											"begin": 11241,
											"end": 11358,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11277,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "713"
										},
										{
											"begin": 11277,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 11277,
											"end": 11356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11277,
											"end": 11356,
											"name": "tag",
											"source": 17,
											"value": "713"
										},
										{
											"begin": 11277,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11241,
											"end": 11358,
											"name": "tag",
											"source": 17,
											"value": "712"
										},
										{
											"begin": 11241,
											"end": 11358,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11390,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 11462,
											"end": 11469,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11453,
											"end": 11459,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11442,
											"end": 11451,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 11438,
											"end": 11460,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11390,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 11390,
											"end": 11470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11390,
											"end": 11470,
											"name": "tag",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 11390,
											"end": 11470,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11372,
											"end": 11470,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11372,
											"end": 11470,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11372,
											"end": 11470,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11372,
											"end": 11470,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11167,
											"end": 11480,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10553,
											"end": 11487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11493,
											"end": 11611,
											"name": "tag",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 11493,
											"end": 11611,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 11598,
											"end": 11603,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 11580,
											"end": 11604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "tag",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11575,
											"end": 11578,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11493,
											"end": 11611,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11493,
											"end": 11611,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11493,
											"end": 11611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "tag",
											"source": 17,
											"value": "113"
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11710,
											"end": 11714,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11748,
											"end": 11750,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11737,
											"end": 11746,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11725,
											"end": 11751,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11725,
											"end": 11751,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11761,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 11829,
											"end": 11830,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11827,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11814,
											"end": 11831,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11805,
											"end": 11811,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11761,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 11761,
											"end": 11832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11761,
											"end": 11832,
											"name": "tag",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 11761,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11617,
											"end": 11839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11845,
											"end": 12153,
											"name": "tag",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 11845,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11907,
											"end": 11911,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11989,
											"end": 11995,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11986,
											"end": 12016,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "720"
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "721"
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 12019,
											"end": 12037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "tag",
											"source": 17,
											"value": "721"
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "tag",
											"source": 17,
											"value": "720"
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12057,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "722"
										},
										{
											"begin": 12079,
											"end": 12085,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12057,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 12057,
											"end": 12086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12057,
											"end": 12086,
											"name": "tag",
											"source": 17,
											"value": "722"
										},
										{
											"begin": 12057,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12049,
											"end": 12086,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12049,
											"end": 12086,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12141,
											"end": 12145,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12135,
											"end": 12139,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12131,
											"end": 12146,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12123,
											"end": 12146,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12123,
											"end": 12146,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11845,
											"end": 12153,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11845,
											"end": 12153,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11845,
											"end": 12153,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11845,
											"end": 12153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "tag",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12237,
											"end": 12242,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12262,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 12278,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 12320,
											"end": 12326,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12278,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 12278,
											"end": 12327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12278,
											"end": 12327,
											"name": "tag",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 12278,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12262,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 12262,
											"end": 12328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12262,
											"end": 12328,
											"name": "tag",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 12262,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12253,
											"end": 12328,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12253,
											"end": 12328,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12351,
											"end": 12357,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12344,
											"end": 12349,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12389,
											"end": 12393,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12378,
											"end": 12394,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12427,
											"end": 12430,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12418,
											"end": 12424,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12413,
											"end": 12416,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12409,
											"end": 12425,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12406,
											"end": 12431,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12403,
											"end": 12515,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12403,
											"end": 12515,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "726"
										},
										{
											"begin": 12403,
											"end": 12515,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 12434,
											"end": 12513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "tag",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12403,
											"end": 12515,
											"name": "tag",
											"source": 17,
											"value": "726"
										},
										{
											"begin": 12403,
											"end": 12515,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12524,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "728"
										},
										{
											"begin": 12571,
											"end": 12577,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12566,
											"end": 12569,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12561,
											"end": 12564,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12524,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 12524,
											"end": 12578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12524,
											"end": 12578,
											"name": "tag",
											"source": 17,
											"value": "728"
										},
										{
											"begin": 12524,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12243,
											"end": 12584,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12159,
											"end": 12584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "tag",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12660,
											"end": 12665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12709,
											"end": 12712,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12702,
											"end": 12706,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 12694,
											"end": 12700,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12690,
											"end": 12707,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12686,
											"end": 12713,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 12676,
											"end": 12798,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "730"
										},
										{
											"begin": 12676,
											"end": 12798,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "731"
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 12717,
											"end": 12796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "tag",
											"source": 17,
											"value": "731"
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12676,
											"end": 12798,
											"name": "tag",
											"source": 17,
											"value": "730"
										},
										{
											"begin": 12676,
											"end": 12798,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12834,
											"end": 12840,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12821,
											"end": 12841,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 12859,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 12934,
											"end": 12937,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12926,
											"end": 12932,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12919,
											"end": 12923,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12911,
											"end": 12917,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12907,
											"end": 12924,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12859,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 12859,
											"end": 12938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12859,
											"end": 12938,
											"name": "tag",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 12859,
											"end": 12938,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12850,
											"end": 12938,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12850,
											"end": 12938,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12666,
											"end": 12944,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12604,
											"end": 12944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "tag",
											"source": 17,
											"value": "135"
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13047,
											"end": 13053,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13055,
											"end": 13061,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13063,
											"end": 13069,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13112,
											"end": 13114,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 13100,
											"end": 13109,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13091,
											"end": 13098,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 13087,
											"end": 13110,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 13080,
											"end": 13199,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13080,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 13080,
											"end": 13199,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13118,
											"end": 13197,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 13118,
											"end": 13197,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 13118,
											"end": 13197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13118,
											"end": 13197,
											"name": "tag",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 13118,
											"end": 13197,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13080,
											"end": 13199,
											"name": "tag",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 13080,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13266,
											"end": 13267,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13255,
											"end": 13264,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13251,
											"end": 13268,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13238,
											"end": 13269,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13288,
											"end": 13294,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13285,
											"end": 13315,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 13282,
											"end": 13399,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13282,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "736"
										},
										{
											"begin": 13282,
											"end": 13399,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13318,
											"end": 13397,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "737"
										},
										{
											"begin": 13318,
											"end": 13397,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 13318,
											"end": 13397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13318,
											"end": 13397,
											"name": "tag",
											"source": 17,
											"value": "737"
										},
										{
											"begin": 13318,
											"end": 13397,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13282,
											"end": 13399,
											"name": "tag",
											"source": 17,
											"value": "736"
										},
										{
											"begin": 13282,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13423,
											"end": 13486,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "738"
										},
										{
											"begin": 13478,
											"end": 13485,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 13469,
											"end": 13475,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13458,
											"end": 13467,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 13454,
											"end": 13476,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13423,
											"end": 13486,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 13423,
											"end": 13486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13423,
											"end": 13486,
											"name": "tag",
											"source": 17,
											"value": "738"
										},
										{
											"begin": 13423,
											"end": 13486,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13413,
											"end": 13486,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13413,
											"end": 13486,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13209,
											"end": 13496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13563,
											"end": 13565,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13552,
											"end": 13561,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13548,
											"end": 13566,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13535,
											"end": 13567,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 13594,
											"end": 13612,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13586,
											"end": 13592,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13583,
											"end": 13613,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 13580,
											"end": 13697,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13580,
											"end": 13697,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "739"
										},
										{
											"begin": 13580,
											"end": 13697,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13616,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 13616,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 13616,
											"end": 13695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13616,
											"end": 13695,
											"name": "tag",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 13616,
											"end": 13695,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13580,
											"end": 13697,
											"name": "tag",
											"source": 17,
											"value": "739"
										},
										{
											"begin": 13580,
											"end": 13697,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "741"
										},
										{
											"begin": 13776,
											"end": 13783,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 13767,
											"end": 13773,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13756,
											"end": 13765,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 13752,
											"end": 13774,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 13721,
											"end": 13784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "tag",
											"source": 17,
											"value": "741"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13711,
											"end": 13784,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13711,
											"end": 13784,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13506,
											"end": 13794,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13833,
											"end": 13835,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 13859,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "742"
										},
										{
											"begin": 13904,
											"end": 13911,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 13895,
											"end": 13901,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13884,
											"end": 13893,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 13880,
											"end": 13902,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13859,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 13859,
											"end": 13912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13859,
											"end": 13912,
											"name": "tag",
											"source": 17,
											"value": "742"
										},
										{
											"begin": 13859,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13849,
											"end": 13912,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13849,
											"end": 13912,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13804,
											"end": 13922,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12950,
											"end": 13929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "tag",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14003,
											"end": 14009,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14017,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14048,
											"end": 14057,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14039,
											"end": 14046,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14035,
											"end": 14058,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14031,
											"end": 14063,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "744"
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 14066,
											"end": 14145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "tag",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "tag",
											"source": 17,
											"value": "744"
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14186,
											"end": 14187,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14211,
											"end": 14264,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 14256,
											"end": 14263,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14247,
											"end": 14253,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14236,
											"end": 14245,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14232,
											"end": 14254,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14211,
											"end": 14264,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 14211,
											"end": 14264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14211,
											"end": 14264,
											"name": "tag",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 14211,
											"end": 14264,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14201,
											"end": 14264,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14201,
											"end": 14264,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14157,
											"end": 14274,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14313,
											"end": 14315,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14339,
											"end": 14392,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 14384,
											"end": 14391,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14375,
											"end": 14381,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14364,
											"end": 14373,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14360,
											"end": 14382,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14339,
											"end": 14392,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 14339,
											"end": 14392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14339,
											"end": 14392,
											"name": "tag",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 14339,
											"end": 14392,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14329,
											"end": 14392,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14329,
											"end": 14392,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14284,
											"end": 14402,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13935,
											"end": 14409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14415,
											"end": 14595,
											"name": "tag",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 14415,
											"end": 14595,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14463,
											"end": 14540,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14460,
											"end": 14461,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14453,
											"end": 14541,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14560,
											"end": 14564,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 14557,
											"end": 14558,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 14550,
											"end": 14565,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14584,
											"end": 14588,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 14581,
											"end": 14582,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14574,
											"end": 14589,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14601,
											"end": 14921,
											"name": "tag",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 14601,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14645,
											"end": 14651,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14682,
											"end": 14683,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 14676,
											"end": 14680,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14672,
											"end": 14684,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 14662,
											"end": 14684,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14662,
											"end": 14684,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14729,
											"end": 14730,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 14723,
											"end": 14727,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14719,
											"end": 14731,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 14750,
											"end": 14768,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14740,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 14740,
											"end": 14821,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14806,
											"end": 14810,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 14798,
											"end": 14804,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14794,
											"end": 14811,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 14784,
											"end": 14811,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14784,
											"end": 14811,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14740,
											"end": 14821,
											"name": "tag",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 14740,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14868,
											"end": 14870,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14860,
											"end": 14866,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14857,
											"end": 14871,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 14837,
											"end": 14855,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14834,
											"end": 14872,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14831,
											"end": 14915,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 14831,
											"end": 14915,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 14887,
											"end": 14905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "tag",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14831,
											"end": 14915,
											"name": "tag",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 14831,
											"end": 14915,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14652,
											"end": 14921,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14601,
											"end": 14921,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14601,
											"end": 14921,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14601,
											"end": 14921,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14601,
											"end": 14921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14927,
											"end": 15152,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 14927,
											"end": 15152,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15067,
											"end": 15101,
											"name": "PUSH",
											"source": 17,
											"value": "5472616E73666572206661696C65643A2053656E64657220697320626C61636B"
										},
										{
											"begin": 15063,
											"end": 15064,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15055,
											"end": 15061,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15051,
											"end": 15065,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15044,
											"end": 15102,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15136,
											"end": 15144,
											"name": "PUSH",
											"source": 17,
											"value": "6C69737465640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15131,
											"end": 15133,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15123,
											"end": 15129,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15119,
											"end": 15134,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15112,
											"end": 15145,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14927,
											"end": 15152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14927,
											"end": 15152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15158,
											"end": 15524,
											"name": "tag",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 15158,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15300,
											"end": 15303,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15321,
											"end": 15388,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 15385,
											"end": 15387,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 15380,
											"end": 15383,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15321,
											"end": 15388,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 15321,
											"end": 15388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15321,
											"end": 15388,
											"name": "tag",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 15321,
											"end": 15388,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15314,
											"end": 15388,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15314,
											"end": 15388,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15397,
											"end": 15490,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 15486,
											"end": 15489,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15397,
											"end": 15490,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 15397,
											"end": 15490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15397,
											"end": 15490,
											"name": "tag",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 15397,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15515,
											"end": 15517,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 15510,
											"end": 15513,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15506,
											"end": 15518,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15499,
											"end": 15518,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15499,
											"end": 15518,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15158,
											"end": 15524,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15158,
											"end": 15524,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15158,
											"end": 15524,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15158,
											"end": 15524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15530,
											"end": 15949,
											"name": "tag",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 15530,
											"end": 15949,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 15700,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15734,
											"end": 15736,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15723,
											"end": 15732,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15719,
											"end": 15737,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15711,
											"end": 15737,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15711,
											"end": 15737,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15783,
											"end": 15792,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15777,
											"end": 15781,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15773,
											"end": 15793,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 15769,
											"end": 15770,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15758,
											"end": 15767,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15754,
											"end": 15771,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15747,
											"end": 15794,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15811,
											"end": 15942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 15937,
											"end": 15941,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15811,
											"end": 15942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 15811,
											"end": 15942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15811,
											"end": 15942,
											"name": "tag",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 15811,
											"end": 15942,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15803,
											"end": 15942,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15803,
											"end": 15942,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15530,
											"end": 15949,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15530,
											"end": 15949,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15530,
											"end": 15949,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15530,
											"end": 15949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15955,
											"end": 16183,
											"name": "tag",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 15955,
											"end": 16183,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16095,
											"end": 16129,
											"name": "PUSH",
											"source": 17,
											"value": "5472616E73666572206661696C65643A20526563697069656E7420697320626C"
										},
										{
											"begin": 16091,
											"end": 16092,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16083,
											"end": 16089,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16079,
											"end": 16093,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16072,
											"end": 16130,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16164,
											"end": 16175,
											"name": "PUSH",
											"source": 17,
											"value": "61636B6C69737465640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16159,
											"end": 16161,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16151,
											"end": 16157,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16147,
											"end": 16162,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16140,
											"end": 16176,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15955,
											"end": 16183,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15955,
											"end": 16183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16189,
											"end": 16555,
											"name": "tag",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 16189,
											"end": 16555,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16331,
											"end": 16334,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16352,
											"end": 16419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "761"
										},
										{
											"begin": 16416,
											"end": 16418,
											"name": "PUSH",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 16411,
											"end": 16414,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16352,
											"end": 16419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 16352,
											"end": 16419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16352,
											"end": 16419,
											"name": "tag",
											"source": 17,
											"value": "761"
										},
										{
											"begin": 16352,
											"end": 16419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16345,
											"end": 16419,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16345,
											"end": 16419,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16428,
											"end": 16521,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 16517,
											"end": 16520,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16428,
											"end": 16521,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 16428,
											"end": 16521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16428,
											"end": 16521,
											"name": "tag",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 16428,
											"end": 16521,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16546,
											"end": 16548,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 16541,
											"end": 16544,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16537,
											"end": 16549,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16530,
											"end": 16549,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16530,
											"end": 16549,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16189,
											"end": 16555,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16189,
											"end": 16555,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16189,
											"end": 16555,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16189,
											"end": 16555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16561,
											"end": 16980,
											"name": "tag",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 16561,
											"end": 16980,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16727,
											"end": 16731,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16765,
											"end": 16767,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16754,
											"end": 16763,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16750,
											"end": 16768,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16742,
											"end": 16768,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16742,
											"end": 16768,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16814,
											"end": 16823,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16808,
											"end": 16812,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16804,
											"end": 16824,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16800,
											"end": 16801,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16789,
											"end": 16798,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16785,
											"end": 16802,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16778,
											"end": 16825,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16842,
											"end": 16973,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "764"
										},
										{
											"begin": 16968,
											"end": 16972,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16842,
											"end": 16973,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 16842,
											"end": 16973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16842,
											"end": 16973,
											"name": "tag",
											"source": 17,
											"value": "764"
										},
										{
											"begin": 16842,
											"end": 16973,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16834,
											"end": 16973,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16834,
											"end": 16973,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16561,
											"end": 16980,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16561,
											"end": 16980,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16561,
											"end": 16980,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16561,
											"end": 16980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16986,
											"end": 17207,
											"name": "tag",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 16986,
											"end": 17207,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17126,
											"end": 17160,
											"name": "PUSH",
											"source": 17,
											"value": "5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B"
										},
										{
											"begin": 17122,
											"end": 17123,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17114,
											"end": 17120,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17110,
											"end": 17124,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17103,
											"end": 17161,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17195,
											"end": 17199,
											"name": "PUSH",
											"source": 17,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17190,
											"end": 17192,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17188,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17178,
											"end": 17193,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17171,
											"end": 17200,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16986,
											"end": 17207,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16986,
											"end": 17207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17213,
											"end": 17579,
											"name": "tag",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 17213,
											"end": 17579,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17355,
											"end": 17358,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17376,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 17440,
											"end": 17442,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 17435,
											"end": 17438,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17376,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 17376,
											"end": 17443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17376,
											"end": 17443,
											"name": "tag",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 17376,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17369,
											"end": 17443,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17369,
											"end": 17443,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17452,
											"end": 17545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "768"
										},
										{
											"begin": 17541,
											"end": 17544,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17452,
											"end": 17545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 17452,
											"end": 17545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17452,
											"end": 17545,
											"name": "tag",
											"source": 17,
											"value": "768"
										},
										{
											"begin": 17452,
											"end": 17545,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17570,
											"end": 17572,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 17565,
											"end": 17568,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17561,
											"end": 17573,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17554,
											"end": 17573,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17554,
											"end": 17573,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17213,
											"end": 17579,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17213,
											"end": 17579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17213,
											"end": 17579,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17213,
											"end": 17579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17585,
											"end": 18004,
											"name": "tag",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 17585,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17751,
											"end": 17755,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17789,
											"end": 17791,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17778,
											"end": 17787,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17774,
											"end": 17792,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17766,
											"end": 17792,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17766,
											"end": 17792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17838,
											"end": 17847,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17832,
											"end": 17836,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17828,
											"end": 17848,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17824,
											"end": 17825,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17813,
											"end": 17822,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17809,
											"end": 17826,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17802,
											"end": 17849,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17866,
											"end": 17997,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 17992,
											"end": 17996,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17866,
											"end": 17997,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 17866,
											"end": 17997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17866,
											"end": 17997,
											"name": "tag",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 17866,
											"end": 17997,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17858,
											"end": 17997,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17858,
											"end": 17997,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17585,
											"end": 18004,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17585,
											"end": 18004,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17585,
											"end": 18004,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17585,
											"end": 18004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18010,
											"end": 18174,
											"name": "tag",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 18010,
											"end": 18174,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18150,
											"end": 18166,
											"name": "PUSH",
											"source": 17,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 18146,
											"end": 18147,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18138,
											"end": 18144,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18134,
											"end": 18148,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18127,
											"end": 18167,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18010,
											"end": 18174,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18010,
											"end": 18174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18180,
											"end": 18546,
											"name": "tag",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 18180,
											"end": 18546,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18322,
											"end": 18325,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18343,
											"end": 18410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "773"
										},
										{
											"begin": 18407,
											"end": 18409,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 18402,
											"end": 18405,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18343,
											"end": 18410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 18343,
											"end": 18410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18343,
											"end": 18410,
											"name": "tag",
											"source": 17,
											"value": "773"
										},
										{
											"begin": 18343,
											"end": 18410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18336,
											"end": 18410,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18336,
											"end": 18410,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18419,
											"end": 18512,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "774"
										},
										{
											"begin": 18508,
											"end": 18511,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18419,
											"end": 18512,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 18419,
											"end": 18512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18419,
											"end": 18512,
											"name": "tag",
											"source": 17,
											"value": "774"
										},
										{
											"begin": 18419,
											"end": 18512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18537,
											"end": 18539,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18532,
											"end": 18535,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18528,
											"end": 18540,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18521,
											"end": 18540,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18521,
											"end": 18540,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18180,
											"end": 18546,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18180,
											"end": 18546,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18180,
											"end": 18546,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18180,
											"end": 18546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18552,
											"end": 18971,
											"name": "tag",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 18552,
											"end": 18971,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18718,
											"end": 18722,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18756,
											"end": 18758,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18745,
											"end": 18754,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18741,
											"end": 18759,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18733,
											"end": 18759,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18733,
											"end": 18759,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18805,
											"end": 18814,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18799,
											"end": 18803,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18795,
											"end": 18815,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 18791,
											"end": 18792,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18780,
											"end": 18789,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18776,
											"end": 18793,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18769,
											"end": 18816,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18833,
											"end": 18964,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "776"
										},
										{
											"begin": 18959,
											"end": 18963,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18833,
											"end": 18964,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 18833,
											"end": 18964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18833,
											"end": 18964,
											"name": "tag",
											"source": 17,
											"value": "776"
										},
										{
											"begin": 18833,
											"end": 18964,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18825,
											"end": 18964,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18825,
											"end": 18964,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18552,
											"end": 18971,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18552,
											"end": 18971,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18552,
											"end": 18971,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18552,
											"end": 18971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18977,
											"end": 19203,
											"name": "tag",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 18977,
											"end": 19203,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19117,
											"end": 19151,
											"name": "PUSH",
											"source": 17,
											"value": "42617463685472616E73666572206661696C65643A204D69736D617463686564"
										},
										{
											"begin": 19113,
											"end": 19114,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19105,
											"end": 19111,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19101,
											"end": 19115,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19094,
											"end": 19152,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19186,
											"end": 19195,
											"name": "PUSH",
											"source": 17,
											"value": "2061727261797300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19181,
											"end": 19183,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19179,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19169,
											"end": 19184,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19162,
											"end": 19196,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18977,
											"end": 19203,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18977,
											"end": 19203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19209,
											"end": 19575,
											"name": "tag",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 19209,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19351,
											"end": 19354,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19372,
											"end": 19439,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "779"
										},
										{
											"begin": 19436,
											"end": 19438,
											"name": "PUSH",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 19431,
											"end": 19434,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19372,
											"end": 19439,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 19372,
											"end": 19439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19372,
											"end": 19439,
											"name": "tag",
											"source": 17,
											"value": "779"
										},
										{
											"begin": 19372,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19365,
											"end": 19439,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19365,
											"end": 19439,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19448,
											"end": 19541,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "780"
										},
										{
											"begin": 19537,
											"end": 19540,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19448,
											"end": 19541,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 19448,
											"end": 19541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19448,
											"end": 19541,
											"name": "tag",
											"source": 17,
											"value": "780"
										},
										{
											"begin": 19448,
											"end": 19541,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19566,
											"end": 19568,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 19561,
											"end": 19564,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19557,
											"end": 19569,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19550,
											"end": 19569,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19550,
											"end": 19569,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19209,
											"end": 19575,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19209,
											"end": 19575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19209,
											"end": 19575,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19209,
											"end": 19575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19581,
											"end": 20000,
											"name": "tag",
											"source": 17,
											"value": "244"
										},
										{
											"begin": 19581,
											"end": 20000,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19747,
											"end": 19751,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19785,
											"end": 19787,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19774,
											"end": 19783,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19770,
											"end": 19788,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19762,
											"end": 19788,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19762,
											"end": 19788,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19834,
											"end": 19843,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19828,
											"end": 19832,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19824,
											"end": 19844,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 19820,
											"end": 19821,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19809,
											"end": 19818,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19805,
											"end": 19822,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19798,
											"end": 19845,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19862,
											"end": 19993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "782"
										},
										{
											"begin": 19988,
											"end": 19992,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19862,
											"end": 19993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 19862,
											"end": 19993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19862,
											"end": 19993,
											"name": "tag",
											"source": 17,
											"value": "782"
										},
										{
											"begin": 19862,
											"end": 19993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19854,
											"end": 19993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19854,
											"end": 19993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19581,
											"end": 20000,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19581,
											"end": 20000,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19581,
											"end": 20000,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19581,
											"end": 20000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20006,
											"end": 20186,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 20006,
											"end": 20186,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20054,
											"end": 20131,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20051,
											"end": 20052,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20044,
											"end": 20132,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20151,
											"end": 20155,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 20148,
											"end": 20149,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 20141,
											"end": 20156,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20175,
											"end": 20179,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 20172,
											"end": 20173,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20165,
											"end": 20180,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 20192,
											"end": 20425,
											"name": "tag",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 20192,
											"end": 20425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20332,
											"end": 20366,
											"name": "PUSH",
											"source": 17,
											"value": "42617463685472616E73666572206661696C65643A20526563697069656E7420"
										},
										{
											"begin": 20328,
											"end": 20329,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20320,
											"end": 20326,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20316,
											"end": 20330,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20309,
											"end": 20367,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20401,
											"end": 20417,
											"name": "PUSH",
											"source": 17,
											"value": "697320626C61636B6C6973746564000000000000000000000000000000000000"
										},
										{
											"begin": 20396,
											"end": 20398,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20388,
											"end": 20394,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20384,
											"end": 20399,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20377,
											"end": 20418,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20192,
											"end": 20425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20192,
											"end": 20425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20431,
											"end": 20797,
											"name": "tag",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 20431,
											"end": 20797,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20573,
											"end": 20576,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20594,
											"end": 20661,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "786"
										},
										{
											"begin": 20658,
											"end": 20660,
											"name": "PUSH",
											"source": 17,
											"value": "2E"
										},
										{
											"begin": 20653,
											"end": 20656,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20594,
											"end": 20661,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 20594,
											"end": 20661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20594,
											"end": 20661,
											"name": "tag",
											"source": 17,
											"value": "786"
										},
										{
											"begin": 20594,
											"end": 20661,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20587,
											"end": 20661,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20587,
											"end": 20661,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20670,
											"end": 20763,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "787"
										},
										{
											"begin": 20759,
											"end": 20762,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20670,
											"end": 20763,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 20670,
											"end": 20763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20670,
											"end": 20763,
											"name": "tag",
											"source": 17,
											"value": "787"
										},
										{
											"begin": 20670,
											"end": 20763,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20788,
											"end": 20790,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 20783,
											"end": 20786,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20779,
											"end": 20791,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20772,
											"end": 20791,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20772,
											"end": 20791,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20431,
											"end": 20797,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20431,
											"end": 20797,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20431,
											"end": 20797,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20431,
											"end": 20797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20803,
											"end": 21222,
											"name": "tag",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 20803,
											"end": 21222,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20969,
											"end": 20973,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21007,
											"end": 21009,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20996,
											"end": 21005,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20992,
											"end": 21010,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20984,
											"end": 21010,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20984,
											"end": 21010,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21056,
											"end": 21065,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21050,
											"end": 21054,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21046,
											"end": 21066,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21042,
											"end": 21043,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21031,
											"end": 21040,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21027,
											"end": 21044,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21020,
											"end": 21067,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21084,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "789"
										},
										{
											"begin": 21210,
											"end": 21214,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21084,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 21084,
											"end": 21215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21084,
											"end": 21215,
											"name": "tag",
											"source": 17,
											"value": "789"
										},
										{
											"begin": 21084,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21076,
											"end": 21215,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21076,
											"end": 21215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20803,
											"end": 21222,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20803,
											"end": 21222,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20803,
											"end": 21222,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20803,
											"end": 21222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21228,
											"end": 21313,
											"name": "tag",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 21228,
											"end": 21313,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21273,
											"end": 21280,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21302,
											"end": 21307,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21291,
											"end": 21307,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21291,
											"end": 21307,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21228,
											"end": 21313,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21228,
											"end": 21313,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21228,
											"end": 21313,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21228,
											"end": 21313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21319,
											"end": 21420,
											"name": "tag",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 21319,
											"end": 21420,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21355,
											"end": 21362,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21395,
											"end": 21413,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21388,
											"end": 21393,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21384,
											"end": 21414,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 21373,
											"end": 21414,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21373,
											"end": 21414,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21319,
											"end": 21420,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21319,
											"end": 21420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21319,
											"end": 21420,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21319,
											"end": 21420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21426,
											"end": 21486,
											"name": "tag",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 21426,
											"end": 21486,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21454,
											"end": 21457,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21475,
											"end": 21480,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21468,
											"end": 21480,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21468,
											"end": 21480,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21426,
											"end": 21486,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21426,
											"end": 21486,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21426,
											"end": 21486,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21426,
											"end": 21486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21492,
											"end": 21648,
											"name": "tag",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 21492,
											"end": 21648,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21549,
											"end": 21558,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21582,
											"end": 21642,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "794"
										},
										{
											"begin": 21599,
											"end": 21641,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "795"
										},
										{
											"begin": 21608,
											"end": 21640,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "796"
										},
										{
											"begin": 21634,
											"end": 21639,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 21608,
											"end": 21640,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 21608,
											"end": 21640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21608,
											"end": 21640,
											"name": "tag",
											"source": 17,
											"value": "796"
										},
										{
											"begin": 21608,
											"end": 21640,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21599,
											"end": 21641,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 21599,
											"end": 21641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21599,
											"end": 21641,
											"name": "tag",
											"source": 17,
											"value": "795"
										},
										{
											"begin": 21599,
											"end": 21641,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21582,
											"end": 21642,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 21582,
											"end": 21642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21582,
											"end": 21642,
											"name": "tag",
											"source": 17,
											"value": "794"
										},
										{
											"begin": 21582,
											"end": 21642,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21569,
											"end": 21642,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21569,
											"end": 21642,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21492,
											"end": 21648,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21492,
											"end": 21648,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21492,
											"end": 21648,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21492,
											"end": 21648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21654,
											"end": 21799,
											"name": "tag",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 21654,
											"end": 21799,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21748,
											"end": 21792,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "798"
										},
										{
											"begin": 21786,
											"end": 21791,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21748,
											"end": 21792,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 21748,
											"end": 21792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21748,
											"end": 21792,
											"name": "tag",
											"source": 17,
											"value": "798"
										},
										{
											"begin": 21748,
											"end": 21792,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21743,
											"end": 21746,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21736,
											"end": 21793,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21654,
											"end": 21799,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21654,
											"end": 21799,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21654,
											"end": 21799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21805,
											"end": 22041,
											"name": "tag",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 21805,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21905,
											"end": 21909,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21943,
											"end": 21945,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21928,
											"end": 21946,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21920,
											"end": 21946,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21920,
											"end": 21946,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21956,
											"end": 22034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "800"
										},
										{
											"begin": 22031,
											"end": 22032,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22020,
											"end": 22029,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22016,
											"end": 22033,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22007,
											"end": 22013,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 21956,
											"end": 22034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 21956,
											"end": 22034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21956,
											"end": 22034,
											"name": "tag",
											"source": 17,
											"value": "800"
										},
										{
											"begin": 21956,
											"end": 22034,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21805,
											"end": 22041,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21805,
											"end": 22041,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21805,
											"end": 22041,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21805,
											"end": 22041,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21805,
											"end": 22041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22047,
											"end": 22213,
											"name": "tag",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 22047,
											"end": 22213,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22187,
											"end": 22205,
											"name": "PUSH",
											"source": 17,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 22183,
											"end": 22184,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22175,
											"end": 22181,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22171,
											"end": 22185,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22164,
											"end": 22206,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22047,
											"end": 22213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22047,
											"end": 22213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22219,
											"end": 22585,
											"name": "tag",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 22219,
											"end": 22585,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22361,
											"end": 22364,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22382,
											"end": 22449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "803"
										},
										{
											"begin": 22446,
											"end": 22448,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 22441,
											"end": 22444,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22382,
											"end": 22449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 22382,
											"end": 22449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22382,
											"end": 22449,
											"name": "tag",
											"source": 17,
											"value": "803"
										},
										{
											"begin": 22382,
											"end": 22449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22375,
											"end": 22449,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22375,
											"end": 22449,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22458,
											"end": 22551,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "804"
										},
										{
											"begin": 22547,
											"end": 22550,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22458,
											"end": 22551,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 22458,
											"end": 22551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22458,
											"end": 22551,
											"name": "tag",
											"source": 17,
											"value": "804"
										},
										{
											"begin": 22458,
											"end": 22551,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22576,
											"end": 22578,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22571,
											"end": 22574,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22567,
											"end": 22579,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22560,
											"end": 22579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22560,
											"end": 22579,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22219,
											"end": 22585,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22219,
											"end": 22585,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22219,
											"end": 22585,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22219,
											"end": 22585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22591,
											"end": 23010,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 22591,
											"end": 23010,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22757,
											"end": 22761,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22795,
											"end": 22797,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22784,
											"end": 22793,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22780,
											"end": 22798,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22772,
											"end": 22798,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22772,
											"end": 22798,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22844,
											"end": 22853,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22838,
											"end": 22842,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22834,
											"end": 22854,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22830,
											"end": 22831,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22819,
											"end": 22828,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22815,
											"end": 22832,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22808,
											"end": 22855,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22872,
											"end": 23003,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "806"
										},
										{
											"begin": 22998,
											"end": 23002,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22872,
											"end": 23003,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 22872,
											"end": 23003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22872,
											"end": 23003,
											"name": "tag",
											"source": 17,
											"value": "806"
										},
										{
											"begin": 22872,
											"end": 23003,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22864,
											"end": 23003,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22864,
											"end": 23003,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22591,
											"end": 23010,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22591,
											"end": 23010,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22591,
											"end": 23010,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22591,
											"end": 23010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23016,
											"end": 23138,
											"name": "tag",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 23016,
											"end": 23138,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23089,
											"end": 23113,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "808"
										},
										{
											"begin": 23107,
											"end": 23112,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23089,
											"end": 23113,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 23089,
											"end": 23113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23089,
											"end": 23113,
											"name": "tag",
											"source": 17,
											"value": "808"
										},
										{
											"begin": 23089,
											"end": 23113,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23082,
											"end": 23087,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23079,
											"end": 23114,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 23069,
											"end": 23132,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "809"
										},
										{
											"begin": 23069,
											"end": 23132,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 23128,
											"end": 23129,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23125,
											"end": 23126,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 23118,
											"end": 23130,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 23069,
											"end": 23132,
											"name": "tag",
											"source": 17,
											"value": "809"
										},
										{
											"begin": 23069,
											"end": 23132,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23016,
											"end": 23138,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23016,
											"end": 23138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23144,
											"end": 23287,
											"name": "tag",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 23144,
											"end": 23287,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23201,
											"end": 23206,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23232,
											"end": 23238,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23226,
											"end": 23239,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 23217,
											"end": 23239,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23217,
											"end": 23239,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23248,
											"end": 23281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "811"
										},
										{
											"begin": 23275,
											"end": 23280,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23248,
											"end": 23281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 23248,
											"end": 23281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23248,
											"end": 23281,
											"name": "tag",
											"source": 17,
											"value": "811"
										},
										{
											"begin": 23248,
											"end": 23281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23144,
											"end": 23287,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 23144,
											"end": 23287,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23144,
											"end": 23287,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23144,
											"end": 23287,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23144,
											"end": 23287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23293,
											"end": 23644,
											"name": "tag",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 23293,
											"end": 23644,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23363,
											"end": 23369,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23412,
											"end": 23414,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23400,
											"end": 23409,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23391,
											"end": 23398,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23387,
											"end": 23410,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 23383,
											"end": 23415,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 23380,
											"end": 23499,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 23380,
											"end": 23499,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "813"
										},
										{
											"begin": 23380,
											"end": 23499,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 23418,
											"end": 23497,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "814"
										},
										{
											"begin": 23418,
											"end": 23497,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 23418,
											"end": 23497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23418,
											"end": 23497,
											"name": "tag",
											"source": 17,
											"value": "814"
										},
										{
											"begin": 23418,
											"end": 23497,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23380,
											"end": 23499,
											"name": "tag",
											"source": 17,
											"value": "813"
										},
										{
											"begin": 23380,
											"end": 23499,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23538,
											"end": 23539,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23563,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "815"
										},
										{
											"begin": 23619,
											"end": 23626,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23610,
											"end": 23616,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23599,
											"end": 23608,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 23595,
											"end": 23617,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23563,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 23563,
											"end": 23627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23563,
											"end": 23627,
											"name": "tag",
											"source": 17,
											"value": "815"
										},
										{
											"begin": 23563,
											"end": 23627,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23553,
											"end": 23627,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23553,
											"end": 23627,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23509,
											"end": 23637,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23293,
											"end": 23644,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 23293,
											"end": 23644,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23293,
											"end": 23644,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23293,
											"end": 23644,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23293,
											"end": 23644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23650,
											"end": 24092,
											"name": "tag",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 23650,
											"end": 24092,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23799,
											"end": 23803,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23837,
											"end": 23839,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 23826,
											"end": 23835,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23822,
											"end": 23840,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23814,
											"end": 23840,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23814,
											"end": 23840,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23850,
											"end": 23921,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "817"
										},
										{
											"begin": 23918,
											"end": 23919,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23907,
											"end": 23916,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23903,
											"end": 23920,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23894,
											"end": 23900,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 23850,
											"end": 23921,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 23850,
											"end": 23921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23850,
											"end": 23921,
											"name": "tag",
											"source": 17,
											"value": "817"
										},
										{
											"begin": 23850,
											"end": 23921,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23931,
											"end": 24003,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "818"
										},
										{
											"begin": 23999,
											"end": 24001,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23988,
											"end": 23997,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23984,
											"end": 24002,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23975,
											"end": 23981,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 23931,
											"end": 24003,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 23931,
											"end": 24003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23931,
											"end": 24003,
											"name": "tag",
											"source": 17,
											"value": "818"
										},
										{
											"begin": 23931,
											"end": 24003,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24013,
											"end": 24085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "819"
										},
										{
											"begin": 24081,
											"end": 24083,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 24070,
											"end": 24079,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24066,
											"end": 24084,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24057,
											"end": 24063,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 24013,
											"end": 24085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 24013,
											"end": 24085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24013,
											"end": 24085,
											"name": "tag",
											"source": 17,
											"value": "819"
										},
										{
											"begin": 24013,
											"end": 24085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23650,
											"end": 24092,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 23650,
											"end": 24092,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 23650,
											"end": 24092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23650,
											"end": 24092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23650,
											"end": 24092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23650,
											"end": 24092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23650,
											"end": 24092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24098,
											"end": 24268,
											"name": "tag",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 24098,
											"end": 24268,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24238,
											"end": 24260,
											"name": "PUSH",
											"source": 17,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 24234,
											"end": 24235,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24226,
											"end": 24232,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24222,
											"end": 24236,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24215,
											"end": 24261,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24098,
											"end": 24268,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24098,
											"end": 24268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24274,
											"end": 24640,
											"name": "tag",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 24274,
											"end": 24640,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24416,
											"end": 24419,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24437,
											"end": 24504,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "822"
										},
										{
											"begin": 24501,
											"end": 24503,
											"name": "PUSH",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 24496,
											"end": 24499,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24437,
											"end": 24504,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 24437,
											"end": 24504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24437,
											"end": 24504,
											"name": "tag",
											"source": 17,
											"value": "822"
										},
										{
											"begin": 24437,
											"end": 24504,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24430,
											"end": 24504,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24430,
											"end": 24504,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24513,
											"end": 24606,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "823"
										},
										{
											"begin": 24602,
											"end": 24605,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24513,
											"end": 24606,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 24513,
											"end": 24606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24513,
											"end": 24606,
											"name": "tag",
											"source": 17,
											"value": "823"
										},
										{
											"begin": 24513,
											"end": 24606,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24631,
											"end": 24633,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24626,
											"end": 24629,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24622,
											"end": 24634,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24615,
											"end": 24634,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24615,
											"end": 24634,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24274,
											"end": 24640,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24274,
											"end": 24640,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24274,
											"end": 24640,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24274,
											"end": 24640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24646,
											"end": 25065,
											"name": "tag",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 24646,
											"end": 25065,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24812,
											"end": 24816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24850,
											"end": 24852,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24839,
											"end": 24848,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24835,
											"end": 24853,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24827,
											"end": 24853,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24827,
											"end": 24853,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24899,
											"end": 24908,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24893,
											"end": 24897,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24889,
											"end": 24909,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 24885,
											"end": 24886,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24874,
											"end": 24883,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24870,
											"end": 24887,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24863,
											"end": 24910,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24927,
											"end": 25058,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "825"
										},
										{
											"begin": 25053,
											"end": 25057,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24927,
											"end": 25058,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 24927,
											"end": 25058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24927,
											"end": 25058,
											"name": "tag",
											"source": 17,
											"value": "825"
										},
										{
											"begin": 24927,
											"end": 25058,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24919,
											"end": 25058,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24919,
											"end": 25058,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24646,
											"end": 25065,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24646,
											"end": 25065,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24646,
											"end": 25065,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24646,
											"end": 25065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25071,
											"end": 25251,
											"name": "tag",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 25071,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25119,
											"end": 25196,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25116,
											"end": 25117,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25109,
											"end": 25197,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25216,
											"end": 25220,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 25213,
											"end": 25214,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 25206,
											"end": 25221,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25240,
											"end": 25244,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 25237,
											"end": 25238,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25230,
											"end": 25245,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 25257,
											"end": 25448,
											"name": "tag",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 25257,
											"end": 25448,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25297,
											"end": 25300,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25316,
											"end": 25336,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "828"
										},
										{
											"begin": 25334,
											"end": 25335,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25316,
											"end": 25336,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 25316,
											"end": 25336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25316,
											"end": 25336,
											"name": "tag",
											"source": 17,
											"value": "828"
										},
										{
											"begin": 25316,
											"end": 25336,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25311,
											"end": 25336,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25311,
											"end": 25336,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25350,
											"end": 25370,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "829"
										},
										{
											"begin": 25368,
											"end": 25369,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25350,
											"end": 25370,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 25350,
											"end": 25370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25350,
											"end": 25370,
											"name": "tag",
											"source": 17,
											"value": "829"
										},
										{
											"begin": 25350,
											"end": 25370,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25345,
											"end": 25370,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 25345,
											"end": 25370,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25393,
											"end": 25394,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25390,
											"end": 25391,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25386,
											"end": 25395,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25379,
											"end": 25395,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25379,
											"end": 25395,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25414,
											"end": 25417,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 25411,
											"end": 25412,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25408,
											"end": 25418,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 25405,
											"end": 25441,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 25405,
											"end": 25441,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "830"
										},
										{
											"begin": 25405,
											"end": 25441,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25421,
											"end": 25439,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "831"
										},
										{
											"begin": 25421,
											"end": 25439,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 25421,
											"end": 25439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25421,
											"end": 25439,
											"name": "tag",
											"source": 17,
											"value": "831"
										},
										{
											"begin": 25421,
											"end": 25439,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25405,
											"end": 25441,
											"name": "tag",
											"source": 17,
											"value": "830"
										},
										{
											"begin": 25405,
											"end": 25441,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25257,
											"end": 25448,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 25257,
											"end": 25448,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25257,
											"end": 25448,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25257,
											"end": 25448,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25257,
											"end": 25448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25454,
											"end": 25595,
											"name": "tag",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 25454,
											"end": 25595,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25503,
											"end": 25507,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25526,
											"end": 25529,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25518,
											"end": 25529,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25518,
											"end": 25529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25549,
											"end": 25552,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25546,
											"end": 25547,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25539,
											"end": 25553,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25583,
											"end": 25587,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 25580,
											"end": 25581,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25570,
											"end": 25588,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 25562,
											"end": 25588,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25562,
											"end": 25588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25454,
											"end": 25595,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25454,
											"end": 25595,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25454,
											"end": 25595,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25454,
											"end": 25595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25601,
											"end": 25694,
											"name": "tag",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 25601,
											"end": 25694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25638,
											"end": 25644,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25685,
											"end": 25687,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 25680,
											"end": 25682,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 25673,
											"end": 25678,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25669,
											"end": 25683,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25665,
											"end": 25688,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 25655,
											"end": 25688,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25655,
											"end": 25688,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25601,
											"end": 25694,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25601,
											"end": 25694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25601,
											"end": 25694,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25601,
											"end": 25694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25700,
											"end": 25807,
											"name": "tag",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 25700,
											"end": 25807,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25744,
											"end": 25752,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25794,
											"end": 25799,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25788,
											"end": 25792,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25784,
											"end": 25800,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 25763,
											"end": 25800,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25763,
											"end": 25800,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25700,
											"end": 25807,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 25700,
											"end": 25807,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25700,
											"end": 25807,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25700,
											"end": 25807,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25700,
											"end": 25807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25813,
											"end": 26206,
											"name": "tag",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 25813,
											"end": 26206,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25882,
											"end": 25888,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25932,
											"end": 25933,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25916,
											"end": 25934,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 25955,
											"end": 26052,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "836"
										},
										{
											"begin": 25985,
											"end": 26051,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25974,
											"end": 25983,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25955,
											"end": 26052,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 25955,
											"end": 26052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25955,
											"end": 26052,
											"name": "tag",
											"source": 17,
											"value": "836"
										},
										{
											"begin": 25955,
											"end": 26052,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26073,
											"end": 26112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "837"
										},
										{
											"begin": 26103,
											"end": 26111,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 26092,
											"end": 26101,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26073,
											"end": 26112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 26073,
											"end": 26112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26073,
											"end": 26112,
											"name": "tag",
											"source": 17,
											"value": "837"
										},
										{
											"begin": 26073,
											"end": 26112,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26061,
											"end": 26112,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 26061,
											"end": 26112,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26145,
											"end": 26149,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 26141,
											"end": 26150,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 26134,
											"end": 26139,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26130,
											"end": 26151,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26194,
											"end": 26198,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 26184,
											"end": 26192,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 26180,
											"end": 26199,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 26173,
											"end": 26178,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26170,
											"end": 26200,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 26160,
											"end": 26200,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 26160,
											"end": 26200,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25889,
											"end": 26206,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25889,
											"end": 26206,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25813,
											"end": 26206,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 25813,
											"end": 26206,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 25813,
											"end": 26206,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25813,
											"end": 26206,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25813,
											"end": 26206,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25813,
											"end": 26206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26212,
											"end": 26354,
											"name": "tag",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 26212,
											"end": 26354,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26262,
											"end": 26271,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26295,
											"end": 26348,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "839"
										},
										{
											"begin": 26313,
											"end": 26347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "840"
										},
										{
											"begin": 26322,
											"end": 26346,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "841"
										},
										{
											"begin": 26340,
											"end": 26345,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26322,
											"end": 26346,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 26322,
											"end": 26346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26322,
											"end": 26346,
											"name": "tag",
											"source": 17,
											"value": "841"
										},
										{
											"begin": 26322,
											"end": 26346,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26313,
											"end": 26347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 26313,
											"end": 26347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26313,
											"end": 26347,
											"name": "tag",
											"source": 17,
											"value": "840"
										},
										{
											"begin": 26313,
											"end": 26347,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26295,
											"end": 26348,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 26295,
											"end": 26348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26295,
											"end": 26348,
											"name": "tag",
											"source": 17,
											"value": "839"
										},
										{
											"begin": 26295,
											"end": 26348,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26282,
											"end": 26348,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26282,
											"end": 26348,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26212,
											"end": 26354,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26212,
											"end": 26354,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26212,
											"end": 26354,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26212,
											"end": 26354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26360,
											"end": 26435,
											"name": "tag",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 26360,
											"end": 26435,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26403,
											"end": 26406,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26424,
											"end": 26429,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26417,
											"end": 26429,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26417,
											"end": 26429,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26360,
											"end": 26435,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26360,
											"end": 26435,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26360,
											"end": 26435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26360,
											"end": 26435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26441,
											"end": 26710,
											"name": "tag",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 26441,
											"end": 26710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26551,
											"end": 26590,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "844"
										},
										{
											"begin": 26582,
											"end": 26589,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26551,
											"end": 26590,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 26551,
											"end": 26590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26551,
											"end": 26590,
											"name": "tag",
											"source": 17,
											"value": "844"
										},
										{
											"begin": 26551,
											"end": 26590,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26612,
											"end": 26703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "845"
										},
										{
											"begin": 26661,
											"end": 26702,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "846"
										},
										{
											"begin": 26685,
											"end": 26701,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26661,
											"end": 26702,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 26661,
											"end": 26702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26661,
											"end": 26702,
											"name": "tag",
											"source": 17,
											"value": "846"
										},
										{
											"begin": 26661,
											"end": 26702,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26653,
											"end": 26659,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26646,
											"end": 26650,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26640,
											"end": 26651,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 26612,
											"end": 26703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 26612,
											"end": 26703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26612,
											"end": 26703,
											"name": "tag",
											"source": 17,
											"value": "845"
										},
										{
											"begin": 26612,
											"end": 26703,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26606,
											"end": 26610,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26599,
											"end": 26704,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 26517,
											"end": 26710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26441,
											"end": 26710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26441,
											"end": 26710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26441,
											"end": 26710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26441,
											"end": 26710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26716,
											"end": 26789,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 26716,
											"end": 26789,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26761,
											"end": 26764,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26716,
											"end": 26789,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26716,
											"end": 26789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26795,
											"end": 26984,
											"name": "tag",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 26795,
											"end": 26984,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26872,
											"end": 26904,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "849"
										},
										{
											"begin": 26872,
											"end": 26904,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 26872,
											"end": 26904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26872,
											"end": 26904,
											"name": "tag",
											"source": 17,
											"value": "849"
										},
										{
											"begin": 26872,
											"end": 26904,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26913,
											"end": 26978,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "850"
										},
										{
											"begin": 26971,
											"end": 26977,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26963,
											"end": 26969,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26957,
											"end": 26961,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26913,
											"end": 26978,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 26913,
											"end": 26978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26913,
											"end": 26978,
											"name": "tag",
											"source": 17,
											"value": "850"
										},
										{
											"begin": 26913,
											"end": 26978,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26848,
											"end": 26984,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26795,
											"end": 26984,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26795,
											"end": 26984,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26795,
											"end": 26984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26990,
											"end": 27176,
											"name": "tag",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 26990,
											"end": 27176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27050,
											"end": 27170,
											"name": "tag",
											"source": 17,
											"value": "852"
										},
										{
											"begin": 27050,
											"end": 27170,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27067,
											"end": 27070,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27060,
											"end": 27065,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27057,
											"end": 27071,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 27050,
											"end": 27170,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 27050,
											"end": 27170,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "854"
										},
										{
											"begin": 27050,
											"end": 27170,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 27121,
											"end": 27160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "855"
										},
										{
											"begin": 27158,
											"end": 27159,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27151,
											"end": 27156,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27121,
											"end": 27160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 27121,
											"end": 27160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27121,
											"end": 27160,
											"name": "tag",
											"source": 17,
											"value": "855"
										},
										{
											"begin": 27121,
											"end": 27160,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27094,
											"end": 27095,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 27087,
											"end": 27092,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27083,
											"end": 27096,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27074,
											"end": 27096,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27074,
											"end": 27096,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27050,
											"end": 27170,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "852"
										},
										{
											"begin": 27050,
											"end": 27170,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27050,
											"end": 27170,
											"name": "tag",
											"source": 17,
											"value": "854"
										},
										{
											"begin": 27050,
											"end": 27170,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26990,
											"end": 27176,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26990,
											"end": 27176,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26990,
											"end": 27176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27182,
											"end": 27725,
											"name": "tag",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 27182,
											"end": 27725,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27283,
											"end": 27285,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 27278,
											"end": 27281,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27275,
											"end": 27286,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 27272,
											"end": 27718,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 27272,
											"end": 27718,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "857"
										},
										{
											"begin": 27272,
											"end": 27718,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 27317,
											"end": 27355,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "858"
										},
										{
											"begin": 27349,
											"end": 27354,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27317,
											"end": 27355,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 27317,
											"end": 27355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27317,
											"end": 27355,
											"name": "tag",
											"source": 17,
											"value": "858"
										},
										{
											"begin": 27317,
											"end": 27355,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27401,
											"end": 27430,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "859"
										},
										{
											"begin": 27419,
											"end": 27429,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27401,
											"end": 27430,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 27401,
											"end": 27430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27401,
											"end": 27430,
											"name": "tag",
											"source": 17,
											"value": "859"
										},
										{
											"begin": 27401,
											"end": 27430,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27391,
											"end": 27399,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27387,
											"end": 27431,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27584,
											"end": 27586,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 27569,
											"end": 27587,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 27566,
											"end": 27615,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 27566,
											"end": 27615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "860"
										},
										{
											"begin": 27566,
											"end": 27615,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 27605,
											"end": 27613,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27590,
											"end": 27613,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27590,
											"end": 27613,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27566,
											"end": 27615,
											"name": "tag",
											"source": 17,
											"value": "860"
										},
										{
											"begin": 27566,
											"end": 27615,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27628,
											"end": 27708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "861"
										},
										{
											"begin": 27684,
											"end": 27706,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "862"
										},
										{
											"begin": 27702,
											"end": 27705,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 27684,
											"end": 27706,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 27684,
											"end": 27706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27684,
											"end": 27706,
											"name": "tag",
											"source": 17,
											"value": "862"
										},
										{
											"begin": 27684,
											"end": 27706,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27674,
											"end": 27682,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 27670,
											"end": 27707,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27657,
											"end": 27668,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27628,
											"end": 27708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 27628,
											"end": 27708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27628,
											"end": 27708,
											"name": "tag",
											"source": 17,
											"value": "861"
										},
										{
											"begin": 27628,
											"end": 27708,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27287,
											"end": 27718,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27287,
											"end": 27718,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27272,
											"end": 27718,
											"name": "tag",
											"source": 17,
											"value": "857"
										},
										{
											"begin": 27272,
											"end": 27718,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27182,
											"end": 27725,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27182,
											"end": 27725,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27182,
											"end": 27725,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27182,
											"end": 27725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27731,
											"end": 27848,
											"name": "tag",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 27731,
											"end": 27848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27785,
											"end": 27793,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27835,
											"end": 27840,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27829,
											"end": 27833,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27825,
											"end": 27841,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 27804,
											"end": 27841,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27804,
											"end": 27841,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27731,
											"end": 27848,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 27731,
											"end": 27848,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27731,
											"end": 27848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27731,
											"end": 27848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27731,
											"end": 27848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27854,
											"end": 28023,
											"name": "tag",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 27854,
											"end": 28023,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27898,
											"end": 27904,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27931,
											"end": 27982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "865"
										},
										{
											"begin": 27979,
											"end": 27980,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27975,
											"end": 27981,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 27967,
											"end": 27972,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27964,
											"end": 27965,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 27960,
											"end": 27973,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 27931,
											"end": 27982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 27931,
											"end": 27982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27931,
											"end": 27982,
											"name": "tag",
											"source": 17,
											"value": "865"
										},
										{
											"begin": 27931,
											"end": 27982,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27927,
											"end": 27983,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 28012,
											"end": 28016,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 28006,
											"end": 28010,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 28002,
											"end": 28017,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 27992,
											"end": 28017,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27992,
											"end": 28017,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27905,
											"end": 28023,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27854,
											"end": 28023,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 27854,
											"end": 28023,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27854,
											"end": 28023,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27854,
											"end": 28023,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27854,
											"end": 28023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28028,
											"end": 28323,
											"name": "tag",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 28028,
											"end": 28323,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28104,
											"end": 28108,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28250,
											"end": 28279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "867"
										},
										{
											"begin": 28275,
											"end": 28278,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 28269,
											"end": 28273,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 28250,
											"end": 28279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 28250,
											"end": 28279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28250,
											"end": 28279,
											"name": "tag",
											"source": 17,
											"value": "867"
										},
										{
											"begin": 28250,
											"end": 28279,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28242,
											"end": 28279,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28242,
											"end": 28279,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28312,
											"end": 28315,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28309,
											"end": 28310,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 28305,
											"end": 28316,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 28299,
											"end": 28303,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28296,
											"end": 28317,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 28288,
											"end": 28317,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 28288,
											"end": 28317,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28028,
											"end": 28323,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 28028,
											"end": 28323,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28028,
											"end": 28323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28028,
											"end": 28323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28028,
											"end": 28323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28328,
											"end": 29723,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 28328,
											"end": 29723,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "869"
										},
										{
											"begin": 28478,
											"end": 28481,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 28445,
											"end": 28482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "tag",
											"source": 17,
											"value": "869"
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28547,
											"end": 28565,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28539,
											"end": 28545,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28536,
											"end": 28566,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 28533,
											"end": 28589,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 28533,
											"end": 28589,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "870"
										},
										{
											"begin": 28533,
											"end": 28589,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 28569,
											"end": 28587,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "871"
										},
										{
											"begin": 28569,
											"end": 28587,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 28569,
											"end": 28587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28569,
											"end": 28587,
											"name": "tag",
											"source": 17,
											"value": "871"
										},
										{
											"begin": 28569,
											"end": 28587,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28533,
											"end": 28589,
											"name": "tag",
											"source": 17,
											"value": "870"
										},
										{
											"begin": 28533,
											"end": 28589,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28613,
											"end": 28651,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "872"
										},
										{
											"begin": 28645,
											"end": 28649,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28639,
											"end": 28650,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 28613,
											"end": 28651,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 28613,
											"end": 28651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28613,
											"end": 28651,
											"name": "tag",
											"source": 17,
											"value": "872"
										},
										{
											"begin": 28613,
											"end": 28651,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28698,
											"end": 28765,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "873"
										},
										{
											"begin": 28758,
											"end": 28764,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28750,
											"end": 28756,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28744,
											"end": 28748,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 28698,
											"end": 28765,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 28698,
											"end": 28765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28698,
											"end": 28765,
											"name": "tag",
											"source": 17,
											"value": "873"
										},
										{
											"begin": 28698,
											"end": 28765,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28792,
											"end": 28793,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28816,
											"end": 28820,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 28803,
											"end": 28820,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 28803,
											"end": 28820,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28848,
											"end": 28850,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 28840,
											"end": 28846,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 28837,
											"end": 28851,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 28865,
											"end": 28866,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 28860,
											"end": 29478,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28860,
											"end": 29478,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 28860,
											"end": 29478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "875"
										},
										{
											"begin": 28860,
											"end": 29478,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 29522,
											"end": 29523,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 29539,
											"end": 29545,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 29536,
											"end": 29613,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 29536,
											"end": 29613,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "876"
										},
										{
											"begin": 29536,
											"end": 29613,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 29588,
											"end": 29597,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29583,
											"end": 29586,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 29579,
											"end": 29598,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29573,
											"end": 29599,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 29564,
											"end": 29599,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 29564,
											"end": 29599,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29536,
											"end": 29613,
											"name": "tag",
											"source": 17,
											"value": "876"
										},
										{
											"begin": 29536,
											"end": 29613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29639,
											"end": 29706,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "877"
										},
										{
											"begin": 29699,
											"end": 29705,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 29692,
											"end": 29697,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29639,
											"end": 29706,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 29639,
											"end": 29706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 29639,
											"end": 29706,
											"name": "tag",
											"source": 17,
											"value": "877"
										},
										{
											"begin": 29639,
											"end": 29706,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29633,
											"end": 29637,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 29626,
											"end": 29707,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 29495,
											"end": 29717,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28830,
											"end": 29717,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "874"
										},
										{
											"begin": 28830,
											"end": 29717,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28860,
											"end": 29478,
											"name": "tag",
											"source": 17,
											"value": "875"
										},
										{
											"begin": 28860,
											"end": 29478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28912,
											"end": 28916,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 28908,
											"end": 28917,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 28900,
											"end": 28906,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 28896,
											"end": 28918,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 28946,
											"end": 28983,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "878"
										},
										{
											"begin": 28978,
											"end": 28982,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 28946,
											"end": 28983,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 28946,
											"end": 28983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28946,
											"end": 28983,
											"name": "tag",
											"source": 17,
											"value": "878"
										},
										{
											"begin": 28946,
											"end": 28983,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29005,
											"end": 29006,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 29019,
											"end": 29227,
											"name": "tag",
											"source": 17,
											"value": "879"
										},
										{
											"begin": 29019,
											"end": 29227,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29033,
											"end": 29040,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29030,
											"end": 29031,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 29027,
											"end": 29041,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 29019,
											"end": 29227,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 29019,
											"end": 29227,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "881"
										},
										{
											"begin": 29019,
											"end": 29227,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 29112,
											"end": 29121,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 29107,
											"end": 29110,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 29103,
											"end": 29122,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29097,
											"end": 29123,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 29089,
											"end": 29095,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29082,
											"end": 29124,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 29163,
											"end": 29164,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 29155,
											"end": 29161,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29151,
											"end": 29165,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29141,
											"end": 29165,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 29141,
											"end": 29165,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29210,
											"end": 29212,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 29199,
											"end": 29208,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 29195,
											"end": 29213,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29182,
											"end": 29213,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 29182,
											"end": 29213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29056,
											"end": 29060,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 29053,
											"end": 29054,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 29049,
											"end": 29061,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29044,
											"end": 29061,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 29044,
											"end": 29061,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29019,
											"end": 29227,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "879"
										},
										{
											"begin": 29019,
											"end": 29227,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 29019,
											"end": 29227,
											"name": "tag",
											"source": 17,
											"value": "881"
										},
										{
											"begin": 29019,
											"end": 29227,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29255,
											"end": 29261,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 29246,
											"end": 29253,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 29243,
											"end": 29262,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 29240,
											"end": 29419,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 29240,
											"end": 29419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "882"
										},
										{
											"begin": 29240,
											"end": 29419,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 29313,
											"end": 29322,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 29308,
											"end": 29311,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 29304,
											"end": 29323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29298,
											"end": 29324,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 29356,
											"end": 29404,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "883"
										},
										{
											"begin": 29398,
											"end": 29402,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 29390,
											"end": 29396,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 29386,
											"end": 29403,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 29375,
											"end": 29384,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29356,
											"end": 29404,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 29356,
											"end": 29404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 29356,
											"end": 29404,
											"name": "tag",
											"source": 17,
											"value": "883"
										},
										{
											"begin": 29356,
											"end": 29404,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29348,
											"end": 29354,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 29341,
											"end": 29405,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 29263,
											"end": 29419,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29240,
											"end": 29419,
											"name": "tag",
											"source": 17,
											"value": "882"
										},
										{
											"begin": 29240,
											"end": 29419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29465,
											"end": 29466,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 29461,
											"end": 29462,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 29453,
											"end": 29459,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 29449,
											"end": 29463,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 29445,
											"end": 29467,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29439,
											"end": 29443,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 29432,
											"end": 29468,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 28867,
											"end": 29478,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28867,
											"end": 29478,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28867,
											"end": 29478,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28830,
											"end": 29717,
											"name": "tag",
											"source": 17,
											"value": "874"
										},
										{
											"begin": 28830,
											"end": 29717,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28830,
											"end": 29717,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28420,
											"end": 29723,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28420,
											"end": 29723,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28420,
											"end": 29723,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28328,
											"end": 29723,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28328,
											"end": 29723,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28328,
											"end": 29723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 29729,
											"end": 29827,
											"name": "tag",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 29729,
											"end": 29827,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29780,
											"end": 29786,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 29814,
											"end": 29819,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 29808,
											"end": 29820,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 29798,
											"end": 29820,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 29798,
											"end": 29820,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29729,
											"end": 29827,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 29729,
											"end": 29827,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 29729,
											"end": 29827,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29729,
											"end": 29827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 29833,
											"end": 29980,
											"name": "tag",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 29833,
											"end": 29980,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29934,
											"end": 29945,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 29971,
											"end": 29974,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 29956,
											"end": 29974,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 29956,
											"end": 29974,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29833,
											"end": 29980,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 29833,
											"end": 29980,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 29833,
											"end": 29980,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29833,
											"end": 29980,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29833,
											"end": 29980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 29986,
											"end": 30372,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 29986,
											"end": 30372,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30090,
											"end": 30093,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 30118,
											"end": 30156,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "887"
										},
										{
											"begin": 30150,
											"end": 30155,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 30118,
											"end": 30156,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 30118,
											"end": 30156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 30118,
											"end": 30156,
											"name": "tag",
											"source": 17,
											"value": "887"
										},
										{
											"begin": 30118,
											"end": 30156,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30172,
											"end": 30260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "888"
										},
										{
											"begin": 30253,
											"end": 30259,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 30248,
											"end": 30251,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 30172,
											"end": 30260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 30172,
											"end": 30260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 30172,
											"end": 30260,
											"name": "tag",
											"source": 17,
											"value": "888"
										},
										{
											"begin": 30172,
											"end": 30260,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30165,
											"end": 30260,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 30165,
											"end": 30260,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30269,
											"end": 30334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "889"
										},
										{
											"begin": 30327,
											"end": 30333,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 30322,
											"end": 30325,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 30315,
											"end": 30319,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 30308,
											"end": 30313,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 30304,
											"end": 30320,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 30269,
											"end": 30334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 30269,
											"end": 30334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 30269,
											"end": 30334,
											"name": "tag",
											"source": 17,
											"value": "889"
										},
										{
											"begin": 30269,
											"end": 30334,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30359,
											"end": 30365,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 30354,
											"end": 30357,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 30350,
											"end": 30366,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 30343,
											"end": 30366,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 30343,
											"end": 30366,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30094,
											"end": 30372,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29986,
											"end": 30372,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 29986,
											"end": 30372,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 29986,
											"end": 30372,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29986,
											"end": 30372,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29986,
											"end": 30372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 30378,
											"end": 30649,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 30378,
											"end": 30649,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30508,
											"end": 30511,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 30530,
											"end": 30623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "891"
										},
										{
											"begin": 30619,
											"end": 30622,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 30610,
											"end": 30616,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 30530,
											"end": 30623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 30530,
											"end": 30623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 30530,
											"end": 30623,
											"name": "tag",
											"source": 17,
											"value": "891"
										},
										{
											"begin": 30530,
											"end": 30623,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30523,
											"end": 30623,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 30523,
											"end": 30623,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30640,
											"end": 30643,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 30633,
											"end": 30643,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 30633,
											"end": 30643,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30378,
											"end": 30649,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 30378,
											"end": 30649,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 30378,
											"end": 30649,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30378,
											"end": 30649,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30378,
											"end": 30649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchTransfer(address[],uint256[])": "88d695b2",
							"blacklisted(address)": "dbac26e9",
							"decimals()": "313ce567",
							"icoContract()": "c66e4095",
							"initialize(string,string,uint256)": "b119490e",
							"isBlacklisted(address)": "fe575a87",
							"lockedUntil(address)": "9bc289f1",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"setBlacklist(address,bool)": "153b0d1e",
							"setICOContract(address)": "2e0d2a00",
							"setLockup(address,uint256)": "3e579307",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyTokenRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"icoContract\",\"type\":\"address\"}],\"name\":\"ICOContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedUntilTimestamp\",\"type\":\"uint256\"}],\"name\":\"LockupSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_icoContract\",\"type\":\"address\"}],\"name\":\"setICOContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"setLockup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RVA/UpgradableToken.sol\":\"ERC20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"RVA/UpgradableToken.sol\":{\"keccak256\":\"0xec9074e3ca039280195e38d98d27a78b49b873151f0459c86877ae06541e2ae5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5b0a61416b07565cf40cffcedf4c5f4f43c5a9a4c0caa9307df92dfa6256815\",\"dweb:/ipfs/QmWmpVAUu25qX8buQS7Stc55T5fNgFMGBN8bgRinABuzR7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 757,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2418,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "icoContract",
								"offset": 0,
								"slot": "50",
								"type": "t_address"
							},
							{
								"astId": 2420,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "51",
								"type": "t_uint256"
							},
							{
								"astId": 2424,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "lockedUntil",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2428,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "blacklisted",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1421
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1422,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1421,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1421,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1403,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1883
						],
						"IERC1822Proxiable": [
							1452
						],
						"Initializable": [
							448
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1453,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1452,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1884,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1883,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 449,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1023:13:2"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1452,
										"src": "1038:17:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								1452,
								448
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 468,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 466,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 472,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 475,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 480,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 488,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 496,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 630,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 630,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1451
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 516,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1883_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1604,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 515,
												"id": 518,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 630,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 630,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4648:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 548,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4692:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 550,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1883,
																	"src": "4753:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1883_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1635,
																"src": "4753:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 553,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4789:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "4658:251:2",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "4848:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "4869:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 558,
															"nodeType": "RevertStatement",
															"src": "4862:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:2"
									},
									"scope": 630,
									"src": "4603:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5084:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 570,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5115:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "5094:145:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "5123:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5199:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "5192:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:2"
									},
									"scope": 630,
									"src": "5032:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5655:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:2"
									},
									"scope": 630,
									"src": "5628:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6142:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 617,
															"nodeType": "Block",
															"src": "6232:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6250:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 601,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1883,
																				"src": "6258:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1883_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1604,
																			"src": "6258:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 609,
																	"nodeType": "IfStatement",
																	"src": "6246:120:2",
																	"trueBody": {
																		"id": 608,
																		"nodeType": "Block",
																		"src": "6292:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 605,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 598,
																							"src": "6346:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 604,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "6317:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 607,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 613,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6409:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 614,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6428:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1883,
																				"src": "6379:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1883_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1698,
																			"src": "6379:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:2"
																}
															]
														},
														"errorName": "",
														"id": 618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 599,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 598,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 618,
																	"src": "6218:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 597,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:2"
														},
														"src": "6209:235:2"
													},
													{
														"block": {
															"id": 625,
															"nodeType": "Block",
															"src": "6451:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 622,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6560:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 619,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1883,
																				"src": "6518:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1883_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1609,
																			"src": "6518:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 624,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:2"
																}
															]
														},
														"errorName": "",
														"id": 626,
														"nodeType": "TryCatchClause",
														"src": "6445:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6174:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "6156:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1452_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1452",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1451,
														"src": "6156:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 627,
												"nodeType": "TryStatement",
												"src": "6152:437:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6088:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6115:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:2"
									},
									"scope": 630,
									"src": "6057:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "986:5611:2",
							"usedErrors": [
								211,
								214,
								475,
								480,
								1609,
								1622,
								2007,
								2269
							],
							"usedEvents": [
								219,
								1429
							]
						}
					],
					"src": "115:6483:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1421
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							758
						]
					},
					"id": 759,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 759,
							"sourceUnit": 1422,
							"src": "130:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 759,
							"sourceUnit": 449,
							"src": "172:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 634,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "180:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 637,
										"name": "Initializable",
										"nameLocations": [
											"718:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "718:13:3"
									},
									"id": 638,
									"nodeType": "InheritanceSpecifier",
									"src": "718:13:3"
								},
								{
									"baseName": {
										"id": 639,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"733:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "733:18:3"
									},
									"id": 640,
									"nodeType": "InheritanceSpecifier",
									"src": "733:18:3"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 636,
								"nodeType": "StructuredDocumentation",
								"src": "237:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 758,
							"linearizedBaseContracts": [
								758,
								1421,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "695:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "758:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 645,
									"name": "Paused",
									"nameLocation": "842:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "857:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "849:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:17:3"
									},
									"src": "836:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "872:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 650,
									"name": "Unpaused",
									"nameLocation": "953:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"src": "947:32:3"
								},
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "998:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 758,
									"src": "985:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 651,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "985:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "1137:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 658,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1147:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:3"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "1012:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 656,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 655,
												"name": "onlyInitializing",
												"nameLocations": [
													"1120:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1120:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:16:3"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1093:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:3"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:3"
									},
									"scope": 758,
									"src": "1084:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "1250:32:3",
										"statements": [
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "1260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1260:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "1260:15:3"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyInitializing",
												"nameLocations": [
													"1233:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1233:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1233:16:3"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1196:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:3"
									},
									"scope": 758,
									"src": "1187:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1493:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 675,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "1503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "1503:19:3"
											},
											{
												"id": 678,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:3"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "1288:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 680,
									"name": "whenNotPaused",
									"nameLocation": "1477:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:3"
									},
									"src": "1468:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "1740:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 683,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "1750:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "1750:16:3"
											},
											{
												"id": 686,
												"nodeType": "PlaceholderStatement",
												"src": "1776:1:3"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1546:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 688,
									"name": "whenPaused",
									"nameLocation": "1727:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:3"
									},
									"src": "1718:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "1932:31:3",
										"statements": [
											{
												"expression": {
													"id": 694,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 652,
													"src": "1949:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 693,
												"id": 695,
												"nodeType": "Return",
												"src": "1942:14:3"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "1790:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1888:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1926:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:6:3"
									},
									"scope": 758,
									"src": "1879:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "2082:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2100:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 702,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "2101:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2101:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "2092:38:3"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1969:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2040:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:3"
									},
									"scope": 758,
									"src": "2031:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2257:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 714,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "2275:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2275:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2267:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2267:41:3"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "2143:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2218:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:3"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:3"
									},
									"scope": 758,
									"src": "2209:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "2499:66:3",
										"statements": [
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2509:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "2509:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 731,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "2545:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 730,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "2538:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "EmitStatement",
												"src": "2533:25:3"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "2321:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 724,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 723,
												"name": "whenNotPaused",
												"nameLocations": [
													"2485:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2485:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2459:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:3"
									},
									"scope": 758,
									"src": "2450:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "2745:69:3",
										"statements": [
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 742,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2755:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2765:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2755:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "2755:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 747,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "2794:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 746,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "2785:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "EmitStatement",
												"src": "2780:27:3"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "2571:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 740,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 739,
												"name": "whenPaused",
												"nameLocations": [
													"2734:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 688,
												"src": "2734:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2706:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:3"
									},
									"scope": 758,
									"src": "2697:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "2820:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 757,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3099:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 758,
									"src": "3079:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 754,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3079:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 756,
										"length": {
											"hexValue": "3439",
											"id": 755,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3087:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3079:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 759,
							"src": "677:2430:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219,
								645,
								650
							]
						}
					],
					"src": "105:3003:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1421
						],
						"ERC20Upgradeable": [
							1375
						],
						"IERC20": [
							1971
						],
						"IERC20Errors": [
							1494
						],
						"IERC20Metadata": [
							1997
						],
						"Initializable": [
							448
						]
					},
					"id": 1376,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 760,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1972,
							"src": "131:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 761,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1971,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1998,
							"src": "202:97:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 763,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1997,
										"src": "210:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1422,
							"src": "300:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 765,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1421,
										"src": "308:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1590,
							"src": "371:83:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 767,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1494,
										"src": "379:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 449,
							"src": "455:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 769,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "463:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 772,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1319:13:4"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:4"
								},
								{
									"baseName": {
										"id": 774,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "1334:18:4"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:4"
								},
								{
									"baseName": {
										"id": 776,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1971,
										"src": "1354:6:4"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:4"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1997,
										"src": "1362:14:4"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:4"
								},
								{
									"baseName": {
										"id": 780,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1494,
										"src": "1378:12:4"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:4"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 771,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1375,
							"linearizedBaseContracts": [
								1375,
								1494,
								1997,
								1971,
								1421,
								448
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 799,
									"members": [
										{
											"constant": false,
											"id": 786,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1495:45:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 785,
												"keyName": "account",
												"keyNameLocation": "1511:7:4",
												"keyType": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1551:75:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 791,
												"keyName": "account",
												"keyNameLocation": "1567:7:4",
												"keyType": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 790,
													"keyName": "spender",
													"keyNameLocation": "1594:7:4",
													"keyType": {
														"id": 788,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 789,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1637:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 793,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 796,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1668:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 795,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1690:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 797,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:4",
									"nodeType": "StructDefinition",
									"scope": 1375,
									"src": "1465:246:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 802,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "1826:114:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 800,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 801,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "2021:79:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:4",
													"nodeType": "YulBlock",
													"src": "2040:54:4",
													"statements": [
														{
															"nativeSrc": "2054:30:4",
															"nodeType": "YulAssignment",
															"src": "2054:30:4",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:4",
																"nodeType": "YulIdentifier",
																"src": "2064:20:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 802,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:4",
														"valueSize": 1
													}
												],
												"id": 808,
												"nodeType": "InlineAssembly",
												"src": "2031:63:4"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1997:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 799,
														"src": "1997:12:4"
													},
													"referencedDeclaration": 799,
													"src": "1997:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:4"
									},
									"scope": 1375,
									"src": "1947:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "2374:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "2407:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 822,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "2414:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 820,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2384:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "2384:38:4"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "2106:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 818,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 817,
												"name": "onlyInitializing",
												"nameLocations": [
													"2357:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2357:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2357:16:4"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2291:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2318:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2304:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2304:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2339:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2325:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 814,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:44:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:4"
									},
									"scope": 1375,
									"src": "2282:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "2537:114:4",
										"statements": [
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2568:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "2547:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 836,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 835,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2547:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "2547:12:4"
															},
															"referencedDeclaration": 799,
															"src": "2547:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 840,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 838,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2572:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2547:43:4"
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 841,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "2600:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2602:5:4",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 796,
														"src": "2600:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "2610:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2600:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "2600:15:4"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 847,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "2625:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2627:7:4",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 798,
														"src": "2625:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2637:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2625:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "2625:19:4"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 833,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 832,
												"name": "onlyInitializing",
												"nameLocations": [
													"2520:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2520:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2520:16:4"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2444:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2481:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2467:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 827,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2502:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2488:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:44:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:4"
									},
									"scope": 1375,
									"src": "2435:216:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1984
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "2776:84:4",
										"statements": [
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2807:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "2786:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 861,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 860,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2786:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "2786:12:4"
															},
															"referencedDeclaration": 799,
															"src": "2786:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2811:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 866,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2846:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2848:5:4",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 796,
													"src": "2846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 859,
												"id": 868,
												"nodeType": "Return",
												"src": "2839:14:4"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2657:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2725:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2761:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2761:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:15:4"
									},
									"scope": 1375,
									"src": "2716:144:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1990
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "3035:86:4",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3066:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "3045:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 877,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 876,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3045:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "3045:12:4"
															},
															"referencedDeclaration": 799,
															"src": "3045:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 879,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3070:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3045:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 882,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3105:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3107:7:4",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 798,
													"src": "3105:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 875,
												"id": 884,
												"nodeType": "Return",
												"src": "3098:16:4"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2866:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2982:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:2:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "3020:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3020:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:15:4"
									},
									"scope": 1375,
									"src": "2973:148:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1996
									],
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3810:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3827:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 891,
												"id": 893,
												"nodeType": "Return",
												"src": "3820:9:4"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "3127:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3763:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:2:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3803:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 889,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:7:4"
									},
									"scope": 1375,
									"src": "3754:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1920
									],
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "3957:91:4",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3988:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 910,
														"src": "3967:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 902,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 901,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3967:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "3967:12:4"
															},
															"referencedDeclaration": 799,
															"src": "3967:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 904,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3992:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3967:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 907,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "4027:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4029:12:4",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 794,
													"src": "4027:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 900,
												"id": 909,
												"nodeType": "Return",
												"src": "4020:21:4"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3842:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3905:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:2:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3948:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:4"
									},
									"scope": 1375,
									"src": "3896:152:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1928
									],
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "4180:97:4",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4211:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "4190:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 920,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 919,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4190:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "4190:12:4"
															},
															"referencedDeclaration": 799,
															"src": "4190:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 922,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4215:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4190:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 925,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "4250:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4252:9:4",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 786,
														"src": "4250:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 928,
													"indexExpression": {
														"id": 927,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "4262:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4250:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 918,
												"id": 929,
												"nodeType": "Return",
												"src": "4243:27:4"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "4054:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4115:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4133:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "4125:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:17:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "4171:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:9:4"
									},
									"scope": 1375,
									"src": "4106:171:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1938
									],
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "4547:103:4",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4565:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "4557:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 941,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4557:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 943,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "4573:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4573:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4557:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "4605:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "4612:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "4616:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 946,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4595:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "4595:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4639:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 940,
												"id": 953,
												"nodeType": "Return",
												"src": "4632:11:4"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "4283:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4481:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4498:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4490:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4510:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4502:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:27:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4541:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4541:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:6:4"
									},
									"scope": 1375,
									"src": "4472:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1948
									],
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "4797:106:4",
										"statements": [
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4828:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "4807:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 966,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 965,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4807:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "4807:12:4"
															},
															"referencedDeclaration": 799,
															"src": "4807:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 968,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4832:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4807:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 971,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "4867:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4869:11:4",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 792,
															"src": "4867:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 974,
														"indexExpression": {
															"id": 973,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "4881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4867:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 976,
													"indexExpression": {
														"id": 975,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4888:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4867:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 964,
												"id": 977,
												"nodeType": "Return",
												"src": "4860:36:4"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "4656:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4717:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4727:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4750:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4742:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:32:4"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4788:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4787:9:4"
									},
									"scope": 1375,
									"src": "4708:195:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1958
									],
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "5289:107:4",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5307:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1002,
														"src": "5299:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 989,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5299:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 991,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "5315:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5315:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "5346:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "5353:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "5362:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1326
														],
														"referencedDeclaration": 1258,
														"src": "5337:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "5337:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5385:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 988,
												"id": 1001,
												"nodeType": "Return",
												"src": "5378:11:4"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4909:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5219:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5235:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5227:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5252:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5244:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:32:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5283:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5283:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:6:4"
									},
									"scope": 1375,
									"src": "5210:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1970
									],
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "6081:151:4",
										"statements": [
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6099:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "6091:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1015,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6091:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1017,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "6109:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6091:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6147:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "6153:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6162:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "6131:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "6131:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1027,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6188:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "6194:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6198:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "6178:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "6178:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6221:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1014,
												"id": 1033,
												"nodeType": "Return",
												"src": "6214:11:4"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "5402:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5997:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6018:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6010:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6044:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6036:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:41:4"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6074:6:4"
									},
									"scope": 1375,
									"src": "5988:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "6674:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "6688:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6704:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6696:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1046,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6696:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6696:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6688:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "6684:86:4",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "6708:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6756:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6748:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1052,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6748:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6748:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1051,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "6729:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6729:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1057,
															"nodeType": "RevertStatement",
															"src": "6722:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "6783:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6797:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6789:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1061,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6789:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6789:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6783:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "6779:86:4",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "6801:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6851:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6843:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1067,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6843:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6843:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1066,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "6822:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6822:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1072,
															"nodeType": "RevertStatement",
															"src": "6815:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "6882:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "6888:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "6892:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1075,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "6874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6874:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "6874:24:4"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "6238:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6614:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6632:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6624:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6646:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6638:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6658:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6650:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:41:4"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6674:0:4"
									},
									"scope": 1375,
									"src": "6605:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "7295:1095:4",
										"statements": [
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7326:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "7305:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1093,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1092,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7305:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "7305:12:4"
															},
															"referencedDeclaration": 799,
															"src": "7305:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1097,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1095,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "7330:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7330:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7305:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1098,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "7362:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7378:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1099,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7370:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7370:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7362:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "7538:366:4",
													"statements": [
														{
															"assignments": [
																1112
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1112,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7560:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1140,
																	"src": "7552:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1111,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7552:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1117,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1113,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "7574:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7576:9:4",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 786,
																	"src": "7574:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1116,
																"indexExpression": {
																	"id": 1115,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "7586:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7574:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7552:39:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1118,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "7609:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1119,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "7623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7609:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1128,
															"nodeType": "IfStatement",
															"src": "7605:115:4",
															"trueBody": {
																"id": 1127,
																"nodeType": "Block",
																"src": "7630:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1122,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "7680:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1123,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "7686:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1124,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "7699:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1121,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1464,
																				"src": "7655:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7655:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1126,
																		"nodeType": "RevertStatement",
																		"src": "7648:57:4"
																	}
																]
															}
														},
														{
															"id": 1139,
															"nodeType": "UncheckedBlock",
															"src": "7733:161:4",
															"statements": [
																{
																	"expression": {
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1129,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "7840:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1132,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7842:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 786,
																				"src": "7840:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1133,
																			"indexExpression": {
																				"id": 1131,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "7852:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7840:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1134,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "7860:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1135,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "7874:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7860:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7840:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1138,
																	"nodeType": "ExpressionStatement",
																	"src": "7840:39:4"
																}
															]
														}
													]
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "7358:546:4",
												"trueBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "7382:150:4",
													"statements": [
														{
															"expression": {
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1104,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "7498:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7500:12:4",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "7498:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1107,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "7516:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7498:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "7498:23:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1142,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "7918:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7932:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7924:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7924:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7924:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7918:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "8135:208:4",
													"statements": [
														{
															"id": 1164,
															"nodeType": "UncheckedBlock",
															"src": "8149:184:4",
															"statements": [
																{
																	"expression": {
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1156,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "8294:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8296:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 786,
																				"src": "8294:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1160,
																			"indexExpression": {
																				"id": 1158,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "8306:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8294:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1161,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "8313:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8294:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1163,
																	"nodeType": "ExpressionStatement",
																	"src": "8294:24:4"
																}
															]
														}
													]
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "7914:429:4",
												"trueBody": {
													"id": 1155,
													"nodeType": "Block",
													"src": "7936:193:4",
													"statements": [
														{
															"id": 1154,
															"nodeType": "UncheckedBlock",
															"src": "7950:169:4",
															"statements": [
																{
																	"expression": {
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1148,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "8081:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8083:12:4",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 794,
																			"src": "8081:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "8099:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8081:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1153,
																	"nodeType": "ExpressionStatement",
																	"src": "8081:23:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1168,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "8367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "8373:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "8377:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1167,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "8358:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8358:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "EmitStatement",
												"src": "8353:30:4"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "6911:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7229:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7245:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7237:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7259:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7251:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7251:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7271:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7263:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7236:41:4"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7295:0:4"
									},
									"scope": 1375,
									"src": "7220:1170:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "8789:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1182,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "8803:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8814:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8814:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8814:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8803:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "8799:91:4",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "8826:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8876:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8868:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1189,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8868:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8868:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1188,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "8847:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8847:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1194,
															"nodeType": "RevertStatement",
															"src": "8840:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8915:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8907:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1198,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8907:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8907:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "8919:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "8928:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "8899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8899:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "8899:35:4"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "8396:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8742:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8756:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "8748:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8773:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "8765:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8747:32:4"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8789:0:4"
									},
									"scope": 1375,
									"src": "8733:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "9315:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "9329:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9348:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9340:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9340:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9340:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9329:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1229,
												"nodeType": "IfStatement",
												"src": "9325:89:4",
												"trueBody": {
													"id": 1228,
													"nodeType": "Block",
													"src": "9352:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9400:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9392:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1222,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9392:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9392:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1221,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "9373:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9373:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1227,
															"nodeType": "RevertStatement",
															"src": "9366:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "9431:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9448:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9440:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9440:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9440:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "9452:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1230,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "9423:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9423:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "9423:35:4"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "8947:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9268:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9282:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "9274:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9274:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9299:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "9291:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9291:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9273:32:4"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9315:0:4"
									},
									"scope": 1375,
									"src": "9259:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "10075:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1251,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "10094:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "10101:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "10110:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10117:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1250,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1326
														],
														"referencedDeclaration": 1326,
														"src": "10085:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10085:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "10085:37:4"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "9471:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10010:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10027:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10019:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10019:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10042:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10034:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10034:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:47:4"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10075:0:4"
									},
									"scope": 1375,
									"src": "10001:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "11074:389:4",
										"statements": [
											{
												"assignments": [
													1272
												],
												"declarations": [
													{
														"constant": false,
														"id": 1272,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11105:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "11084:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1271,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1270,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11084:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "11084:12:4"
															},
															"referencedDeclaration": 799,
															"src": "11084:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1275,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1273,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "11109:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11109:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11084:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1276,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "11141:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1277,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11150:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11150:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11141:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "11137:89:4",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "11162:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11212:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11204:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1283,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11204:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11204:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1282,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "11183:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11183:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1288,
															"nodeType": "RevertStatement",
															"src": "11176:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "11239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11258:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11250:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11250:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11250:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11239:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "11235:90:4",
												"trueBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "11262:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11311:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11303:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1298,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11303:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11303:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1297,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "11283:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11283:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1303,
															"nodeType": "RevertStatement",
															"src": "11276:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1306,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "11334:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11336:11:4",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 792,
																"src": "11334:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1311,
															"indexExpression": {
																"id": 1308,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "11348:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11334:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1312,
														"indexExpression": {
															"id": 1309,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "11355:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11334:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1313,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "11366:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11334:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "11334:37:4"
											},
											{
												"condition": {
													"id": 1316,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1267,
													"src": "11385:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1324,
												"nodeType": "IfStatement",
												"src": "11381:76:4",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "11396:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1318,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "11424:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1319,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "11431:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1320,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "11440:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1317,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "11415:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11415:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "EmitStatement",
															"src": "11410:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "10135:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10985:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "10994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11017:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11009:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11009:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11034:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11026:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11046:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11041:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11041:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10993:63:4"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11074:0:4"
									},
									"scope": 1375,
									"src": "10976:487:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "11834:388:4",
										"statements": [
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11852:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "11844:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11844:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"arguments": [
														{
															"id": 1339,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "11881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1340,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "11888:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1338,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "11871:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11871:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11844:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1343,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "11910:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11935:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1345,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11935:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1344,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11930:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11930:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11944:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11930:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11910:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "11906:310:4",
												"trueBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "11949:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1350,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "11967:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1351,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "11986:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11967:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1360,
															"nodeType": "IfStatement",
															"src": "11963:130:4",
															"trueBody": {
																"id": 1359,
																"nodeType": "Block",
																"src": "11993:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1354,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1331,
																					"src": "12045:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1355,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "12054:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1356,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "12072:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1353,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1483,
																				"src": "12018:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12018:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1358,
																		"nodeType": "RevertStatement",
																		"src": "12011:67:4"
																	}
																]
															}
														},
														{
															"id": 1370,
															"nodeType": "UncheckedBlock",
															"src": "12106:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1362,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1329,
																				"src": "12143:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1363,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1331,
																				"src": "12150:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1364,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "12159:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1365,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "12178:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12159:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12185:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1361,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1258,
																				1326
																			],
																			"referencedDeclaration": 1326,
																			"src": "12134:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12134:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "12134:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "11469:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11754:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11778:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11770:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11770:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11793:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11785:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11785:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11810:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11802:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11769:47:4"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11834:0:4"
									},
									"scope": 1375,
									"src": "11745:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1376,
							"src": "1281:10943:4",
							"usedErrors": [
								211,
								214,
								1464,
								1469,
								1474,
								1483,
								1488,
								1493
							],
							"usedEvents": [
								219,
								1905,
								1914
							]
						}
					],
					"src": "105:12120:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1421
						],
						"Initializable": [
							448
						]
					},
					"id": 1422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1377,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1422,
							"sourceUnit": 449,
							"src": "126:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1378,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1381,
										"name": "Initializable",
										"nameLocations": [
											"728:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:5"
									},
									"id": 1382,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1380,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1421,
							"linearizedBaseContracts": [
								1421,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "800:7:5",
										"statements": []
									},
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1385,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1384,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:5"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:5"
									},
									"scope": 1421,
									"src": "748:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "875:7:5",
										"statements": []
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1390,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:5"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:5"
									},
									"scope": 1421,
									"src": "813:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "949:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1399,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1401,
												"nodeType": "Return",
												"src": "959:17:5"
											}
										]
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:5"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "940:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:5"
									},
									"scope": 1421,
									"src": "887:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "1056:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1408,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1407,
												"id": 1410,
												"nodeType": "Return",
												"src": "1066:15:5"
											}
										]
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:5"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1040:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:5"
									},
									"scope": 1421,
									"src": "989:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "1166:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1416,
												"id": 1418,
												"nodeType": "Return",
												"src": "1176:8:5"
											}
										]
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:5"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "1157:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:5"
									},
									"scope": 1421,
									"src": "1094:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1422,
							"src": "688:505:5",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1424,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:6",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1442,
							"linearizedBaseContracts": [
								1442
							],
							"name": "IERC1967",
							"nameLocation": "245:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:6",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1429,
									"name": "Upgraded",
									"nameLocation": "339:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "348:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:6"
									},
									"src": "333:47:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:6",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1436,
									"name": "AdminChanged",
									"nameLocation": "464:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "477:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "500:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:6"
									},
									"src": "458:60:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:6",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1441,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "609:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:6"
									},
									"src": "588:45:6"
								}
							],
							"scope": 1443,
							"src": "235:400:6",
							"usedErrors": [],
							"usedEvents": [
								1429,
								1436,
								1441
							]
						}
					],
					"src": "107:529:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1452
						]
					},
					"id": 1453,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:7",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1452,
							"linearizedBaseContracts": [
								1452
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:7",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:7"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "869:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:7"
									},
									"scope": 1452,
									"src": "821:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1453,
							"src": "344:536:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1589
						],
						"IERC20Errors": [
							1494
						],
						"IERC721Errors": [
							1542
						]
					},
					"id": 1590,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1454,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1455,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:8",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1494,
							"linearizedBaseContracts": [
								1494
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:8",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1464,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "654:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "670:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "687:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:8"
									},
									"src": "623:80:8"
								},
								{
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1469,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "891:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:8"
									},
									"src": "866:41:8"
								},
								{
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1474,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "1104:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:8"
									},
									"src": "1077:45:8"
								},
								{
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:8",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1483,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1511:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1528:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1547:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:8"
									},
									"src": "1478:85:8"
								},
								{
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1488,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1775:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:8"
									},
									"src": "1748:45:8"
								},
								{
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:8",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1493,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2025:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:8"
									},
									"src": "1999:43:8"
								}
							],
							"scope": 1590,
							"src": "280:1764:8",
							"usedErrors": [
								1464,
								1469,
								1474,
								1483,
								1488,
								1493
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1495,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:8",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1542,
							"linearizedBaseContracts": [
								1542
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:8",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1500,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "2469:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:8"
									},
									"src": "2444:40:8"
								},
								{
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:8",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1505,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "2656:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:8"
									},
									"src": "2627:46:8"
								},
								{
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:8",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1514,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "3000:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "3016:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "3033:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:8"
									},
									"src": "2973:75:8"
								},
								{
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1519,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "3237:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:8"
									},
									"src": "3211:42:8"
								},
								{
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1524,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3451:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:8"
									},
									"src": "3423:46:8"
								},
								{
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:8",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1531,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "3760:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "3778:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:8"
									},
									"src": "3727:68:8"
								},
								{
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1536,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "4008:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:8"
									},
									"src": "3980:46:8"
								},
								{
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:8",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1541,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "4262:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:8"
									},
									"src": "4234:46:8"
								}
							],
							"scope": 1590,
							"src": "2190:2092:8",
							"usedErrors": [
								1500,
								1505,
								1514,
								1519,
								1524,
								1531,
								1536,
								1541
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1543,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:8",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1589,
							"linearizedBaseContracts": [
								1589
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1544,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:8",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1554,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4860:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4876:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4893:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4909:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:8"
									},
									"src": "4827:99:8"
								},
								{
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1559,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "5116:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:8"
									},
									"src": "5089:43:8"
								},
								{
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1564,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "5331:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:8"
									},
									"src": "5302:47:8"
								},
								{
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:8",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1571,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5651:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5669:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:8"
									},
									"src": "5616:68:8"
								},
								{
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1576,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "5898:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:8"
									},
									"src": "5869:47:8"
								},
								{
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:8",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1581,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "6153:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:8"
									},
									"src": "6124:47:8"
								},
								{
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:8",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1588,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "6494:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "6513:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:8"
									},
									"src": "6462:73:8"
								}
							],
							"scope": 1590,
							"src": "4430:2107:8",
							"usedErrors": [
								1554,
								1559,
								1564,
								1571,
								1576,
								1581,
								1588
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2256
						],
						"ERC1967Utils": [
							1883
						],
						"IBeacon": [
							1893
						],
						"IERC1967": [
							1442
						],
						"StorageSlot": [
							2402
						]
					},
					"id": 1884,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1591,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1593,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 1894,
							"src": "140:46:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1592,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1893,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 1443,
							"src": "187:55:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1594,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "195:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 2257,
							"src": "243:48:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1596,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2256,
										"src": "251:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1599,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 2403,
							"src": "292:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1598,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2402,
										"src": "300:11:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1600,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:9",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1883,
							"linearizedBaseContracts": [
								1883
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:9",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1604,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "763:114:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1602,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1603,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:9",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1609,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "993:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:9"
									},
									"src": "958:59:9"
								},
								{
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:9",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1614,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "1114:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:9"
									},
									"src": "1088:41:9"
								},
								{
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:9",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1619,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1228:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:9"
									},
									"src": "1201:43:9"
								},
								{
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:9",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1622,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:9"
									},
									"src": "1337:26:9"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "1502:77:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1630,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "1546:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1628,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "1519:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:9",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2313,
															"src": "1519:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:9",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2283,
													"src": "1519:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1627,
												"id": 1633,
												"nodeType": "Return",
												"src": "1512:60:9"
											}
										]
									},
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:9",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:9"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "1493:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:9"
									},
									"scope": 1883,
									"src": "1441:138:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "1734:218:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1641,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "1748:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1651,
												"nodeType": "IfStatement",
												"src": "1744:119:9",
												"trueBody": {
													"id": 1650,
													"nodeType": "Block",
													"src": "1784:79:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1647,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "1834:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1646,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "1805:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1649,
															"nodeType": "RevertStatement",
															"src": "1798:54:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1655,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "1899:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1652,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "1872:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:9",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2313,
																"src": "1872:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2283,
														"src": "1872:53:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1658,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "1928:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:9"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:9",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "1699:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:9"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:9"
									},
									"scope": 1883,
									"src": "1671:281:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "2345:263:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1671,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "2374:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1670,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "2355:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1677,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "2425:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1674,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "2407:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1442_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:9",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1429,
														"src": "2407:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1679,
												"nodeType": "EmitStatement",
												"src": "2402:41:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1680,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "2458:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1695,
													"nodeType": "Block",
													"src": "2559:43:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1692,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "2573:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1694,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:9"
														}
													]
												},
												"id": 1696,
												"nodeType": "IfStatement",
												"src": "2454:148:9",
												"trueBody": {
													"id": 1691,
													"nodeType": "Block",
													"src": "2475:78:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1687,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "2518:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1688,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "2537:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1684,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "2489:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2256_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:9",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2173,
																	"src": "2489:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1690,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:9",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "2290:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "2317:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:9"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:9"
									},
									"scope": 1883,
									"src": "2264:344:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:9",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1702,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "2829:105:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1700,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1701,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "3339:68:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1710,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "3383:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1708,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "3356:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:9",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2313,
															"src": "3356:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:9",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2283,
													"src": "3356:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1707,
												"id": 1713,
												"nodeType": "Return",
												"src": "3349:51:9"
											}
										]
									},
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:9",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:9"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "3330:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:9"
									},
									"scope": 1883,
									"src": "3287:120:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "3535:172:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1721,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "3549:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1722,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1735,
												"nodeType": "IfStatement",
												"src": "3545:91:9",
												"trueBody": {
													"id": 1734,
													"nodeType": "Block",
													"src": "3573:63:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1727,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1614,
																	"src": "3594:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1733,
															"nodeType": "RevertStatement",
															"src": "3587:38:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1739,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "3672:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1736,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "3645:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:9",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2313,
																"src": "3645:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2283,
														"src": "3645:44:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1742,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "3692:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:9"
											}
										]
									},
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:9",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "3509:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:9"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:9"
									},
									"scope": 1883,
									"src": "3490:217:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "3875:94:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1755,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "3912:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1757,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "3924:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1752,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "3890:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1442_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:9",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1436,
														"src": "3890:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1759,
												"nodeType": "EmitStatement",
												"src": "3885:48:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1761,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "3953:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1760,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "3943:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1763,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:9"
											}
										]
									},
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:9",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "3848:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:9"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:9"
									},
									"scope": 1883,
									"src": "3827:142:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:9",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1769,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "4246:106:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1767,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1768,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "4468:69:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1777,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1769,
																"src": "4512:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1775,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "4485:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:9",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2313,
															"src": "4485:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:9",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2283,
													"src": "4485:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1774,
												"id": 1780,
												"nodeType": "Return",
												"src": "4478:52:9"
											}
										]
									},
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:9",
										"text": " @dev Returns the current beacon."
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:9"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "4459:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:9"
									},
									"scope": 1883,
									"src": "4415:122:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "4667:390:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1788,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "4681:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1798,
												"nodeType": "IfStatement",
												"src": "4677:95:9",
												"trueBody": {
													"id": 1797,
													"nodeType": "Block",
													"src": "4709:63:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1794,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1785,
																		"src": "4751:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1793,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "4730:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1796,
															"nodeType": "RevertStatement",
															"src": "4723:38:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1802,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "4809:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1799,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "4782:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:9",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2313,
																"src": "4782:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2283,
														"src": "4782:45:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1805,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1785,
														"src": "4830:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:9"
											},
											{
												"assignments": [
													1809
												],
												"declarations": [
													{
														"constant": false,
														"id": 1809,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:9",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "4850:28:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1808,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1815,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1811,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1785,
																	"src": "4889:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1810,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1893,
																"src": "4881:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1893_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1893",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:9",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1892,
														"src": "4881:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1816,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "4930:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1826,
												"nodeType": "IfStatement",
												"src": "4926:125:9",
												"trueBody": {
													"id": 1825,
													"nodeType": "Block",
													"src": "4969:82:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1822,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "5019:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1821,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "4990:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1824,
															"nodeType": "RevertStatement",
															"src": "4983:57:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:9",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "4640:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:9"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:9"
									},
									"scope": 1883,
									"src": "4620:437:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "5661:263:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1837,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "5682:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1836,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "5671:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1839,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1843,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "5731:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1840,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "5707:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1442_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:9",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1441,
														"src": "5707:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1845,
												"nodeType": "EmitStatement",
												"src": "5702:39:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1846,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "5756:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1865,
													"nodeType": "Block",
													"src": "5875:43:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1862,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "5889:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1864,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:9"
														}
													]
												},
												"id": 1866,
												"nodeType": "IfStatement",
												"src": "5752:166:9",
												"trueBody": {
													"id": 1861,
													"nodeType": "Block",
													"src": "5773:96:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1854,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1831,
																						"src": "5824:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1853,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1893,
																					"src": "5816:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1893_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1893",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:9",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1892,
																			"src": "5816:33:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1858,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1833,
																		"src": "5853:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1850,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "5787:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2256_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:9",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2173,
																	"src": "5787:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1860,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:9",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "5614:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "5633:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:9"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:9"
									},
									"scope": 1883,
									"src": "5582:342:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "6149:86:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1872,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1880,
												"nodeType": "IfStatement",
												"src": "6159:70:9",
												"trueBody": {
													"id": 1879,
													"nodeType": "Block",
													"src": "6178:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1876,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "6199:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1878,
															"nodeType": "RevertStatement",
															"src": "6192:26:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:9",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:9"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:9"
									},
									"scope": 1883,
									"src": "6113:122:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1884,
							"src": "496:5741:9",
							"usedErrors": [
								1609,
								1614,
								1619,
								1622
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1893
						]
					},
					"id": 1894,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1885,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1886,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:10",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1893,
							"linearizedBaseContracts": [
								1893
							],
							"name": "IBeacon",
							"nameLocation": "224:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:10",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:10"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "460:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:10"
									},
									"scope": 1893,
									"src": "411:58:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1894,
							"src": "214:257:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1971
						]
					},
					"id": 1972,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1895,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1896,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:11",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1971,
							"linearizedBaseContracts": [
								1971
							],
							"name": "IERC20",
							"nameLocation": "214:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:11",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1905,
									"name": "Transfer",
									"nameLocation": "396:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "405:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "427:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "447:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:11"
									},
									"src": "390:72:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:11",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1914,
									"name": "Approval",
									"nameLocation": "627:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "636:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "659:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "684:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:11"
									},
									"src": "621:78:11"
								},
								{
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:11",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:11"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "821:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:11"
									},
									"scope": 1971,
									"src": "775:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:11",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "931:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:11"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "971:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:11"
									},
									"scope": 1971,
									"src": "912:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:11",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1222:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1234:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:11"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1267:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:11"
									},
									"scope": 1971,
									"src": "1204:69:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:11",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1567:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1582:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:11"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1622:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:11"
									},
									"scope": 1971,
									"src": "1548:83:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:11",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2326:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2343:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:11"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2376:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:11"
									},
									"scope": 1971,
									"src": "2309:73:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:11",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2712:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2726:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2738:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:11"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2771:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:11"
									},
									"scope": 1971,
									"src": "2690:87:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1972,
							"src": "204:2575:11",
							"usedErrors": [],
							"usedEvents": [
								1905,
								1914
							]
						}
					],
					"src": "106:2674:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1971
						],
						"IERC20Metadata": [
							1997
						]
					},
					"id": 1998,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1973,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1998,
							"sourceUnit": 1972,
							"src": "151:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1974,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1971,
										"src": "159:6:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1977,
										"name": "IERC20",
										"nameLocations": [
											"306:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1971,
										"src": "306:6:12"
									},
									"id": 1978,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:12"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1976,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:12",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1997,
							"linearizedBaseContracts": [
								1997,
								1971
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1979,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:12",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:12"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "417:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:12"
									},
									"scope": 1997,
									"src": "378:54:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:12",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:12"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "540:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1987,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:12"
									},
									"scope": 1997,
									"src": "499:56:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:12",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1996,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:12"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "674:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1993,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:12"
									},
									"scope": 1997,
									"src": "631:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1998,
							"src": "278:405:12",
							"usedErrors": [],
							"usedEvents": [
								1905,
								1914
							]
						}
					],
					"src": "125:559:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2256
						],
						"Errors": [
							2278
						]
					},
					"id": 2257,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1999,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 2001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2257,
							"sourceUnit": 2279,
							"src": "127:36:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2000,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2278,
										"src": "135:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2002,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:13",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2256,
							"linearizedBaseContracts": [
								2256
							],
							"name": "Address",
							"nameLocation": "241:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:13",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 2007,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "358:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:13"
									},
									"src": "335:39:13"
								},
								{
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "1361:278:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2017,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2256",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2256",
																		"typeString": "library Address"
																	}
																],
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2015,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2020,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2012,
														"src": "1399:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2034,
												"nodeType": "IfStatement",
												"src": "1371:125:13",
												"trueBody": {
													"id": 2033,
													"nodeType": "Block",
													"src": "1407:89:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2027,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2256",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2256",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2026,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2025,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:13",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2030,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "1478:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2022,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "1428:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2278_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:13",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2266,
																	"src": "1428:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2032,
															"nodeType": "RevertStatement",
															"src": "1421:64:13"
														}
													]
												}
											},
											{
												"assignments": [
													2036,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2036,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2053,
														"src": "1507:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2035,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2043,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2037,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "1525:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2039,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "1547:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:13"
											},
											{
												"condition": {
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:13",
													"subExpression": {
														"id": 2044,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "1573:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2052,
												"nodeType": "IfStatement",
												"src": "1568:65:13",
												"trueBody": {
													"id": 2051,
													"nodeType": "Block",
													"src": "1582:51:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2046,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "1603:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2278_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:13",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2269,
																	"src": "1603:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2050,
															"nodeType": "RevertStatement",
															"src": "1596:26:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:13",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "1309:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "1336:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:13"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:13"
									},
									"scope": 2256,
									"src": "1290:349:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "2573:62:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2065,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "2612:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2066,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2059,
															"src": "2620:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2064,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "2590:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2063,
												"id": 2069,
												"nodeType": "Return",
												"src": "2583:45:13"
											}
										]
									},
									"documentation": {
										"id": 2055,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:13",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "2506:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "2522:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2058,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:13"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "2559:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2061,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:13"
									},
									"scope": 2256,
									"src": "2484:151:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2120,
										"nodeType": "Block",
										"src": "3072:294:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2085,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2256",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2256",
																		"typeString": "library Address"
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2083,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2088,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "3110:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2102,
												"nodeType": "IfStatement",
												"src": "3082:123:13",
												"trueBody": {
													"id": 2101,
													"nodeType": "Block",
													"src": "3117:88:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2095,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2256",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2256",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2093,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:13",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2098,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2078,
																		"src": "3188:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2090,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "3138:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2278_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:13",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2266,
																	"src": "3138:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2100,
															"nodeType": "RevertStatement",
															"src": "3131:63:13"
														}
													]
												}
											},
											{
												"assignments": [
													2104,
													2106
												],
												"declarations": [
													{
														"constant": false,
														"id": 2104,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2120,
														"src": "3215:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2103,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2106,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2120,
														"src": "3229:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2105,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2113,
												"initialValue": {
													"arguments": [
														{
															"id": 2111,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "3282:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2107,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2074,
																"src": "3256:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2109,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2078,
																"src": "3275:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2115,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "3331:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2116,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "3339:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2117,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "3348:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2114,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3304:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2082,
												"id": 2119,
												"nodeType": "Return",
												"src": "3297:62:13"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "2990:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "3006:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2075,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "3025:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:13"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "3058:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:13"
									},
									"scope": 2256,
									"src": "2959:407:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "3605:154:13",
										"statements": [
											{
												"assignments": [
													2132,
													2134
												],
												"declarations": [
													{
														"constant": false,
														"id": 2132,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2146,
														"src": "3616:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2131,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2134,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2146,
														"src": "3630:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2133,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2139,
												"initialValue": {
													"arguments": [
														{
															"id": 2137,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "3675:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2135,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "3657:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:13",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2141,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "3724:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2142,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "3732:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2143,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "3741:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2140,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3697:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2130,
												"id": 2145,
												"nodeType": "Return",
												"src": "3690:62:13"
											}
										]
									},
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "3533:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "3549:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2125,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:13"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "3591:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:13"
									},
									"scope": 2256,
									"src": "3505:254:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2172,
										"nodeType": "Block",
										"src": "3997:156:13",
										"statements": [
											{
												"assignments": [
													2158,
													2160
												],
												"declarations": [
													{
														"constant": false,
														"id": 2158,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2172,
														"src": "4008:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2157,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2160,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2172,
														"src": "4022:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2159,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2165,
												"initialValue": {
													"arguments": [
														{
															"id": 2163,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "4069:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2161,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "4049:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:13",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2167,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "4118:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2168,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "4126:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2169,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "4135:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2166,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "4091:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2156,
												"id": 2171,
												"nodeType": "Return",
												"src": "4084:62:13"
											}
										]
									},
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "3930:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "3946:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:13"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "3983:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:13"
									},
									"scope": 2256,
									"src": "3900:253:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "4579:424:13",
										"statements": [
											{
												"condition": {
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:13",
													"subExpression": {
														"id": 2185,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "4594:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2210,
													"nodeType": "Block",
													"src": "4653:344:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2192,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2180,
																			"src": "4841:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2196,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2176,
																				"src": "4867:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:13",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2207,
															"nodeType": "IfStatement",
															"src": "4837:119:13",
															"trueBody": {
																"id": 2206,
																"nodeType": "Block",
																"src": "4892:64:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2203,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2176,
																					"src": "4934:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2202,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "4917:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2205,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:13"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2208,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2180,
																"src": "4976:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2184,
															"id": 2209,
															"nodeType": "Return",
															"src": "4969:17:13"
														}
													]
												},
												"id": 2211,
												"nodeType": "IfStatement",
												"src": "4589:408:13",
												"trueBody": {
													"id": 2191,
													"nodeType": "Block",
													"src": "4603:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2188,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2180,
																		"src": "4625:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2187,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "4617:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2190,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2174,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:13",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "4466:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "4490:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "4512:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:13"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "4565:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:13"
									},
									"scope": 2256,
									"src": "4421:582:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "5307:122:13",
										"statements": [
											{
												"condition": {
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:13",
													"subExpression": {
														"id": 2223,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2216,
														"src": "5322:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2232,
													"nodeType": "Block",
													"src": "5381:42:13",
													"statements": [
														{
															"expression": {
																"id": 2230,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2218,
																"src": "5402:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2222,
															"id": 2231,
															"nodeType": "Return",
															"src": "5395:17:13"
														}
													]
												},
												"id": 2233,
												"nodeType": "IfStatement",
												"src": "5317:106:13",
												"trueBody": {
													"id": 2229,
													"nodeType": "Block",
													"src": "5331:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2226,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2218,
																		"src": "5353:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2225,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "5345:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2228,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2214,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:13",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "5231:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "5245:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:13"
									},
									"returnParameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "5293:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:13"
									},
									"scope": 2256,
									"src": "5205:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2254,
										"nodeType": "Block",
										"src": "5598:432:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2241,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "5674:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2252,
													"nodeType": "Block",
													"src": "5973:51:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2247,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "5994:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2278_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:13",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2269,
																	"src": "5994:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2251,
															"nodeType": "RevertStatement",
															"src": "5987:26:13"
														}
													]
												},
												"id": 2253,
												"nodeType": "IfStatement",
												"src": "5670:354:13",
												"trueBody": {
													"id": 2246,
													"nodeType": "Block",
													"src": "5697:270:13",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:13",
																"nodeType": "YulBlock",
																"src": "5824:133:13",
																"statements": [
																	{
																		"nativeSrc": "5842:40:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:13"
																			},
																			"nativeSrc": "5865:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:13"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:13",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:13",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:13",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:13"
																					},
																					"nativeSrc": "5906:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:13"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:13"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:13"
																			},
																			"nativeSrc": "5899:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:13"
																		},
																		"nativeSrc": "5899:44:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:13"
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 2238,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:13",
																	"valueSize": 1
																},
																{
																	"declaration": 2238,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:13",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2245,
															"nodeType": "InlineAssembly",
															"src": "5799:158:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:13",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "5560:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:13"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:13"
									},
									"scope": 2256,
									"src": "5543:487:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2257,
							"src": "233:5799:13",
							"usedErrors": [
								2007
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2278
						]
					},
					"id": 2279,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2258,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2259,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:14",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2278,
							"linearizedBaseContracts": [
								2278
							],
							"name": "Errors",
							"nameLocation": "419:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:14",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2266,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "557:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "574:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:14"
									},
									"src": "531:59:14"
								},
								{
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:14",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2269,
									"name": "FailedCall",
									"nameLocation": "696:10:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:14"
									},
									"src": "690:19:14"
								},
								{
									"documentation": {
										"id": 2270,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:14",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2272,
									"name": "FailedDeployment",
									"nameLocation": "772:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:14"
									},
									"src": "766:25:14"
								},
								{
									"documentation": {
										"id": 2273,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:14",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2277,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "884:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:14"
									},
									"src": "860:33:14"
								}
							],
							"scope": 2279,
							"src": "411:484:14",
							"usedErrors": [
								2266,
								2269,
								2272,
								2277
							],
							"usedEvents": []
						}
					],
					"src": "100:796:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2402
						]
					},
					"id": 2403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2280,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2281,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:15",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2402,
							"linearizedBaseContracts": [
								2402
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2284,
									"members": [
										{
											"constant": false,
											"id": 2283,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2284,
											"src": "1462:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2282,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1433:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2287,
									"members": [
										{
											"constant": false,
											"id": 2286,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2287,
											"src": "1517:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2285,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1488:46:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2290,
									"members": [
										{
											"constant": false,
											"id": 2289,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2290,
											"src": "1569:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2288,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1540:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2293,
									"members": [
										{
											"constant": false,
											"id": 2292,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2293,
											"src": "1624:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2291,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1595:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2296,
									"members": [
										{
											"constant": false,
											"id": 2295,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2296,
											"src": "1678:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2294,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1650:47:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2299,
									"members": [
										{
											"constant": false,
											"id": 2298,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2299,
											"src": "1731:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2297,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1703:47:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2302,
									"members": [
										{
											"constant": false,
											"id": 2301,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2302,
											"src": "1783:11:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2300,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1756:45:15",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "1983:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:15",
													"nodeType": "YulBlock",
													"src": "2018:38:15",
													"statements": [
														{
															"nativeSrc": "2032:14:15",
															"nodeType": "YulAssignment",
															"src": "2032:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:15",
																"nodeType": "YulIdentifier",
																"src": "2042:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2309,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2305,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2311,
												"nodeType": "InlineAssembly",
												"src": "1993:63:15"
											}
										]
									},
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:15",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "1923:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2304,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:15"
									},
									"returnParameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "1960:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2307,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2284,
														"src": "1960:11:15"
													},
													"referencedDeclaration": 2284,
													"src": "1960:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:15"
									},
									"scope": 2402,
									"src": "1899:163:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2323,
										"nodeType": "Block",
										"src": "2243:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:15",
													"nodeType": "YulBlock",
													"src": "2278:38:15",
													"statements": [
														{
															"nativeSrc": "2292:14:15",
															"nodeType": "YulAssignment",
															"src": "2292:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:15",
																"nodeType": "YulIdentifier",
																"src": "2302:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2320,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2322,
												"nodeType": "InlineAssembly",
												"src": "2253:63:15"
											}
										]
									},
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:15",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "2183:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:15"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "2220:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2287_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2319,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2318,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2287,
														"src": "2220:11:15"
													},
													"referencedDeclaration": 2287,
													"src": "2220:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2287_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:15"
									},
									"scope": 2402,
									"src": "2159:163:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "2503:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:15",
													"nodeType": "YulBlock",
													"src": "2538:38:15",
													"statements": [
														{
															"nativeSrc": "2552:14:15",
															"nodeType": "YulAssignment",
															"src": "2552:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:15",
																"nodeType": "YulIdentifier",
																"src": "2562:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2331,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2327,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2333,
												"nodeType": "InlineAssembly",
												"src": "2513:63:15"
											}
										]
									},
									"documentation": {
										"id": 2325,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:15",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "2443:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:15"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "2480:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2290_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2329,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2290,
														"src": "2480:11:15"
													},
													"referencedDeclaration": 2290,
													"src": "2480:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2290_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:15"
									},
									"scope": 2402,
									"src": "2419:163:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "2763:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:15",
													"nodeType": "YulBlock",
													"src": "2798:38:15",
													"statements": [
														{
															"nativeSrc": "2812:14:15",
															"nodeType": "YulAssignment",
															"src": "2812:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:15",
																"nodeType": "YulIdentifier",
																"src": "2822:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2342,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2338,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2344,
												"nodeType": "InlineAssembly",
												"src": "2773:63:15"
											}
										]
									},
									"documentation": {
										"id": 2336,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:15",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "2703:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:15"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "2740:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2293_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2340,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "2740:11:15"
													},
													"referencedDeclaration": 2293,
													"src": "2740:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2293_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:15"
									},
									"scope": 2402,
									"src": "2679:163:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "3020:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:15",
													"nodeType": "YulBlock",
													"src": "3055:38:15",
													"statements": [
														{
															"nativeSrc": "3069:14:15",
															"nodeType": "YulAssignment",
															"src": "3069:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:15",
																"nodeType": "YulIdentifier",
																"src": "3079:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2353,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2349,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2355,
												"nodeType": "InlineAssembly",
												"src": "3030:63:15"
											}
										]
									},
									"documentation": {
										"id": 2347,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:15",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "2961:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:15"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "2998:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2296_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2352,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2351,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2296,
														"src": "2998:10:15"
													},
													"referencedDeclaration": 2296,
													"src": "2998:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2296_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:15"
									},
									"scope": 2402,
									"src": "2938:161:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "3277:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:15",
													"nodeType": "YulBlock",
													"src": "3312:38:15",
													"statements": [
														{
															"nativeSrc": "3326:14:15",
															"nodeType": "YulAssignment",
															"src": "3326:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:15",
																"nodeType": "YulIdentifier",
																"src": "3336:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2364,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2360,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2366,
												"nodeType": "InlineAssembly",
												"src": "3287:63:15"
											}
										]
									},
									"documentation": {
										"id": 2358,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:15",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "3218:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:15"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "3255:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2299_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2362,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2299,
														"src": "3255:10:15"
													},
													"referencedDeclaration": 2299,
													"src": "3255:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2299_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:15"
									},
									"scope": 2402,
									"src": "3195:161:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2378,
										"nodeType": "Block",
										"src": "3558:85:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:15",
													"nodeType": "YulBlock",
													"src": "3593:44:15",
													"statements": [
														{
															"nativeSrc": "3607:20:15",
															"nodeType": "YulAssignment",
															"src": "3607:20:15",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:15",
																"nodeType": "YulIdentifier",
																"src": "3617:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2375,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2371,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2377,
												"nodeType": "InlineAssembly",
												"src": "3568:69:15"
											}
										]
									},
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:15",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "3491:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:15"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "3536:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2299_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2374,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2373,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2299,
														"src": "3536:10:15"
													},
													"referencedDeclaration": 2299,
													"src": "3536:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2299_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:15"
									},
									"scope": 2402,
									"src": "3468:175:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "3818:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:15",
													"nodeType": "YulBlock",
													"src": "3853:38:15",
													"statements": [
														{
															"nativeSrc": "3867:14:15",
															"nodeType": "YulAssignment",
															"src": "3867:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:15",
																"nodeType": "YulIdentifier",
																"src": "3877:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2386,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2382,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2388,
												"nodeType": "InlineAssembly",
												"src": "3828:63:15"
											}
										]
									},
									"documentation": {
										"id": 2380,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:15",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "3760:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:15"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "3797:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2302_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2384,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2302,
														"src": "3797:9:15"
													},
													"referencedDeclaration": 2302,
													"src": "3797:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2302_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:15"
									},
									"scope": 2402,
									"src": "3738:159:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "4094:85:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:15",
													"nodeType": "YulBlock",
													"src": "4129:44:15",
													"statements": [
														{
															"nativeSrc": "4143:20:15",
															"nodeType": "YulAssignment",
															"src": "4143:20:15",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:15",
																"nodeType": "YulIdentifier",
																"src": "4153:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2397,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2393,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2399,
												"nodeType": "InlineAssembly",
												"src": "4104:69:15"
											}
										]
									},
									"documentation": {
										"id": 2391,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:15",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "4029:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:15"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "4073:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2302_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2395,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2302,
														"src": "4073:9:15"
													},
													"referencedDeclaration": 2302,
													"src": "4073:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2302_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:15"
									},
									"scope": 2402,
									"src": "4007:172:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2403,
							"src": "1407:2774:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:15"
				},
				"id": 15
			},
			"RVA/UpgradableToken.sol": {
				"ast": {
					"absolutePath": "RVA/UpgradableToken.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1421
						],
						"ERC1967Utils": [
							1883
						],
						"ERC20Token": [
							2782
						],
						"ERC20Upgradeable": [
							1375
						],
						"IERC1822Proxiable": [
							1452
						],
						"IERC20": [
							1971
						],
						"IERC20Errors": [
							1494
						],
						"IERC20Metadata": [
							1997
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							758
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 2783,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2405,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2783,
							"sourceUnit": 195,
							"src": "58:75:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2406,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2783,
							"sourceUnit": 1376,
							"src": "134:78:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 2407,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2783,
							"sourceUnit": 759,
							"src": "213:78:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2408,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2783,
							"sourceUnit": 631,
							"src": "292:77:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2409,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"394:16:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1375,
										"src": "394:16:16"
									},
									"id": 2410,
									"nodeType": "InheritanceSpecifier",
									"src": "394:16:16"
								},
								{
									"baseName": {
										"id": 2411,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"412:18:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "412:18:16"
									},
									"id": 2412,
									"nodeType": "InheritanceSpecifier",
									"src": "412:18:16"
								},
								{
									"baseName": {
										"id": 2413,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"432:19:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 758,
										"src": "432:19:16"
									},
									"id": 2414,
									"nodeType": "InheritanceSpecifier",
									"src": "432:19:16"
								},
								{
									"baseName": {
										"id": 2415,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"453:15:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "453:15:16"
									},
									"id": 2416,
									"nodeType": "InheritanceSpecifier",
									"src": "453:15:16"
								}
							],
							"canonicalName": "ERC20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2782,
							"linearizedBaseContracts": [
								2782,
								630,
								1452,
								758,
								194,
								1375,
								1494,
								1997,
								1971,
								1421,
								448
							],
							"name": "ERC20Token",
							"nameLocation": "380:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c66e4095",
									"id": 2418,
									"mutability": "mutable",
									"name": "icoContract",
									"nameLocation": "490:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 2782,
									"src": "475:26:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2417,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "475:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2420,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "523:12:16",
									"nodeType": "VariableDeclaration",
									"scope": 2782,
									"src": "507:28:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2419,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9bc289f1",
									"id": 2424,
									"mutability": "mutable",
									"name": "lockedUntil",
									"nameLocation": "577:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 2782,
									"src": "542:46:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2423,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2421,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "550:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "542:27:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2422,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "561:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dbac26e9",
									"id": 2428,
									"mutability": "mutable",
									"name": "blacklisted",
									"nameLocation": "626:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 2782,
									"src": "594:43:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2427,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2425,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "602:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "594:24:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2426,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "613:4:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8",
									"id": 2432,
									"name": "ICOContractSet",
									"nameLocation": "650:14:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"indexed": true,
												"mutability": "mutable",
												"name": "icoContract",
												"nameLocation": "681:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2432,
												"src": "665:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "664:29:16"
									},
									"src": "644:50:16"
								},
								{
									"anonymous": false,
									"eventSelector": "611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f",
									"id": 2438,
									"name": "LockupSet",
									"nameLocation": "705:9:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "731:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "715:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedUntilTimestamp",
												"nameLocation": "748:20:16",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "740:28:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:55:16"
									},
									"src": "699:71:16"
								},
								{
									"anonymous": false,
									"eventSelector": "cf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8",
									"id": 2444,
									"name": "Blacklisted",
									"nameLocation": "781:11:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "809:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "793:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"indexed": false,
												"mutability": "mutable",
												"name": "isBlacklisted",
												"nameLocation": "823:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "818:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "818:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:45:16"
									},
									"src": "775:63:16"
								},
								{
									"anonymous": false,
									"eventSelector": "96352ad7a9be4c45ad1b71ff4390921022216946b3b7348fd652f133a6ee5453",
									"id": 2450,
									"name": "EmergencyTokenRecovered",
									"nameLocation": "849:23:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "889:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "873:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2448,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "904:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "896:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:39:16"
									},
									"src": "843:69:16"
								},
								{
									"body": {
										"id": 2457,
										"nodeType": "Block",
										"src": "985:91:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2454,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "995:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "995:22:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2456,
												"nodeType": "ExpressionStatement",
												"src": "995:22:16"
											}
										]
									},
									"documentation": {
										"id": 2451,
										"nodeType": "StructuredDocumentation",
										"src": "918:48:16",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2458,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:2:16"
									},
									"returnParameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:0:16"
									},
									"scope": 2782,
									"src": "971:105:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2495,
										"nodeType": "Block",
										"src": "1187:258:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2470,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2460,
															"src": "1210:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2471,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "1216:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2469,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "1197:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1197:26:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2473,
												"nodeType": "ExpressionStatement",
												"src": "1197:26:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2475,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1248:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1252:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1248:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2474,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1233:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:26:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2478,
												"nodeType": "ExpressionStatement",
												"src": "1233:26:16"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2479,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1269:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1269:17:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2481,
												"nodeType": "ExpressionStatement",
												"src": "1269:17:16"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2482,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "1296:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1296:24:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2484,
												"nodeType": "ExpressionStatement",
												"src": "1296:24:16"
											},
											{
												"expression": {
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2485,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2420,
														"src": "1331:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2486,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2464,
														"src": "1346:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1331:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2488,
												"nodeType": "ExpressionStatement",
												"src": "1331:27:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2490,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1374:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1378:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1374:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2492,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "1386:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2489,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "1368:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1368:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2494,
												"nodeType": "ExpressionStatement",
												"src": "1368:31:16"
											}
										]
									},
									"functionSelector": "b119490e",
									"id": 2496,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2466,
												"name": "initializer",
												"nameLocations": [
													"1175:11:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1175:11:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1175:11:16"
										}
									],
									"name": "initialize",
									"nameLocation": "1091:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1116:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1102:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1102:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1136:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1122:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1122:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "totalSupply_",
												"nameLocation": "1152:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1144:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:64:16"
									},
									"returnParameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:0:16"
									},
									"scope": 2782,
									"src": "1082:363:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2507,
										"nodeType": "Block",
										"src": "1478:80:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2499,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1496:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1500:6:16",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1496:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2501,
																"name": "icoContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "1510:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1496:25:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1523:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 2498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1488:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:52:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2505,
												"nodeType": "ExpressionStatement",
												"src": "1488:52:16"
											},
											{
												"id": 2506,
												"nodeType": "PlaceholderStatement",
												"src": "1550:1:16"
											}
										]
									},
									"id": 2508,
									"name": "onlyICOContract",
									"nameLocation": "1460:15:16",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:2:16"
									},
									"src": "1451:107:16",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2516,
										"nodeType": "Block",
										"src": "1600:25:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2513,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "1610:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1610:8:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2515,
												"nodeType": "ExpressionStatement",
												"src": "1610:8:16"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2517,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2511,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2510,
												"name": "onlyOwner",
												"nameLocations": [
													"1590:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1590:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1590:9:16"
										}
									],
									"name": "pause",
									"nameLocation": "1573:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1578:2:16"
									},
									"returnParameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1600:0:16"
									},
									"scope": 2782,
									"src": "1564:61:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2525,
										"nodeType": "Block",
										"src": "1669:27:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2522,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "1679:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:10:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2524,
												"nodeType": "ExpressionStatement",
												"src": "1679:10:16"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2520,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2519,
												"name": "onlyOwner",
												"nameLocations": [
													"1659:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1659:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1659:9:16"
										}
									],
									"name": "unpause",
									"nameLocation": "1640:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1647:2:16"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:0:16"
									},
									"scope": 2782,
									"src": "1631:65:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2553,
										"nodeType": "Block",
										"src": "1782:160:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2535,
															"name": "lockedUntil",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "1796:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2537,
														"indexExpression": {
															"id": 2536,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2528,
															"src": "1808:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1796:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2538,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2530,
														"src": "1820:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1796:33:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2552,
												"nodeType": "IfStatement",
												"src": "1792:144:16",
												"trueBody": {
													"id": 2551,
													"nodeType": "Block",
													"src": "1831:105:16",
													"statements": [
														{
															"expression": {
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2540,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2424,
																		"src": "1845:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2542,
																	"indexExpression": {
																		"id": 2541,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2528,
																		"src": "1857:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1845:20:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2543,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2530,
																	"src": "1868:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1845:32:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2545,
															"nodeType": "ExpressionStatement",
															"src": "1845:32:16"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2547,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2528,
																		"src": "1906:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2548,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2530,
																		"src": "1915:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2546,
																	"name": "LockupSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2438,
																	"src": "1896:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1896:29:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2550,
															"nodeType": "EmitStatement",
															"src": "1891:34:16"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3e579307",
									"id": 2554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2533,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2532,
												"name": "onlyICOContract",
												"nameLocations": [
													"1766:15:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2508,
												"src": "1766:15:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1766:15:16"
										}
									],
									"name": "setLockup",
									"nameLocation": "1711:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1729:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "1721:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1746:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "1738:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:36:16"
									},
									"returnParameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1782:0:16"
									},
									"scope": 2782,
									"src": "1702:240:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2574,
										"nodeType": "Block",
										"src": "2019:89:16",
										"statements": [
											{
												"expression": {
													"id": 2567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2563,
															"name": "blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2428,
															"src": "2029:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2565,
														"indexExpression": {
															"id": 2564,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2556,
															"src": "2041:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2029:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2566,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2558,
														"src": "2052:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2029:29:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2568,
												"nodeType": "ExpressionStatement",
												"src": "2029:29:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2570,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2556,
															"src": "2085:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2571,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2558,
															"src": "2094:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2569,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2444,
														"src": "2073:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2073:28:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2573,
												"nodeType": "EmitStatement",
												"src": "2068:33:16"
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 2575,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2561,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2560,
												"name": "onlyOwner",
												"nameLocations": [
													"2009:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "2009:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2009:9:16"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "1957:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1978:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "1970:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1970:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1992:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "1987:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1987:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:30:16"
									},
									"returnParameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2019:0:16"
									},
									"scope": 2782,
									"src": "1948:160:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "2181:44:16",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2582,
														"name": "blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2428,
														"src": "2198:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2584,
													"indexExpression": {
														"id": 2583,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2577,
														"src": "2210:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2198:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2581,
												"id": 2585,
												"nodeType": "Return",
												"src": "2191:27:16"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "2123:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2145:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "2137:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:17:16"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "2175:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2175:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2174:6:16"
									},
									"scope": 2782,
									"src": "2114:111:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 2640,
										"nodeType": "Block",
										"src": "2329:360:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2347:24:16",
															"subExpression": {
																"baseExpression": {
																	"id": 2600,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "2348:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2603,
																"indexExpression": {
																	"expression": {
																		"id": 2601,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2360:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2364:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2360:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2348:23:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2373:40:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 2599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2339:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2339:75:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2607,
												"nodeType": "ExpressionStatement",
												"src": "2339:75:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2432:23:16",
															"subExpression": {
																"baseExpression": {
																	"id": 2609,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "2433:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2611,
																"indexExpression": {
																	"id": 2610,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2589,
																	"src": "2445:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2433:22:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2457:43:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 2608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2424:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2615,
												"nodeType": "ExpressionStatement",
												"src": "2424:77:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2617,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2519:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2525:9:16",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2519:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2619,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2424,
																		"src": "2538:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2622,
																	"indexExpression": {
																		"expression": {
																			"id": 2620,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2550:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2554:6:16",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2550:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2538:23:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2519:42:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2624,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2424,
																		"src": "2565:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2627,
																	"indexExpression": {
																		"expression": {
																			"id": 2625,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2577:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2581:6:16",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2577:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2565:23:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2565:28:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2519:74:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2595:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 2616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2511:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2511:121:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2633,
												"nodeType": "ExpressionStatement",
												"src": "2511:121:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2636,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2589,
															"src": "2664:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2637,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "2675:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2634,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2649:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Token_$2782_$",
																"typeString": "type(contract super ERC20Token)"
															}
														},
														"id": 2635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2655:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "2649:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 2638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:33:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2598,
												"id": 2639,
												"nodeType": "Return",
												"src": "2642:40:16"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 2641,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2595,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2594,
												"name": "whenNotPaused",
												"nameLocations": [
													"2300:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2300:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2300:13:16"
										}
									],
									"name": "transfer",
									"nameLocation": "2240:8:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2593,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2291:8:16"
									},
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2257:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "2249:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2276:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "2268:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:35:16"
									},
									"returnParameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "2323:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2323:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:6:16"
									},
									"scope": 2782,
									"src": "2231:458:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1035
									],
									"body": {
										"id": 2694,
										"nodeType": "Block",
										"src": "2813:360:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2831:20:16",
															"subExpression": {
																"baseExpression": {
																	"id": 2656,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "2832:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2658,
																"indexExpression": {
																	"id": 2657,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2643,
																	"src": "2844:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2832:19:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2853:40:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 2655,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2823:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:71:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2662,
												"nodeType": "ExpressionStatement",
												"src": "2823:71:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2912:23:16",
															"subExpression": {
																"baseExpression": {
																	"id": 2664,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "2913:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2666,
																"indexExpression": {
																	"id": 2665,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2645,
																	"src": "2925:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2913:22:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2937:43:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 2663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2904:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2904:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2670,
												"nodeType": "ExpressionStatement",
												"src": "2904:77:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2672,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2999:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3005:9:16",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2999:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2674,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2424,
																		"src": "3018:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2676,
																	"indexExpression": {
																		"id": 2675,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2643,
																		"src": "3030:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3018:19:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2999:38:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2678,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2424,
																		"src": "3041:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2680,
																	"indexExpression": {
																		"id": 2679,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2643,
																		"src": "3053:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3041:19:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3064:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3041:24:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2999:66:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3067:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 2671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2991:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2991:113:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2686,
												"nodeType": "ExpressionStatement",
												"src": "2991:113:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2689,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2643,
															"src": "3140:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2690,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2645,
															"src": "3148:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2691,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2647,
															"src": "3159:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2687,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3121:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Token_$2782_$",
																"typeString": "type(contract super ERC20Token)"
															}
														},
														"id": 2688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3127:12:16",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1035,
														"src": "3121:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3121:45:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2654,
												"id": 2693,
												"nodeType": "Return",
												"src": "3114:52:16"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 2695,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2651,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2650,
												"name": "whenNotPaused",
												"nameLocations": [
													"2784:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2784:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2784:13:16"
										}
									],
									"name": "transferFrom",
									"nameLocation": "2704:12:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2649,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2775:8:16"
									},
									"parameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2725:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "2717:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2741:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "2733:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2733:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2760:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "2752:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2716:51:16"
									},
									"returnParameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "2807:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2652,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2807:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2806:6:16"
									},
									"scope": 2782,
									"src": "2695:478:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2710,
										"nodeType": "Block",
										"src": "3244:86:16",
										"statements": [
											{
												"expression": {
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2702,
														"name": "icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "3254:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2703,
														"name": "_icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2697,
														"src": "3268:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3254:26:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2705,
												"nodeType": "ExpressionStatement",
												"src": "3254:26:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2707,
															"name": "_icoContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2697,
															"src": "3310:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2706,
														"name": "ICOContractSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "3295:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3295:28:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2709,
												"nodeType": "EmitStatement",
												"src": "3290:33:16"
											}
										]
									},
									"functionSelector": "2e0d2a00",
									"id": 2711,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2700,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2699,
												"name": "onlyOwner",
												"nameLocations": [
													"3234:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3234:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "3234:9:16"
										}
									],
									"name": "setICOContract",
									"nameLocation": "3188:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "_icoContract",
												"nameLocation": "3211:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "3203:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3203:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:16"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3244:0:16"
									},
									"scope": 2782,
									"src": "3179:151:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2771,
										"nodeType": "Block",
										"src": "3441:468:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2723,
																	"name": "recipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2714,
																	"src": "3459:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3470:6:16",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3459:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2725,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2717,
																	"src": "3480:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3488:6:16",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3480:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3459:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42617463685472616e73666572206661696c65643a204d69736d61746368656420617272617973",
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3496:41:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															},
															"value": "BatchTransfer failed: Mismatched arrays"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															}
														],
														"id": 2722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3451:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3451:87:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2730,
												"nodeType": "ExpressionStatement",
												"src": "3451:87:16"
											},
											{
												"assignments": [
													2732
												],
												"declarations": [
													{
														"constant": false,
														"id": 2732,
														"mutability": "mutable",
														"name": "recipientLength",
														"nameLocation": "3556:15:16",
														"nodeType": "VariableDeclaration",
														"scope": 2771,
														"src": "3548:23:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3548:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2735,
												"initialValue": {
													"expression": {
														"id": 2733,
														"name": "recipients",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2714,
														"src": "3574:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 2734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3585:6:16",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3574:17:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:43:16"
											},
											{
												"body": {
													"id": 2769,
													"nodeType": "Block",
													"src": "3647:256:16",
													"statements": [
														{
															"id": 2768,
															"nodeType": "UncheckedBlock",
															"src": "3661:232:16",
															"statements": [
																{
																	"condition": {
																		"baseExpression": {
																			"id": 2746,
																			"name": "blacklisted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2428,
																			"src": "3692:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 2750,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2747,
																				"name": "recipients",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2714,
																				"src": "3704:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 2749,
																			"indexExpression": {
																				"id": 2748,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2737,
																				"src": "3715:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3704:13:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3692:26:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2756,
																	"nodeType": "IfStatement",
																	"src": "3688:129:16",
																	"trueBody": {
																		"id": 2755,
																		"nodeType": "Block",
																		"src": "3720:97:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
																							"id": 2752,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3749:48:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																								"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																							},
																							"value": "BatchTransfer failed: Recipient is blacklisted"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																								"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																							}
																						],
																						"id": 2751,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3742:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 2753,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3742:56:16",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2754,
																				"nodeType": "ExpressionStatement",
																				"src": "3742:56:16"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2758,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3840:3:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3844:6:16",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3840:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 2760,
																					"name": "recipients",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2714,
																					"src": "3852:10:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 2762,
																				"indexExpression": {
																					"id": 2761,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2737,
																					"src": "3863:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3852:13:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 2763,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2717,
																					"src": "3867:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 2765,
																				"indexExpression": {
																					"id": 2764,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2737,
																					"src": "3875:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3867:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2757,
																			"name": "_transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "3830:9:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 2766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3830:48:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2767,
																	"nodeType": "ExpressionStatement",
																	"src": "3830:48:16"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2740,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2737,
														"src": "3621:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2741,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2732,
														"src": "3625:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3621:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2770,
												"initializationExpression": {
													"assignments": [
														2737
													],
													"declarations": [
														{
															"constant": false,
															"id": 2737,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3614:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 2770,
															"src": "3606:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2736,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3606:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2739,
													"initialValue": {
														"hexValue": "30",
														"id": 2738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3618:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3606:13:16"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3642:3:16",
														"subExpression": {
															"id": 2743,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "3642:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2745,
													"nodeType": "ExpressionStatement",
													"src": "3642:3:16"
												},
												"nodeType": "ForStatement",
												"src": "3601:302:16"
											}
										]
									},
									"functionSelector": "88d695b2",
									"id": 2772,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2720,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2719,
												"name": "whenNotPaused",
												"nameLocations": [
													"3427:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "3427:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "3427:13:16"
										}
									],
									"name": "batchTransfer",
									"nameLocation": "3345:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "3378:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "3359:29:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2712,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3359:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2713,
													"nodeType": "ArrayTypeName",
													"src": "3359:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3409:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "3390:26:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2715,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3390:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2716,
													"nodeType": "ArrayTypeName",
													"src": "3390:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:59:16"
									},
									"returnParameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3441:0:16"
									},
									"scope": 2782,
									"src": "3336:573:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 2780,
										"nodeType": "Block",
										"src": "3997:2:16",
										"statements": []
									},
									"id": 2781,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2778,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2777,
												"name": "onlyOwner",
												"nameLocations": [
													"3987:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3987:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "3987:9:16"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "3924:17:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2776,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3978:8:16"
									},
									"parameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3950:17:16",
												"nodeType": "VariableDeclaration",
												"scope": 2781,
												"src": "3942:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3942:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3941:27:16"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3997:0:16"
									},
									"scope": 2782,
									"src": "3915:84:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2783,
							"src": "371:3630:16",
							"usedErrors": [
								30,
								35,
								211,
								214,
								475,
								480,
								1464,
								1469,
								1474,
								1483,
								1488,
								1493,
								1609,
								1622,
								2007,
								2269
							],
							"usedEvents": [
								41,
								219,
								645,
								650,
								1429,
								1905,
								1914,
								2432,
								2438,
								2444,
								2450
							]
						}
					],
					"src": "32:3970:16"
				},
				"id": 16
			}
		}
	}
}