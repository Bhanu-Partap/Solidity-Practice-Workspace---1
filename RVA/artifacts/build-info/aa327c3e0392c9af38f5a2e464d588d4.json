{
	"id": "aa327c3e0392c9af38f5a2e464d588d4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"RVA/UpgradableToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\";\n\ncontract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {\n    address public icoContract;\n    uint256 private _totalSupply;\n    using AddressUpgradeable for address;\n\n    mapping(address => bool) public blacklisted;\n    mapping(address => uint256) public lockedUntil;\n    mapping(address => uint256) public lockedAmount;\n\n    event ICOContractSet(address indexed icoContract);\n    event LockupSet(address indexed account, uint256 lockedUntilTimestamp, uint256 lockedAmount);\n    event Blacklisted(address indexed account, bool isBlacklisted);\n    event EmergencyTokenRecovered(address indexed token, uint256 amount);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers(); // Disables constructors for upgradeable contracts.\n    }\n\n    function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {\n        __ERC20_init(name, symbol);\n        __Ownable_init(msg.sender);\n        __Pausable_init();\n        __UUPSUpgradeable_init();\n\n        _totalSupply = totalSupply_;\n        _mint(msg.sender, _totalSupply); // Mint initial supply to the deployer\n    }\n\n    modifier onlyICOContract() {\n        require(msg.sender == icoContract, \"Not authorized\");\n        _;\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function setLockup(address account, uint256 timestamp, uint256 amount) external whenNotPaused onlyICOContract  {\n    require(account != address(0), \"Null Address\");\n    require(amount > 0, \"Amount must be greater than zero\");\n\n\n    // Update the locked amount if necessary\n    if (lockedUntil[account] != timestamp || lockedAmount[account] != amount) {\n        lockedUntil[account] = timestamp;\n        lockedAmount[account] = amount;  // Storing the amount to lock\n        emit LockupSet(account, timestamp, amount);\n    }\n}\n\n    function setBlacklist(address account, bool status) external onlyOwner {\n        require(account !=address(0),\"Null Address\");\n        blacklisted[account] = status;\n        emit Blacklisted(account, status);\n    }\n\n    // function isBlacklisted(address account) public view returns (bool) {\n    //     return blacklisted[account];\n    // }\n\n    function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(amount >0,\"Amount shouldn't be zero\");\n        require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transfer(recipient, amount);\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(amount >0,\"Amount shouldn't be zero\");\n        require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transferFrom(sender, recipient, amount);\n    }\n\n    function setICOContract(address _icoContract) external whenNotPaused onlyOwner  {\n        require(_icoContract != address(0), \"Null Address\");\n        require(_icoContract.isContract(), \"Address is not a contract\");\n        icoContract = _icoContract;\n        emit ICOContractSet(_icoContract);\n    }\n\n    function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {\n        require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\");\n        uint256 recipientLength = recipients.length;\n        for (uint256 i = 0; i < recipientLength; i++) {\n            unchecked{\n                if (blacklisted[recipients[i]]) {\n                    revert(\"BatchTransfer failed: Recipient is blacklisted\");\n                }\n            _transfer(msg.sender, recipients[i], amounts[i]);\n            }\n        }\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override whenNotPaused onlyOwner {}\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 757,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB MSTORE8 PUSH11 0x6FAA0DE76994331C1A5D17 CALLDATASIZE 0xF8 SELFBALANCE LOG2 0xB6 RETURNDATASIZE DUP14 BLOCKHASH 0xF6 0xAF 0xA6 0x29 SWAP8 0xCB AND 0xCF 0x25 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB MSTORE8 PUSH11 0x6FAA0DE76994331C1A5D17 CALLDATASIZE 0xF8 SELFBALANCE LOG2 0xB6 RETURNDATASIZE DUP14 BLOCKHASH 0xF6 0xAF 0xA6 0x29 SWAP8 0xCB AND 0xCF 0x25 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CODECOPY PUSH2 0xD9D5 0xC4 PUSH21 0xD2244AFCB0147C18BBB7A37F3F38719FCF41C5080A 0x2F 0x2E 0xCC 0xD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CODECOPY PUSH2 0xD9D5 0xC4 PUSH21 0xD2244AFCB0147C18BBB7A37F3F38719FCF41C5080A 0x2F 0x2E 0xCC 0xD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"RVA/UpgradableToken.sol": {
				"ERC20Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isBlacklisted",
									"type": "bool"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyTokenRecovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "icoContract",
									"type": "address"
								}
							],
							"name": "ICOContractSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedUntilTimestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedAmount",
									"type": "uint256"
								}
							],
							"name": "LockupSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "icoContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedUntil",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_icoContract",
									"type": "address"
								}
							],
							"name": "setICOContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setLockup",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RVA/UpgradableToken.sol\":445:4813  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"RVA/UpgradableToken.sol\":1162:1267  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"RVA/UpgradableToken.sol\":1186:1208  _disableInitializers() */\n  tag_4\n    /* \"RVA/UpgradableToken.sol\":1186:1206  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"RVA/UpgradableToken.sol\":1186:1208  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"RVA/UpgradableToken.sol\":445:4813  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7856  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7883  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7885  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7901  $ */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8003:8019  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7986  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8052:8068  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8036  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8049  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8099:8115  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_15:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_16:\n    /* \"#utility.yul\":199:222   */\n  tag_20\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_15\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_22\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"RVA/UpgradableToken.sol\":445:4813  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"RVA/UpgradableToken.sol\":445:4813  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdbac26e9\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdbac26e9\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf326f0d7\n      eq\n      tag_28\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0xad3cb1cc\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb119490e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc66e4095\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x95d89b41\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9bc289f1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa153e708\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x88d695b2\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x313ce567\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x52d1902d\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e0d2a00\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":2424:2638  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":3289:3822  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":3828:4128  function setICOContract(address _icoContract) external whenNotPaused onlyOwner  {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":1822:1887  function unpause() external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_10:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      stop\n        /* \"RVA/UpgradableToken.sol\":1755:1816  function pause() external onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      stop\n        /* \"RVA/UpgradableToken.sol\":4134:4707  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":707:753  mapping(address => uint256) public lockedUntil */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":759:806  mapping(address => uint256) public lockedAmount */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":2770:3283  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":1273:1636  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      tag_137\n      jump\t// in\n    tag_134:\n      stop\n        /* \"RVA/UpgradableToken.sol\":549:575  address public icoContract */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":658:701  mapping(address => bool) public blacklisted */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_148\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      tag_151\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_154\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n    tag_154:\n      stop\n        /* \"RVA/UpgradableToken.sol\":1893:2418  function setLockup(address account, uint256 timestamp, uint256 amount) external whenNotPaused onlyICOContract  {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      tag_161\n      jump\t// in\n    tag_158:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2761:2774  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2808  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2827  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2829  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2847  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2853  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2839:2853  return $._name */\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_166\n      jump\t// in\n    tag_167:\n      dup1\n      iszero\n      tag_168\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_169\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_168)\n    tag_169:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_170:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_170\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5283:5287  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5312  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5325  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5327  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5346:5351  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5353:5360  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5362:5367  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5345  _approve */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5385:5389  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5378:5389  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":2424:2638  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_177:\n        /* \"RVA/UpgradableToken.sol\":2531:2532  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2513:2533  account !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":2513:2520  account */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":2513:2533  account !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"RVA/UpgradableToken.sol\":2505:2549  require(account !=address(0),\"Null Address\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"RVA/UpgradableToken.sol\":2582:2588  status */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":2559:2570  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":2559:2579  blacklisted[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2571:2578  account */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":2559:2579  blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2559:2588  blacklisted[account] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":2615:2622  account */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":2603:2631  Blacklisted(account, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8\n        /* \"RVA/UpgradableToken.sol\":2624:2630  status */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":2603:2631  Blacklisted(account, status) */\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":2424:2638  function setBlacklist(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3955  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:3989  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4008  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:4010  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4028  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4041  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4020:4041  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":3289:3822  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_61:\n        /* \"RVA/UpgradableToken.sol\":3401:3405  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_187:\n        /* \"RVA/UpgradableToken.sol\":3426:3437  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":3426:3445  blacklisted[sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3438:3444  sender */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":3426:3445  blacklisted[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":3425:3445  !blacklisted[sender] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":3417:3488  require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"RVA/UpgradableToken.sol\":3507:3518  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":3507:3529  blacklisted[recipient] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3519:3528  recipient */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3507:3529  blacklisted[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":3506:3529  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":3498:3575  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"RVA/UpgradableToken.sol\":3601:3602  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3593:3599  amount */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":3593:3602  amount >0 */\n      gt\n        /* \"RVA/UpgradableToken.sol\":3585:3630  require(amount >0,\"Amount shouldn't be zero\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"RVA/UpgradableToken.sol\":3667:3678  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":3667:3686  lockedUntil[sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3679:3685  sender */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":3667:3686  lockedUntil[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":3648:3663  block.timestamp */\n      timestamp\n        /* \"RVA/UpgradableToken.sol\":3648:3686  block.timestamp >= lockedUntil[sender] */\n      lt\n      iszero\n        /* \"RVA/UpgradableToken.sol\":3648:3714  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n      dup1\n      tag_199\n      jumpi\n      pop\n        /* \"RVA/UpgradableToken.sol\":3713:3714  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3690:3701  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":3690:3709  lockedUntil[sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3702:3708  sender */\n      dup7\n        /* \"RVA/UpgradableToken.sol\":3690:3709  lockedUntil[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":3690:3714  lockedUntil[sender] == 0 */\n      eq\n        /* \"RVA/UpgradableToken.sol\":3648:3714  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n    tag_199:\n        /* \"RVA/UpgradableToken.sol\":3640:3753  require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"RVA/UpgradableToken.sol\":3770:3815  super.transferFrom(sender, recipient, amount) */\n      tag_203\n        /* \"RVA/UpgradableToken.sol\":3789:3795  sender */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3797:3806  recipient */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3808:3814  amount */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3770:3788  super.transferFrom */\n      tag_204\n        /* \"RVA/UpgradableToken.sol\":3770:3815  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_203:\n        /* \"RVA/UpgradableToken.sol\":3763:3815  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":3289:3822  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":3828:4128  function setICOContract(address _icoContract) external whenNotPaused onlyOwner  {... */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"RVA/UpgradableToken.sol\":3950:3951  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3926:3952  _icoContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":3926:3938  _icoContract */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":3926:3952  _icoContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"RVA/UpgradableToken.sol\":3918:3969  require(_icoContract != address(0), \"Null Address\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_182\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"RVA/UpgradableToken.sol\":3987:4012  _icoContract.isContract() */\n      tag_212\n        /* \"RVA/UpgradableToken.sol\":3987:3999  _icoContract */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":3987:4010  _icoContract.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_213\n        /* \"RVA/UpgradableToken.sol\":3987:4012  _icoContract.isContract() */\n      jump\t// in\n    tag_212:\n        /* \"RVA/UpgradableToken.sol\":3979:4042  require(_icoContract.isContract(), \"Address is not a contract\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"RVA/UpgradableToken.sol\":4066:4078  _icoContract */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":4052:4063  icoContract */\n      0x32\n      0x00\n        /* \"RVA/UpgradableToken.sol\":4052:4078  icoContract = _icoContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":4108:4120  _icoContract */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":4093:4121  ICOContractSet(_icoContract) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":3828:4128  function setICOContract(address _icoContract) external whenNotPaused onlyOwner  {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3803:3808  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3827:3829  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3820:3829  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1822:1887  function unpause() external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"RVA/UpgradableToken.sol\":1870:1880  _unpause() */\n      tag_221\n        /* \"RVA/UpgradableToken.sol\":1870:1878  _unpause */\n      tag_222\n        /* \"RVA/UpgradableToken.sol\":1870:1880  _unpause() */\n      jump\t// in\n    tag_221:\n        /* \"RVA/UpgradableToken.sol\":1822:1887  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1942:1956  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4178  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4212  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4231  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4233  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4251  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4261  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4269  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4270  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1755:1816  function pause() external onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_244:\n        /* \"RVA/UpgradableToken.sol\":1801:1809  _pause() */\n      tag_246\n        /* \"RVA/UpgradableToken.sol\":1801:1807  _pause */\n      tag_247\n        /* \"RVA/UpgradableToken.sol\":1801:1809  _pause() */\n      jump\t// in\n    tag_246:\n        /* \"RVA/UpgradableToken.sol\":1755:1816  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":4134:4707  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_249\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_249:\n        /* \"RVA/UpgradableToken.sol\":4278:4285  amounts */\n      dup2\n      dup2\n        /* \"RVA/UpgradableToken.sol\":4278:4292  amounts.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":4257:4267  recipients */\n      dup5\n      dup5\n        /* \"RVA/UpgradableToken.sol\":4257:4274  recipients.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":4257:4292  recipients.length == amounts.length */\n      eq\n        /* \"RVA/UpgradableToken.sol\":4249:4336  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n        /* \"RVA/UpgradableToken.sol\":4346:4369  uint256 recipientLength */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":4372:4382  recipients */\n      dup5\n      dup5\n        /* \"RVA/UpgradableToken.sol\":4372:4389  recipients.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":4346:4389  uint256 recipientLength = recipients.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":4404:4413  uint256 i */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":4399:4701  for (uint256 i = 0; i < recipientLength; i++) {... */\n    tag_254:\n        /* \"RVA/UpgradableToken.sol\":4423:4438  recipientLength */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":4419:4420  i */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":4419:4438  i < recipientLength */\n      lt\n        /* \"RVA/UpgradableToken.sol\":4399:4701  for (uint256 i = 0; i < recipientLength; i++) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"RVA/UpgradableToken.sol\":4490:4501  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":4490:4516  blacklisted[recipients[i]] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":4502:4512  recipients */\n      dup8\n      dup8\n        /* \"RVA/UpgradableToken.sol\":4513:4514  i */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":4502:4515  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_257\n      jumpi\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n    tag_257:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_260\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_260:\n        /* \"RVA/UpgradableToken.sol\":4490:4516  blacklisted[recipients[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":4486:4615  if (blacklisted[recipients[i]]) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"RVA/UpgradableToken.sol\":4540:4596  revert(\"BatchTransfer failed: Recipient is blacklisted\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"RVA/UpgradableToken.sol\":4486:4615  if (blacklisted[recipients[i]]) {... */\n    tag_261:\n        /* \"RVA/UpgradableToken.sol\":4628:4676  _transfer(msg.sender, recipients[i], amounts[i]) */\n      tag_264\n        /* \"RVA/UpgradableToken.sol\":4638:4648  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":4650:4660  recipients */\n      dup8\n      dup8\n        /* \"RVA/UpgradableToken.sol\":4661:4662  i */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":4650:4663  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_265\n      jumpi\n      tag_266\n      tag_259\n      jump\t// in\n    tag_266:\n    tag_265:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_267\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_267:\n        /* \"RVA/UpgradableToken.sol\":4665:4672  amounts */\n      dup7\n      dup7\n        /* \"RVA/UpgradableToken.sol\":4673:4674  i */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":4665:4675  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_268\n      jumpi\n      tag_269\n      tag_259\n      jump\t// in\n    tag_269:\n    tag_268:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"RVA/UpgradableToken.sol\":4628:4637  _transfer */\n      tag_270\n        /* \"RVA/UpgradableToken.sol\":4628:4676  _transfer(msg.sender, recipients[i], amounts[i]) */\n      jump\t// in\n    tag_264:\n        /* \"RVA/UpgradableToken.sol\":4440:4443  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"RVA/UpgradableToken.sol\":4399:4701  for (uint256 i = 0; i < recipientLength; i++) {... */\n      jump(tag_254)\n    tag_255:\n      pop\n        /* \"RVA/UpgradableToken.sol\":4239:4707  {... */\n      pop\n        /* \"RVA/UpgradableToken.sol\":4134:4707  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_272\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3020:3033  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3067  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      tag_275\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3086  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3088  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3106  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3114  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3098:3114  return $._symbol */\n      dup1\n      sload\n      tag_276\n      swap1\n      tag_166\n      jump\t// in\n    tag_276:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_277\n      swap1\n      tag_166\n      jump\t// in\n    tag_277:\n      dup1\n      iszero\n      tag_278\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_279\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_278)\n    tag_279:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_280:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_280\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_278:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":707:753  mapping(address => uint256) public lockedUntil */\n    tag_117:\n      mstore(0x20, 0x35)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":759:806  mapping(address => uint256) public lockedAmount */\n    tag_122:\n      mstore(0x20, 0x36)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":2770:3283  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_127:\n        /* \"RVA/UpgradableToken.sol\":2862:2866  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_282:\n        /* \"RVA/UpgradableToken.sol\":2887:2898  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":2887:2910  blacklisted[msg.sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2899:2909  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":2887:2910  blacklisted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2886:2910  !blacklisted[msg.sender] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2878:2953  require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_192\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"RVA/UpgradableToken.sol\":2972:2983  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":2972:2994  blacklisted[recipient] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2984:2993  recipient */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":2972:2994  blacklisted[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2971:2994  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2963:3040  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap1\n      tag_195\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"RVA/UpgradableToken.sol\":3066:3067  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3058:3064  amount */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":3058:3067  amount >0 */\n      gt\n        /* \"RVA/UpgradableToken.sol\":3050:3095  require(amount >0,\"Amount shouldn't be zero\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_198\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"RVA/UpgradableToken.sol\":3132:3143  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":3132:3155  lockedUntil[msg.sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3144:3154  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":3132:3155  lockedUntil[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":3113:3128  block.timestamp */\n      timestamp\n        /* \"RVA/UpgradableToken.sol\":3113:3155  block.timestamp >= lockedUntil[msg.sender] */\n      lt\n      iszero\n        /* \"RVA/UpgradableToken.sol\":3113:3187  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n      dup1\n      tag_290\n      jumpi\n      pop\n        /* \"RVA/UpgradableToken.sol\":3186:3187  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3159:3170  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":3159:3182  lockedUntil[msg.sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3171:3181  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":3159:3182  lockedUntil[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":3159:3187  lockedUntil[msg.sender] == 0 */\n      eq\n        /* \"RVA/UpgradableToken.sol\":3113:3187  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n    tag_290:\n        /* \"RVA/UpgradableToken.sol\":3105:3226  require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap1\n      tag_202\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n        /* \"RVA/UpgradableToken.sol\":3243:3276  super.transfer(recipient, amount) */\n      tag_293\n        /* \"RVA/UpgradableToken.sol\":3258:3267  recipient */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":3269:3275  amount */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":3243:3257  super.transfer */\n      tag_294\n        /* \"RVA/UpgradableToken.sol\":3243:3276  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_293:\n        /* \"RVA/UpgradableToken.sol\":3236:3276  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":2770:3283  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_131:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1273:1636  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_296\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_298\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_299\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_299:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_300\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_302:\n        /* \"RVA/UpgradableToken.sol\":1388:1414  __ERC20_init(name, symbol) */\n      tag_304\n        /* \"RVA/UpgradableToken.sol\":1401:1405  name */\n      dup9\n        /* \"RVA/UpgradableToken.sol\":1407:1413  symbol */\n      dup9\n        /* \"RVA/UpgradableToken.sol\":1388:1400  __ERC20_init */\n      tag_305\n        /* \"RVA/UpgradableToken.sol\":1388:1414  __ERC20_init(name, symbol) */\n      jump\t// in\n    tag_304:\n        /* \"RVA/UpgradableToken.sol\":1424:1450  __Ownable_init(msg.sender) */\n      tag_306\n        /* \"RVA/UpgradableToken.sol\":1439:1449  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1424:1438  __Ownable_init */\n      tag_307\n        /* \"RVA/UpgradableToken.sol\":1424:1450  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_306:\n        /* \"RVA/UpgradableToken.sol\":1460:1477  __Pausable_init() */\n      tag_308\n        /* \"RVA/UpgradableToken.sol\":1460:1475  __Pausable_init */\n      tag_309\n        /* \"RVA/UpgradableToken.sol\":1460:1477  __Pausable_init() */\n      jump\t// in\n    tag_308:\n        /* \"RVA/UpgradableToken.sol\":1487:1511  __UUPSUpgradeable_init() */\n      tag_310\n        /* \"RVA/UpgradableToken.sol\":1487:1509  __UUPSUpgradeable_init */\n      tag_311\n        /* \"RVA/UpgradableToken.sol\":1487:1511  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_310:\n        /* \"RVA/UpgradableToken.sol\":1537:1549  totalSupply_ */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":1522:1534  _totalSupply */\n      0x33\n        /* \"RVA/UpgradableToken.sol\":1522:1549  _totalSupply = totalSupply_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":1559:1590  _mint(msg.sender, _totalSupply) */\n      tag_312\n        /* \"RVA/UpgradableToken.sol\":1565:1575  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1577:1589  _totalSupply */\n      sload(0x33)\n        /* \"RVA/UpgradableToken.sol\":1559:1564  _mint */\n      tag_313\n        /* \"RVA/UpgradableToken.sol\":1559:1590  _mint(msg.sender, _totalSupply) */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_315\n      swap2\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"RVA/UpgradableToken.sol\":1273:1636  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":549:575  address public icoContract */\n    tag_140:\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":658:701  mapping(address => bool) public blacklisted */\n    tag_145:\n      mstore(0x20, 0x34)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4795  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4829  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4848  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4850  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4868  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4880  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4881:4886  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4888:4895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4860:4896  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1893:2418  function setLockup(address account, uint256 timestamp, uint256 amount) external whenNotPaused onlyICOContract  {... */\n    tag_161:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_326:\n        /* \"RVA/UpgradableToken.sol\":1701:1712  icoContract */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":1687:1712  msg.sender == icoContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":1687:1697  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1687:1712  msg.sender == icoContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"RVA/UpgradableToken.sol\":1679:1731  require(msg.sender == icoContract, \"Not authorized\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"RVA/UpgradableToken.sol\":2037:2038  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2018:2039  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":2018:2025  account */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":2018:2039  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"RVA/UpgradableToken.sol\":2010:2056  require(account != address(0), \"Null Address\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap1\n      tag_182\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_332:\n        /* \"RVA/UpgradableToken.sol\":2079:2080  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2070:2076  amount */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":2070:2080  amount > 0 */\n      gt\n        /* \"RVA/UpgradableToken.sol\":2062:2117  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap1\n      tag_336\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_334:\n        /* \"RVA/UpgradableToken.sol\":2198:2207  timestamp */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":2174:2185  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2174:2194  lockedUntil[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2186:2193  account */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":2174:2194  lockedUntil[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":2174:2207  lockedUntil[account] != timestamp */\n      eq\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2174:2242  lockedUntil[account] != timestamp || lockedAmount[account] != amount */\n      dup1\n      tag_337\n      jumpi\n      pop\n        /* \"RVA/UpgradableToken.sol\":2236:2242  amount */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":2211:2223  lockedAmount */\n      0x36\n        /* \"RVA/UpgradableToken.sol\":2211:2232  lockedAmount[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2224:2231  account */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":2211:2232  lockedAmount[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":2211:2242  lockedAmount[account] != amount */\n      eq\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2174:2242  lockedUntil[account] != timestamp || lockedAmount[account] != amount */\n    tag_337:\n        /* \"RVA/UpgradableToken.sol\":2170:2416  if (lockedUntil[account] != timestamp || lockedAmount[account] != amount) {... */\n      iszero\n      tag_338\n      jumpi\n        /* \"RVA/UpgradableToken.sol\":2277:2286  timestamp */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":2254:2265  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2254:2274  lockedUntil[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2266:2273  account */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":2254:2274  lockedUntil[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"RVA/UpgradableToken.sol\":2254:2286  lockedUntil[account] = timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":2320:2326  amount */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":2296:2308  lockedAmount */\n      0x36\n        /* \"RVA/UpgradableToken.sol\":2296:2317  lockedAmount[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2309:2316  account */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":2296:2317  lockedAmount[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"RVA/UpgradableToken.sol\":2296:2326  lockedAmount[account] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":2382:2389  account */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":2372:2409  LockupSet(account, timestamp, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x86f2e10d5622d896b3f56e66c1a60639ca21a4674480f054bec2cb9ba62f40cb\n        /* \"RVA/UpgradableToken.sol\":2391:2400  timestamp */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":2402:2408  amount */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":2372:2409  LockupSet(account, timestamp, amount) */\n      mload(0x40)\n      tag_339\n      swap3\n      swap2\n      swap1\n      tag_340\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":2170:2416  if (lockedUntil[account] != timestamp || lockedAmount[account] != amount) {... */\n    tag_338:\n        /* \"RVA/UpgradableToken.sol\":1893:2418  function setLockup(address account, uint256 timestamp, uint256 amount) external whenNotPaused onlyICOContract  {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      tag_344\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10094:10099  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10101:10108  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10110:10115  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10117:10121  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10093  _approve */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_347\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_107\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_350\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      tag_353\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2107  paused */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2100:2109  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6075:6079  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6106  address spender */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      tag_358\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6119  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6121  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6147:6151  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6153:6160  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6162:6167  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6146  _spendAllowance */\n      tag_360\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      tag_361\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6188:6192  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6194:6196  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6198:6203  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6187  _transfer */\n      tag_270\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6221:6225  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6214:6225  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1483:1487  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1735:1736  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1720  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1706:1736  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      tag_364\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1764  _requirePaused */\n      tag_365\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2765:2770  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2762  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2770  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      tag_367\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2804  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_368\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_370\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_371\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4783  ERC1967Utils.getImplementation */\n      tag_372\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_370:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_373\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n    tag_373:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":4713:4811  function _authorizeUpgrade(address newImplementation) internal override whenNotPaused onlyOwner {} */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_377:\n        /* \"RVA/UpgradableToken.sol\":4713:4811  function _authorizeUpgrade(address newImplementation) internal override whenNotPaused onlyOwner {} */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_380\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_381\n      swap2\n      swap1\n      tag_382\n      jump\t// in\n    tag_381:\n      0x01\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_383\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6560:6577  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_383:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6258:6290  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6254  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_389\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6346:6350  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_390\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_391\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_392\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_391:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6209:6444  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_396\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_398\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_398:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2519:2523  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2516  _paused */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      tag_400\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2555  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      mload(0x40)\n      tag_401\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_401:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6704:6705  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6692  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n      tag_403\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6756:6757  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6729:6759  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_404\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_404:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n    tag_403:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6797:6798  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6785  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6851:6852  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6822:6854  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_406\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_406:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      tag_407\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6882:6886  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6888:6890  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6892:6897  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6881  _update */\n      tag_408\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4541:4545  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4570  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      tag_411\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4583  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4585  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      tag_412\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4605:4610  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4614  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4616:4621  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4604  _transfer */\n      tag_270\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4639:4643  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4632:4643  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_305:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_415\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      tag_418\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2407:2412  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2414:2421  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2406  __ERC20_init_unchained */\n      tag_419\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_418:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_307:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_421\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_421:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_423\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_424\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_423:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_426\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_426:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      tag_428\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1172  __Pausable_init_unchained */\n      tag_429\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      jump\t// in\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_431\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_431:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8822:8823  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8810  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n      tag_434\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8876:8877  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8847:8879  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_435\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_435:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n    tag_434:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      tag_436\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8915:8916  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8919:8926  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8928:8933  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8906  _update */\n      tag_408\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      jump\t// in\n    tag_436:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_345:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11106  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      tag_438\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11125  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      jump\t// in\n    tag_438:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11127  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11158:11159  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11146  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n      tag_439\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11212:11213  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11183:11215  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_440\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_440:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n    tag_439:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11258:11259  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11246  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n      tag_441\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11311:11312  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11283:11314  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_442\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_442:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n    tag_441:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11366:11371  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11335  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11347  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11348:11353  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11362  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11371  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11394  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n      iszero\n      tag_443\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11431:11438  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11424:11429  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11440:11445  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_444\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_444:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n    tag_443:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11074:11463  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11868  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      tag_446\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11881:11886  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11888:11895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11880  allowance */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      jump\t// in\n    tag_446:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11896  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11930:11947  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11926  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11947  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12216  if (currentAllowance != type(uint256).max) {... */\n      tag_447\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11986:11991  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11983  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11991  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n      iszero\n      tag_448\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12045:12052  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12054:12070  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12072:12077  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12018:12078  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_449\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_450\n      jump\t// in\n    tag_449:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n    tag_448:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      tag_451\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12143:12148  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12150:12157  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12178:12183  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12175  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12183  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12185:12190  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12142  _approve */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_451:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12216  if (currentAllowance != type(uint256).max) {... */\n    tag_447:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11834:12222  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n    tag_365:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      tag_453\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2281  paused */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      jump\t// in\n    tag_453:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_454\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_455\n      swap1\n      tag_456\n      jump\t// in\n    tag_455:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_454:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_458\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_459\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_458:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_461\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_462\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_461:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_463\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_464\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_465\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_464:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_466)\n    tag_463:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_467\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_468\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_467:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_466:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_408:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7327  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      tag_470\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7346  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      jump\t// in\n    tag_470:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7348  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7378:7379  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7366  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      tag_471\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7516:7521  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7499  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7512  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7521  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_472\n      swap2\n      swap1\n      tag_473\n      jump\t// in\n    tag_472:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      jump(tag_474)\n    tag_471:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7571  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7575  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7585  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7590  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7591  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7623:7628  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7620  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7628  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n      iszero\n      tag_475\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7680:7684  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7686:7697  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7699:7704  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7655:7705  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_476\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_450\n      jump\t// in\n    tag_476:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n    tag_475:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7874:7879  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7871  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7879  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7841  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7851  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7852:7856  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7879  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7538:7904  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n    tag_474:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7932:7933  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7920  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      tag_477\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8099:8104  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8082  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8095  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8104  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      jump(tag_478)\n    tag_477:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8313:8318  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8295  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8305  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8306:8308  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8318  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n    tag_478:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8373:8375  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8367:8371  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8377:8382  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      mload(0x40)\n      tag_479\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_479:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7295:8390  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_416:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_481\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_482\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_481:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_483\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_483:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_419:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_485\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_485:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2569  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      tag_487\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2588  _getERC20Storage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      jump\t// in\n    tag_487:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2590  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2610:2615  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2601  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2607  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2615  $._name = name_ */\n      swap1\n      dup2\n      tag_488\n      swap2\n      swap1\n      tag_489\n      jump\t// in\n    tag_488:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2637:2644  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2626  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2634  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2644  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_490\n      swap2\n      swap1\n      tag_489\n      jump\t// in\n    tag_490:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2537:2651  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_424:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_492\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_492:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_494\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_495\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_495:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_494:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_496\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_496:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_429:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_498\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_498:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1270:1275  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1267  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1275  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_459:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_462:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_502\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_503\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_503:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_502:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_504\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_459\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_504:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_465:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      mload(0x40)\n      tag_506\n      swap2\n      swap1\n      tag_507\n      jump\t// in\n    tag_506:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_510\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_509)\n    tag_510:\n      0x60\n      swap2\n      pop\n    tag_509:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_511\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4126:4133  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4135:4145  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n      tag_512\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_511:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_468:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_514\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_514:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_482:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_516\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_516:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_512:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      tag_518\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      tag_519\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n      tag_520\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      jump\t// in\n    tag_519:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      jump(tag_521)\n    tag_518:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4862:4863  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4851  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_522\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4889:4890  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4873  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_522:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_523\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4934:4940  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_524\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_524:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_523:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4986  return returndata */\n      swap1\n      pop\n      jump(tag_517)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_521:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_517:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\n    tag_520:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5684  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n      iszero\n      tag_526\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n    tag_526:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:106   */\n    tag_528:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_529:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_530:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_531:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_532:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_625\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_528\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":711:782   */\n      tag_626\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_529\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_627\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_530\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":881:910   */\n      tag_628\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_531\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_39:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_630\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_532\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_533:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_534:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_535:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_536:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_537:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_636\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_536\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_538:\n        /* \"#utility.yul\":1876:1900   */\n      tag_638\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_537\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_639\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_639:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_539:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_641\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_538\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_540:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_541:\n        /* \"#utility.yul\":2232:2256   */\n      tag_644\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_540\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_645\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_645:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_542:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_647\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_541\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_43:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_650\n      tag_534\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":2525:2644   */\n    tag_649:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_651\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_539\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_652\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_542\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_543:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_544:\n        /* \"#utility.yul\":3089:3110   */\n      tag_655\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_543\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_46:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_657\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_544\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3455   */\n    tag_545:\n        /* \"#utility.yul\":3409:3430   */\n      tag_659\n        /* \"#utility.yul\":3424:3429   */\n      dup2\n        /* \"#utility.yul\":3409:3430   */\n      tag_543\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":3402:3407   */\n      dup2\n        /* \"#utility.yul\":3399:3431   */\n      eq\n        /* \"#utility.yul\":3389:3449   */\n      tag_660\n      jumpi\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3442:3443   */\n      dup1\n        /* \"#utility.yul\":3435:3447   */\n      revert\n        /* \"#utility.yul\":3389:3449   */\n    tag_660:\n        /* \"#utility.yul\":3339:3455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3461:3594   */\n    tag_546:\n        /* \"#utility.yul\":3504:3509   */\n      0x00\n        /* \"#utility.yul\":3542:3548   */\n      dup2\n        /* \"#utility.yul\":3529:3549   */\n      calldataload\n        /* \"#utility.yul\":3520:3549   */\n      swap1\n      pop\n        /* \"#utility.yul\":3558:3588   */\n      tag_662\n        /* \"#utility.yul\":3582:3587   */\n      dup2\n        /* \"#utility.yul\":3558:3588   */\n      tag_545\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":3461:3594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3600:4068   */\n    tag_50:\n        /* \"#utility.yul\":3665:3671   */\n      0x00\n        /* \"#utility.yul\":3673:3679   */\n      dup1\n        /* \"#utility.yul\":3722:3724   */\n      0x40\n        /* \"#utility.yul\":3710:3719   */\n      dup4\n        /* \"#utility.yul\":3701:3708   */\n      dup6\n        /* \"#utility.yul\":3697:3720   */\n      sub\n        /* \"#utility.yul\":3693:3725   */\n      slt\n        /* \"#utility.yul\":3690:3809   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":3728:3807   */\n      tag_665\n      tag_534\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":3690:3809   */\n    tag_664:\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3873:3926   */\n      tag_666\n        /* \"#utility.yul\":3918:3925   */\n      dup6\n        /* \"#utility.yul\":3909:3915   */\n      dup3\n        /* \"#utility.yul\":3898:3907   */\n      dup7\n        /* \"#utility.yul\":3894:3916   */\n      add\n        /* \"#utility.yul\":3873:3926   */\n      tag_539\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":3863:3926   */\n      swap3\n      pop\n        /* \"#utility.yul\":3819:3936   */\n      pop\n        /* \"#utility.yul\":3975:3977   */\n      0x20\n        /* \"#utility.yul\":4001:4051   */\n      tag_667\n        /* \"#utility.yul\":4043:4050   */\n      dup6\n        /* \"#utility.yul\":4034:4040   */\n      dup3\n        /* \"#utility.yul\":4023:4032   */\n      dup7\n        /* \"#utility.yul\":4019:4041   */\n      add\n        /* \"#utility.yul\":4001:4051   */\n      tag_546\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":3991:4051   */\n      swap2\n      pop\n        /* \"#utility.yul\":3946:4061   */\n      pop\n        /* \"#utility.yul\":3600:4068   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4074:4192   */\n    tag_547:\n        /* \"#utility.yul\":4161:4185   */\n      tag_669\n        /* \"#utility.yul\":4179:4184   */\n      dup2\n        /* \"#utility.yul\":4161:4185   */\n      tag_540\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":4156:4159   */\n      dup3\n        /* \"#utility.yul\":4149:4186   */\n      mstore\n        /* \"#utility.yul\":4074:4192   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4198:4420   */\n    tag_56:\n        /* \"#utility.yul\":4291:4295   */\n      0x00\n        /* \"#utility.yul\":4329:4331   */\n      0x20\n        /* \"#utility.yul\":4318:4327   */\n      dup3\n        /* \"#utility.yul\":4314:4332   */\n      add\n        /* \"#utility.yul\":4306:4332   */\n      swap1\n      pop\n        /* \"#utility.yul\":4342:4413   */\n      tag_671\n        /* \"#utility.yul\":4410:4411   */\n      0x00\n        /* \"#utility.yul\":4399:4408   */\n      dup4\n        /* \"#utility.yul\":4395:4412   */\n      add\n        /* \"#utility.yul\":4386:4392   */\n      dup5\n        /* \"#utility.yul\":4342:4413   */\n      tag_547\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":4198:4420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4426:5045   */\n    tag_60:\n        /* \"#utility.yul\":4503:4509   */\n      0x00\n        /* \"#utility.yul\":4511:4517   */\n      dup1\n        /* \"#utility.yul\":4519:4525   */\n      0x00\n        /* \"#utility.yul\":4568:4570   */\n      0x60\n        /* \"#utility.yul\":4556:4565   */\n      dup5\n        /* \"#utility.yul\":4547:4554   */\n      dup7\n        /* \"#utility.yul\":4543:4566   */\n      sub\n        /* \"#utility.yul\":4539:4571   */\n      slt\n        /* \"#utility.yul\":4536:4655   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":4574:4653   */\n      tag_674\n      tag_534\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":4536:4655   */\n    tag_673:\n        /* \"#utility.yul\":4694:4695   */\n      0x00\n        /* \"#utility.yul\":4719:4772   */\n      tag_675\n        /* \"#utility.yul\":4764:4771   */\n      dup7\n        /* \"#utility.yul\":4755:4761   */\n      dup3\n        /* \"#utility.yul\":4744:4753   */\n      dup8\n        /* \"#utility.yul\":4740:4762   */\n      add\n        /* \"#utility.yul\":4719:4772   */\n      tag_539\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":4709:4772   */\n      swap4\n      pop\n        /* \"#utility.yul\":4665:4782   */\n      pop\n        /* \"#utility.yul\":4821:4823   */\n      0x20\n        /* \"#utility.yul\":4847:4900   */\n      tag_676\n        /* \"#utility.yul\":4892:4899   */\n      dup7\n        /* \"#utility.yul\":4883:4889   */\n      dup3\n        /* \"#utility.yul\":4872:4881   */\n      dup8\n        /* \"#utility.yul\":4868:4890   */\n      add\n        /* \"#utility.yul\":4847:4900   */\n      tag_539\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":4837:4900   */\n      swap3\n      pop\n        /* \"#utility.yul\":4792:4910   */\n      pop\n        /* \"#utility.yul\":4949:4951   */\n      0x40\n        /* \"#utility.yul\":4975:5028   */\n      tag_677\n        /* \"#utility.yul\":5020:5027   */\n      dup7\n        /* \"#utility.yul\":5011:5017   */\n      dup3\n        /* \"#utility.yul\":5000:5009   */\n      dup8\n        /* \"#utility.yul\":4996:5018   */\n      add\n        /* \"#utility.yul\":4975:5028   */\n      tag_542\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":4965:5028   */\n      swap2\n      pop\n        /* \"#utility.yul\":4920:5038   */\n      pop\n        /* \"#utility.yul\":4426:5045   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5051:5380   */\n    tag_66:\n        /* \"#utility.yul\":5110:5116   */\n      0x00\n        /* \"#utility.yul\":5159:5161   */\n      0x20\n        /* \"#utility.yul\":5147:5156   */\n      dup3\n        /* \"#utility.yul\":5138:5145   */\n      dup5\n        /* \"#utility.yul\":5134:5157   */\n      sub\n        /* \"#utility.yul\":5130:5162   */\n      slt\n        /* \"#utility.yul\":5127:5246   */\n      iszero\n      tag_679\n      jumpi\n        /* \"#utility.yul\":5165:5244   */\n      tag_680\n      tag_534\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":5127:5246   */\n    tag_679:\n        /* \"#utility.yul\":5285:5286   */\n      0x00\n        /* \"#utility.yul\":5310:5363   */\n      tag_681\n        /* \"#utility.yul\":5355:5362   */\n      dup5\n        /* \"#utility.yul\":5346:5352   */\n      dup3\n        /* \"#utility.yul\":5335:5344   */\n      dup6\n        /* \"#utility.yul\":5331:5353   */\n      add\n        /* \"#utility.yul\":5310:5363   */\n      tag_539\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":5300:5363   */\n      swap2\n      pop\n        /* \"#utility.yul\":5256:5373   */\n      pop\n        /* \"#utility.yul\":5051:5380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5386:5472   */\n    tag_548:\n        /* \"#utility.yul\":5421:5428   */\n      0x00\n        /* \"#utility.yul\":5461:5465   */\n      0xff\n        /* \"#utility.yul\":5454:5459   */\n      dup3\n        /* \"#utility.yul\":5450:5466   */\n      and\n        /* \"#utility.yul\":5439:5466   */\n      swap1\n      pop\n        /* \"#utility.yul\":5386:5472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5478:5590   */\n    tag_549:\n        /* \"#utility.yul\":5561:5583   */\n      tag_684\n        /* \"#utility.yul\":5577:5582   */\n      dup2\n        /* \"#utility.yul\":5561:5583   */\n      tag_548\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":5556:5559   */\n      dup3\n        /* \"#utility.yul\":5549:5584   */\n      mstore\n        /* \"#utility.yul\":5478:5590   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5596:5810   */\n    tag_72:\n        /* \"#utility.yul\":5685:5689   */\n      0x00\n        /* \"#utility.yul\":5723:5725   */\n      0x20\n        /* \"#utility.yul\":5712:5721   */\n      dup3\n        /* \"#utility.yul\":5708:5726   */\n      add\n        /* \"#utility.yul\":5700:5726   */\n      swap1\n      pop\n        /* \"#utility.yul\":5736:5803   */\n      tag_686\n        /* \"#utility.yul\":5800:5801   */\n      0x00\n        /* \"#utility.yul\":5789:5798   */\n      dup4\n        /* \"#utility.yul\":5785:5802   */\n      add\n        /* \"#utility.yul\":5776:5782   */\n      dup5\n        /* \"#utility.yul\":5736:5803   */\n      tag_549\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":5596:5810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5816:5933   */\n    tag_550:\n        /* \"#utility.yul\":5925:5926   */\n      0x00\n        /* \"#utility.yul\":5922:5923   */\n      dup1\n        /* \"#utility.yul\":5915:5927   */\n      revert\n        /* \"#utility.yul\":5939:6056   */\n    tag_551:\n        /* \"#utility.yul\":6048:6049   */\n      0x00\n        /* \"#utility.yul\":6045:6046   */\n      dup1\n        /* \"#utility.yul\":6038:6050   */\n      revert\n        /* \"#utility.yul\":6062:6242   */\n    tag_552:\n        /* \"#utility.yul\":6110:6187   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6107:6108   */\n      0x00\n        /* \"#utility.yul\":6100:6188   */\n      mstore\n        /* \"#utility.yul\":6207:6211   */\n      0x41\n        /* \"#utility.yul\":6204:6205   */\n      0x04\n        /* \"#utility.yul\":6197:6212   */\n      mstore\n        /* \"#utility.yul\":6231:6235   */\n      0x24\n        /* \"#utility.yul\":6228:6229   */\n      0x00\n        /* \"#utility.yul\":6221:6236   */\n      revert\n        /* \"#utility.yul\":6248:6529   */\n    tag_553:\n        /* \"#utility.yul\":6331:6358   */\n      tag_691\n        /* \"#utility.yul\":6353:6357   */\n      dup3\n        /* \"#utility.yul\":6331:6358   */\n      tag_531\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":6323:6329   */\n      dup2\n        /* \"#utility.yul\":6319:6359   */\n      add\n        /* \"#utility.yul\":6461:6467   */\n      dup2\n        /* \"#utility.yul\":6449:6459   */\n      dup2\n        /* \"#utility.yul\":6446:6468   */\n      lt\n        /* \"#utility.yul\":6425:6443   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6413:6423   */\n      dup3\n        /* \"#utility.yul\":6410:6444   */\n      gt\n        /* \"#utility.yul\":6407:6469   */\n      or\n        /* \"#utility.yul\":6404:6492   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":6472:6490   */\n      tag_693\n      tag_552\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":6404:6492   */\n    tag_692:\n        /* \"#utility.yul\":6512:6522   */\n      dup1\n        /* \"#utility.yul\":6508:6510   */\n      0x40\n        /* \"#utility.yul\":6501:6523   */\n      mstore\n        /* \"#utility.yul\":6291:6529   */\n      pop\n        /* \"#utility.yul\":6248:6529   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6535:6664   */\n    tag_554:\n        /* \"#utility.yul\":6569:6575   */\n      0x00\n        /* \"#utility.yul\":6596:6616   */\n      tag_695\n      tag_533\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":6586:6616   */\n      swap1\n      pop\n        /* \"#utility.yul\":6625:6658   */\n      tag_696\n        /* \"#utility.yul\":6653:6657   */\n      dup3\n        /* \"#utility.yul\":6645:6651   */\n      dup3\n        /* \"#utility.yul\":6625:6658   */\n      tag_553\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":6535:6664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6670:6977   */\n    tag_555:\n        /* \"#utility.yul\":6731:6735   */\n      0x00\n        /* \"#utility.yul\":6821:6839   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6813:6819   */\n      dup3\n        /* \"#utility.yul\":6810:6840   */\n      gt\n        /* \"#utility.yul\":6807:6863   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":6843:6861   */\n      tag_699\n      tag_552\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":6807:6863   */\n    tag_698:\n        /* \"#utility.yul\":6881:6910   */\n      tag_700\n        /* \"#utility.yul\":6903:6909   */\n      dup3\n        /* \"#utility.yul\":6881:6910   */\n      tag_531\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":6873:6910   */\n      swap1\n      pop\n        /* \"#utility.yul\":6965:6969   */\n      0x20\n        /* \"#utility.yul\":6959:6963   */\n      dup2\n        /* \"#utility.yul\":6955:6970   */\n      add\n        /* \"#utility.yul\":6947:6970   */\n      swap1\n      pop\n        /* \"#utility.yul\":6670:6977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6983:7131   */\n    tag_556:\n        /* \"#utility.yul\":7081:7087   */\n      dup3\n        /* \"#utility.yul\":7076:7079   */\n      dup2\n        /* \"#utility.yul\":7071:7074   */\n      dup4\n        /* \"#utility.yul\":7058:7088   */\n      calldatacopy\n        /* \"#utility.yul\":7122:7123   */\n      0x00\n        /* \"#utility.yul\":7113:7119   */\n      dup4\n        /* \"#utility.yul\":7108:7111   */\n      dup4\n        /* \"#utility.yul\":7104:7120   */\n      add\n        /* \"#utility.yul\":7097:7124   */\n      mstore\n        /* \"#utility.yul\":6983:7131   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7137:7560   */\n    tag_557:\n        /* \"#utility.yul\":7214:7219   */\n      0x00\n        /* \"#utility.yul\":7239:7304   */\n      tag_703\n        /* \"#utility.yul\":7255:7303   */\n      tag_704\n        /* \"#utility.yul\":7296:7302   */\n      dup5\n        /* \"#utility.yul\":7255:7303   */\n      tag_555\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":7239:7304   */\n      tag_554\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":7230:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":7327:7333   */\n      dup3\n        /* \"#utility.yul\":7320:7325   */\n      dup2\n        /* \"#utility.yul\":7313:7334   */\n      mstore\n        /* \"#utility.yul\":7365:7369   */\n      0x20\n        /* \"#utility.yul\":7358:7363   */\n      dup2\n        /* \"#utility.yul\":7354:7370   */\n      add\n        /* \"#utility.yul\":7403:7406   */\n      dup5\n        /* \"#utility.yul\":7394:7400   */\n      dup5\n        /* \"#utility.yul\":7389:7392   */\n      dup5\n        /* \"#utility.yul\":7385:7401   */\n      add\n        /* \"#utility.yul\":7382:7407   */\n      gt\n        /* \"#utility.yul\":7379:7491   */\n      iszero\n      tag_705\n      jumpi\n        /* \"#utility.yul\":7410:7489   */\n      tag_706\n      tag_551\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":7379:7491   */\n    tag_705:\n        /* \"#utility.yul\":7500:7554   */\n      tag_707\n        /* \"#utility.yul\":7547:7553   */\n      dup5\n        /* \"#utility.yul\":7542:7545   */\n      dup3\n        /* \"#utility.yul\":7537:7540   */\n      dup6\n        /* \"#utility.yul\":7500:7554   */\n      tag_556\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":7220:7560   */\n      pop\n        /* \"#utility.yul\":7137:7560   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7579:7917   */\n    tag_558:\n        /* \"#utility.yul\":7634:7639   */\n      0x00\n        /* \"#utility.yul\":7683:7686   */\n      dup3\n        /* \"#utility.yul\":7676:7680   */\n      0x1f\n        /* \"#utility.yul\":7668:7674   */\n      dup4\n        /* \"#utility.yul\":7664:7681   */\n      add\n        /* \"#utility.yul\":7660:7687   */\n      slt\n        /* \"#utility.yul\":7650:7772   */\n      tag_709\n      jumpi\n        /* \"#utility.yul\":7691:7770   */\n      tag_710\n      tag_550\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":7650:7772   */\n    tag_709:\n        /* \"#utility.yul\":7808:7814   */\n      dup2\n        /* \"#utility.yul\":7795:7815   */\n      calldataload\n        /* \"#utility.yul\":7833:7911   */\n      tag_711\n        /* \"#utility.yul\":7907:7910   */\n      dup5\n        /* \"#utility.yul\":7899:7905   */\n      dup3\n        /* \"#utility.yul\":7892:7896   */\n      0x20\n        /* \"#utility.yul\":7884:7890   */\n      dup7\n        /* \"#utility.yul\":7880:7897   */\n      add\n        /* \"#utility.yul\":7833:7911   */\n      tag_557\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":7824:7911   */\n      swap2\n      pop\n        /* \"#utility.yul\":7640:7917   */\n      pop\n        /* \"#utility.yul\":7579:7917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7923:8575   */\n    tag_78:\n        /* \"#utility.yul\":8000:8006   */\n      0x00\n        /* \"#utility.yul\":8008:8014   */\n      dup1\n        /* \"#utility.yul\":8057:8059   */\n      0x40\n        /* \"#utility.yul\":8045:8054   */\n      dup4\n        /* \"#utility.yul\":8036:8043   */\n      dup6\n        /* \"#utility.yul\":8032:8055   */\n      sub\n        /* \"#utility.yul\":8028:8060   */\n      slt\n        /* \"#utility.yul\":8025:8144   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":8063:8142   */\n      tag_714\n      tag_534\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":8025:8144   */\n    tag_713:\n        /* \"#utility.yul\":8183:8184   */\n      0x00\n        /* \"#utility.yul\":8208:8261   */\n      tag_715\n        /* \"#utility.yul\":8253:8260   */\n      dup6\n        /* \"#utility.yul\":8244:8250   */\n      dup3\n        /* \"#utility.yul\":8233:8242   */\n      dup7\n        /* \"#utility.yul\":8229:8251   */\n      add\n        /* \"#utility.yul\":8208:8261   */\n      tag_539\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":8198:8261   */\n      swap3\n      pop\n        /* \"#utility.yul\":8154:8271   */\n      pop\n        /* \"#utility.yul\":8338:8340   */\n      0x20\n        /* \"#utility.yul\":8327:8336   */\n      dup4\n        /* \"#utility.yul\":8323:8341   */\n      add\n        /* \"#utility.yul\":8310:8342   */\n      calldataload\n        /* \"#utility.yul\":8369:8387   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8361:8367   */\n      dup2\n        /* \"#utility.yul\":8358:8388   */\n      gt\n        /* \"#utility.yul\":8355:8472   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":8391:8470   */\n      tag_717\n      tag_535\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":8355:8472   */\n    tag_716:\n        /* \"#utility.yul\":8496:8558   */\n      tag_718\n        /* \"#utility.yul\":8550:8557   */\n      dup6\n        /* \"#utility.yul\":8541:8547   */\n      dup3\n        /* \"#utility.yul\":8530:8539   */\n      dup7\n        /* \"#utility.yul\":8526:8548   */\n      add\n        /* \"#utility.yul\":8496:8558   */\n      tag_558\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":8486:8558   */\n      swap2\n      pop\n        /* \"#utility.yul\":8281:8568   */\n      pop\n        /* \"#utility.yul\":7923:8575   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8581:8658   */\n    tag_559:\n        /* \"#utility.yul\":8618:8625   */\n      0x00\n        /* \"#utility.yul\":8647:8652   */\n      dup2\n        /* \"#utility.yul\":8636:8652   */\n      swap1\n      pop\n        /* \"#utility.yul\":8581:8658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8664:8782   */\n    tag_560:\n        /* \"#utility.yul\":8751:8775   */\n      tag_721\n        /* \"#utility.yul\":8769:8774   */\n      dup2\n        /* \"#utility.yul\":8751:8775   */\n      tag_559\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":8746:8749   */\n      dup3\n        /* \"#utility.yul\":8739:8776   */\n      mstore\n        /* \"#utility.yul\":8664:8782   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8788:9010   */\n    tag_84:\n        /* \"#utility.yul\":8881:8885   */\n      0x00\n        /* \"#utility.yul\":8919:8921   */\n      0x20\n        /* \"#utility.yul\":8908:8917   */\n      dup3\n        /* \"#utility.yul\":8904:8922   */\n      add\n        /* \"#utility.yul\":8896:8922   */\n      swap1\n      pop\n        /* \"#utility.yul\":8932:9003   */\n      tag_723\n        /* \"#utility.yul\":9000:9001   */\n      0x00\n        /* \"#utility.yul\":8989:8998   */\n      dup4\n        /* \"#utility.yul\":8985:9002   */\n      add\n        /* \"#utility.yul\":8976:8982   */\n      dup5\n        /* \"#utility.yul\":8932:9003   */\n      tag_560\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":8788:9010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9016:9133   */\n    tag_561:\n        /* \"#utility.yul\":9125:9126   */\n      0x00\n        /* \"#utility.yul\":9122:9123   */\n      dup1\n        /* \"#utility.yul\":9115:9127   */\n      revert\n        /* \"#utility.yul\":9139:9256   */\n    tag_562:\n        /* \"#utility.yul\":9248:9249   */\n      0x00\n        /* \"#utility.yul\":9245:9246   */\n      dup1\n        /* \"#utility.yul\":9238:9250   */\n      revert\n        /* \"#utility.yul\":9279:9847   */\n    tag_563:\n        /* \"#utility.yul\":9352:9360   */\n      0x00\n        /* \"#utility.yul\":9362:9368   */\n      dup1\n        /* \"#utility.yul\":9412:9415   */\n      dup4\n        /* \"#utility.yul\":9405:9409   */\n      0x1f\n        /* \"#utility.yul\":9397:9403   */\n      dup5\n        /* \"#utility.yul\":9393:9410   */\n      add\n        /* \"#utility.yul\":9389:9416   */\n      slt\n        /* \"#utility.yul\":9379:9501   */\n      tag_727\n      jumpi\n        /* \"#utility.yul\":9420:9499   */\n      tag_728\n      tag_550\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":9379:9501   */\n    tag_727:\n        /* \"#utility.yul\":9533:9539   */\n      dup3\n        /* \"#utility.yul\":9520:9540   */\n      calldataload\n        /* \"#utility.yul\":9510:9540   */\n      swap1\n      pop\n        /* \"#utility.yul\":9563:9581   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9555:9561   */\n      dup2\n        /* \"#utility.yul\":9552:9582   */\n      gt\n        /* \"#utility.yul\":9549:9666   */\n      iszero\n      tag_729\n      jumpi\n        /* \"#utility.yul\":9585:9664   */\n      tag_730\n      tag_561\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":9549:9666   */\n    tag_729:\n        /* \"#utility.yul\":9699:9703   */\n      0x20\n        /* \"#utility.yul\":9691:9697   */\n      dup4\n        /* \"#utility.yul\":9687:9704   */\n      add\n        /* \"#utility.yul\":9675:9704   */\n      swap2\n      pop\n        /* \"#utility.yul\":9753:9756   */\n      dup4\n        /* \"#utility.yul\":9745:9749   */\n      0x20\n        /* \"#utility.yul\":9737:9743   */\n      dup3\n        /* \"#utility.yul\":9733:9750   */\n      mul\n        /* \"#utility.yul\":9723:9731   */\n      dup4\n        /* \"#utility.yul\":9719:9751   */\n      add\n        /* \"#utility.yul\":9716:9757   */\n      gt\n        /* \"#utility.yul\":9713:9841   */\n      iszero\n      tag_731\n      jumpi\n        /* \"#utility.yul\":9760:9839   */\n      tag_732\n      tag_562\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":9713:9841   */\n    tag_731:\n        /* \"#utility.yul\":9279:9847   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9870:10438   */\n    tag_564:\n        /* \"#utility.yul\":9943:9951   */\n      0x00\n        /* \"#utility.yul\":9953:9959   */\n      dup1\n        /* \"#utility.yul\":10003:10006   */\n      dup4\n        /* \"#utility.yul\":9996:10000   */\n      0x1f\n        /* \"#utility.yul\":9988:9994   */\n      dup5\n        /* \"#utility.yul\":9984:10001   */\n      add\n        /* \"#utility.yul\":9980:10007   */\n      slt\n        /* \"#utility.yul\":9970:10092   */\n      tag_734\n      jumpi\n        /* \"#utility.yul\":10011:10090   */\n      tag_735\n      tag_550\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":9970:10092   */\n    tag_734:\n        /* \"#utility.yul\":10124:10130   */\n      dup3\n        /* \"#utility.yul\":10111:10131   */\n      calldataload\n        /* \"#utility.yul\":10101:10131   */\n      swap1\n      pop\n        /* \"#utility.yul\":10154:10172   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10146:10152   */\n      dup2\n        /* \"#utility.yul\":10143:10173   */\n      gt\n        /* \"#utility.yul\":10140:10257   */\n      iszero\n      tag_736\n      jumpi\n        /* \"#utility.yul\":10176:10255   */\n      tag_737\n      tag_561\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":10140:10257   */\n    tag_736:\n        /* \"#utility.yul\":10290:10294   */\n      0x20\n        /* \"#utility.yul\":10282:10288   */\n      dup4\n        /* \"#utility.yul\":10278:10295   */\n      add\n        /* \"#utility.yul\":10266:10295   */\n      swap2\n      pop\n        /* \"#utility.yul\":10344:10347   */\n      dup4\n        /* \"#utility.yul\":10336:10340   */\n      0x20\n        /* \"#utility.yul\":10328:10334   */\n      dup3\n        /* \"#utility.yul\":10324:10341   */\n      mul\n        /* \"#utility.yul\":10314:10322   */\n      dup4\n        /* \"#utility.yul\":10310:10342   */\n      add\n        /* \"#utility.yul\":10307:10348   */\n      gt\n        /* \"#utility.yul\":10304:10432   */\n      iszero\n      tag_738\n      jumpi\n        /* \"#utility.yul\":10351:10430   */\n      tag_739\n      tag_562\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":10304:10432   */\n    tag_738:\n        /* \"#utility.yul\":9870:10438   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10444:11378   */\n    tag_103:\n        /* \"#utility.yul\":10566:10572   */\n      0x00\n        /* \"#utility.yul\":10574:10580   */\n      dup1\n        /* \"#utility.yul\":10582:10588   */\n      0x00\n        /* \"#utility.yul\":10590:10596   */\n      dup1\n        /* \"#utility.yul\":10639:10641   */\n      0x40\n        /* \"#utility.yul\":10627:10636   */\n      dup6\n        /* \"#utility.yul\":10618:10625   */\n      dup8\n        /* \"#utility.yul\":10614:10637   */\n      sub\n        /* \"#utility.yul\":10610:10642   */\n      slt\n        /* \"#utility.yul\":10607:10726   */\n      iszero\n      tag_741\n      jumpi\n        /* \"#utility.yul\":10645:10724   */\n      tag_742\n      tag_534\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":10607:10726   */\n    tag_741:\n        /* \"#utility.yul\":10793:10794   */\n      0x00\n        /* \"#utility.yul\":10782:10791   */\n      dup6\n        /* \"#utility.yul\":10778:10795   */\n      add\n        /* \"#utility.yul\":10765:10796   */\n      calldataload\n        /* \"#utility.yul\":10823:10841   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10815:10821   */\n      dup2\n        /* \"#utility.yul\":10812:10842   */\n      gt\n        /* \"#utility.yul\":10809:10926   */\n      iszero\n      tag_743\n      jumpi\n        /* \"#utility.yul\":10845:10924   */\n      tag_744\n      tag_535\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":10809:10926   */\n    tag_743:\n        /* \"#utility.yul\":10958:11038   */\n      tag_745\n        /* \"#utility.yul\":11030:11037   */\n      dup8\n        /* \"#utility.yul\":11021:11027   */\n      dup3\n        /* \"#utility.yul\":11010:11019   */\n      dup9\n        /* \"#utility.yul\":11006:11028   */\n      add\n        /* \"#utility.yul\":10958:11038   */\n      tag_563\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":10940:11038   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":10736:11048   */\n      pop\n        /* \"#utility.yul\":11115:11117   */\n      0x20\n        /* \"#utility.yul\":11104:11113   */\n      dup6\n        /* \"#utility.yul\":11100:11118   */\n      add\n        /* \"#utility.yul\":11087:11119   */\n      calldataload\n        /* \"#utility.yul\":11146:11164   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11138:11144   */\n      dup2\n        /* \"#utility.yul\":11135:11165   */\n      gt\n        /* \"#utility.yul\":11132:11249   */\n      iszero\n      tag_746\n      jumpi\n        /* \"#utility.yul\":11168:11247   */\n      tag_747\n      tag_535\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":11132:11249   */\n    tag_746:\n        /* \"#utility.yul\":11281:11361   */\n      tag_748\n        /* \"#utility.yul\":11353:11360   */\n      dup8\n        /* \"#utility.yul\":11344:11350   */\n      dup3\n        /* \"#utility.yul\":11333:11342   */\n      dup9\n        /* \"#utility.yul\":11329:11351   */\n      add\n        /* \"#utility.yul\":11281:11361   */\n      tag_564\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":11263:11361   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":11058:11371   */\n      pop\n        /* \"#utility.yul\":10444:11378   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11384:11502   */\n    tag_565:\n        /* \"#utility.yul\":11471:11495   */\n      tag_750\n        /* \"#utility.yul\":11489:11494   */\n      dup2\n        /* \"#utility.yul\":11471:11495   */\n      tag_537\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":11466:11469   */\n      dup3\n        /* \"#utility.yul\":11459:11496   */\n      mstore\n        /* \"#utility.yul\":11384:11502   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11508:11730   */\n    tag_109:\n        /* \"#utility.yul\":11601:11605   */\n      0x00\n        /* \"#utility.yul\":11639:11641   */\n      0x20\n        /* \"#utility.yul\":11628:11637   */\n      dup3\n        /* \"#utility.yul\":11624:11642   */\n      add\n        /* \"#utility.yul\":11616:11642   */\n      swap1\n      pop\n        /* \"#utility.yul\":11652:11723   */\n      tag_752\n        /* \"#utility.yul\":11720:11721   */\n      0x00\n        /* \"#utility.yul\":11709:11718   */\n      dup4\n        /* \"#utility.yul\":11705:11722   */\n      add\n        /* \"#utility.yul\":11696:11702   */\n      dup5\n        /* \"#utility.yul\":11652:11723   */\n      tag_565\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":11508:11730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11736:12044   */\n    tag_566:\n        /* \"#utility.yul\":11798:11802   */\n      0x00\n        /* \"#utility.yul\":11888:11906   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11880:11886   */\n      dup3\n        /* \"#utility.yul\":11877:11907   */\n      gt\n        /* \"#utility.yul\":11874:11930   */\n      iszero\n      tag_754\n      jumpi\n        /* \"#utility.yul\":11910:11928   */\n      tag_755\n      tag_552\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":11874:11930   */\n    tag_754:\n        /* \"#utility.yul\":11948:11977   */\n      tag_756\n        /* \"#utility.yul\":11970:11976   */\n      dup3\n        /* \"#utility.yul\":11948:11977   */\n      tag_531\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":11940:11977   */\n      swap1\n      pop\n        /* \"#utility.yul\":12032:12036   */\n      0x20\n        /* \"#utility.yul\":12026:12030   */\n      dup2\n        /* \"#utility.yul\":12022:12037   */\n      add\n        /* \"#utility.yul\":12014:12037   */\n      swap1\n      pop\n        /* \"#utility.yul\":11736:12044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12050:12475   */\n    tag_567:\n        /* \"#utility.yul\":12128:12133   */\n      0x00\n        /* \"#utility.yul\":12153:12219   */\n      tag_758\n        /* \"#utility.yul\":12169:12218   */\n      tag_759\n        /* \"#utility.yul\":12211:12217   */\n      dup5\n        /* \"#utility.yul\":12169:12218   */\n      tag_566\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":12153:12219   */\n      tag_554\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":12144:12219   */\n      swap1\n      pop\n        /* \"#utility.yul\":12242:12248   */\n      dup3\n        /* \"#utility.yul\":12235:12240   */\n      dup2\n        /* \"#utility.yul\":12228:12249   */\n      mstore\n        /* \"#utility.yul\":12280:12284   */\n      0x20\n        /* \"#utility.yul\":12273:12278   */\n      dup2\n        /* \"#utility.yul\":12269:12285   */\n      add\n        /* \"#utility.yul\":12318:12321   */\n      dup5\n        /* \"#utility.yul\":12309:12315   */\n      dup5\n        /* \"#utility.yul\":12304:12307   */\n      dup5\n        /* \"#utility.yul\":12300:12316   */\n      add\n        /* \"#utility.yul\":12297:12322   */\n      gt\n        /* \"#utility.yul\":12294:12406   */\n      iszero\n      tag_760\n      jumpi\n        /* \"#utility.yul\":12325:12404   */\n      tag_761\n      tag_551\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":12294:12406   */\n    tag_760:\n        /* \"#utility.yul\":12415:12469   */\n      tag_762\n        /* \"#utility.yul\":12462:12468   */\n      dup5\n        /* \"#utility.yul\":12457:12460   */\n      dup3\n        /* \"#utility.yul\":12452:12455   */\n      dup6\n        /* \"#utility.yul\":12415:12469   */\n      tag_556\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":12134:12475   */\n      pop\n        /* \"#utility.yul\":12050:12475   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12495:12835   */\n    tag_568:\n        /* \"#utility.yul\":12551:12556   */\n      0x00\n        /* \"#utility.yul\":12600:12603   */\n      dup3\n        /* \"#utility.yul\":12593:12597   */\n      0x1f\n        /* \"#utility.yul\":12585:12591   */\n      dup4\n        /* \"#utility.yul\":12581:12598   */\n      add\n        /* \"#utility.yul\":12577:12604   */\n      slt\n        /* \"#utility.yul\":12567:12689   */\n      tag_764\n      jumpi\n        /* \"#utility.yul\":12608:12687   */\n      tag_765\n      tag_550\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":12567:12689   */\n    tag_764:\n        /* \"#utility.yul\":12725:12731   */\n      dup2\n        /* \"#utility.yul\":12712:12732   */\n      calldataload\n        /* \"#utility.yul\":12750:12829   */\n      tag_766\n        /* \"#utility.yul\":12825:12828   */\n      dup5\n        /* \"#utility.yul\":12817:12823   */\n      dup3\n        /* \"#utility.yul\":12810:12814   */\n      0x20\n        /* \"#utility.yul\":12802:12808   */\n      dup7\n        /* \"#utility.yul\":12798:12815   */\n      add\n        /* \"#utility.yul\":12750:12829   */\n      tag_567\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":12741:12829   */\n      swap2\n      pop\n        /* \"#utility.yul\":12557:12835   */\n      pop\n        /* \"#utility.yul\":12495:12835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12841:13820   */\n    tag_136:\n        /* \"#utility.yul\":12938:12944   */\n      0x00\n        /* \"#utility.yul\":12946:12952   */\n      dup1\n        /* \"#utility.yul\":12954:12960   */\n      0x00\n        /* \"#utility.yul\":13003:13005   */\n      0x60\n        /* \"#utility.yul\":12991:13000   */\n      dup5\n        /* \"#utility.yul\":12982:12989   */\n      dup7\n        /* \"#utility.yul\":12978:13001   */\n      sub\n        /* \"#utility.yul\":12974:13006   */\n      slt\n        /* \"#utility.yul\":12971:13090   */\n      iszero\n      tag_768\n      jumpi\n        /* \"#utility.yul\":13009:13088   */\n      tag_769\n      tag_534\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":12971:13090   */\n    tag_768:\n        /* \"#utility.yul\":13157:13158   */\n      0x00\n        /* \"#utility.yul\":13146:13155   */\n      dup5\n        /* \"#utility.yul\":13142:13159   */\n      add\n        /* \"#utility.yul\":13129:13160   */\n      calldataload\n        /* \"#utility.yul\":13187:13205   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13179:13185   */\n      dup2\n        /* \"#utility.yul\":13176:13206   */\n      gt\n        /* \"#utility.yul\":13173:13290   */\n      iszero\n      tag_770\n      jumpi\n        /* \"#utility.yul\":13209:13288   */\n      tag_771\n      tag_535\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":13173:13290   */\n    tag_770:\n        /* \"#utility.yul\":13314:13377   */\n      tag_772\n        /* \"#utility.yul\":13369:13376   */\n      dup7\n        /* \"#utility.yul\":13360:13366   */\n      dup3\n        /* \"#utility.yul\":13349:13358   */\n      dup8\n        /* \"#utility.yul\":13345:13367   */\n      add\n        /* \"#utility.yul\":13314:13377   */\n      tag_568\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":13304:13377   */\n      swap4\n      pop\n        /* \"#utility.yul\":13100:13387   */\n      pop\n        /* \"#utility.yul\":13454:13456   */\n      0x20\n        /* \"#utility.yul\":13443:13452   */\n      dup5\n        /* \"#utility.yul\":13439:13457   */\n      add\n        /* \"#utility.yul\":13426:13458   */\n      calldataload\n        /* \"#utility.yul\":13485:13503   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13477:13483   */\n      dup2\n        /* \"#utility.yul\":13474:13504   */\n      gt\n        /* \"#utility.yul\":13471:13588   */\n      iszero\n      tag_773\n      jumpi\n        /* \"#utility.yul\":13507:13586   */\n      tag_774\n      tag_535\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":13471:13588   */\n    tag_773:\n        /* \"#utility.yul\":13612:13675   */\n      tag_775\n        /* \"#utility.yul\":13667:13674   */\n      dup7\n        /* \"#utility.yul\":13658:13664   */\n      dup3\n        /* \"#utility.yul\":13647:13656   */\n      dup8\n        /* \"#utility.yul\":13643:13665   */\n      add\n        /* \"#utility.yul\":13612:13675   */\n      tag_568\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":13602:13675   */\n      swap3\n      pop\n        /* \"#utility.yul\":13397:13685   */\n      pop\n        /* \"#utility.yul\":13724:13726   */\n      0x40\n        /* \"#utility.yul\":13750:13803   */\n      tag_776\n        /* \"#utility.yul\":13795:13802   */\n      dup7\n        /* \"#utility.yul\":13786:13792   */\n      dup3\n        /* \"#utility.yul\":13775:13784   */\n      dup8\n        /* \"#utility.yul\":13771:13793   */\n      add\n        /* \"#utility.yul\":13750:13803   */\n      tag_542\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":13740:13803   */\n      swap2\n      pop\n        /* \"#utility.yul\":13695:13813   */\n      pop\n        /* \"#utility.yul\":12841:13820   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":13826:14300   */\n    tag_150:\n        /* \"#utility.yul\":13894:13900   */\n      0x00\n        /* \"#utility.yul\":13902:13908   */\n      dup1\n        /* \"#utility.yul\":13951:13953   */\n      0x40\n        /* \"#utility.yul\":13939:13948   */\n      dup4\n        /* \"#utility.yul\":13930:13937   */\n      dup6\n        /* \"#utility.yul\":13926:13949   */\n      sub\n        /* \"#utility.yul\":13922:13954   */\n      slt\n        /* \"#utility.yul\":13919:14038   */\n      iszero\n      tag_778\n      jumpi\n        /* \"#utility.yul\":13957:14036   */\n      tag_779\n      tag_534\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":13919:14038   */\n    tag_778:\n        /* \"#utility.yul\":14077:14078   */\n      0x00\n        /* \"#utility.yul\":14102:14155   */\n      tag_780\n        /* \"#utility.yul\":14147:14154   */\n      dup6\n        /* \"#utility.yul\":14138:14144   */\n      dup3\n        /* \"#utility.yul\":14127:14136   */\n      dup7\n        /* \"#utility.yul\":14123:14145   */\n      add\n        /* \"#utility.yul\":14102:14155   */\n      tag_539\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":14092:14155   */\n      swap3\n      pop\n        /* \"#utility.yul\":14048:14165   */\n      pop\n        /* \"#utility.yul\":14204:14206   */\n      0x20\n        /* \"#utility.yul\":14230:14283   */\n      tag_781\n        /* \"#utility.yul\":14275:14282   */\n      dup6\n        /* \"#utility.yul\":14266:14272   */\n      dup3\n        /* \"#utility.yul\":14255:14264   */\n      dup7\n        /* \"#utility.yul\":14251:14273   */\n      add\n        /* \"#utility.yul\":14230:14283   */\n      tag_539\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":14220:14283   */\n      swap2\n      pop\n        /* \"#utility.yul\":14175:14293   */\n      pop\n        /* \"#utility.yul\":13826:14300   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14306:14925   */\n    tag_160:\n        /* \"#utility.yul\":14383:14389   */\n      0x00\n        /* \"#utility.yul\":14391:14397   */\n      dup1\n        /* \"#utility.yul\":14399:14405   */\n      0x00\n        /* \"#utility.yul\":14448:14450   */\n      0x60\n        /* \"#utility.yul\":14436:14445   */\n      dup5\n        /* \"#utility.yul\":14427:14434   */\n      dup7\n        /* \"#utility.yul\":14423:14446   */\n      sub\n        /* \"#utility.yul\":14419:14451   */\n      slt\n        /* \"#utility.yul\":14416:14535   */\n      iszero\n      tag_783\n      jumpi\n        /* \"#utility.yul\":14454:14533   */\n      tag_784\n      tag_534\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":14416:14535   */\n    tag_783:\n        /* \"#utility.yul\":14574:14575   */\n      0x00\n        /* \"#utility.yul\":14599:14652   */\n      tag_785\n        /* \"#utility.yul\":14644:14651   */\n      dup7\n        /* \"#utility.yul\":14635:14641   */\n      dup3\n        /* \"#utility.yul\":14624:14633   */\n      dup8\n        /* \"#utility.yul\":14620:14642   */\n      add\n        /* \"#utility.yul\":14599:14652   */\n      tag_539\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":14589:14652   */\n      swap4\n      pop\n        /* \"#utility.yul\":14545:14662   */\n      pop\n        /* \"#utility.yul\":14701:14703   */\n      0x20\n        /* \"#utility.yul\":14727:14780   */\n      tag_786\n        /* \"#utility.yul\":14772:14779   */\n      dup7\n        /* \"#utility.yul\":14763:14769   */\n      dup3\n        /* \"#utility.yul\":14752:14761   */\n      dup8\n        /* \"#utility.yul\":14748:14770   */\n      add\n        /* \"#utility.yul\":14727:14780   */\n      tag_542\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":14717:14780   */\n      swap3\n      pop\n        /* \"#utility.yul\":14672:14790   */\n      pop\n        /* \"#utility.yul\":14829:14831   */\n      0x40\n        /* \"#utility.yul\":14855:14908   */\n      tag_787\n        /* \"#utility.yul\":14900:14907   */\n      dup7\n        /* \"#utility.yul\":14891:14897   */\n      dup3\n        /* \"#utility.yul\":14880:14889   */\n      dup8\n        /* \"#utility.yul\":14876:14898   */\n      add\n        /* \"#utility.yul\":14855:14908   */\n      tag_542\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":14845:14908   */\n      swap2\n      pop\n        /* \"#utility.yul\":14800:14918   */\n      pop\n        /* \"#utility.yul\":14306:14925   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":14931:15111   */\n    tag_569:\n        /* \"#utility.yul\":14979:15056   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14976:14977   */\n      0x00\n        /* \"#utility.yul\":14969:15057   */\n      mstore\n        /* \"#utility.yul\":15076:15080   */\n      0x22\n        /* \"#utility.yul\":15073:15074   */\n      0x04\n        /* \"#utility.yul\":15066:15081   */\n      mstore\n        /* \"#utility.yul\":15100:15104   */\n      0x24\n        /* \"#utility.yul\":15097:15098   */\n      0x00\n        /* \"#utility.yul\":15090:15105   */\n      revert\n        /* \"#utility.yul\":15117:15437   */\n    tag_166:\n        /* \"#utility.yul\":15161:15167   */\n      0x00\n        /* \"#utility.yul\":15198:15199   */\n      0x02\n        /* \"#utility.yul\":15192:15196   */\n      dup3\n        /* \"#utility.yul\":15188:15200   */\n      div\n        /* \"#utility.yul\":15178:15200   */\n      swap1\n      pop\n        /* \"#utility.yul\":15245:15246   */\n      0x01\n        /* \"#utility.yul\":15239:15243   */\n      dup3\n        /* \"#utility.yul\":15235:15247   */\n      and\n        /* \"#utility.yul\":15266:15284   */\n      dup1\n        /* \"#utility.yul\":15256:15337   */\n      tag_790\n      jumpi\n        /* \"#utility.yul\":15322:15326   */\n      0x7f\n        /* \"#utility.yul\":15314:15320   */\n      dup3\n        /* \"#utility.yul\":15310:15327   */\n      and\n        /* \"#utility.yul\":15300:15327   */\n      swap2\n      pop\n        /* \"#utility.yul\":15256:15337   */\n    tag_790:\n        /* \"#utility.yul\":15384:15386   */\n      0x20\n        /* \"#utility.yul\":15376:15382   */\n      dup3\n        /* \"#utility.yul\":15373:15387   */\n      lt\n        /* \"#utility.yul\":15353:15371   */\n      dup2\n        /* \"#utility.yul\":15350:15388   */\n      sub\n        /* \"#utility.yul\":15347:15431   */\n      tag_791\n      jumpi\n        /* \"#utility.yul\":15403:15421   */\n      tag_792\n      tag_569\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":15347:15431   */\n    tag_791:\n        /* \"#utility.yul\":15168:15437   */\n      pop\n        /* \"#utility.yul\":15117:15437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15443:15605   */\n    tag_570:\n        /* \"#utility.yul\":15583:15597   */\n      0x4e756c6c20416464726573730000000000000000000000000000000000000000\n        /* \"#utility.yul\":15579:15580   */\n      0x00\n        /* \"#utility.yul\":15571:15577   */\n      dup3\n        /* \"#utility.yul\":15567:15581   */\n      add\n        /* \"#utility.yul\":15560:15598   */\n      mstore\n        /* \"#utility.yul\":15443:15605   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15611:15977   */\n    tag_571:\n        /* \"#utility.yul\":15753:15756   */\n      0x00\n        /* \"#utility.yul\":15774:15841   */\n      tag_795\n        /* \"#utility.yul\":15838:15840   */\n      0x0c\n        /* \"#utility.yul\":15833:15836   */\n      dup4\n        /* \"#utility.yul\":15774:15841   */\n      tag_529\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":15767:15841   */\n      swap2\n      pop\n        /* \"#utility.yul\":15850:15943   */\n      tag_796\n        /* \"#utility.yul\":15939:15942   */\n      dup3\n        /* \"#utility.yul\":15850:15943   */\n      tag_570\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":15968:15970   */\n      0x20\n        /* \"#utility.yul\":15963:15966   */\n      dup3\n        /* \"#utility.yul\":15959:15971   */\n      add\n        /* \"#utility.yul\":15952:15971   */\n      swap1\n      pop\n        /* \"#utility.yul\":15611:15977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15983:16402   */\n    tag_182:\n        /* \"#utility.yul\":16149:16153   */\n      0x00\n        /* \"#utility.yul\":16187:16189   */\n      0x20\n        /* \"#utility.yul\":16176:16185   */\n      dup3\n        /* \"#utility.yul\":16172:16190   */\n      add\n        /* \"#utility.yul\":16164:16190   */\n      swap1\n      pop\n        /* \"#utility.yul\":16236:16245   */\n      dup2\n        /* \"#utility.yul\":16230:16234   */\n      dup2\n        /* \"#utility.yul\":16226:16246   */\n      sub\n        /* \"#utility.yul\":16222:16223   */\n      0x00\n        /* \"#utility.yul\":16211:16220   */\n      dup4\n        /* \"#utility.yul\":16207:16224   */\n      add\n        /* \"#utility.yul\":16200:16247   */\n      mstore\n        /* \"#utility.yul\":16264:16395   */\n      tag_798\n        /* \"#utility.yul\":16390:16394   */\n      dup2\n        /* \"#utility.yul\":16264:16395   */\n      tag_571\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":16256:16395   */\n      swap1\n      pop\n        /* \"#utility.yul\":15983:16402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16408:16633   */\n    tag_572:\n        /* \"#utility.yul\":16548:16582   */\n      0x5472616e73666572206661696c65643a2053656e64657220697320626c61636b\n        /* \"#utility.yul\":16544:16545   */\n      0x00\n        /* \"#utility.yul\":16536:16542   */\n      dup3\n        /* \"#utility.yul\":16532:16546   */\n      add\n        /* \"#utility.yul\":16525:16583   */\n      mstore\n        /* \"#utility.yul\":16617:16625   */\n      0x6c69737465640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16612:16614   */\n      0x20\n        /* \"#utility.yul\":16604:16610   */\n      dup3\n        /* \"#utility.yul\":16600:16615   */\n      add\n        /* \"#utility.yul\":16593:16626   */\n      mstore\n        /* \"#utility.yul\":16408:16633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16639:17005   */\n    tag_573:\n        /* \"#utility.yul\":16781:16784   */\n      0x00\n        /* \"#utility.yul\":16802:16869   */\n      tag_801\n        /* \"#utility.yul\":16866:16868   */\n      0x26\n        /* \"#utility.yul\":16861:16864   */\n      dup4\n        /* \"#utility.yul\":16802:16869   */\n      tag_529\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":16795:16869   */\n      swap2\n      pop\n        /* \"#utility.yul\":16878:16971   */\n      tag_802\n        /* \"#utility.yul\":16967:16970   */\n      dup3\n        /* \"#utility.yul\":16878:16971   */\n      tag_572\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":16996:16998   */\n      0x40\n        /* \"#utility.yul\":16991:16994   */\n      dup3\n        /* \"#utility.yul\":16987:16999   */\n      add\n        /* \"#utility.yul\":16980:16999   */\n      swap1\n      pop\n        /* \"#utility.yul\":16639:17005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17011:17430   */\n    tag_192:\n        /* \"#utility.yul\":17177:17181   */\n      0x00\n        /* \"#utility.yul\":17215:17217   */\n      0x20\n        /* \"#utility.yul\":17204:17213   */\n      dup3\n        /* \"#utility.yul\":17200:17218   */\n      add\n        /* \"#utility.yul\":17192:17218   */\n      swap1\n      pop\n        /* \"#utility.yul\":17264:17273   */\n      dup2\n        /* \"#utility.yul\":17258:17262   */\n      dup2\n        /* \"#utility.yul\":17254:17274   */\n      sub\n        /* \"#utility.yul\":17250:17251   */\n      0x00\n        /* \"#utility.yul\":17239:17248   */\n      dup4\n        /* \"#utility.yul\":17235:17252   */\n      add\n        /* \"#utility.yul\":17228:17275   */\n      mstore\n        /* \"#utility.yul\":17292:17423   */\n      tag_804\n        /* \"#utility.yul\":17418:17422   */\n      dup2\n        /* \"#utility.yul\":17292:17423   */\n      tag_573\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":17284:17423   */\n      swap1\n      pop\n        /* \"#utility.yul\":17011:17430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17436:17664   */\n    tag_574:\n        /* \"#utility.yul\":17576:17610   */\n      0x5472616e73666572206661696c65643a20526563697069656e7420697320626c\n        /* \"#utility.yul\":17572:17573   */\n      0x00\n        /* \"#utility.yul\":17564:17570   */\n      dup3\n        /* \"#utility.yul\":17560:17574   */\n      add\n        /* \"#utility.yul\":17553:17611   */\n      mstore\n        /* \"#utility.yul\":17645:17656   */\n      0x61636b6c69737465640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17640:17642   */\n      0x20\n        /* \"#utility.yul\":17632:17638   */\n      dup3\n        /* \"#utility.yul\":17628:17643   */\n      add\n        /* \"#utility.yul\":17621:17657   */\n      mstore\n        /* \"#utility.yul\":17436:17664   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17670:18036   */\n    tag_575:\n        /* \"#utility.yul\":17812:17815   */\n      0x00\n        /* \"#utility.yul\":17833:17900   */\n      tag_807\n        /* \"#utility.yul\":17897:17899   */\n      0x29\n        /* \"#utility.yul\":17892:17895   */\n      dup4\n        /* \"#utility.yul\":17833:17900   */\n      tag_529\n      jump\t// in\n    tag_807:\n        /* \"#utility.yul\":17826:17900   */\n      swap2\n      pop\n        /* \"#utility.yul\":17909:18002   */\n      tag_808\n        /* \"#utility.yul\":17998:18001   */\n      dup3\n        /* \"#utility.yul\":17909:18002   */\n      tag_574\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":18027:18029   */\n      0x40\n        /* \"#utility.yul\":18022:18025   */\n      dup3\n        /* \"#utility.yul\":18018:18030   */\n      add\n        /* \"#utility.yul\":18011:18030   */\n      swap1\n      pop\n        /* \"#utility.yul\":17670:18036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18042:18461   */\n    tag_195:\n        /* \"#utility.yul\":18208:18212   */\n      0x00\n        /* \"#utility.yul\":18246:18248   */\n      0x20\n        /* \"#utility.yul\":18235:18244   */\n      dup3\n        /* \"#utility.yul\":18231:18249   */\n      add\n        /* \"#utility.yul\":18223:18249   */\n      swap1\n      pop\n        /* \"#utility.yul\":18295:18304   */\n      dup2\n        /* \"#utility.yul\":18289:18293   */\n      dup2\n        /* \"#utility.yul\":18285:18305   */\n      sub\n        /* \"#utility.yul\":18281:18282   */\n      0x00\n        /* \"#utility.yul\":18270:18279   */\n      dup4\n        /* \"#utility.yul\":18266:18283   */\n      add\n        /* \"#utility.yul\":18259:18306   */\n      mstore\n        /* \"#utility.yul\":18323:18454   */\n      tag_810\n        /* \"#utility.yul\":18449:18453   */\n      dup2\n        /* \"#utility.yul\":18323:18454   */\n      tag_575\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":18315:18454   */\n      swap1\n      pop\n        /* \"#utility.yul\":18042:18461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18467:18641   */\n    tag_576:\n        /* \"#utility.yul\":18607:18633   */\n      0x416d6f756e742073686f756c646e2774206265207a65726f0000000000000000\n        /* \"#utility.yul\":18603:18604   */\n      0x00\n        /* \"#utility.yul\":18595:18601   */\n      dup3\n        /* \"#utility.yul\":18591:18605   */\n      add\n        /* \"#utility.yul\":18584:18634   */\n      mstore\n        /* \"#utility.yul\":18467:18641   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18647:19013   */\n    tag_577:\n        /* \"#utility.yul\":18789:18792   */\n      0x00\n        /* \"#utility.yul\":18810:18877   */\n      tag_813\n        /* \"#utility.yul\":18874:18876   */\n      0x18\n        /* \"#utility.yul\":18869:18872   */\n      dup4\n        /* \"#utility.yul\":18810:18877   */\n      tag_529\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":18803:18877   */\n      swap2\n      pop\n        /* \"#utility.yul\":18886:18979   */\n      tag_814\n        /* \"#utility.yul\":18975:18978   */\n      dup3\n        /* \"#utility.yul\":18886:18979   */\n      tag_576\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":19004:19006   */\n      0x20\n        /* \"#utility.yul\":18999:19002   */\n      dup3\n        /* \"#utility.yul\":18995:19007   */\n      add\n        /* \"#utility.yul\":18988:19007   */\n      swap1\n      pop\n        /* \"#utility.yul\":18647:19013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19019:19438   */\n    tag_198:\n        /* \"#utility.yul\":19185:19189   */\n      0x00\n        /* \"#utility.yul\":19223:19225   */\n      0x20\n        /* \"#utility.yul\":19212:19221   */\n      dup3\n        /* \"#utility.yul\":19208:19226   */\n      add\n        /* \"#utility.yul\":19200:19226   */\n      swap1\n      pop\n        /* \"#utility.yul\":19272:19281   */\n      dup2\n        /* \"#utility.yul\":19266:19270   */\n      dup2\n        /* \"#utility.yul\":19262:19282   */\n      sub\n        /* \"#utility.yul\":19258:19259   */\n      0x00\n        /* \"#utility.yul\":19247:19256   */\n      dup4\n        /* \"#utility.yul\":19243:19260   */\n      add\n        /* \"#utility.yul\":19236:19283   */\n      mstore\n        /* \"#utility.yul\":19300:19431   */\n      tag_816\n        /* \"#utility.yul\":19426:19430   */\n      dup2\n        /* \"#utility.yul\":19300:19431   */\n      tag_577\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":19292:19431   */\n      swap1\n      pop\n        /* \"#utility.yul\":19019:19438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19444:19665   */\n    tag_578:\n        /* \"#utility.yul\":19584:19618   */\n      0x5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b\n        /* \"#utility.yul\":19580:19581   */\n      0x00\n        /* \"#utility.yul\":19572:19578   */\n      dup3\n        /* \"#utility.yul\":19568:19582   */\n      add\n        /* \"#utility.yul\":19561:19619   */\n      mstore\n        /* \"#utility.yul\":19653:19657   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19648:19650   */\n      0x20\n        /* \"#utility.yul\":19640:19646   */\n      dup3\n        /* \"#utility.yul\":19636:19651   */\n      add\n        /* \"#utility.yul\":19629:19658   */\n      mstore\n        /* \"#utility.yul\":19444:19665   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19671:20037   */\n    tag_579:\n        /* \"#utility.yul\":19813:19816   */\n      0x00\n        /* \"#utility.yul\":19834:19901   */\n      tag_819\n        /* \"#utility.yul\":19898:19900   */\n      0x22\n        /* \"#utility.yul\":19893:19896   */\n      dup4\n        /* \"#utility.yul\":19834:19901   */\n      tag_529\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":19827:19901   */\n      swap2\n      pop\n        /* \"#utility.yul\":19910:20003   */\n      tag_820\n        /* \"#utility.yul\":19999:20002   */\n      dup3\n        /* \"#utility.yul\":19910:20003   */\n      tag_578\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":20028:20030   */\n      0x40\n        /* \"#utility.yul\":20023:20026   */\n      dup3\n        /* \"#utility.yul\":20019:20031   */\n      add\n        /* \"#utility.yul\":20012:20031   */\n      swap1\n      pop\n        /* \"#utility.yul\":19671:20037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20043:20462   */\n    tag_202:\n        /* \"#utility.yul\":20209:20213   */\n      0x00\n        /* \"#utility.yul\":20247:20249   */\n      0x20\n        /* \"#utility.yul\":20236:20245   */\n      dup3\n        /* \"#utility.yul\":20232:20250   */\n      add\n        /* \"#utility.yul\":20224:20250   */\n      swap1\n      pop\n        /* \"#utility.yul\":20296:20305   */\n      dup2\n        /* \"#utility.yul\":20290:20294   */\n      dup2\n        /* \"#utility.yul\":20286:20306   */\n      sub\n        /* \"#utility.yul\":20282:20283   */\n      0x00\n        /* \"#utility.yul\":20271:20280   */\n      dup4\n        /* \"#utility.yul\":20267:20284   */\n      add\n        /* \"#utility.yul\":20260:20307   */\n      mstore\n        /* \"#utility.yul\":20324:20455   */\n      tag_822\n        /* \"#utility.yul\":20450:20454   */\n      dup2\n        /* \"#utility.yul\":20324:20455   */\n      tag_579\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":20316:20455   */\n      swap1\n      pop\n        /* \"#utility.yul\":20043:20462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20468:20643   */\n    tag_580:\n        /* \"#utility.yul\":20608:20635   */\n      0x41646472657373206973206e6f74206120636f6e747261637400000000000000\n        /* \"#utility.yul\":20604:20605   */\n      0x00\n        /* \"#utility.yul\":20596:20602   */\n      dup3\n        /* \"#utility.yul\":20592:20606   */\n      add\n        /* \"#utility.yul\":20585:20636   */\n      mstore\n        /* \"#utility.yul\":20468:20643   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20649:21015   */\n    tag_581:\n        /* \"#utility.yul\":20791:20794   */\n      0x00\n        /* \"#utility.yul\":20812:20879   */\n      tag_825\n        /* \"#utility.yul\":20876:20878   */\n      0x19\n        /* \"#utility.yul\":20871:20874   */\n      dup4\n        /* \"#utility.yul\":20812:20879   */\n      tag_529\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":20805:20879   */\n      swap2\n      pop\n        /* \"#utility.yul\":20888:20981   */\n      tag_826\n        /* \"#utility.yul\":20977:20980   */\n      dup3\n        /* \"#utility.yul\":20888:20981   */\n      tag_580\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":21006:21008   */\n      0x20\n        /* \"#utility.yul\":21001:21004   */\n      dup3\n        /* \"#utility.yul\":20997:21009   */\n      add\n        /* \"#utility.yul\":20990:21009   */\n      swap1\n      pop\n        /* \"#utility.yul\":20649:21015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21021:21440   */\n    tag_216:\n        /* \"#utility.yul\":21187:21191   */\n      0x00\n        /* \"#utility.yul\":21225:21227   */\n      0x20\n        /* \"#utility.yul\":21214:21223   */\n      dup3\n        /* \"#utility.yul\":21210:21228   */\n      add\n        /* \"#utility.yul\":21202:21228   */\n      swap1\n      pop\n        /* \"#utility.yul\":21274:21283   */\n      dup2\n        /* \"#utility.yul\":21268:21272   */\n      dup2\n        /* \"#utility.yul\":21264:21284   */\n      sub\n        /* \"#utility.yul\":21260:21261   */\n      0x00\n        /* \"#utility.yul\":21249:21258   */\n      dup4\n        /* \"#utility.yul\":21245:21262   */\n      add\n        /* \"#utility.yul\":21238:21285   */\n      mstore\n        /* \"#utility.yul\":21302:21433   */\n      tag_828\n        /* \"#utility.yul\":21428:21432   */\n      dup2\n        /* \"#utility.yul\":21302:21433   */\n      tag_581\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":21294:21433   */\n      swap1\n      pop\n        /* \"#utility.yul\":21021:21440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21446:21672   */\n    tag_582:\n        /* \"#utility.yul\":21586:21620   */\n      0x42617463685472616e73666572206661696c65643a204d69736d617463686564\n        /* \"#utility.yul\":21582:21583   */\n      0x00\n        /* \"#utility.yul\":21574:21580   */\n      dup3\n        /* \"#utility.yul\":21570:21584   */\n      add\n        /* \"#utility.yul\":21563:21621   */\n      mstore\n        /* \"#utility.yul\":21655:21664   */\n      0x2061727261797300000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21650:21652   */\n      0x20\n        /* \"#utility.yul\":21642:21648   */\n      dup3\n        /* \"#utility.yul\":21638:21653   */\n      add\n        /* \"#utility.yul\":21631:21665   */\n      mstore\n        /* \"#utility.yul\":21446:21672   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21678:22044   */\n    tag_583:\n        /* \"#utility.yul\":21820:21823   */\n      0x00\n        /* \"#utility.yul\":21841:21908   */\n      tag_831\n        /* \"#utility.yul\":21905:21907   */\n      0x27\n        /* \"#utility.yul\":21900:21903   */\n      dup4\n        /* \"#utility.yul\":21841:21908   */\n      tag_529\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":21834:21908   */\n      swap2\n      pop\n        /* \"#utility.yul\":21917:22010   */\n      tag_832\n        /* \"#utility.yul\":22006:22009   */\n      dup3\n        /* \"#utility.yul\":21917:22010   */\n      tag_582\n      jump\t// in\n    tag_832:\n        /* \"#utility.yul\":22035:22037   */\n      0x40\n        /* \"#utility.yul\":22030:22033   */\n      dup3\n        /* \"#utility.yul\":22026:22038   */\n      add\n        /* \"#utility.yul\":22019:22038   */\n      swap1\n      pop\n        /* \"#utility.yul\":21678:22044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22050:22469   */\n    tag_253:\n        /* \"#utility.yul\":22216:22220   */\n      0x00\n        /* \"#utility.yul\":22254:22256   */\n      0x20\n        /* \"#utility.yul\":22243:22252   */\n      dup3\n        /* \"#utility.yul\":22239:22257   */\n      add\n        /* \"#utility.yul\":22231:22257   */\n      swap1\n      pop\n        /* \"#utility.yul\":22303:22312   */\n      dup2\n        /* \"#utility.yul\":22297:22301   */\n      dup2\n        /* \"#utility.yul\":22293:22313   */\n      sub\n        /* \"#utility.yul\":22289:22290   */\n      0x00\n        /* \"#utility.yul\":22278:22287   */\n      dup4\n        /* \"#utility.yul\":22274:22291   */\n      add\n        /* \"#utility.yul\":22267:22314   */\n      mstore\n        /* \"#utility.yul\":22331:22462   */\n      tag_834\n        /* \"#utility.yul\":22457:22461   */\n      dup2\n        /* \"#utility.yul\":22331:22462   */\n      tag_583\n      jump\t// in\n    tag_834:\n        /* \"#utility.yul\":22323:22462   */\n      swap1\n      pop\n        /* \"#utility.yul\":22050:22469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22475:22655   */\n    tag_259:\n        /* \"#utility.yul\":22523:22600   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22520:22521   */\n      0x00\n        /* \"#utility.yul\":22513:22601   */\n      mstore\n        /* \"#utility.yul\":22620:22624   */\n      0x32\n        /* \"#utility.yul\":22617:22618   */\n      0x04\n        /* \"#utility.yul\":22610:22625   */\n      mstore\n        /* \"#utility.yul\":22644:22648   */\n      0x24\n        /* \"#utility.yul\":22641:22642   */\n      0x00\n        /* \"#utility.yul\":22634:22649   */\n      revert\n        /* \"#utility.yul\":22661:22894   */\n    tag_584:\n        /* \"#utility.yul\":22801:22835   */\n      0x42617463685472616e73666572206661696c65643a20526563697069656e7420\n        /* \"#utility.yul\":22797:22798   */\n      0x00\n        /* \"#utility.yul\":22789:22795   */\n      dup3\n        /* \"#utility.yul\":22785:22799   */\n      add\n        /* \"#utility.yul\":22778:22836   */\n      mstore\n        /* \"#utility.yul\":22870:22886   */\n      0x697320626c61636b6c6973746564000000000000000000000000000000000000\n        /* \"#utility.yul\":22865:22867   */\n      0x20\n        /* \"#utility.yul\":22857:22863   */\n      dup3\n        /* \"#utility.yul\":22853:22868   */\n      add\n        /* \"#utility.yul\":22846:22887   */\n      mstore\n        /* \"#utility.yul\":22661:22894   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22900:23266   */\n    tag_585:\n        /* \"#utility.yul\":23042:23045   */\n      0x00\n        /* \"#utility.yul\":23063:23130   */\n      tag_838\n        /* \"#utility.yul\":23127:23129   */\n      0x2e\n        /* \"#utility.yul\":23122:23125   */\n      dup4\n        /* \"#utility.yul\":23063:23130   */\n      tag_529\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":23056:23130   */\n      swap2\n      pop\n        /* \"#utility.yul\":23139:23232   */\n      tag_839\n        /* \"#utility.yul\":23228:23231   */\n      dup3\n        /* \"#utility.yul\":23139:23232   */\n      tag_584\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":23257:23259   */\n      0x40\n        /* \"#utility.yul\":23252:23255   */\n      dup3\n        /* \"#utility.yul\":23248:23260   */\n      add\n        /* \"#utility.yul\":23241:23260   */\n      swap1\n      pop\n        /* \"#utility.yul\":22900:23266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23272:23691   */\n    tag_263:\n        /* \"#utility.yul\":23438:23442   */\n      0x00\n        /* \"#utility.yul\":23476:23478   */\n      0x20\n        /* \"#utility.yul\":23465:23474   */\n      dup3\n        /* \"#utility.yul\":23461:23479   */\n      add\n        /* \"#utility.yul\":23453:23479   */\n      swap1\n      pop\n        /* \"#utility.yul\":23525:23534   */\n      dup2\n        /* \"#utility.yul\":23519:23523   */\n      dup2\n        /* \"#utility.yul\":23515:23535   */\n      sub\n        /* \"#utility.yul\":23511:23512   */\n      0x00\n        /* \"#utility.yul\":23500:23509   */\n      dup4\n        /* \"#utility.yul\":23496:23513   */\n      add\n        /* \"#utility.yul\":23489:23536   */\n      mstore\n        /* \"#utility.yul\":23553:23684   */\n      tag_841\n        /* \"#utility.yul\":23679:23683   */\n      dup2\n        /* \"#utility.yul\":23553:23684   */\n      tag_585\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":23545:23684   */\n      swap1\n      pop\n        /* \"#utility.yul\":23272:23691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23697:23782   */\n    tag_586:\n        /* \"#utility.yul\":23742:23749   */\n      0x00\n        /* \"#utility.yul\":23771:23776   */\n      dup2\n        /* \"#utility.yul\":23760:23776   */\n      swap1\n      pop\n        /* \"#utility.yul\":23697:23782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23788:23889   */\n    tag_587:\n        /* \"#utility.yul\":23824:23831   */\n      0x00\n        /* \"#utility.yul\":23864:23882   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23857:23862   */\n      dup3\n        /* \"#utility.yul\":23853:23883   */\n      and\n        /* \"#utility.yul\":23842:23883   */\n      swap1\n      pop\n        /* \"#utility.yul\":23788:23889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23895:23955   */\n    tag_588:\n        /* \"#utility.yul\":23923:23926   */\n      0x00\n        /* \"#utility.yul\":23944:23949   */\n      dup2\n        /* \"#utility.yul\":23937:23949   */\n      swap1\n      pop\n        /* \"#utility.yul\":23895:23955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23961:24117   */\n    tag_589:\n        /* \"#utility.yul\":24018:24027   */\n      0x00\n        /* \"#utility.yul\":24051:24111   */\n      tag_846\n        /* \"#utility.yul\":24068:24110   */\n      tag_847\n        /* \"#utility.yul\":24077:24109   */\n      tag_848\n        /* \"#utility.yul\":24103:24108   */\n      dup5\n        /* \"#utility.yul\":24077:24109   */\n      tag_586\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":24068:24110   */\n      tag_588\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":24051:24111   */\n      tag_587\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":24038:24111   */\n      swap1\n      pop\n        /* \"#utility.yul\":23961:24117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24123:24268   */\n    tag_590:\n        /* \"#utility.yul\":24217:24261   */\n      tag_850\n        /* \"#utility.yul\":24255:24260   */\n      dup2\n        /* \"#utility.yul\":24217:24261   */\n      tag_589\n      jump\t// in\n    tag_850:\n        /* \"#utility.yul\":24212:24215   */\n      dup3\n        /* \"#utility.yul\":24205:24262   */\n      mstore\n        /* \"#utility.yul\":24123:24268   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24274:24510   */\n    tag_316:\n        /* \"#utility.yul\":24374:24378   */\n      0x00\n        /* \"#utility.yul\":24412:24414   */\n      0x20\n        /* \"#utility.yul\":24401:24410   */\n      dup3\n        /* \"#utility.yul\":24397:24415   */\n      add\n        /* \"#utility.yul\":24389:24415   */\n      swap1\n      pop\n        /* \"#utility.yul\":24425:24503   */\n      tag_852\n        /* \"#utility.yul\":24500:24501   */\n      0x00\n        /* \"#utility.yul\":24489:24498   */\n      dup4\n        /* \"#utility.yul\":24485:24502   */\n      add\n        /* \"#utility.yul\":24476:24482   */\n      dup5\n        /* \"#utility.yul\":24425:24503   */\n      tag_590\n      jump\t// in\n    tag_852:\n        /* \"#utility.yul\":24274:24510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24516:24680   */\n    tag_591:\n        /* \"#utility.yul\":24656:24672   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":24652:24653   */\n      0x00\n        /* \"#utility.yul\":24644:24650   */\n      dup3\n        /* \"#utility.yul\":24640:24654   */\n      add\n        /* \"#utility.yul\":24633:24673   */\n      mstore\n        /* \"#utility.yul\":24516:24680   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24686:25052   */\n    tag_592:\n        /* \"#utility.yul\":24828:24831   */\n      0x00\n        /* \"#utility.yul\":24849:24916   */\n      tag_855\n        /* \"#utility.yul\":24913:24915   */\n      0x0e\n        /* \"#utility.yul\":24908:24911   */\n      dup4\n        /* \"#utility.yul\":24849:24916   */\n      tag_529\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":24842:24916   */\n      swap2\n      pop\n        /* \"#utility.yul\":24925:25018   */\n      tag_856\n        /* \"#utility.yul\":25014:25017   */\n      dup3\n        /* \"#utility.yul\":24925:25018   */\n      tag_591\n      jump\t// in\n    tag_856:\n        /* \"#utility.yul\":25043:25045   */\n      0x20\n        /* \"#utility.yul\":25038:25041   */\n      dup3\n        /* \"#utility.yul\":25034:25046   */\n      add\n        /* \"#utility.yul\":25027:25046   */\n      swap1\n      pop\n        /* \"#utility.yul\":24686:25052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25058:25477   */\n    tag_330:\n        /* \"#utility.yul\":25224:25228   */\n      0x00\n        /* \"#utility.yul\":25262:25264   */\n      0x20\n        /* \"#utility.yul\":25251:25260   */\n      dup3\n        /* \"#utility.yul\":25247:25265   */\n      add\n        /* \"#utility.yul\":25239:25265   */\n      swap1\n      pop\n        /* \"#utility.yul\":25311:25320   */\n      dup2\n        /* \"#utility.yul\":25305:25309   */\n      dup2\n        /* \"#utility.yul\":25301:25321   */\n      sub\n        /* \"#utility.yul\":25297:25298   */\n      0x00\n        /* \"#utility.yul\":25286:25295   */\n      dup4\n        /* \"#utility.yul\":25282:25299   */\n      add\n        /* \"#utility.yul\":25275:25322   */\n      mstore\n        /* \"#utility.yul\":25339:25470   */\n      tag_858\n        /* \"#utility.yul\":25465:25469   */\n      dup2\n        /* \"#utility.yul\":25339:25470   */\n      tag_592\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":25331:25470   */\n      swap1\n      pop\n        /* \"#utility.yul\":25058:25477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25483:25665   */\n    tag_593:\n        /* \"#utility.yul\":25623:25657   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":25619:25620   */\n      0x00\n        /* \"#utility.yul\":25611:25617   */\n      dup3\n        /* \"#utility.yul\":25607:25621   */\n      add\n        /* \"#utility.yul\":25600:25658   */\n      mstore\n        /* \"#utility.yul\":25483:25665   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25671:26037   */\n    tag_594:\n        /* \"#utility.yul\":25813:25816   */\n      0x00\n        /* \"#utility.yul\":25834:25901   */\n      tag_861\n        /* \"#utility.yul\":25898:25900   */\n      0x20\n        /* \"#utility.yul\":25893:25896   */\n      dup4\n        /* \"#utility.yul\":25834:25901   */\n      tag_529\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":25827:25901   */\n      swap2\n      pop\n        /* \"#utility.yul\":25910:26003   */\n      tag_862\n        /* \"#utility.yul\":25999:26002   */\n      dup3\n        /* \"#utility.yul\":25910:26003   */\n      tag_593\n      jump\t// in\n    tag_862:\n        /* \"#utility.yul\":26028:26030   */\n      0x20\n        /* \"#utility.yul\":26023:26026   */\n      dup3\n        /* \"#utility.yul\":26019:26031   */\n      add\n        /* \"#utility.yul\":26012:26031   */\n      swap1\n      pop\n        /* \"#utility.yul\":25671:26037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26043:26462   */\n    tag_336:\n        /* \"#utility.yul\":26209:26213   */\n      0x00\n        /* \"#utility.yul\":26247:26249   */\n      0x20\n        /* \"#utility.yul\":26236:26245   */\n      dup3\n        /* \"#utility.yul\":26232:26250   */\n      add\n        /* \"#utility.yul\":26224:26250   */\n      swap1\n      pop\n        /* \"#utility.yul\":26296:26305   */\n      dup2\n        /* \"#utility.yul\":26290:26294   */\n      dup2\n        /* \"#utility.yul\":26286:26306   */\n      sub\n        /* \"#utility.yul\":26282:26283   */\n      0x00\n        /* \"#utility.yul\":26271:26280   */\n      dup4\n        /* \"#utility.yul\":26267:26284   */\n      add\n        /* \"#utility.yul\":26260:26307   */\n      mstore\n        /* \"#utility.yul\":26324:26455   */\n      tag_864\n        /* \"#utility.yul\":26450:26454   */\n      dup2\n        /* \"#utility.yul\":26324:26455   */\n      tag_594\n      jump\t// in\n    tag_864:\n        /* \"#utility.yul\":26316:26455   */\n      swap1\n      pop\n        /* \"#utility.yul\":26043:26462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26468:26800   */\n    tag_340:\n        /* \"#utility.yul\":26589:26593   */\n      0x00\n        /* \"#utility.yul\":26627:26629   */\n      0x40\n        /* \"#utility.yul\":26616:26625   */\n      dup3\n        /* \"#utility.yul\":26612:26630   */\n      add\n        /* \"#utility.yul\":26604:26630   */\n      swap1\n      pop\n        /* \"#utility.yul\":26640:26711   */\n      tag_866\n        /* \"#utility.yul\":26708:26709   */\n      0x00\n        /* \"#utility.yul\":26697:26706   */\n      dup4\n        /* \"#utility.yul\":26693:26710   */\n      add\n        /* \"#utility.yul\":26684:26690   */\n      dup6\n        /* \"#utility.yul\":26640:26711   */\n      tag_547\n      jump\t// in\n    tag_866:\n        /* \"#utility.yul\":26721:26793   */\n      tag_867\n        /* \"#utility.yul\":26789:26791   */\n      0x20\n        /* \"#utility.yul\":26778:26787   */\n      dup4\n        /* \"#utility.yul\":26774:26792   */\n      add\n        /* \"#utility.yul\":26765:26771   */\n      dup5\n        /* \"#utility.yul\":26721:26793   */\n      tag_547\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":26468:26800   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26806:26972   */\n    tag_595:\n        /* \"#utility.yul\":26946:26964   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":26942:26943   */\n      0x00\n        /* \"#utility.yul\":26934:26940   */\n      dup3\n        /* \"#utility.yul\":26930:26944   */\n      add\n        /* \"#utility.yul\":26923:26965   */\n      mstore\n        /* \"#utility.yul\":26806:26972   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26978:27344   */\n    tag_596:\n        /* \"#utility.yul\":27120:27123   */\n      0x00\n        /* \"#utility.yul\":27141:27208   */\n      tag_870\n        /* \"#utility.yul\":27205:27207   */\n      0x10\n        /* \"#utility.yul\":27200:27203   */\n      dup4\n        /* \"#utility.yul\":27141:27208   */\n      tag_529\n      jump\t// in\n    tag_870:\n        /* \"#utility.yul\":27134:27208   */\n      swap2\n      pop\n        /* \"#utility.yul\":27217:27310   */\n      tag_871\n        /* \"#utility.yul\":27306:27309   */\n      dup3\n        /* \"#utility.yul\":27217:27310   */\n      tag_595\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":27335:27337   */\n      0x20\n        /* \"#utility.yul\":27330:27333   */\n      dup3\n        /* \"#utility.yul\":27326:27338   */\n      add\n        /* \"#utility.yul\":27319:27338   */\n      swap1\n      pop\n        /* \"#utility.yul\":26978:27344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27350:27769   */\n    tag_356:\n        /* \"#utility.yul\":27516:27520   */\n      0x00\n        /* \"#utility.yul\":27554:27556   */\n      0x20\n        /* \"#utility.yul\":27543:27552   */\n      dup3\n        /* \"#utility.yul\":27539:27557   */\n      add\n        /* \"#utility.yul\":27531:27557   */\n      swap1\n      pop\n        /* \"#utility.yul\":27603:27612   */\n      dup2\n        /* \"#utility.yul\":27597:27601   */\n      dup2\n        /* \"#utility.yul\":27593:27613   */\n      sub\n        /* \"#utility.yul\":27589:27590   */\n      0x00\n        /* \"#utility.yul\":27578:27587   */\n      dup4\n        /* \"#utility.yul\":27574:27591   */\n      add\n        /* \"#utility.yul\":27567:27614   */\n      mstore\n        /* \"#utility.yul\":27631:27762   */\n      tag_873\n        /* \"#utility.yul\":27757:27761   */\n      dup2\n        /* \"#utility.yul\":27631:27762   */\n      tag_596\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":27623:27762   */\n      swap1\n      pop\n        /* \"#utility.yul\":27350:27769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27775:27897   */\n    tag_597:\n        /* \"#utility.yul\":27848:27872   */\n      tag_875\n        /* \"#utility.yul\":27866:27871   */\n      dup2\n        /* \"#utility.yul\":27848:27872   */\n      tag_559\n      jump\t// in\n    tag_875:\n        /* \"#utility.yul\":27841:27846   */\n      dup2\n        /* \"#utility.yul\":27838:27873   */\n      eq\n        /* \"#utility.yul\":27828:27891   */\n      tag_876\n      jumpi\n        /* \"#utility.yul\":27887:27888   */\n      0x00\n        /* \"#utility.yul\":27884:27885   */\n      dup1\n        /* \"#utility.yul\":27877:27889   */\n      revert\n        /* \"#utility.yul\":27828:27891   */\n    tag_876:\n        /* \"#utility.yul\":27775:27897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27903:28046   */\n    tag_598:\n        /* \"#utility.yul\":27960:27965   */\n      0x00\n        /* \"#utility.yul\":27991:27997   */\n      dup2\n        /* \"#utility.yul\":27985:27998   */\n      mload\n        /* \"#utility.yul\":27976:27998   */\n      swap1\n      pop\n        /* \"#utility.yul\":28007:28040   */\n      tag_878\n        /* \"#utility.yul\":28034:28039   */\n      dup2\n        /* \"#utility.yul\":28007:28040   */\n      tag_597\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":27903:28046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28052:28403   */\n    tag_382:\n        /* \"#utility.yul\":28122:28128   */\n      0x00\n        /* \"#utility.yul\":28171:28173   */\n      0x20\n        /* \"#utility.yul\":28159:28168   */\n      dup3\n        /* \"#utility.yul\":28150:28157   */\n      dup5\n        /* \"#utility.yul\":28146:28169   */\n      sub\n        /* \"#utility.yul\":28142:28174   */\n      slt\n        /* \"#utility.yul\":28139:28258   */\n      iszero\n      tag_880\n      jumpi\n        /* \"#utility.yul\":28177:28256   */\n      tag_881\n      tag_534\n      jump\t// in\n    tag_881:\n        /* \"#utility.yul\":28139:28258   */\n    tag_880:\n        /* \"#utility.yul\":28297:28298   */\n      0x00\n        /* \"#utility.yul\":28322:28386   */\n      tag_882\n        /* \"#utility.yul\":28378:28385   */\n      dup5\n        /* \"#utility.yul\":28369:28375   */\n      dup3\n        /* \"#utility.yul\":28358:28367   */\n      dup6\n        /* \"#utility.yul\":28354:28376   */\n      add\n        /* \"#utility.yul\":28322:28386   */\n      tag_598\n      jump\t// in\n    tag_882:\n        /* \"#utility.yul\":28312:28386   */\n      swap2\n      pop\n        /* \"#utility.yul\":28268:28396   */\n      pop\n        /* \"#utility.yul\":28052:28403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28409:28851   */\n    tag_450:\n        /* \"#utility.yul\":28558:28562   */\n      0x00\n        /* \"#utility.yul\":28596:28598   */\n      0x60\n        /* \"#utility.yul\":28585:28594   */\n      dup3\n        /* \"#utility.yul\":28581:28599   */\n      add\n        /* \"#utility.yul\":28573:28599   */\n      swap1\n      pop\n        /* \"#utility.yul\":28609:28680   */\n      tag_884\n        /* \"#utility.yul\":28677:28678   */\n      0x00\n        /* \"#utility.yul\":28666:28675   */\n      dup4\n        /* \"#utility.yul\":28662:28679   */\n      add\n        /* \"#utility.yul\":28653:28659   */\n      dup7\n        /* \"#utility.yul\":28609:28680   */\n      tag_565\n      jump\t// in\n    tag_884:\n        /* \"#utility.yul\":28690:28762   */\n      tag_885\n        /* \"#utility.yul\":28758:28760   */\n      0x20\n        /* \"#utility.yul\":28747:28756   */\n      dup4\n        /* \"#utility.yul\":28743:28761   */\n      add\n        /* \"#utility.yul\":28734:28740   */\n      dup6\n        /* \"#utility.yul\":28690:28762   */\n      tag_547\n      jump\t// in\n    tag_885:\n        /* \"#utility.yul\":28772:28844   */\n      tag_886\n        /* \"#utility.yul\":28840:28842   */\n      0x40\n        /* \"#utility.yul\":28829:28838   */\n      dup4\n        /* \"#utility.yul\":28825:28843   */\n      add\n        /* \"#utility.yul\":28816:28822   */\n      dup5\n        /* \"#utility.yul\":28772:28844   */\n      tag_547\n      jump\t// in\n    tag_886:\n        /* \"#utility.yul\":28409:28851   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28857:29027   */\n    tag_599:\n        /* \"#utility.yul\":28997:29019   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":28993:28994   */\n      0x00\n        /* \"#utility.yul\":28985:28991   */\n      dup3\n        /* \"#utility.yul\":28981:28995   */\n      add\n        /* \"#utility.yul\":28974:29020   */\n      mstore\n        /* \"#utility.yul\":28857:29027   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29033:29399   */\n    tag_600:\n        /* \"#utility.yul\":29175:29178   */\n      0x00\n        /* \"#utility.yul\":29196:29263   */\n      tag_889\n        /* \"#utility.yul\":29260:29262   */\n      0x14\n        /* \"#utility.yul\":29255:29258   */\n      dup4\n        /* \"#utility.yul\":29196:29263   */\n      tag_529\n      jump\t// in\n    tag_889:\n        /* \"#utility.yul\":29189:29263   */\n      swap2\n      pop\n        /* \"#utility.yul\":29272:29365   */\n      tag_890\n        /* \"#utility.yul\":29361:29364   */\n      dup3\n        /* \"#utility.yul\":29272:29365   */\n      tag_599\n      jump\t// in\n    tag_890:\n        /* \"#utility.yul\":29390:29392   */\n      0x20\n        /* \"#utility.yul\":29385:29388   */\n      dup3\n        /* \"#utility.yul\":29381:29393   */\n      add\n        /* \"#utility.yul\":29374:29393   */\n      swap1\n      pop\n        /* \"#utility.yul\":29033:29399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29405:29824   */\n    tag_456:\n        /* \"#utility.yul\":29571:29575   */\n      0x00\n        /* \"#utility.yul\":29609:29611   */\n      0x20\n        /* \"#utility.yul\":29598:29607   */\n      dup3\n        /* \"#utility.yul\":29594:29612   */\n      add\n        /* \"#utility.yul\":29586:29612   */\n      swap1\n      pop\n        /* \"#utility.yul\":29658:29667   */\n      dup2\n        /* \"#utility.yul\":29652:29656   */\n      dup2\n        /* \"#utility.yul\":29648:29668   */\n      sub\n        /* \"#utility.yul\":29644:29645   */\n      0x00\n        /* \"#utility.yul\":29633:29642   */\n      dup4\n        /* \"#utility.yul\":29629:29646   */\n      add\n        /* \"#utility.yul\":29622:29669   */\n      mstore\n        /* \"#utility.yul\":29686:29817   */\n      tag_892\n        /* \"#utility.yul\":29812:29816   */\n      dup2\n        /* \"#utility.yul\":29686:29817   */\n      tag_600\n      jump\t// in\n    tag_892:\n        /* \"#utility.yul\":29678:29817   */\n      swap1\n      pop\n        /* \"#utility.yul\":29405:29824   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29830:30010   */\n    tag_601:\n        /* \"#utility.yul\":29878:29955   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29875:29876   */\n      0x00\n        /* \"#utility.yul\":29868:29956   */\n      mstore\n        /* \"#utility.yul\":29975:29979   */\n      0x11\n        /* \"#utility.yul\":29972:29973   */\n      0x04\n        /* \"#utility.yul\":29965:29980   */\n      mstore\n        /* \"#utility.yul\":29999:30003   */\n      0x24\n        /* \"#utility.yul\":29996:29997   */\n      0x00\n        /* \"#utility.yul\":29989:30004   */\n      revert\n        /* \"#utility.yul\":30016:30207   */\n    tag_473:\n        /* \"#utility.yul\":30056:30059   */\n      0x00\n        /* \"#utility.yul\":30075:30095   */\n      tag_895\n        /* \"#utility.yul\":30093:30094   */\n      dup3\n        /* \"#utility.yul\":30075:30095   */\n      tag_540\n      jump\t// in\n    tag_895:\n        /* \"#utility.yul\":30070:30095   */\n      swap2\n      pop\n        /* \"#utility.yul\":30109:30129   */\n      tag_896\n        /* \"#utility.yul\":30127:30128   */\n      dup4\n        /* \"#utility.yul\":30109:30129   */\n      tag_540\n      jump\t// in\n    tag_896:\n        /* \"#utility.yul\":30104:30129   */\n      swap3\n      pop\n        /* \"#utility.yul\":30152:30153   */\n      dup3\n        /* \"#utility.yul\":30149:30150   */\n      dup3\n        /* \"#utility.yul\":30145:30154   */\n      add\n        /* \"#utility.yul\":30138:30154   */\n      swap1\n      pop\n        /* \"#utility.yul\":30173:30176   */\n      dup1\n        /* \"#utility.yul\":30170:30171   */\n      dup3\n        /* \"#utility.yul\":30167:30177   */\n      gt\n        /* \"#utility.yul\":30164:30200   */\n      iszero\n      tag_897\n      jumpi\n        /* \"#utility.yul\":30180:30198   */\n      tag_898\n      tag_601\n      jump\t// in\n    tag_898:\n        /* \"#utility.yul\":30164:30200   */\n    tag_897:\n        /* \"#utility.yul\":30016:30207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30213:30354   */\n    tag_602:\n        /* \"#utility.yul\":30262:30266   */\n      0x00\n        /* \"#utility.yul\":30285:30288   */\n      dup2\n        /* \"#utility.yul\":30277:30288   */\n      swap1\n      pop\n        /* \"#utility.yul\":30308:30311   */\n      dup2\n        /* \"#utility.yul\":30305:30306   */\n      0x00\n        /* \"#utility.yul\":30298:30312   */\n      mstore\n        /* \"#utility.yul\":30342:30346   */\n      0x20\n        /* \"#utility.yul\":30339:30340   */\n      0x00\n        /* \"#utility.yul\":30329:30347   */\n      keccak256\n        /* \"#utility.yul\":30321:30347   */\n      swap1\n      pop\n        /* \"#utility.yul\":30213:30354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30360:30453   */\n    tag_603:\n        /* \"#utility.yul\":30397:30403   */\n      0x00\n        /* \"#utility.yul\":30444:30446   */\n      0x20\n        /* \"#utility.yul\":30439:30441   */\n      0x1f\n        /* \"#utility.yul\":30432:30437   */\n      dup4\n        /* \"#utility.yul\":30428:30442   */\n      add\n        /* \"#utility.yul\":30424:30447   */\n      div\n        /* \"#utility.yul\":30414:30447   */\n      swap1\n      pop\n        /* \"#utility.yul\":30360:30453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30459:30566   */\n    tag_604:\n        /* \"#utility.yul\":30503:30511   */\n      0x00\n        /* \"#utility.yul\":30553:30558   */\n      dup3\n        /* \"#utility.yul\":30547:30551   */\n      dup3\n        /* \"#utility.yul\":30543:30559   */\n      shl\n        /* \"#utility.yul\":30522:30559   */\n      swap1\n      pop\n        /* \"#utility.yul\":30459:30566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30572:30965   */\n    tag_605:\n        /* \"#utility.yul\":30641:30647   */\n      0x00\n        /* \"#utility.yul\":30691:30692   */\n      0x08\n        /* \"#utility.yul\":30679:30689   */\n      dup4\n        /* \"#utility.yul\":30675:30693   */\n      mul\n        /* \"#utility.yul\":30714:30811   */\n      tag_903\n        /* \"#utility.yul\":30744:30810   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":30733:30742   */\n      dup3\n        /* \"#utility.yul\":30714:30811   */\n      tag_604\n      jump\t// in\n    tag_903:\n        /* \"#utility.yul\":30832:30871   */\n      tag_904\n        /* \"#utility.yul\":30862:30870   */\n      dup7\n        /* \"#utility.yul\":30851:30860   */\n      dup4\n        /* \"#utility.yul\":30832:30871   */\n      tag_604\n      jump\t// in\n    tag_904:\n        /* \"#utility.yul\":30820:30871   */\n      swap6\n      pop\n        /* \"#utility.yul\":30904:30908   */\n      dup1\n        /* \"#utility.yul\":30900:30909   */\n      not\n        /* \"#utility.yul\":30893:30898   */\n      dup5\n        /* \"#utility.yul\":30889:30910   */\n      and\n        /* \"#utility.yul\":30880:30910   */\n      swap4\n      pop\n        /* \"#utility.yul\":30953:30957   */\n      dup1\n        /* \"#utility.yul\":30943:30951   */\n      dup7\n        /* \"#utility.yul\":30939:30958   */\n      and\n        /* \"#utility.yul\":30932:30937   */\n      dup5\n        /* \"#utility.yul\":30929:30959   */\n      or\n        /* \"#utility.yul\":30919:30959   */\n      swap3\n      pop\n        /* \"#utility.yul\":30648:30965   */\n      pop\n      pop\n        /* \"#utility.yul\":30572:30965   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30971:31113   */\n    tag_606:\n        /* \"#utility.yul\":31021:31030   */\n      0x00\n        /* \"#utility.yul\":31054:31107   */\n      tag_906\n        /* \"#utility.yul\":31072:31106   */\n      tag_907\n        /* \"#utility.yul\":31081:31105   */\n      tag_908\n        /* \"#utility.yul\":31099:31104   */\n      dup5\n        /* \"#utility.yul\":31081:31105   */\n      tag_540\n      jump\t// in\n    tag_908:\n        /* \"#utility.yul\":31072:31106   */\n      tag_588\n      jump\t// in\n    tag_907:\n        /* \"#utility.yul\":31054:31107   */\n      tag_540\n      jump\t// in\n    tag_906:\n        /* \"#utility.yul\":31041:31107   */\n      swap1\n      pop\n        /* \"#utility.yul\":30971:31113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31119:31194   */\n    tag_607:\n        /* \"#utility.yul\":31162:31165   */\n      0x00\n        /* \"#utility.yul\":31183:31188   */\n      dup2\n        /* \"#utility.yul\":31176:31188   */\n      swap1\n      pop\n        /* \"#utility.yul\":31119:31194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31200:31469   */\n    tag_608:\n        /* \"#utility.yul\":31310:31349   */\n      tag_911\n        /* \"#utility.yul\":31341:31348   */\n      dup4\n        /* \"#utility.yul\":31310:31349   */\n      tag_606\n      jump\t// in\n    tag_911:\n        /* \"#utility.yul\":31371:31462   */\n      tag_912\n        /* \"#utility.yul\":31420:31461   */\n      tag_913\n        /* \"#utility.yul\":31444:31460   */\n      dup3\n        /* \"#utility.yul\":31420:31461   */\n      tag_607\n      jump\t// in\n    tag_913:\n        /* \"#utility.yul\":31412:31418   */\n      dup5\n        /* \"#utility.yul\":31405:31409   */\n      dup5\n        /* \"#utility.yul\":31399:31410   */\n      sload\n        /* \"#utility.yul\":31371:31462   */\n      tag_605\n      jump\t// in\n    tag_912:\n        /* \"#utility.yul\":31365:31369   */\n      dup3\n        /* \"#utility.yul\":31358:31463   */\n      sstore\n        /* \"#utility.yul\":31276:31469   */\n      pop\n        /* \"#utility.yul\":31200:31469   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31475:31548   */\n    tag_609:\n        /* \"#utility.yul\":31520:31523   */\n      0x00\n        /* \"#utility.yul\":31475:31548   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":31554:31743   */\n    tag_610:\n        /* \"#utility.yul\":31631:31663   */\n      tag_916\n      tag_609\n      jump\t// in\n    tag_916:\n        /* \"#utility.yul\":31672:31737   */\n      tag_917\n        /* \"#utility.yul\":31730:31736   */\n      dup2\n        /* \"#utility.yul\":31722:31728   */\n      dup5\n        /* \"#utility.yul\":31716:31720   */\n      dup5\n        /* \"#utility.yul\":31672:31737   */\n      tag_608\n      jump\t// in\n    tag_917:\n        /* \"#utility.yul\":31607:31743   */\n      pop\n        /* \"#utility.yul\":31554:31743   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31749:31935   */\n    tag_611:\n        /* \"#utility.yul\":31809:31929   */\n    tag_919:\n        /* \"#utility.yul\":31826:31829   */\n      dup2\n        /* \"#utility.yul\":31819:31824   */\n      dup2\n        /* \"#utility.yul\":31816:31830   */\n      lt\n        /* \"#utility.yul\":31809:31929   */\n      iszero\n      tag_921\n      jumpi\n        /* \"#utility.yul\":31880:31919   */\n      tag_922\n        /* \"#utility.yul\":31917:31918   */\n      0x00\n        /* \"#utility.yul\":31910:31915   */\n      dup3\n        /* \"#utility.yul\":31880:31919   */\n      tag_610\n      jump\t// in\n    tag_922:\n        /* \"#utility.yul\":31853:31854   */\n      0x01\n        /* \"#utility.yul\":31846:31851   */\n      dup2\n        /* \"#utility.yul\":31842:31855   */\n      add\n        /* \"#utility.yul\":31833:31855   */\n      swap1\n      pop\n        /* \"#utility.yul\":31809:31929   */\n      jump(tag_919)\n    tag_921:\n        /* \"#utility.yul\":31749:31935   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31941:32484   */\n    tag_612:\n        /* \"#utility.yul\":32042:32044   */\n      0x1f\n        /* \"#utility.yul\":32037:32040   */\n      dup3\n        /* \"#utility.yul\":32034:32045   */\n      gt\n        /* \"#utility.yul\":32031:32477   */\n      iszero\n      tag_924\n      jumpi\n        /* \"#utility.yul\":32076:32114   */\n      tag_925\n        /* \"#utility.yul\":32108:32113   */\n      dup2\n        /* \"#utility.yul\":32076:32114   */\n      tag_602\n      jump\t// in\n    tag_925:\n        /* \"#utility.yul\":32160:32189   */\n      tag_926\n        /* \"#utility.yul\":32178:32188   */\n      dup5\n        /* \"#utility.yul\":32160:32189   */\n      tag_603\n      jump\t// in\n    tag_926:\n        /* \"#utility.yul\":32150:32158   */\n      dup2\n        /* \"#utility.yul\":32146:32190   */\n      add\n        /* \"#utility.yul\":32343:32345   */\n      0x20\n        /* \"#utility.yul\":32331:32341   */\n      dup6\n        /* \"#utility.yul\":32328:32346   */\n      lt\n        /* \"#utility.yul\":32325:32374   */\n      iszero\n      tag_927\n      jumpi\n        /* \"#utility.yul\":32364:32372   */\n      dup2\n        /* \"#utility.yul\":32349:32372   */\n      swap1\n      pop\n        /* \"#utility.yul\":32325:32374   */\n    tag_927:\n        /* \"#utility.yul\":32387:32467   */\n      tag_928\n        /* \"#utility.yul\":32443:32465   */\n      tag_929\n        /* \"#utility.yul\":32461:32464   */\n      dup6\n        /* \"#utility.yul\":32443:32465   */\n      tag_603\n      jump\t// in\n    tag_929:\n        /* \"#utility.yul\":32433:32441   */\n      dup4\n        /* \"#utility.yul\":32429:32466   */\n      add\n        /* \"#utility.yul\":32416:32427   */\n      dup3\n        /* \"#utility.yul\":32387:32467   */\n      tag_611\n      jump\t// in\n    tag_928:\n        /* \"#utility.yul\":32046:32477   */\n      pop\n      pop\n        /* \"#utility.yul\":32031:32477   */\n    tag_924:\n        /* \"#utility.yul\":31941:32484   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32490:32607   */\n    tag_613:\n        /* \"#utility.yul\":32544:32552   */\n      0x00\n        /* \"#utility.yul\":32594:32599   */\n      dup3\n        /* \"#utility.yul\":32588:32592   */\n      dup3\n        /* \"#utility.yul\":32584:32600   */\n      shr\n        /* \"#utility.yul\":32563:32600   */\n      swap1\n      pop\n        /* \"#utility.yul\":32490:32607   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32613:32782   */\n    tag_614:\n        /* \"#utility.yul\":32657:32663   */\n      0x00\n        /* \"#utility.yul\":32690:32741   */\n      tag_932\n        /* \"#utility.yul\":32738:32739   */\n      0x00\n        /* \"#utility.yul\":32734:32740   */\n      not\n        /* \"#utility.yul\":32726:32731   */\n      dup5\n        /* \"#utility.yul\":32723:32724   */\n      0x08\n        /* \"#utility.yul\":32719:32732   */\n      mul\n        /* \"#utility.yul\":32690:32741   */\n      tag_613\n      jump\t// in\n    tag_932:\n        /* \"#utility.yul\":32686:32742   */\n      not\n        /* \"#utility.yul\":32771:32775   */\n      dup1\n        /* \"#utility.yul\":32765:32769   */\n      dup4\n        /* \"#utility.yul\":32761:32776   */\n      and\n        /* \"#utility.yul\":32751:32776   */\n      swap2\n      pop\n        /* \"#utility.yul\":32664:32782   */\n      pop\n        /* \"#utility.yul\":32613:32782   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32787:33082   */\n    tag_615:\n        /* \"#utility.yul\":32863:32867   */\n      0x00\n        /* \"#utility.yul\":33009:33038   */\n      tag_934\n        /* \"#utility.yul\":33034:33037   */\n      dup4\n        /* \"#utility.yul\":33028:33032   */\n      dup4\n        /* \"#utility.yul\":33009:33038   */\n      tag_614\n      jump\t// in\n    tag_934:\n        /* \"#utility.yul\":33001:33038   */\n      swap2\n      pop\n        /* \"#utility.yul\":33071:33074   */\n      dup3\n        /* \"#utility.yul\":33068:33069   */\n      0x02\n        /* \"#utility.yul\":33064:33075   */\n      mul\n        /* \"#utility.yul\":33058:33062   */\n      dup3\n        /* \"#utility.yul\":33055:33076   */\n      or\n        /* \"#utility.yul\":33047:33076   */\n      swap1\n      pop\n        /* \"#utility.yul\":32787:33082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33087:34482   */\n    tag_489:\n        /* \"#utility.yul\":33204:33241   */\n      tag_936\n        /* \"#utility.yul\":33237:33240   */\n      dup3\n        /* \"#utility.yul\":33204:33241   */\n      tag_528\n      jump\t// in\n    tag_936:\n        /* \"#utility.yul\":33306:33324   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":33298:33304   */\n      dup2\n        /* \"#utility.yul\":33295:33325   */\n      gt\n        /* \"#utility.yul\":33292:33348   */\n      iszero\n      tag_937\n      jumpi\n        /* \"#utility.yul\":33328:33346   */\n      tag_938\n      tag_552\n      jump\t// in\n    tag_938:\n        /* \"#utility.yul\":33292:33348   */\n    tag_937:\n        /* \"#utility.yul\":33372:33410   */\n      tag_939\n        /* \"#utility.yul\":33404:33408   */\n      dup3\n        /* \"#utility.yul\":33398:33409   */\n      sload\n        /* \"#utility.yul\":33372:33410   */\n      tag_166\n      jump\t// in\n    tag_939:\n        /* \"#utility.yul\":33457:33524   */\n      tag_940\n        /* \"#utility.yul\":33517:33523   */\n      dup3\n        /* \"#utility.yul\":33509:33515   */\n      dup3\n        /* \"#utility.yul\":33503:33507   */\n      dup6\n        /* \"#utility.yul\":33457:33524   */\n      tag_612\n      jump\t// in\n    tag_940:\n        /* \"#utility.yul\":33551:33552   */\n      0x00\n        /* \"#utility.yul\":33575:33579   */\n      0x20\n        /* \"#utility.yul\":33562:33579   */\n      swap1\n      pop\n        /* \"#utility.yul\":33607:33609   */\n      0x1f\n        /* \"#utility.yul\":33599:33605   */\n      dup4\n        /* \"#utility.yul\":33596:33610   */\n      gt\n        /* \"#utility.yul\":33624:33625   */\n      0x01\n        /* \"#utility.yul\":33619:34237   */\n      dup2\n      eq\n      tag_942\n      jumpi\n        /* \"#utility.yul\":34281:34282   */\n      0x00\n        /* \"#utility.yul\":34298:34304   */\n      dup5\n        /* \"#utility.yul\":34295:34372   */\n      iszero\n      tag_943\n      jumpi\n        /* \"#utility.yul\":34347:34356   */\n      dup3\n        /* \"#utility.yul\":34342:34345   */\n      dup8\n        /* \"#utility.yul\":34338:34357   */\n      add\n        /* \"#utility.yul\":34332:34358   */\n      mload\n        /* \"#utility.yul\":34323:34358   */\n      swap1\n      pop\n        /* \"#utility.yul\":34295:34372   */\n    tag_943:\n        /* \"#utility.yul\":34398:34465   */\n      tag_944\n        /* \"#utility.yul\":34458:34464   */\n      dup6\n        /* \"#utility.yul\":34451:34456   */\n      dup3\n        /* \"#utility.yul\":34398:34465   */\n      tag_615\n      jump\t// in\n    tag_944:\n        /* \"#utility.yul\":34392:34396   */\n      dup7\n        /* \"#utility.yul\":34385:34466   */\n      sstore\n        /* \"#utility.yul\":34254:34476   */\n      pop\n        /* \"#utility.yul\":33589:34476   */\n      jump(tag_941)\n        /* \"#utility.yul\":33619:34237   */\n    tag_942:\n        /* \"#utility.yul\":33671:33675   */\n      0x1f\n        /* \"#utility.yul\":33667:33676   */\n      not\n        /* \"#utility.yul\":33659:33665   */\n      dup5\n        /* \"#utility.yul\":33655:33677   */\n      and\n        /* \"#utility.yul\":33705:33742   */\n      tag_945\n        /* \"#utility.yul\":33737:33741   */\n      dup7\n        /* \"#utility.yul\":33705:33742   */\n      tag_602\n      jump\t// in\n    tag_945:\n        /* \"#utility.yul\":33764:33765   */\n      0x00\n        /* \"#utility.yul\":33778:33986   */\n    tag_946:\n        /* \"#utility.yul\":33792:33799   */\n      dup3\n        /* \"#utility.yul\":33789:33790   */\n      dup2\n        /* \"#utility.yul\":33786:33800   */\n      lt\n        /* \"#utility.yul\":33778:33986   */\n      iszero\n      tag_948\n      jumpi\n        /* \"#utility.yul\":33871:33880   */\n      dup5\n        /* \"#utility.yul\":33866:33869   */\n      dup10\n        /* \"#utility.yul\":33862:33881   */\n      add\n        /* \"#utility.yul\":33856:33882   */\n      mload\n        /* \"#utility.yul\":33848:33854   */\n      dup3\n        /* \"#utility.yul\":33841:33883   */\n      sstore\n        /* \"#utility.yul\":33922:33923   */\n      0x01\n        /* \"#utility.yul\":33914:33920   */\n      dup3\n        /* \"#utility.yul\":33910:33924   */\n      add\n        /* \"#utility.yul\":33900:33924   */\n      swap2\n      pop\n        /* \"#utility.yul\":33969:33971   */\n      0x20\n        /* \"#utility.yul\":33958:33967   */\n      dup6\n        /* \"#utility.yul\":33954:33972   */\n      add\n        /* \"#utility.yul\":33941:33972   */\n      swap5\n      pop\n        /* \"#utility.yul\":33815:33819   */\n      0x20\n        /* \"#utility.yul\":33812:33813   */\n      dup2\n        /* \"#utility.yul\":33808:33820   */\n      add\n        /* \"#utility.yul\":33803:33820   */\n      swap1\n      pop\n        /* \"#utility.yul\":33778:33986   */\n      jump(tag_946)\n    tag_948:\n        /* \"#utility.yul\":34014:34020   */\n      dup7\n        /* \"#utility.yul\":34005:34012   */\n      dup4\n        /* \"#utility.yul\":34002:34021   */\n      lt\n        /* \"#utility.yul\":33999:34178   */\n      iszero\n      tag_949\n      jumpi\n        /* \"#utility.yul\":34072:34081   */\n      dup5\n        /* \"#utility.yul\":34067:34070   */\n      dup10\n        /* \"#utility.yul\":34063:34082   */\n      add\n        /* \"#utility.yul\":34057:34083   */\n      mload\n        /* \"#utility.yul\":34115:34163   */\n      tag_950\n        /* \"#utility.yul\":34157:34161   */\n      0x1f\n        /* \"#utility.yul\":34149:34155   */\n      dup10\n        /* \"#utility.yul\":34145:34162   */\n      and\n        /* \"#utility.yul\":34134:34143   */\n      dup3\n        /* \"#utility.yul\":34115:34163   */\n      tag_614\n      jump\t// in\n    tag_950:\n        /* \"#utility.yul\":34107:34113   */\n      dup4\n        /* \"#utility.yul\":34100:34164   */\n      sstore\n        /* \"#utility.yul\":34022:34178   */\n      pop\n        /* \"#utility.yul\":33999:34178   */\n    tag_949:\n        /* \"#utility.yul\":34224:34225   */\n      0x01\n        /* \"#utility.yul\":34220:34221   */\n      0x02\n        /* \"#utility.yul\":34212:34218   */\n      dup9\n        /* \"#utility.yul\":34208:34222   */\n      mul\n        /* \"#utility.yul\":34204:34226   */\n      add\n        /* \"#utility.yul\":34198:34202   */\n      dup9\n        /* \"#utility.yul\":34191:34227   */\n      sstore\n        /* \"#utility.yul\":33626:34237   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":33589:34476   */\n    tag_941:\n      pop\n        /* \"#utility.yul\":33179:34482   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":33087:34482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34488:34586   */\n    tag_616:\n        /* \"#utility.yul\":34539:34545   */\n      0x00\n        /* \"#utility.yul\":34573:34578   */\n      dup2\n        /* \"#utility.yul\":34567:34579   */\n      mload\n        /* \"#utility.yul\":34557:34579   */\n      swap1\n      pop\n        /* \"#utility.yul\":34488:34586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34592:34739   */\n    tag_617:\n        /* \"#utility.yul\":34693:34704   */\n      0x00\n        /* \"#utility.yul\":34730:34733   */\n      dup2\n        /* \"#utility.yul\":34715:34733   */\n      swap1\n      pop\n        /* \"#utility.yul\":34592:34739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34745:35131   */\n    tag_618:\n        /* \"#utility.yul\":34849:34852   */\n      0x00\n        /* \"#utility.yul\":34877:34915   */\n      tag_954\n        /* \"#utility.yul\":34909:34914   */\n      dup3\n        /* \"#utility.yul\":34877:34915   */\n      tag_616\n      jump\t// in\n    tag_954:\n        /* \"#utility.yul\":34931:35019   */\n      tag_955\n        /* \"#utility.yul\":35012:35018   */\n      dup2\n        /* \"#utility.yul\":35007:35010   */\n      dup6\n        /* \"#utility.yul\":34931:35019   */\n      tag_617\n      jump\t// in\n    tag_955:\n        /* \"#utility.yul\":34924:35019   */\n      swap4\n      pop\n        /* \"#utility.yul\":35028:35093   */\n      tag_956\n        /* \"#utility.yul\":35086:35092   */\n      dup2\n        /* \"#utility.yul\":35081:35084   */\n      dup6\n        /* \"#utility.yul\":35074:35078   */\n      0x20\n        /* \"#utility.yul\":35067:35072   */\n      dup7\n        /* \"#utility.yul\":35063:35079   */\n      add\n        /* \"#utility.yul\":35028:35093   */\n      tag_530\n      jump\t// in\n    tag_956:\n        /* \"#utility.yul\":35118:35124   */\n      dup1\n        /* \"#utility.yul\":35113:35116   */\n      dup5\n        /* \"#utility.yul\":35109:35125   */\n      add\n        /* \"#utility.yul\":35102:35125   */\n      swap2\n      pop\n        /* \"#utility.yul\":34853:35131   */\n      pop\n        /* \"#utility.yul\":34745:35131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35137:35408   */\n    tag_507:\n        /* \"#utility.yul\":35267:35270   */\n      0x00\n        /* \"#utility.yul\":35289:35382   */\n      tag_958\n        /* \"#utility.yul\":35378:35381   */\n      dup3\n        /* \"#utility.yul\":35369:35375   */\n      dup5\n        /* \"#utility.yul\":35289:35382   */\n      tag_618\n      jump\t// in\n    tag_958:\n        /* \"#utility.yul\":35282:35382   */\n      swap2\n      pop\n        /* \"#utility.yul\":35399:35402   */\n      dup2\n        /* \"#utility.yul\":35392:35402   */\n      swap1\n      pop\n        /* \"#utility.yul\":35137:35408   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208e7937636e50c16c1e1072c313a080d5418685b960b5c0ee5e198bd06fcadb7b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2798": {
									"entryPoint": null,
									"id": 2798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_416": {
									"entryPoint": 86,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 340,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:456:18",
										"nodeType": "YulBlock",
										"src": "0:456:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:57:18",
													"nodeType": "YulBlock",
													"src": "51:57:18",
													"statements": [
														{
															"nativeSrc": "61:41:18",
															"nodeType": "YulAssignment",
															"src": "61:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:18:18",
																		"nodeType": "YulLiteral",
																		"src": "83:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:18"
																},
																"nativeSrc": "72:30:18",
																"nodeType": "YulFunctionCall",
																"src": "72:30:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7:101:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:18",
														"nodeType": "YulTypedName",
														"src": "33:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:18",
														"nodeType": "YulTypedName",
														"src": "43:7:18",
														"type": ""
													}
												],
												"src": "7:101:18"
											},
											{
												"body": {
													"nativeSrc": "177:52:18",
													"nodeType": "YulBlock",
													"src": "177:52:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "194:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "216:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "199:16:18",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:18"
																		},
																		"nativeSrc": "199:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:36:18",
																"nodeType": "YulFunctionCall",
																"src": "187:36:18"
															},
															"nativeSrc": "187:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:36:18"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "114:115:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "165:5:18",
														"nodeType": "YulTypedName",
														"src": "165:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "172:3:18",
														"nodeType": "YulTypedName",
														"src": "172:3:18",
														"type": ""
													}
												],
												"src": "114:115:18"
											},
											{
												"body": {
													"nativeSrc": "331:122:18",
													"nodeType": "YulBlock",
													"src": "331:122:18",
													"statements": [
														{
															"nativeSrc": "341:26:18",
															"nodeType": "YulAssignment",
															"src": "341:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:18",
																		"nodeType": "YulLiteral",
																		"src": "364:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "349:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:18"
																},
																"nativeSrc": "349:18:18",
																"nodeType": "YulFunctionCall",
																"src": "349:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "341:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "419:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "432:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "443:1:18",
																				"nodeType": "YulLiteral",
																				"src": "443:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "428:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:18"
																		},
																		"nativeSrc": "428:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "377:41:18",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:18"
																},
																"nativeSrc": "377:69:18",
																"nodeType": "YulFunctionCall",
																"src": "377:69:18"
															},
															"nativeSrc": "377:69:18",
															"nodeType": "YulExpressionStatement",
															"src": "377:69:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "235:218:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "303:9:18",
														"nodeType": "YulTypedName",
														"src": "303:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "315:6:18",
														"nodeType": "YulTypedName",
														"src": "315:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "326:4:18",
														"nodeType": "YulTypedName",
														"src": "326:4:18",
														"type": ""
													}
												],
												"src": "235:218:18"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015610042575f80fd5b5061005161005660201b60201c565b6101b6565b5f61006561015460201b60201c565b9050805f0160089054906101000a900460ff16156100af576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8016815f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101515767ffffffffffffffff815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051610148919061019d565b60405180910390a15b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f67ffffffffffffffff82169050919050565b6101978161017b565b82525050565b5f6020820190506101b05f83018461018e565b92915050565b608051613a9d6101dc5f395f8181611924015281816119790152611b3b0152613a9d5ff3fe60806040526004361061019b575f3560e01c80638456cb59116100eb578063ad3cb1cc11610089578063dbac26e911610063578063dbac26e91461057f578063dd62ed3e146105bb578063f2fde38b146105f7578063f326f0d71461061f5761019b565b8063ad3cb1cc14610503578063b119490e1461052d578063c66e4095146105555761019b565b806395d89b41116100c557806395d89b41146104255780639bc289f11461044f578063a153e7081461048b578063a9059cbb146104c75761019b565b80638456cb59146103bd57806388d695b2146103d35780638da5cb5b146103fb5761019b565b8063313ce5671161015857806352d1902d1161013257806352d1902d146103175780635c975abb1461034157806370a082311461036b578063715018a6146103a75761019b565b8063313ce567146102bb5780633f4ba83a146102e55780634f1ef286146102fb5761019b565b806306fdde031461019f578063095ea7b3146101c9578063153b0d1e1461020557806318160ddd1461022d57806323b872dd146102575780632e0d2a0014610293575b5f80fd5b3480156101aa575f80fd5b506101b3610647565b6040516101c091906128d2565b60405180910390f35b3480156101d4575f80fd5b506101ef60048036038101906101ea9190612990565b6106e5565b6040516101fc91906129e8565b60405180910390f35b348015610210575f80fd5b5061022b60048036038101906102269190612a2b565b610707565b005b348015610238575f80fd5b50610241610823565b60405161024e9190612a78565b60405180910390f35b348015610262575f80fd5b5061027d60048036038101906102789190612a91565b61083a565b60405161028a91906129e8565b60405180910390f35b34801561029e575f80fd5b506102b960048036038101906102b49190612ae1565b610a74565b005b3480156102c6575f80fd5b506102cf610bd6565b6040516102dc9190612b27565b60405180910390f35b3480156102f0575f80fd5b506102f9610bde565b005b61031560048036038101906103109190612c6c565b610bf0565b005b348015610322575f80fd5b5061032b610c0f565b6040516103389190612cde565b60405180910390f35b34801561034c575f80fd5b50610355610c40565b60405161036291906129e8565b60405180910390f35b348015610376575f80fd5b50610391600480360381019061038c9190612ae1565b610c54565b60405161039e9190612a78565b60405180910390f35b3480156103b2575f80fd5b506103bb610ca7565b005b3480156103c8575f80fd5b506103d1610cba565b005b3480156103de575f80fd5b506103f960048036038101906103f49190612da9565b610ccc565b005b348015610406575f80fd5b5061040f610e3e565b60405161041c9190612e36565b60405180910390f35b348015610430575f80fd5b50610439610e73565b60405161044691906128d2565b60405180910390f35b34801561045a575f80fd5b5061047560048036038101906104709190612ae1565b610f11565b6040516104829190612a78565b60405180910390f35b348015610496575f80fd5b506104b160048036038101906104ac9190612ae1565b610f26565b6040516104be9190612a78565b60405180910390f35b3480156104d2575f80fd5b506104ed60048036038101906104e89190612990565b610f3b565b6040516104fa91906129e8565b60405180910390f35b34801561050e575f80fd5b50610517611173565b60405161052491906128d2565b60405180910390f35b348015610538575f80fd5b50610553600480360381019061054e9190612eed565b6111ac565b005b348015610560575f80fd5b5061056961135c565b6040516105769190612e36565b60405180910390f35b34801561058a575f80fd5b506105a560048036038101906105a09190612ae1565b611381565b6040516105b291906129e8565b60405180910390f35b3480156105c6575f80fd5b506105e160048036038101906105dc9190612f75565b61139e565b6040516105ee9190612a78565b60405180910390f35b348015610602575f80fd5b5061061d60048036038101906106189190612ae1565b61142e565b005b34801561062a575f80fd5b5061064560048036038101906106409190612fb3565b6114b2565b005b60605f610652611761565b905080600301805461066390613030565b80601f016020809104026020016040519081016040528092919081815260200182805461068f90613030565b80156106da5780601f106106b1576101008083540402835291602001916106da565b820191905f5260205f20905b8154815290600101906020018083116106bd57829003601f168201915b505050505091505090565b5f806106ef611788565b90506106fc81858561178f565b600191505092915050565b61070f6117a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361077d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610774906130aa565b60405180910390fd5b8060345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd88260405161081791906129e8565b60405180910390a25050565b5f8061082d611761565b9050806002015491505090565b5f610843611828565b60345f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156108cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c490613138565b60405180910390fd5b60345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094e906131c6565b60405180910390fd5b5f8211610999576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109909061322e565b60405180910390fd5b60355f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442101580610a2157505f60355f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a57906132bc565b60405180910390fd5b610a6b848484611872565b90509392505050565b610a7c611828565b610a846117a1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae9906130aa565b60405180910390fd5b610b118173ffffffffffffffffffffffffffffffffffffffff166118a0565b610b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4790613324565b60405180910390fd5b8060325f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad860405160405180910390a250565b5f6012905090565b610be66117a1565b610bee6118c2565b565b610bf8611922565b610c0182611a08565b610c0b8282611a1b565b5050565b5f610c18611b39565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f805f9054906101000a900460ff16905090565b5f80610c5e611761565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610caf6117a1565b610cb85f611bc0565b565b610cc26117a1565b610cca611c91565b565b610cd4611828565b818190508484905014610d1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d13906133b2565b60405180910390fd5b5f8484905090505f5b81811015610e365760345f878784818110610d4357610d426133d0565b5b9050602002016020810190610d589190612ae1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd59061346d565b60405180910390fd5b610e2933878784818110610df557610df46133d0565b5b9050602002016020810190610e0a9190612ae1565b868685818110610e1d57610e1c6133d0565b5b90506020020135611cf2565b8080600101915050610d25565b505050505050565b5f80610e48611de2565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610e7e611761565b9050806004018054610e8f90613030565b80601f0160208091040260200160405190810160405280929190818152602001828054610ebb90613030565b8015610f065780601f10610edd57610100808354040283529160200191610f06565b820191905f5260205f20905b815481529060010190602001808311610ee957829003601f168201915b505050505091505090565b6035602052805f5260405f205f915090505481565b6036602052805f5260405f205f915090505481565b5f610f44611828565b60345f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610fce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc590613138565b60405180910390fd5b60345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f906131c6565b60405180910390fd5b5f821161109a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110919061322e565b60405180910390fd5b60355f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544210158061112257505f60355f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b611161576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611158906132bc565b60405180910390fd5b61116b8383611e09565b905092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f6111b5611e2b565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156111fd5750825b90505f60018367ffffffffffffffff1614801561123057505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561123e575080155b15611275576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156112c2576001855f0160086101000a81548160ff0219169083151502179055505b6112cc8888611e52565b6112d533611e68565b6112dd611e7c565b6112e5611e8e565b856033819055506112f833603354611e98565b8315611352575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161134991906134e0565b60405180910390a15b5050505050505050565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6034602052805f5260405f205f915054906101000a900460ff1681565b5f806113a8611761565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6114366117a1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114a6575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161149d9190612e36565b60405180910390fd5b6114af81611bc0565b50565b6114ba611828565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154090613543565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ae906130aa565b60405180910390fd5b5f81116115f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f0906135ab565b60405180910390fd5b8160355f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414158061168257508060365f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414155b1561175c578160355f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060365f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff167f86f2e10d5622d896b3f56e66c1a60639ca21a4674480f054bec2cb9ba62f40cb83836040516117539291906135c9565b60405180910390a25b505050565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b61179c8383836001611f17565b505050565b6117a9611788565b73ffffffffffffffffffffffffffffffffffffffff166117c7610e3e565b73ffffffffffffffffffffffffffffffffffffffff1614611826576117ea611788565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161181d9190612e36565b60405180910390fd5b565b611830610c40565b15611870576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118679061363a565b60405180910390fd5b565b5f8061187c611788565b90506118898582856120f4565b611894858585611cf2565b60019150509392505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6118ca612186565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61190b611788565b6040516119189190612e36565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806119cf57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166119b66121cf565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611a06576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611a10611828565b611a186117a1565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611a8357506040513d601f19601f82011682018060405250810190611a809190613682565b60015b611ac457816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611abb9190612e36565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114611b2a57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611b219190612cde565b60405180910390fd5b611b348383612222565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611bbe576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f611bc9611de2565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b611c99611828565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611cdb611788565b604051611ce89190612e36565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d62575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611d599190612e36565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611dd2575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611dc99190612e36565b60405180910390fd5b611ddd838383612294565b505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f80611e13611788565b9050611e20818585611cf2565b600191505092915050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611e5a6124c3565b611e648282612503565b5050565b611e706124c3565b611e798161253f565b50565b611e846124c3565b611e8c6125c3565b565b611e966124c3565b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f08575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611eff9190612e36565b60405180910390fd5b611f135f8383612294565b5050565b5f611f20611761565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611f92575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611f899190612e36565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612002575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611ff99190612e36565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555081156120ed578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516120e49190612a78565b60405180910390a35b5050505050565b5f6120ff848461139e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146121805781811015612171578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401612168939291906136ad565b60405180910390fd5b61217f84848484035f611f17565b5b50505050565b61218e610c40565b6121cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c49061372c565b60405180910390fd5b565b5f6121fb7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6125e5565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61222b826125ee565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156122875761228182826126b7565b50612290565b61228f612737565b5b5050565b5f61229d611761565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036122f15781816002015f8282546122e59190613777565b925050819055506123c3565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508281101561237c578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401612373939291906136ad565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361240c5781816002015f8282540392505081905550612458565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124b59190612a78565b60405180910390a350505050565b6124cb612773565b612501576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61250b6124c3565b5f612514611761565b905082816003019081612527919061393e565b5081816004019081612539919061393e565b50505050565b6125476124c3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125b7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016125ae9190612e36565b60405180910390fd5b6125c081611bc0565b50565b6125cb6124c3565b5f805f6101000a81548160ff021916908315150217905550565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361264957806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016126409190612e36565b60405180910390fd5b806126757f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6125e5565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516126e09190613a51565b5f60405180830381855af49150503d805f8114612718576040519150601f19603f3d011682016040523d82523d5f602084013e61271d565b606091505b509150915061272d858383612791565b9250505092915050565b5f341115612771576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61277c611e2b565b5f0160089054906101000a900460ff16905090565b6060826127a6576127a18261281e565b612816565b5f82511480156127cc57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561280e57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016128059190612e36565b60405180910390fd5b819050612817565b5b9392505050565b5f815111156128305780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6128a482612862565b6128ae818561286c565b93506128be81856020860161287c565b6128c78161288a565b840191505092915050565b5f6020820190508181035f8301526128ea818461289a565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61292c82612903565b9050919050565b61293c81612922565b8114612946575f80fd5b50565b5f8135905061295781612933565b92915050565b5f819050919050565b61296f8161295d565b8114612979575f80fd5b50565b5f8135905061298a81612966565b92915050565b5f80604083850312156129a6576129a56128fb565b5b5f6129b385828601612949565b92505060206129c48582860161297c565b9150509250929050565b5f8115159050919050565b6129e2816129ce565b82525050565b5f6020820190506129fb5f8301846129d9565b92915050565b612a0a816129ce565b8114612a14575f80fd5b50565b5f81359050612a2581612a01565b92915050565b5f8060408385031215612a4157612a406128fb565b5b5f612a4e85828601612949565b9250506020612a5f85828601612a17565b9150509250929050565b612a728161295d565b82525050565b5f602082019050612a8b5f830184612a69565b92915050565b5f805f60608486031215612aa857612aa76128fb565b5b5f612ab586828701612949565b9350506020612ac686828701612949565b9250506040612ad78682870161297c565b9150509250925092565b5f60208284031215612af657612af56128fb565b5b5f612b0384828501612949565b91505092915050565b5f60ff82169050919050565b612b2181612b0c565b82525050565b5f602082019050612b3a5f830184612b18565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612b7e8261288a565b810181811067ffffffffffffffff82111715612b9d57612b9c612b48565b5b80604052505050565b5f612baf6128f2565b9050612bbb8282612b75565b919050565b5f67ffffffffffffffff821115612bda57612bd9612b48565b5b612be38261288a565b9050602081019050919050565b828183375f83830152505050565b5f612c10612c0b84612bc0565b612ba6565b905082815260208101848484011115612c2c57612c2b612b44565b5b612c37848285612bf0565b509392505050565b5f82601f830112612c5357612c52612b40565b5b8135612c63848260208601612bfe565b91505092915050565b5f8060408385031215612c8257612c816128fb565b5b5f612c8f85828601612949565b925050602083013567ffffffffffffffff811115612cb057612caf6128ff565b5b612cbc85828601612c3f565b9150509250929050565b5f819050919050565b612cd881612cc6565b82525050565b5f602082019050612cf15f830184612ccf565b92915050565b5f80fd5b5f80fd5b5f8083601f840112612d1457612d13612b40565b5b8235905067ffffffffffffffff811115612d3157612d30612cf7565b5b602083019150836020820283011115612d4d57612d4c612cfb565b5b9250929050565b5f8083601f840112612d6957612d68612b40565b5b8235905067ffffffffffffffff811115612d8657612d85612cf7565b5b602083019150836020820283011115612da257612da1612cfb565b5b9250929050565b5f805f8060408587031215612dc157612dc06128fb565b5b5f85013567ffffffffffffffff811115612dde57612ddd6128ff565b5b612dea87828801612cff565b9450945050602085013567ffffffffffffffff811115612e0d57612e0c6128ff565b5b612e1987828801612d54565b925092505092959194509250565b612e3081612922565b82525050565b5f602082019050612e495f830184612e27565b92915050565b5f67ffffffffffffffff821115612e6957612e68612b48565b5b612e728261288a565b9050602081019050919050565b5f612e91612e8c84612e4f565b612ba6565b905082815260208101848484011115612ead57612eac612b44565b5b612eb8848285612bf0565b509392505050565b5f82601f830112612ed457612ed3612b40565b5b8135612ee4848260208601612e7f565b91505092915050565b5f805f60608486031215612f0457612f036128fb565b5b5f84013567ffffffffffffffff811115612f2157612f206128ff565b5b612f2d86828701612ec0565b935050602084013567ffffffffffffffff811115612f4e57612f4d6128ff565b5b612f5a86828701612ec0565b9250506040612f6b8682870161297c565b9150509250925092565b5f8060408385031215612f8b57612f8a6128fb565b5b5f612f9885828601612949565b9250506020612fa985828601612949565b9150509250929050565b5f805f60608486031215612fca57612fc96128fb565b5b5f612fd786828701612949565b9350506020612fe88682870161297c565b9250506040612ff98682870161297c565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061304757607f821691505b60208210810361305a57613059613003565b5b50919050565b7f4e756c6c204164647265737300000000000000000000000000000000000000005f82015250565b5f613094600c8361286c565b915061309f82613060565b602082019050919050565b5f6020820190508181035f8301526130c181613088565b9050919050565b7f5472616e73666572206661696c65643a2053656e64657220697320626c61636b5f8201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b5f61312260268361286c565b915061312d826130c8565b604082019050919050565b5f6020820190508181035f83015261314f81613116565b9050919050565b7f5472616e73666572206661696c65643a20526563697069656e7420697320626c5f8201527f61636b6c69737465640000000000000000000000000000000000000000000000602082015250565b5f6131b060298361286c565b91506131bb82613156565b604082019050919050565b5f6020820190508181035f8301526131dd816131a4565b9050919050565b7f416d6f756e742073686f756c646e2774206265207a65726f00000000000000005f82015250565b5f61321860188361286c565b9150613223826131e4565b602082019050919050565b5f6020820190508181035f8301526132458161320c565b9050919050565b7f5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b5f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f6132a660228361286c565b91506132b18261324c565b604082019050919050565b5f6020820190508181035f8301526132d38161329a565b9050919050565b7f41646472657373206973206e6f74206120636f6e7472616374000000000000005f82015250565b5f61330e60198361286c565b9150613319826132da565b602082019050919050565b5f6020820190508181035f83015261333b81613302565b9050919050565b7f42617463685472616e73666572206661696c65643a204d69736d6174636865645f8201527f2061727261797300000000000000000000000000000000000000000000000000602082015250565b5f61339c60278361286c565b91506133a782613342565b604082019050919050565b5f6020820190508181035f8301526133c981613390565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f42617463685472616e73666572206661696c65643a20526563697069656e74205f8201527f697320626c61636b6c6973746564000000000000000000000000000000000000602082015250565b5f613457602e8361286c565b9150613462826133fd565b604082019050919050565b5f6020820190508181035f8301526134848161344b565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f6134ca6134c56134c08461348b565b6134a7565b613494565b9050919050565b6134da816134b0565b82525050565b5f6020820190506134f35f8301846134d1565b92915050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f61352d600e8361286c565b9150613538826134f9565b602082019050919050565b5f6020820190508181035f83015261355a81613521565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61359560208361286c565b91506135a082613561565b602082019050919050565b5f6020820190508181035f8301526135c281613589565b9050919050565b5f6040820190506135dc5f830185612a69565b6135e96020830184612a69565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f61362460108361286c565b915061362f826135f0565b602082019050919050565b5f6020820190508181035f83015261365181613618565b9050919050565b61366181612cc6565b811461366b575f80fd5b50565b5f8151905061367c81613658565b92915050565b5f60208284031215613697576136966128fb565b5b5f6136a48482850161366e565b91505092915050565b5f6060820190506136c05f830186612e27565b6136cd6020830185612a69565b6136da6040830184612a69565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f61371660148361286c565b9150613721826136e2565b602082019050919050565b5f6020820190508181035f8301526137438161370a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6137818261295d565b915061378c8361295d565b92508282019050808211156137a4576137a361374a565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026138067fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826137cb565b61381086836137cb565b95508019841693508086168417925050509392505050565b5f61384261383d6138388461295d565b6134a7565b61295d565b9050919050565b5f819050919050565b61385b83613828565b61386f61386782613849565b8484546137d7565b825550505050565b5f90565b613883613877565b61388e818484613852565b505050565b5b818110156138b1576138a65f8261387b565b600181019050613894565b5050565b601f8211156138f6576138c7816137aa565b6138d0846137bc565b810160208510156138df578190505b6138f36138eb856137bc565b830182613893565b50505b505050565b5f82821c905092915050565b5f6139165f19846008026138fb565b1980831691505092915050565b5f61392e8383613907565b9150826002028217905092915050565b61394782612862565b67ffffffffffffffff8111156139605761395f612b48565b5b61396a8254613030565b6139758282856138b5565b5f60209050601f8311600181146139a6575f8415613994578287015190505b61399e8582613923565b865550613a05565b601f1984166139b4866137aa565b5f5b828110156139db578489015182556001820191506020850194506020810190506139b6565b868310156139f857848901516139f4601f891682613907565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f613a2b82613a0d565b613a358185613a17565b9350613a4581856020860161287c565b80840191505092915050565b5f613a5c8284613a21565b91508190509291505056fea26469706673582212208e7937636e50c16c1e1072c313a080d5418685b960b5c0ee5e198bd06fcadb7b64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x51 PUSH2 0x56 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST PUSH0 PUSH2 0x65 PUSH2 0x154 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAF JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x151 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0x17B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3A9D PUSH2 0x1DC PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1924 ADD MSTORE DUP2 DUP2 PUSH2 0x1979 ADD MSTORE PUSH2 0x1B3B ADD MSTORE PUSH2 0x3A9D PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDBAC26E9 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xF326F0D7 EQ PUSH2 0x61F JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xB119490E EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x555 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xA153E708 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C7 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3FB JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3A7 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2FB JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x293 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x2A2B JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x2B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0xBDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0xCA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D1 PUSH2 0xCBA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST PUSH2 0xCCC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40F PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x439 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x517 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x2EED JUMP JUMPDEST PUSH2 0x11AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x569 PUSH2 0x135C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH2 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0x142E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x645 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x2FB3 JUMP JUMPDEST PUSH2 0x14B2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x652 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x663 SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x68F SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6EF PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP PUSH2 0x6FC DUP2 DUP6 DUP6 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x70F PUSH2 0x17A1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x774 SWAP1 PUSH2 0x30AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x82D PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x843 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x34 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP1 PUSH2 0x3138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94E SWAP1 PUSH2 0x31C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x990 SWAP1 PUSH2 0x322E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0xA21 JUMPI POP PUSH0 PUSH1 0x35 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP1 PUSH2 0x32BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6B DUP5 DUP5 DUP5 PUSH2 0x1872 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA7C PUSH2 0x1828 JUMP JUMPDEST PUSH2 0xA84 PUSH2 0x17A1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE9 SWAP1 PUSH2 0x30AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB11 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18A0 JUMP JUMPDEST PUSH2 0xB50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB47 SWAP1 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBE6 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xBEE PUSH2 0x18C2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xBF8 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0xC01 DUP3 PUSH2 0x1A08 JUMP JUMPDEST PUSH2 0xC0B DUP3 DUP3 PUSH2 0x1A1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC18 PUSH2 0x1B39 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC5E PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAF PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xCB8 PUSH0 PUSH2 0x1BC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCC2 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xCCA PUSH2 0x1C91 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0x1828 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xD1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD13 SWAP1 PUSH2 0x33B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE36 JUMPI PUSH1 0x34 PUSH0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xD43 JUMPI PUSH2 0xD42 PUSH2 0x33D0 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD5 SWAP1 PUSH2 0x346D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE29 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xDF5 JUMPI PUSH2 0xDF4 PUSH2 0x33D0 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE0A SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xE1D JUMPI PUSH2 0xE1C PUSH2 0x33D0 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1CF2 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD25 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE48 PUSH2 0x1DE2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE7E PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xE8F SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEBB SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF06 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF06 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEE9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xF44 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x34 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC5 SWAP1 PUSH2 0x3138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x31C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x109A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1091 SWAP1 PUSH2 0x322E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x1122 JUMPI POP PUSH0 PUSH1 0x35 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1158 SWAP1 PUSH2 0x32BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116B DUP4 DUP4 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x11B5 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x11FD JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1230 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x123E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1275 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x12CC DUP9 DUP9 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x12D5 CALLER PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x12DD PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0x12E5 PUSH2 0x1E8E JUMP JUMPDEST DUP6 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH2 0x12F8 CALLER PUSH1 0x33 SLOAD PUSH2 0x1E98 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1352 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x34E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13A8 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1436 PUSH2 0x17A1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149D SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14AF DUP2 PUSH2 0x1BC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x14BA PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1549 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1540 SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AE SWAP1 PUSH2 0x30AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x15F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F0 SWAP1 PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x35 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO DUP1 PUSH2 0x1682 JUMPI POP DUP1 PUSH1 0x36 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x175C JUMPI DUP2 PUSH1 0x35 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x36 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x86F2E10D5622D896B3F56E66C1A60639CA21A4674480F054BEC2CB9BA62F40CB DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1753 SWAP3 SWAP2 SWAP1 PUSH2 0x35C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x179C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1F17 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17A9 PUSH2 0x1788 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17C7 PUSH2 0xE3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1826 JUMPI PUSH2 0x17EA PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181D SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1830 PUSH2 0xC40 JUMP JUMPDEST ISZERO PUSH2 0x1870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1867 SWAP1 PUSH2 0x363A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x187C PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP PUSH2 0x1889 DUP6 DUP3 DUP6 PUSH2 0x20F4 JUMP JUMPDEST PUSH2 0x1894 DUP6 DUP6 DUP6 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18CA PUSH2 0x2186 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x190B PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1918 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x19CF JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19B6 PUSH2 0x21CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A06 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1A10 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x1A18 PUSH2 0x17A1 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A83 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A80 SWAP2 SWAP1 PUSH2 0x3682 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1AC4 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABB SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1B2A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B21 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B34 DUP4 DUP4 PUSH2 0x2222 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BBE JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1BC9 PUSH2 0x1DE2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1C99 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1CDB PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE8 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D62 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D59 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DD2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC9 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DDD DUP4 DUP4 DUP4 PUSH2 0x2294 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1E13 PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E20 DUP2 DUP6 DUP6 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E5A PUSH2 0x24C3 JUMP JUMPDEST PUSH2 0x1E64 DUP3 DUP3 PUSH2 0x2503 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E70 PUSH2 0x24C3 JUMP JUMPDEST PUSH2 0x1E79 DUP2 PUSH2 0x253F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E84 PUSH2 0x24C3 JUMP JUMPDEST PUSH2 0x1E8C PUSH2 0x25C3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E96 PUSH2 0x24C3 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EFF SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F13 PUSH0 DUP4 DUP4 PUSH2 0x2294 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F20 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F92 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F89 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2002 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF9 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x20ED JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x20E4 SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20FF DUP5 DUP5 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x2180 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2171 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2168 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x217F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x218E PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x21CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C4 SWAP1 PUSH2 0x372C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x21FB PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x25E5 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x222B DUP3 PUSH2 0x25EE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2287 JUMPI PUSH2 0x2281 DUP3 DUP3 PUSH2 0x26B7 JUMP JUMPDEST POP PUSH2 0x2290 JUMP JUMPDEST PUSH2 0x228F PUSH2 0x2737 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x229D PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22F1 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22E5 SWAP2 SWAP1 PUSH2 0x3777 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x23C3 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x237C JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2373 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x240C JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2458 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x24B5 SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x24CB PUSH2 0x2773 JUMP JUMPDEST PUSH2 0x2501 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x250B PUSH2 0x24C3 JUMP JUMPDEST PUSH0 PUSH2 0x2514 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2527 SWAP2 SWAP1 PUSH2 0x393E JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2539 SWAP2 SWAP1 PUSH2 0x393E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2547 PUSH2 0x24C3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25B7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25AE SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C0 DUP2 PUSH2 0x1BC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25CB PUSH2 0x24C3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2649 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2640 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2675 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x25E5 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x26E0 SWAP2 SWAP1 PUSH2 0x3A51 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2718 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x271D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x272D DUP6 DUP4 DUP4 PUSH2 0x2791 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x2771 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x277C PUSH2 0x1E2B JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x27A6 JUMPI PUSH2 0x27A1 DUP3 PUSH2 0x281E JUMP JUMPDEST PUSH2 0x2816 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x27CC JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x280E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2805 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2817 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2830 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28A4 DUP3 PUSH2 0x2862 JUMP JUMPDEST PUSH2 0x28AE DUP2 DUP6 PUSH2 0x286C JUMP JUMPDEST SWAP4 POP PUSH2 0x28BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x287C JUMP JUMPDEST PUSH2 0x28C7 DUP2 PUSH2 0x288A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28EA DUP2 DUP5 PUSH2 0x289A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x292C DUP3 PUSH2 0x2903 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x293C DUP2 PUSH2 0x2922 JUMP JUMPDEST DUP2 EQ PUSH2 0x2946 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2957 DUP2 PUSH2 0x2933 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x296F DUP2 PUSH2 0x295D JUMP JUMPDEST DUP2 EQ PUSH2 0x2979 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x298A DUP2 PUSH2 0x2966 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29A6 JUMPI PUSH2 0x29A5 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29B3 DUP6 DUP3 DUP7 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29C4 DUP6 DUP3 DUP7 ADD PUSH2 0x297C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E2 DUP2 PUSH2 0x29CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29FB PUSH0 DUP4 ADD DUP5 PUSH2 0x29D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A0A DUP2 PUSH2 0x29CE JUMP JUMPDEST DUP2 EQ PUSH2 0x2A14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A25 DUP2 PUSH2 0x2A01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A41 JUMPI PUSH2 0x2A40 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A4E DUP6 DUP3 DUP7 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A5F DUP6 DUP3 DUP7 ADD PUSH2 0x2A17 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A72 DUP2 PUSH2 0x295D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A8B PUSH0 DUP4 ADD DUP5 PUSH2 0x2A69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AA8 JUMPI PUSH2 0x2AA7 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AB5 DUP7 DUP3 DUP8 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AC6 DUP7 DUP3 DUP8 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2AD7 DUP7 DUP3 DUP8 ADD PUSH2 0x297C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF6 JUMPI PUSH2 0x2AF5 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B03 DUP5 DUP3 DUP6 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B21 DUP2 PUSH2 0x2B0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B3A PUSH0 DUP4 ADD DUP5 PUSH2 0x2B18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2B7E DUP3 PUSH2 0x288A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B9D JUMPI PUSH2 0x2B9C PUSH2 0x2B48 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BAF PUSH2 0x28F2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BBB DUP3 DUP3 PUSH2 0x2B75 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BDA JUMPI PUSH2 0x2BD9 PUSH2 0x2B48 JUMP JUMPDEST JUMPDEST PUSH2 0x2BE3 DUP3 PUSH2 0x288A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C10 PUSH2 0x2C0B DUP5 PUSH2 0x2BC0 JUMP JUMPDEST PUSH2 0x2BA6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C2C JUMPI PUSH2 0x2C2B PUSH2 0x2B44 JUMP JUMPDEST JUMPDEST PUSH2 0x2C37 DUP5 DUP3 DUP6 PUSH2 0x2BF0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C53 JUMPI PUSH2 0x2C52 PUSH2 0x2B40 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C63 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C82 JUMPI PUSH2 0x2C81 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C8F DUP6 DUP3 DUP7 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB0 JUMPI PUSH2 0x2CAF PUSH2 0x28FF JUMP JUMPDEST JUMPDEST PUSH2 0x2CBC DUP6 DUP3 DUP7 ADD PUSH2 0x2C3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD8 DUP2 PUSH2 0x2CC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CF1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2CCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2D14 JUMPI PUSH2 0x2D13 PUSH2 0x2B40 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D31 JUMPI PUSH2 0x2D30 PUSH2 0x2CF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2D4D JUMPI PUSH2 0x2D4C PUSH2 0x2CFB JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2D69 JUMPI PUSH2 0x2D68 PUSH2 0x2B40 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D86 JUMPI PUSH2 0x2D85 PUSH2 0x2CF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2DA2 JUMPI PUSH2 0x2DA1 PUSH2 0x2CFB JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2DC1 JUMPI PUSH2 0x2DC0 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DDE JUMPI PUSH2 0x2DDD PUSH2 0x28FF JUMP JUMPDEST JUMPDEST PUSH2 0x2DEA DUP8 DUP3 DUP9 ADD PUSH2 0x2CFF JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E0D JUMPI PUSH2 0x2E0C PUSH2 0x28FF JUMP JUMPDEST JUMPDEST PUSH2 0x2E19 DUP8 DUP3 DUP9 ADD PUSH2 0x2D54 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2E30 DUP2 PUSH2 0x2922 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E49 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E69 JUMPI PUSH2 0x2E68 PUSH2 0x2B48 JUMP JUMPDEST JUMPDEST PUSH2 0x2E72 DUP3 PUSH2 0x288A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2E91 PUSH2 0x2E8C DUP5 PUSH2 0x2E4F JUMP JUMPDEST PUSH2 0x2BA6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2EAD JUMPI PUSH2 0x2EAC PUSH2 0x2B44 JUMP JUMPDEST JUMPDEST PUSH2 0x2EB8 DUP5 DUP3 DUP6 PUSH2 0x2BF0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2ED4 JUMPI PUSH2 0x2ED3 PUSH2 0x2B40 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2EE4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2E7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F04 JUMPI PUSH2 0x2F03 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F21 JUMPI PUSH2 0x2F20 PUSH2 0x28FF JUMP JUMPDEST JUMPDEST PUSH2 0x2F2D DUP7 DUP3 DUP8 ADD PUSH2 0x2EC0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F4E JUMPI PUSH2 0x2F4D PUSH2 0x28FF JUMP JUMPDEST JUMPDEST PUSH2 0x2F5A DUP7 DUP3 DUP8 ADD PUSH2 0x2EC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F6B DUP7 DUP3 DUP8 ADD PUSH2 0x297C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F8B JUMPI PUSH2 0x2F8A PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F98 DUP6 DUP3 DUP7 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FA9 DUP6 DUP3 DUP7 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2FCA JUMPI PUSH2 0x2FC9 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FD7 DUP7 DUP3 DUP8 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2FE8 DUP7 DUP3 DUP8 ADD PUSH2 0x297C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2FF9 DUP7 DUP3 DUP8 ADD PUSH2 0x297C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3047 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x305A JUMPI PUSH2 0x3059 PUSH2 0x3003 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756C6C20416464726573730000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3094 PUSH1 0xC DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x309F DUP3 PUSH2 0x3060 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30C1 DUP2 PUSH2 0x3088 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH0 DUP3 ADD MSTORE PUSH32 0x6C69737465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3122 PUSH1 0x26 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x312D DUP3 PUSH2 0x30C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x314F DUP2 PUSH2 0x3116 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH0 DUP3 ADD MSTORE PUSH32 0x61636B6C69737465640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31B0 PUSH1 0x29 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x31BB DUP3 PUSH2 0x3156 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31DD DUP2 PUSH2 0x31A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C646E2774206265207A65726F0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3218 PUSH1 0x18 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3223 DUP3 PUSH2 0x31E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3245 DUP2 PUSH2 0x320C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32A6 PUSH1 0x22 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x32B1 DUP3 PUSH2 0x324C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x32D3 DUP2 PUSH2 0x329A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206973206E6F74206120636F6E747261637400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x330E PUSH1 0x19 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3319 DUP3 PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x333B DUP2 PUSH2 0x3302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2061727261797300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x339C PUSH1 0x27 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x33A7 DUP3 PUSH2 0x3342 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33C9 DUP2 PUSH2 0x3390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x697320626C61636B6C6973746564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3457 PUSH1 0x2E DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3462 DUP3 PUSH2 0x33FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3484 DUP2 PUSH2 0x344B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x34CA PUSH2 0x34C5 PUSH2 0x34C0 DUP5 PUSH2 0x348B JUMP JUMPDEST PUSH2 0x34A7 JUMP JUMPDEST PUSH2 0x3494 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34DA DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x34D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x352D PUSH1 0xE DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3538 DUP3 PUSH2 0x34F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x355A DUP2 PUSH2 0x3521 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3595 PUSH1 0x20 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x35A0 DUP3 PUSH2 0x3561 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35C2 DUP2 PUSH2 0x3589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35DC PUSH0 DUP4 ADD DUP6 PUSH2 0x2A69 JUMP JUMPDEST PUSH2 0x35E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3624 PUSH1 0x10 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x362F DUP3 PUSH2 0x35F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3651 DUP2 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3661 DUP2 PUSH2 0x2CC6 JUMP JUMPDEST DUP2 EQ PUSH2 0x366B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x367C DUP2 PUSH2 0x3658 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3697 JUMPI PUSH2 0x3696 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x36A4 DUP5 DUP3 DUP6 ADD PUSH2 0x366E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x36C0 PUSH0 DUP4 ADD DUP7 PUSH2 0x2E27 JUMP JUMPDEST PUSH2 0x36CD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A69 JUMP JUMPDEST PUSH2 0x36DA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A69 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3716 PUSH1 0x14 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3721 DUP3 PUSH2 0x36E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3743 DUP2 PUSH2 0x370A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3781 DUP3 PUSH2 0x295D JUMP JUMPDEST SWAP2 POP PUSH2 0x378C DUP4 PUSH2 0x295D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x37A4 JUMPI PUSH2 0x37A3 PUSH2 0x374A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x3806 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x37CB JUMP JUMPDEST PUSH2 0x3810 DUP7 DUP4 PUSH2 0x37CB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3842 PUSH2 0x383D PUSH2 0x3838 DUP5 PUSH2 0x295D JUMP JUMPDEST PUSH2 0x34A7 JUMP JUMPDEST PUSH2 0x295D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x385B DUP4 PUSH2 0x3828 JUMP JUMPDEST PUSH2 0x386F PUSH2 0x3867 DUP3 PUSH2 0x3849 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x37D7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3883 PUSH2 0x3877 JUMP JUMPDEST PUSH2 0x388E DUP2 DUP5 DUP5 PUSH2 0x3852 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38B1 JUMPI PUSH2 0x38A6 PUSH0 DUP3 PUSH2 0x387B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3894 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x38F6 JUMPI PUSH2 0x38C7 DUP2 PUSH2 0x37AA JUMP JUMPDEST PUSH2 0x38D0 DUP5 PUSH2 0x37BC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x38DF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x38F3 PUSH2 0x38EB DUP6 PUSH2 0x37BC JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3893 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3916 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x38FB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x392E DUP4 DUP4 PUSH2 0x3907 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3947 DUP3 PUSH2 0x2862 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3960 JUMPI PUSH2 0x395F PUSH2 0x2B48 JUMP JUMPDEST JUMPDEST PUSH2 0x396A DUP3 SLOAD PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x3975 DUP3 DUP3 DUP6 PUSH2 0x38B5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x39A6 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3994 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x399E DUP6 DUP3 PUSH2 0x3923 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x39B4 DUP7 PUSH2 0x37AA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39DB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39B6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39F8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x39F4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3907 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A2B DUP3 PUSH2 0x3A0D JUMP JUMPDEST PUSH2 0x3A35 DUP2 DUP6 PUSH2 0x3A17 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A45 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x287C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A5C DUP3 DUP5 PUSH2 0x3A21 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH26 0x37636E50C16C1E1072C313A080D5418685B960B5C0EE5E198BD0 PUSH16 0xCADB7B64736F6C634300081A00330000 ",
							"sourceMap": "445:4368:17:-:0;;;1171:4:2;1128:48;;;;;;;;;1162:105:17;;;;;;;;;;1186:22;:20;;;:22;;:::i;:::-;445:4368;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:18:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;445:4368:17:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_472": {
									"entryPoint": 4467,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_826": {
									"entryPoint": 7762,
									"id": 826,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_854": {
									"entryPoint": 9475,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 7784,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 9535,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_662": {
									"entryPoint": 7804,
									"id": 662,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_672": {
									"entryPoint": 9667,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_502": {
									"entryPoint": 7822,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1258": {
									"entryPoint": 6031,
									"id": 1258,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1326": {
									"entryPoint": 7959,
									"id": 1326,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3188": {
									"entryPoint": 6664,
									"id": 3188,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 9411,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_2212": {
									"entryPoint": 10039,
									"id": 2212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_578": {
									"entryPoint": 6969,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 6049,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_562": {
									"entryPoint": 6434,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_810": {
									"entryPoint": 5985,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 7723,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 7650,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 10099,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1207": {
									"entryPoint": 7832,
									"id": 1207,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1733": {
									"entryPoint": 6024,
									"id": 1733,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_736": {
									"entryPoint": 7313,
									"id": 736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_709": {
									"entryPoint": 6184,
									"id": 709,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_720": {
									"entryPoint": 8582,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2585": {
									"entryPoint": 10270,
									"id": 2585,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1992": {
									"entryPoint": 9710,
									"id": 1992,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1374": {
									"entryPoint": 8436,
									"id": 1374,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 7104,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1082": {
									"entryPoint": 7410,
									"id": 1082,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_752": {
									"entryPoint": 6338,
									"id": 752,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1174": {
									"entryPoint": 8852,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_629": {
									"entryPoint": 6683,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_979": {
									"entryPoint": 5022,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1003": {
									"entryPoint": 1765,
									"id": 1003,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_931": {
									"entryPoint": 3156,
									"id": 931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchTransfer_3177": {
									"entryPoint": 3276,
									"id": 3177,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@blacklisted_2758": {
									"entryPoint": 4993,
									"id": 2758,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_895": {
									"entryPoint": 3030,
									"id": 895,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_2503": {
									"entryPoint": 9911,
									"id": 2503,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2643": {
									"entryPoint": 9701,
									"id": 2643,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1965": {
									"entryPoint": 8655,
									"id": 1965,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@icoContract_2749": {
									"entryPoint": 4956,
									"id": 2749,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_2836": {
									"entryPoint": 4524,
									"id": 2836,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isContract_1393": {
									"entryPoint": 6304,
									"id": 1393,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockedAmount_2766": {
									"entryPoint": 3878,
									"id": 2766,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockedUntil_2762": {
									"entryPoint": 3857,
									"id": 2762,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_870": {
									"entryPoint": 1607,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 3646,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2857": {
									"entryPoint": 3258,
									"id": 2857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_697": {
									"entryPoint": 3136,
									"id": 697,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_520": {
									"entryPoint": 3087,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 3239,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBlacklist_2959": {
									"entryPoint": 1799,
									"id": 2959,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setICOContract_3116": {
									"entryPoint": 2676,
									"id": 3116,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockup_2928": {
									"entryPoint": 5298,
									"id": 2928,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@symbol_886": {
									"entryPoint": 3699,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_911": {
									"entryPoint": 2083,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1035": {
									"entryPoint": 6258,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_3081": {
									"entryPoint": 2106,
									"id": 3081,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 5166,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_3020": {
									"entryPoint": 3899,
									"id": 3020,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_955": {
									"entryPoint": 7689,
									"id": 955,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_2866": {
									"entryPoint": 3038,
									"id": 2866,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_2028": {
									"entryPoint": 8738,
									"id": 2028,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_540": {
									"entryPoint": 3056,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2543": {
									"entryPoint": 10129,
									"id": 2543,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 11262,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 11903,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 10569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 11519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 11604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool": {
									"entryPoint": 10775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 13934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 11327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 11968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 12149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 10795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 11372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 12211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 11689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 13954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 12013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 11471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 13521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 11032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 14929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13997,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 11486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 13536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13769,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 11174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 10482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 11200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 11855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 14250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 14861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 14199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 14517,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 10530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 11462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 13451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 13460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 11020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 14483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 13488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 14376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 14654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 11248,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10364,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 14268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 12336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 14627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 11125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 13479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 14599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 14154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 12291,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 13264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 14409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 11511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 11072,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 11515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 11076,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 10495,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10491,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 14283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 14587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 14459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 14050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96": {
									"entryPoint": 12772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f": {
									"entryPoint": 13122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887": {
									"entryPoint": 13665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc": {
									"entryPoint": 13309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 13808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e": {
									"entryPoint": 12876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940": {
									"entryPoint": 12630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed": {
									"entryPoint": 13018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4": {
									"entryPoint": 12488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5": {
									"entryPoint": 12384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 13561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 14295,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 14418,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 13912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 14455,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:35411:18",
										"nodeType": "YulBlock",
										"src": "0:35411:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:18",
													"nodeType": "YulBlock",
													"src": "66:40:18",
													"statements": [
														{
															"nativeSrc": "77:22:18",
															"nodeType": "YulAssignment",
															"src": "77:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:18"
																},
																"nativeSrc": "87:12:18",
																"nodeType": "YulFunctionCall",
																"src": "87:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:18",
														"nodeType": "YulTypedName",
														"src": "49:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:18",
														"nodeType": "YulTypedName",
														"src": "59:6:18",
														"type": ""
													}
												],
												"src": "7:99:18"
											},
											{
												"body": {
													"nativeSrc": "208:73:18",
													"nodeType": "YulBlock",
													"src": "208:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:18"
																},
																"nativeSrc": "218:19:18",
																"nodeType": "YulFunctionCall",
																"src": "218:19:18"
															},
															"nativeSrc": "218:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:18"
														},
														{
															"nativeSrc": "246:29:18",
															"nodeType": "YulAssignment",
															"src": "246:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:18",
																		"nodeType": "YulLiteral",
																		"src": "270:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:18"
																},
																"nativeSrc": "261:14:18",
																"nodeType": "YulFunctionCall",
																"src": "261:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:18",
														"nodeType": "YulTypedName",
														"src": "180:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:18",
														"nodeType": "YulTypedName",
														"src": "185:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:18",
														"nodeType": "YulTypedName",
														"src": "196:11:18",
														"type": ""
													}
												],
												"src": "112:169:18"
											},
											{
												"body": {
													"nativeSrc": "349:77:18",
													"nodeType": "YulBlock",
													"src": "349:77:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:18"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:18"
																},
																"nativeSrc": "360:23:18",
																"nodeType": "YulFunctionCall",
																"src": "360:23:18"
															},
															"nativeSrc": "360:23:18",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:18"
																		},
																		"nativeSrc": "399:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:18",
																		"nodeType": "YulLiteral",
																		"src": "417:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:18"
																},
																"nativeSrc": "392:27:18",
																"nodeType": "YulFunctionCall",
																"src": "392:27:18"
															},
															"nativeSrc": "392:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:18",
														"nodeType": "YulTypedName",
														"src": "331:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:18",
														"nodeType": "YulTypedName",
														"src": "336:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:18",
														"nodeType": "YulTypedName",
														"src": "341:6:18",
														"type": ""
													}
												],
												"src": "287:139:18"
											},
											{
												"body": {
													"nativeSrc": "480:54:18",
													"nodeType": "YulBlock",
													"src": "480:54:18",
													"statements": [
														{
															"nativeSrc": "490:38:18",
															"nodeType": "YulAssignment",
															"src": "490:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:18",
																				"nodeType": "YulLiteral",
																				"src": "515:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:18"
																		},
																		"nativeSrc": "504:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:18",
																				"nodeType": "YulLiteral",
																				"src": "524:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:18"
																		},
																		"nativeSrc": "520:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:18"
																},
																"nativeSrc": "500:28:18",
																"nodeType": "YulFunctionCall",
																"src": "500:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:18",
														"nodeType": "YulTypedName",
														"src": "463:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:18",
														"nodeType": "YulTypedName",
														"src": "473:6:18",
														"type": ""
													}
												],
												"src": "432:102:18"
											},
											{
												"body": {
													"nativeSrc": "632:285:18",
													"nodeType": "YulBlock",
													"src": "632:285:18",
													"statements": [
														{
															"nativeSrc": "642:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:18"
																},
																"nativeSrc": "656:39:18",
																"nodeType": "YulFunctionCall",
																"src": "656:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:18",
																	"nodeType": "YulTypedName",
																	"src": "646:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:18",
															"nodeType": "YulAssignment",
															"src": "704:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:18"
																},
																"nativeSrc": "711:71:18",
																"nodeType": "YulFunctionCall",
																"src": "711:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:18",
																				"nodeType": "YulLiteral",
																				"src": "837:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:18"
																		},
																		"nativeSrc": "826:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:18"
																},
																"nativeSrc": "791:65:18",
																"nodeType": "YulFunctionCall",
																"src": "791:65:18"
															},
															"nativeSrc": "791:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:18"
														},
														{
															"nativeSrc": "865:46:18",
															"nodeType": "YulAssignment",
															"src": "865:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:18"
																		},
																		"nativeSrc": "881:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:18"
																},
																"nativeSrc": "872:39:18",
																"nodeType": "YulFunctionCall",
																"src": "872:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:18",
														"nodeType": "YulTypedName",
														"src": "613:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:18",
														"nodeType": "YulTypedName",
														"src": "620:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:18",
														"nodeType": "YulTypedName",
														"src": "628:3:18",
														"type": ""
													}
												],
												"src": "540:377:18"
											},
											{
												"body": {
													"nativeSrc": "1041:195:18",
													"nodeType": "YulBlock",
													"src": "1041:195:18",
													"statements": [
														{
															"nativeSrc": "1051:26:18",
															"nodeType": "YulAssignment",
															"src": "1051:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:18"
																},
																"nativeSrc": "1059:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:18"
																		},
																		"nativeSrc": "1094:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:18"
																		},
																		"nativeSrc": "1113:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:18"
																},
																"nativeSrc": "1087:47:18",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:18"
															},
															"nativeSrc": "1087:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:18"
														},
														{
															"nativeSrc": "1143:86:18",
															"nodeType": "YulAssignment",
															"src": "1143:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:18"
																},
																"nativeSrc": "1151:78:18",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:18",
														"nodeType": "YulTypedName",
														"src": "1013:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:18",
														"nodeType": "YulTypedName",
														"src": "1025:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:18",
														"nodeType": "YulTypedName",
														"src": "1036:4:18",
														"type": ""
													}
												],
												"src": "923:313:18"
											},
											{
												"body": {
													"nativeSrc": "1282:35:18",
													"nodeType": "YulBlock",
													"src": "1282:35:18",
													"statements": [
														{
															"nativeSrc": "1292:19:18",
															"nodeType": "YulAssignment",
															"src": "1292:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:18"
																},
																"nativeSrc": "1302:9:18",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:18",
														"nodeType": "YulTypedName",
														"src": "1275:6:18",
														"type": ""
													}
												],
												"src": "1242:75:18"
											},
											{
												"body": {
													"nativeSrc": "1412:28:18",
													"nodeType": "YulBlock",
													"src": "1412:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:18"
																},
																"nativeSrc": "1422:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:18"
															},
															"nativeSrc": "1422:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:18"
											},
											{
												"body": {
													"nativeSrc": "1535:28:18",
													"nodeType": "YulBlock",
													"src": "1535:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:18"
																},
																"nativeSrc": "1545:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:18"
															},
															"nativeSrc": "1545:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:18"
											},
											{
												"body": {
													"nativeSrc": "1614:81:18",
													"nodeType": "YulBlock",
													"src": "1614:81:18",
													"statements": [
														{
															"nativeSrc": "1624:65:18",
															"nodeType": "YulAssignment",
															"src": "1624:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:18",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:18"
																},
																"nativeSrc": "1635:54:18",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:18",
														"nodeType": "YulTypedName",
														"src": "1596:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:18",
														"nodeType": "YulTypedName",
														"src": "1606:7:18",
														"type": ""
													}
												],
												"src": "1569:126:18"
											},
											{
												"body": {
													"nativeSrc": "1746:51:18",
													"nodeType": "YulBlock",
													"src": "1746:51:18",
													"statements": [
														{
															"nativeSrc": "1756:35:18",
															"nodeType": "YulAssignment",
															"src": "1756:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:18"
																},
																"nativeSrc": "1767:24:18",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:18",
														"nodeType": "YulTypedName",
														"src": "1728:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:18",
														"nodeType": "YulTypedName",
														"src": "1738:7:18",
														"type": ""
													}
												],
												"src": "1701:96:18"
											},
											{
												"body": {
													"nativeSrc": "1846:79:18",
													"nodeType": "YulBlock",
													"src": "1846:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:18",
																"nodeType": "YulBlock",
																"src": "1903:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:18"
																			},
																			"nativeSrc": "1905:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:18"
																		},
																		"nativeSrc": "1905:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:18"
																				},
																				"nativeSrc": "1876:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:18"
																		},
																		"nativeSrc": "1866:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:18"
																},
																"nativeSrc": "1859:43:18",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:18"
															},
															"nativeSrc": "1856:63:18",
															"nodeType": "YulIf",
															"src": "1856:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:18",
														"nodeType": "YulTypedName",
														"src": "1839:5:18",
														"type": ""
													}
												],
												"src": "1803:122:18"
											},
											{
												"body": {
													"nativeSrc": "1983:87:18",
													"nodeType": "YulBlock",
													"src": "1983:87:18",
													"statements": [
														{
															"nativeSrc": "1993:29:18",
															"nodeType": "YulAssignment",
															"src": "1993:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:18"
																},
																"nativeSrc": "2002:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:18"
																},
																"nativeSrc": "2031:33:18",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:18"
															},
															"nativeSrc": "2031:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:18",
														"nodeType": "YulTypedName",
														"src": "1961:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:18",
														"nodeType": "YulTypedName",
														"src": "1969:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:18",
														"nodeType": "YulTypedName",
														"src": "1977:5:18",
														"type": ""
													}
												],
												"src": "1931:139:18"
											},
											{
												"body": {
													"nativeSrc": "2121:32:18",
													"nodeType": "YulBlock",
													"src": "2121:32:18",
													"statements": [
														{
															"nativeSrc": "2131:16:18",
															"nodeType": "YulAssignment",
															"src": "2131:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:18",
																"nodeType": "YulIdentifier",
																"src": "2142:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:18",
														"nodeType": "YulTypedName",
														"src": "2103:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:18",
														"nodeType": "YulTypedName",
														"src": "2113:7:18",
														"type": ""
													}
												],
												"src": "2076:77:18"
											},
											{
												"body": {
													"nativeSrc": "2202:79:18",
													"nodeType": "YulBlock",
													"src": "2202:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:18",
																"nodeType": "YulBlock",
																"src": "2259:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:18"
																			},
																			"nativeSrc": "2261:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:18"
																		},
																		"nativeSrc": "2261:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:18"
																				},
																				"nativeSrc": "2232:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:18"
																		},
																		"nativeSrc": "2222:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:18"
																},
																"nativeSrc": "2215:43:18",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:18"
															},
															"nativeSrc": "2212:63:18",
															"nodeType": "YulIf",
															"src": "2212:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:18",
														"nodeType": "YulTypedName",
														"src": "2195:5:18",
														"type": ""
													}
												],
												"src": "2159:122:18"
											},
											{
												"body": {
													"nativeSrc": "2339:87:18",
													"nodeType": "YulBlock",
													"src": "2339:87:18",
													"statements": [
														{
															"nativeSrc": "2349:29:18",
															"nodeType": "YulAssignment",
															"src": "2349:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:18"
																},
																"nativeSrc": "2358:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:18"
																},
																"nativeSrc": "2387:33:18",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:18"
															},
															"nativeSrc": "2387:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:18",
														"nodeType": "YulTypedName",
														"src": "2317:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:18",
														"nodeType": "YulTypedName",
														"src": "2325:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:18",
														"nodeType": "YulTypedName",
														"src": "2333:5:18",
														"type": ""
													}
												],
												"src": "2287:139:18"
											},
											{
												"body": {
													"nativeSrc": "2515:391:18",
													"nodeType": "YulBlock",
													"src": "2515:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:18",
																"nodeType": "YulBlock",
																"src": "2561:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:18"
																			},
																			"nativeSrc": "2563:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:18"
																		},
																		"nativeSrc": "2563:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:18"
																		},
																		"nativeSrc": "2532:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:18"
																},
																"nativeSrc": "2528:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:18"
															},
															"nativeSrc": "2525:119:18",
															"nodeType": "YulIf",
															"src": "2525:119:18"
														},
														{
															"nativeSrc": "2654:117:18",
															"nodeType": "YulBlock",
															"src": "2654:117:18",
															"statements": [
																{
																	"nativeSrc": "2669:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:18",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:18"
																				},
																				"nativeSrc": "2729:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:18"
																		},
																		"nativeSrc": "2708:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:18",
															"nodeType": "YulBlock",
															"src": "2781:118:18",
															"statements": [
																{
																	"nativeSrc": "2796:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:18",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:18"
																				},
																				"nativeSrc": "2857:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:18"
																		},
																		"nativeSrc": "2836:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:18",
														"nodeType": "YulTypedName",
														"src": "2477:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:18",
														"nodeType": "YulTypedName",
														"src": "2488:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:18",
														"nodeType": "YulTypedName",
														"src": "2500:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:18",
														"nodeType": "YulTypedName",
														"src": "2508:6:18",
														"type": ""
													}
												],
												"src": "2432:474:18"
											},
											{
												"body": {
													"nativeSrc": "2954:48:18",
													"nodeType": "YulBlock",
													"src": "2954:48:18",
													"statements": [
														{
															"nativeSrc": "2964:32:18",
															"nodeType": "YulAssignment",
															"src": "2964:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:18"
																		},
																		"nativeSrc": "2982:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:18"
																},
																"nativeSrc": "2975:21:18",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:18",
														"nodeType": "YulTypedName",
														"src": "2936:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:18",
														"nodeType": "YulTypedName",
														"src": "2946:7:18",
														"type": ""
													}
												],
												"src": "2912:90:18"
											},
											{
												"body": {
													"nativeSrc": "3067:50:18",
													"nodeType": "YulBlock",
													"src": "3067:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:18"
																		},
																		"nativeSrc": "3089:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:18"
																},
																"nativeSrc": "3077:34:18",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:18"
															},
															"nativeSrc": "3077:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:18",
														"nodeType": "YulTypedName",
														"src": "3055:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:18",
														"nodeType": "YulTypedName",
														"src": "3062:3:18",
														"type": ""
													}
												],
												"src": "3008:109:18"
											},
											{
												"body": {
													"nativeSrc": "3215:118:18",
													"nodeType": "YulBlock",
													"src": "3215:118:18",
													"statements": [
														{
															"nativeSrc": "3225:26:18",
															"nodeType": "YulAssignment",
															"src": "3225:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:18"
																},
																"nativeSrc": "3233:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:18"
																		},
																		"nativeSrc": "3308:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:18"
																},
																"nativeSrc": "3261:65:18",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:18"
															},
															"nativeSrc": "3261:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:18",
														"nodeType": "YulTypedName",
														"src": "3187:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:18",
														"nodeType": "YulTypedName",
														"src": "3199:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:18",
														"nodeType": "YulTypedName",
														"src": "3210:4:18",
														"type": ""
													}
												],
												"src": "3123:210:18"
											},
											{
												"body": {
													"nativeSrc": "3379:76:18",
													"nodeType": "YulBlock",
													"src": "3379:76:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3433:16:18",
																"nodeType": "YulBlock",
																"src": "3433:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3442:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3442:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3445:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3445:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3435:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3435:6:18"
																			},
																			"nativeSrc": "3435:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3435:12:18"
																		},
																		"nativeSrc": "3435:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3435:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3402:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3402:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3424:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3424:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3409:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "3409:14:18"
																				},
																				"nativeSrc": "3409:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3409:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3399:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3399:2:18"
																		},
																		"nativeSrc": "3399:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3399:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3392:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3392:6:18"
																},
																"nativeSrc": "3392:40:18",
																"nodeType": "YulFunctionCall",
																"src": "3392:40:18"
															},
															"nativeSrc": "3389:60:18",
															"nodeType": "YulIf",
															"src": "3389:60:18"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3339:116:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3372:5:18",
														"nodeType": "YulTypedName",
														"src": "3372:5:18",
														"type": ""
													}
												],
												"src": "3339:116:18"
											},
											{
												"body": {
													"nativeSrc": "3510:84:18",
													"nodeType": "YulBlock",
													"src": "3510:84:18",
													"statements": [
														{
															"nativeSrc": "3520:29:18",
															"nodeType": "YulAssignment",
															"src": "3520:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3542:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3542:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3529:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3529:12:18"
																},
																"nativeSrc": "3529:20:18",
																"nodeType": "YulFunctionCall",
																"src": "3529:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3520:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3520:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3582:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3582:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3558:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "3558:23:18"
																},
																"nativeSrc": "3558:30:18",
																"nodeType": "YulFunctionCall",
																"src": "3558:30:18"
															},
															"nativeSrc": "3558:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "3558:30:18"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3461:133:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3488:6:18",
														"nodeType": "YulTypedName",
														"src": "3488:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3496:3:18",
														"nodeType": "YulTypedName",
														"src": "3496:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3504:5:18",
														"nodeType": "YulTypedName",
														"src": "3504:5:18",
														"type": ""
													}
												],
												"src": "3461:133:18"
											},
											{
												"body": {
													"nativeSrc": "3680:388:18",
													"nodeType": "YulBlock",
													"src": "3680:388:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3726:83:18",
																"nodeType": "YulBlock",
																"src": "3726:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3728:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "3728:77:18"
																			},
																			"nativeSrc": "3728:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3728:79:18"
																		},
																		"nativeSrc": "3728:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3728:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3701:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3701:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3710:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3710:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3697:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3697:3:18"
																		},
																		"nativeSrc": "3697:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3697:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3722:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3722:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3693:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3693:3:18"
																},
																"nativeSrc": "3693:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3693:32:18"
															},
															"nativeSrc": "3690:119:18",
															"nodeType": "YulIf",
															"src": "3690:119:18"
														},
														{
															"nativeSrc": "3819:117:18",
															"nodeType": "YulBlock",
															"src": "3819:117:18",
															"statements": [
																{
																	"nativeSrc": "3834:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3834:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3848:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3838:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3838:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3863:63:18",
																	"nodeType": "YulAssignment",
																	"src": "3863:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3898:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3898:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3909:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3909:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3894:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3894:3:18"
																				},
																				"nativeSrc": "3894:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3894:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3918:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3918:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3873:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "3873:20:18"
																		},
																		"nativeSrc": "3873:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3873:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3863:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3863:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3946:115:18",
															"nodeType": "YulBlock",
															"src": "3946:115:18",
															"statements": [
																{
																	"nativeSrc": "3961:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3961:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3975:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3975:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3965:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3965:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3991:60:18",
																	"nodeType": "YulAssignment",
																	"src": "3991:60:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4023:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4023:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4034:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4034:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4019:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4019:3:18"
																				},
																				"nativeSrc": "4019:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4019:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4043:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4043:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4001:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "4001:17:18"
																		},
																		"nativeSrc": "4001:50:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:50:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3991:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3991:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3600:468:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3642:9:18",
														"nodeType": "YulTypedName",
														"src": "3642:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3653:7:18",
														"nodeType": "YulTypedName",
														"src": "3653:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3665:6:18",
														"nodeType": "YulTypedName",
														"src": "3665:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3673:6:18",
														"nodeType": "YulTypedName",
														"src": "3673:6:18",
														"type": ""
													}
												],
												"src": "3600:468:18"
											},
											{
												"body": {
													"nativeSrc": "4139:53:18",
													"nodeType": "YulBlock",
													"src": "4139:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4156:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4156:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4179:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4179:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4161:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "4161:17:18"
																		},
																		"nativeSrc": "4161:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4161:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4149:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4149:6:18"
																},
																"nativeSrc": "4149:37:18",
																"nodeType": "YulFunctionCall",
																"src": "4149:37:18"
															},
															"nativeSrc": "4149:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "4149:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4074:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4127:5:18",
														"nodeType": "YulTypedName",
														"src": "4127:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4134:3:18",
														"nodeType": "YulTypedName",
														"src": "4134:3:18",
														"type": ""
													}
												],
												"src": "4074:118:18"
											},
											{
												"body": {
													"nativeSrc": "4296:124:18",
													"nodeType": "YulBlock",
													"src": "4296:124:18",
													"statements": [
														{
															"nativeSrc": "4306:26:18",
															"nodeType": "YulAssignment",
															"src": "4306:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4318:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4318:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4329:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4329:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4314:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4314:3:18"
																},
																"nativeSrc": "4314:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4314:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4306:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4306:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4386:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4386:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4399:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4399:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4410:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4410:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4395:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4395:3:18"
																		},
																		"nativeSrc": "4395:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4395:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4342:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "4342:43:18"
																},
																"nativeSrc": "4342:71:18",
																"nodeType": "YulFunctionCall",
																"src": "4342:71:18"
															},
															"nativeSrc": "4342:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "4342:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4198:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4268:9:18",
														"nodeType": "YulTypedName",
														"src": "4268:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4280:6:18",
														"nodeType": "YulTypedName",
														"src": "4280:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4291:4:18",
														"nodeType": "YulTypedName",
														"src": "4291:4:18",
														"type": ""
													}
												],
												"src": "4198:222:18"
											},
											{
												"body": {
													"nativeSrc": "4526:519:18",
													"nodeType": "YulBlock",
													"src": "4526:519:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4572:83:18",
																"nodeType": "YulBlock",
																"src": "4572:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4574:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "4574:77:18"
																			},
																			"nativeSrc": "4574:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4574:79:18"
																		},
																		"nativeSrc": "4574:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4574:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4547:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4547:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4556:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4556:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4543:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4543:3:18"
																		},
																		"nativeSrc": "4543:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4543:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4568:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4568:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4539:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4539:3:18"
																},
																"nativeSrc": "4539:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4539:32:18"
															},
															"nativeSrc": "4536:119:18",
															"nodeType": "YulIf",
															"src": "4536:119:18"
														},
														{
															"nativeSrc": "4665:117:18",
															"nodeType": "YulBlock",
															"src": "4665:117:18",
															"statements": [
																{
																	"nativeSrc": "4680:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4680:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4694:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4694:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4684:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4684:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4709:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4709:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4744:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4744:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4755:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4755:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4740:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4740:3:18"
																				},
																				"nativeSrc": "4740:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4740:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4764:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4764:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4719:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4719:20:18"
																		},
																		"nativeSrc": "4719:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4719:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4709:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4709:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4792:118:18",
															"nodeType": "YulBlock",
															"src": "4792:118:18",
															"statements": [
																{
																	"nativeSrc": "4807:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4807:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4821:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4821:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4811:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4811:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4837:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4837:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4872:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4872:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4883:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4883:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4868:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4868:3:18"
																				},
																				"nativeSrc": "4868:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4868:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4892:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4892:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4847:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4847:20:18"
																		},
																		"nativeSrc": "4847:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4847:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4837:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4837:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4920:118:18",
															"nodeType": "YulBlock",
															"src": "4920:118:18",
															"statements": [
																{
																	"nativeSrc": "4935:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4935:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4949:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4949:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4939:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4939:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4965:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4965:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5000:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5000:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5011:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5011:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4996:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4996:3:18"
																				},
																				"nativeSrc": "4996:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4996:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5020:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5020:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4975:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4975:20:18"
																		},
																		"nativeSrc": "4975:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4975:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4965:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4965:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4426:619:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4480:9:18",
														"nodeType": "YulTypedName",
														"src": "4480:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4491:7:18",
														"nodeType": "YulTypedName",
														"src": "4491:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4503:6:18",
														"nodeType": "YulTypedName",
														"src": "4503:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4511:6:18",
														"nodeType": "YulTypedName",
														"src": "4511:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4519:6:18",
														"nodeType": "YulTypedName",
														"src": "4519:6:18",
														"type": ""
													}
												],
												"src": "4426:619:18"
											},
											{
												"body": {
													"nativeSrc": "5117:263:18",
													"nodeType": "YulBlock",
													"src": "5117:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5163:83:18",
																"nodeType": "YulBlock",
																"src": "5163:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5165:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5165:77:18"
																			},
																			"nativeSrc": "5165:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5165:79:18"
																		},
																		"nativeSrc": "5165:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5165:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5138:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5138:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5147:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5147:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5134:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5134:3:18"
																		},
																		"nativeSrc": "5134:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5134:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5159:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5159:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5130:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:18"
																},
																"nativeSrc": "5130:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5130:32:18"
															},
															"nativeSrc": "5127:119:18",
															"nodeType": "YulIf",
															"src": "5127:119:18"
														},
														{
															"nativeSrc": "5256:117:18",
															"nodeType": "YulBlock",
															"src": "5256:117:18",
															"statements": [
																{
																	"nativeSrc": "5271:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5285:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5300:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5300:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5335:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5335:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5346:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5346:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5331:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5331:3:18"
																				},
																				"nativeSrc": "5331:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5331:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5355:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5355:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5310:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5310:20:18"
																		},
																		"nativeSrc": "5310:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5310:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5300:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5300:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5051:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5087:9:18",
														"nodeType": "YulTypedName",
														"src": "5087:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5098:7:18",
														"nodeType": "YulTypedName",
														"src": "5098:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5110:6:18",
														"nodeType": "YulTypedName",
														"src": "5110:6:18",
														"type": ""
													}
												],
												"src": "5051:329:18"
											},
											{
												"body": {
													"nativeSrc": "5429:43:18",
													"nodeType": "YulBlock",
													"src": "5429:43:18",
													"statements": [
														{
															"nativeSrc": "5439:27:18",
															"nodeType": "YulAssignment",
															"src": "5439:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5454:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5454:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5461:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5461:4:18",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5450:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5450:3:18"
																},
																"nativeSrc": "5450:16:18",
																"nodeType": "YulFunctionCall",
																"src": "5450:16:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5439:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "5439:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5386:86:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5411:5:18",
														"nodeType": "YulTypedName",
														"src": "5411:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5421:7:18",
														"nodeType": "YulTypedName",
														"src": "5421:7:18",
														"type": ""
													}
												],
												"src": "5386:86:18"
											},
											{
												"body": {
													"nativeSrc": "5539:51:18",
													"nodeType": "YulBlock",
													"src": "5539:51:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5556:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5556:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5577:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5577:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5561:15:18",
																			"nodeType": "YulIdentifier",
																			"src": "5561:15:18"
																		},
																		"nativeSrc": "5561:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5561:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5549:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5549:6:18"
																},
																"nativeSrc": "5549:35:18",
																"nodeType": "YulFunctionCall",
																"src": "5549:35:18"
															},
															"nativeSrc": "5549:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "5549:35:18"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5478:112:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5527:5:18",
														"nodeType": "YulTypedName",
														"src": "5527:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5534:3:18",
														"nodeType": "YulTypedName",
														"src": "5534:3:18",
														"type": ""
													}
												],
												"src": "5478:112:18"
											},
											{
												"body": {
													"nativeSrc": "5690:120:18",
													"nodeType": "YulBlock",
													"src": "5690:120:18",
													"statements": [
														{
															"nativeSrc": "5700:26:18",
															"nodeType": "YulAssignment",
															"src": "5700:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:18"
																},
																"nativeSrc": "5708:18:18",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5776:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5776:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5789:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5789:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5800:1:18",
																				"nodeType": "YulLiteral",
																				"src": "5800:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5785:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5785:3:18"
																		},
																		"nativeSrc": "5785:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5785:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5736:39:18",
																	"nodeType": "YulIdentifier",
																	"src": "5736:39:18"
																},
																"nativeSrc": "5736:67:18",
																"nodeType": "YulFunctionCall",
																"src": "5736:67:18"
															},
															"nativeSrc": "5736:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "5736:67:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5596:214:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:18",
														"nodeType": "YulTypedName",
														"src": "5662:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:18",
														"nodeType": "YulTypedName",
														"src": "5674:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:18",
														"nodeType": "YulTypedName",
														"src": "5685:4:18",
														"type": ""
													}
												],
												"src": "5596:214:18"
											},
											{
												"body": {
													"nativeSrc": "5905:28:18",
													"nodeType": "YulBlock",
													"src": "5905:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5922:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5922:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5925:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5925:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5915:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:18"
																},
																"nativeSrc": "5915:12:18",
																"nodeType": "YulFunctionCall",
																"src": "5915:12:18"
															},
															"nativeSrc": "5915:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "5915:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5816:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "5816:117:18"
											},
											{
												"body": {
													"nativeSrc": "6028:28:18",
													"nodeType": "YulBlock",
													"src": "6028:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6045:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6045:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6048:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6048:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6038:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:18"
																},
																"nativeSrc": "6038:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6038:12:18"
															},
															"nativeSrc": "6038:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "6038:12:18"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5939:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "5939:117:18"
											},
											{
												"body": {
													"nativeSrc": "6090:152:18",
													"nodeType": "YulBlock",
													"src": "6090:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6107:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6107:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6110:77:18",
																		"nodeType": "YulLiteral",
																		"src": "6110:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6100:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6100:6:18"
																},
																"nativeSrc": "6100:88:18",
																"nodeType": "YulFunctionCall",
																"src": "6100:88:18"
															},
															"nativeSrc": "6100:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "6100:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6204:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6204:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6207:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6207:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6197:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6197:6:18"
																},
																"nativeSrc": "6197:15:18",
																"nodeType": "YulFunctionCall",
																"src": "6197:15:18"
															},
															"nativeSrc": "6197:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "6197:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6228:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6228:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6231:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6231:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6221:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6221:6:18"
																},
																"nativeSrc": "6221:15:18",
																"nodeType": "YulFunctionCall",
																"src": "6221:15:18"
															},
															"nativeSrc": "6221:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "6221:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6062:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6062:180:18"
											},
											{
												"body": {
													"nativeSrc": "6291:238:18",
													"nodeType": "YulBlock",
													"src": "6291:238:18",
													"statements": [
														{
															"nativeSrc": "6301:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6301:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6323:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6323:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6353:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6353:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6331:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "6331:21:18"
																		},
																		"nativeSrc": "6331:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6331:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6319:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:18"
																},
																"nativeSrc": "6319:40:18",
																"nodeType": "YulFunctionCall",
																"src": "6319:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6305:10:18",
																	"nodeType": "YulTypedName",
																	"src": "6305:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6470:22:18",
																"nodeType": "YulBlock",
																"src": "6470:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6472:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "6472:16:18"
																			},
																			"nativeSrc": "6472:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6472:18:18"
																		},
																		"nativeSrc": "6472:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6472:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6413:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "6413:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6425:18:18",
																				"nodeType": "YulLiteral",
																				"src": "6425:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6410:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "6410:2:18"
																		},
																		"nativeSrc": "6410:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6410:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6449:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "6449:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6461:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6461:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6446:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "6446:2:18"
																		},
																		"nativeSrc": "6446:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6446:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6407:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6407:2:18"
																},
																"nativeSrc": "6407:62:18",
																"nodeType": "YulFunctionCall",
																"src": "6407:62:18"
															},
															"nativeSrc": "6404:88:18",
															"nodeType": "YulIf",
															"src": "6404:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6508:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6508:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6512:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "6512:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6501:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6501:6:18"
																},
																"nativeSrc": "6501:22:18",
																"nodeType": "YulFunctionCall",
																"src": "6501:22:18"
															},
															"nativeSrc": "6501:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "6501:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6248:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6277:6:18",
														"nodeType": "YulTypedName",
														"src": "6277:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6285:4:18",
														"nodeType": "YulTypedName",
														"src": "6285:4:18",
														"type": ""
													}
												],
												"src": "6248:281:18"
											},
											{
												"body": {
													"nativeSrc": "6576:88:18",
													"nodeType": "YulBlock",
													"src": "6576:88:18",
													"statements": [
														{
															"nativeSrc": "6586:30:18",
															"nodeType": "YulAssignment",
															"src": "6586:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6596:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "6596:18:18"
																},
																"nativeSrc": "6596:20:18",
																"nodeType": "YulFunctionCall",
																"src": "6596:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6586:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6586:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6645:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6645:6:18"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6653:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6653:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6625:19:18",
																	"nodeType": "YulIdentifier",
																	"src": "6625:19:18"
																},
																"nativeSrc": "6625:33:18",
																"nodeType": "YulFunctionCall",
																"src": "6625:33:18"
															},
															"nativeSrc": "6625:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "6625:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6535:129:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6560:4:18",
														"nodeType": "YulTypedName",
														"src": "6560:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6569:6:18",
														"nodeType": "YulTypedName",
														"src": "6569:6:18",
														"type": ""
													}
												],
												"src": "6535:129:18"
											},
											{
												"body": {
													"nativeSrc": "6736:241:18",
													"nodeType": "YulBlock",
													"src": "6736:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6841:22:18",
																"nodeType": "YulBlock",
																"src": "6841:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6843:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "6843:16:18"
																			},
																			"nativeSrc": "6843:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6843:18:18"
																		},
																		"nativeSrc": "6843:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6843:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6813:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6813:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6821:18:18",
																		"nodeType": "YulLiteral",
																		"src": "6821:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6810:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6810:2:18"
																},
																"nativeSrc": "6810:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6810:30:18"
															},
															"nativeSrc": "6807:56:18",
															"nodeType": "YulIf",
															"src": "6807:56:18"
														},
														{
															"nativeSrc": "6873:37:18",
															"nodeType": "YulAssignment",
															"src": "6873:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6903:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6903:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6881:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "6881:21:18"
																},
																"nativeSrc": "6881:29:18",
																"nodeType": "YulFunctionCall",
																"src": "6881:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6873:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6873:4:18"
																}
															]
														},
														{
															"nativeSrc": "6947:23:18",
															"nodeType": "YulAssignment",
															"src": "6947:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6959:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6959:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6965:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6965:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6955:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6955:3:18"
																},
																"nativeSrc": "6955:15:18",
																"nodeType": "YulFunctionCall",
																"src": "6955:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6947:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6947:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "6670:307:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6720:6:18",
														"nodeType": "YulTypedName",
														"src": "6720:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6731:4:18",
														"nodeType": "YulTypedName",
														"src": "6731:4:18",
														"type": ""
													}
												],
												"src": "6670:307:18"
											},
											{
												"body": {
													"nativeSrc": "7047:84:18",
													"nodeType": "YulBlock",
													"src": "7047:84:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7071:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7071:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7076:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7076:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7081:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7081:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7058:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "7058:12:18"
																},
																"nativeSrc": "7058:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7058:30:18"
															},
															"nativeSrc": "7058:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7058:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7108:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7108:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7113:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7113:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7104:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7104:3:18"
																		},
																		"nativeSrc": "7104:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7104:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7122:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7097:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7097:6:18"
																},
																"nativeSrc": "7097:27:18",
																"nodeType": "YulFunctionCall",
																"src": "7097:27:18"
															},
															"nativeSrc": "7097:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "7097:27:18"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6983:148:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7029:3:18",
														"nodeType": "YulTypedName",
														"src": "7029:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7034:3:18",
														"nodeType": "YulTypedName",
														"src": "7034:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7039:6:18",
														"nodeType": "YulTypedName",
														"src": "7039:6:18",
														"type": ""
													}
												],
												"src": "6983:148:18"
											},
											{
												"body": {
													"nativeSrc": "7220:340:18",
													"nodeType": "YulBlock",
													"src": "7220:340:18",
													"statements": [
														{
															"nativeSrc": "7230:74:18",
															"nodeType": "YulAssignment",
															"src": "7230:74:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7296:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7296:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "7255:40:18",
																			"nodeType": "YulIdentifier",
																			"src": "7255:40:18"
																		},
																		"nativeSrc": "7255:48:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7255:48:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7239:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "7239:15:18"
																},
																"nativeSrc": "7239:65:18",
																"nodeType": "YulFunctionCall",
																"src": "7239:65:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7230:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7230:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7320:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7320:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7327:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7327:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7313:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7313:6:18"
																},
																"nativeSrc": "7313:21:18",
																"nodeType": "YulFunctionCall",
																"src": "7313:21:18"
															},
															"nativeSrc": "7313:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "7313:21:18"
														},
														{
															"nativeSrc": "7343:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7343:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7358:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7358:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7365:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7365:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7354:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:18"
																},
																"nativeSrc": "7354:16:18",
																"nodeType": "YulFunctionCall",
																"src": "7354:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7347:3:18",
																	"nodeType": "YulTypedName",
																	"src": "7347:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7408:83:18",
																"nodeType": "YulBlock",
																"src": "7408:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7410:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "7410:77:18"
																			},
																			"nativeSrc": "7410:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7410:79:18"
																		},
																		"nativeSrc": "7410:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7410:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7389:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7389:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7394:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7394:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7385:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:18"
																		},
																		"nativeSrc": "7385:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7385:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7403:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7403:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7382:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7382:2:18"
																},
																"nativeSrc": "7382:25:18",
																"nodeType": "YulFunctionCall",
																"src": "7382:25:18"
															},
															"nativeSrc": "7379:112:18",
															"nodeType": "YulIf",
															"src": "7379:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7537:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7537:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7542:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7542:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7547:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7547:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7500:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "7500:36:18"
																},
																"nativeSrc": "7500:54:18",
																"nodeType": "YulFunctionCall",
																"src": "7500:54:18"
															},
															"nativeSrc": "7500:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "7500:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "7137:423:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7193:3:18",
														"nodeType": "YulTypedName",
														"src": "7193:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7198:6:18",
														"nodeType": "YulTypedName",
														"src": "7198:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7206:3:18",
														"nodeType": "YulTypedName",
														"src": "7206:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7214:5:18",
														"nodeType": "YulTypedName",
														"src": "7214:5:18",
														"type": ""
													}
												],
												"src": "7137:423:18"
											},
											{
												"body": {
													"nativeSrc": "7640:277:18",
													"nodeType": "YulBlock",
													"src": "7640:277:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "7689:83:18",
																"nodeType": "YulBlock",
																"src": "7689:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7691:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "7691:77:18"
																			},
																			"nativeSrc": "7691:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7691:79:18"
																		},
																		"nativeSrc": "7691:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7691:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7668:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "7668:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7676:4:18",
																						"nodeType": "YulLiteral",
																						"src": "7676:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7664:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7664:3:18"
																				},
																				"nativeSrc": "7664:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7664:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7683:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7683:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7660:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7660:3:18"
																		},
																		"nativeSrc": "7660:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7660:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7653:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7653:6:18"
																},
																"nativeSrc": "7653:35:18",
																"nodeType": "YulFunctionCall",
																"src": "7653:35:18"
															},
															"nativeSrc": "7650:122:18",
															"nodeType": "YulIf",
															"src": "7650:122:18"
														},
														{
															"nativeSrc": "7781:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7781:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7808:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7808:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7795:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "7795:12:18"
																},
																"nativeSrc": "7795:20:18",
																"nodeType": "YulFunctionCall",
																"src": "7795:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7785:6:18",
																	"nodeType": "YulTypedName",
																	"src": "7785:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7824:87:18",
															"nodeType": "YulAssignment",
															"src": "7824:87:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7884:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7884:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7892:4:18",
																				"nodeType": "YulLiteral",
																				"src": "7892:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7880:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7880:3:18"
																		},
																		"nativeSrc": "7880:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7880:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7899:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7899:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7907:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7907:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "7833:46:18",
																	"nodeType": "YulIdentifier",
																	"src": "7833:46:18"
																},
																"nativeSrc": "7833:78:18",
																"nodeType": "YulFunctionCall",
																"src": "7833:78:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7824:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7824:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "7579:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7618:6:18",
														"nodeType": "YulTypedName",
														"src": "7618:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7626:3:18",
														"nodeType": "YulTypedName",
														"src": "7626:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7634:5:18",
														"nodeType": "YulTypedName",
														"src": "7634:5:18",
														"type": ""
													}
												],
												"src": "7579:338:18"
											},
											{
												"body": {
													"nativeSrc": "8015:560:18",
													"nodeType": "YulBlock",
													"src": "8015:560:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8061:83:18",
																"nodeType": "YulBlock",
																"src": "8061:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8063:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8063:77:18"
																			},
																			"nativeSrc": "8063:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8063:79:18"
																		},
																		"nativeSrc": "8063:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8063:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8036:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8036:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8045:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8045:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8032:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8032:3:18"
																		},
																		"nativeSrc": "8032:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8032:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8057:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8057:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8028:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8028:3:18"
																},
																"nativeSrc": "8028:32:18",
																"nodeType": "YulFunctionCall",
																"src": "8028:32:18"
															},
															"nativeSrc": "8025:119:18",
															"nodeType": "YulIf",
															"src": "8025:119:18"
														},
														{
															"nativeSrc": "8154:117:18",
															"nodeType": "YulBlock",
															"src": "8154:117:18",
															"statements": [
																{
																	"nativeSrc": "8169:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8169:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8183:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8183:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8173:6:18",
																			"nodeType": "YulTypedName",
																			"src": "8173:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8198:63:18",
																	"nodeType": "YulAssignment",
																	"src": "8198:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8233:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8233:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8244:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8244:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8229:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8229:3:18"
																				},
																				"nativeSrc": "8229:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8229:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8253:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8253:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8208:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "8208:20:18"
																		},
																		"nativeSrc": "8208:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8208:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8198:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8198:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8281:287:18",
															"nodeType": "YulBlock",
															"src": "8281:287:18",
															"statements": [
																{
																	"nativeSrc": "8296:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8296:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8327:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8327:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8338:2:18",
																						"nodeType": "YulLiteral",
																						"src": "8338:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8323:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8323:3:18"
																				},
																				"nativeSrc": "8323:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8323:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8310:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "8310:12:18"
																		},
																		"nativeSrc": "8310:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8310:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8300:6:18",
																			"nodeType": "YulTypedName",
																			"src": "8300:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8389:83:18",
																		"nodeType": "YulBlock",
																		"src": "8389:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8391:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "8391:77:18"
																					},
																					"nativeSrc": "8391:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8391:79:18"
																				},
																				"nativeSrc": "8391:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "8391:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8361:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8361:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8369:18:18",
																				"nodeType": "YulLiteral",
																				"src": "8369:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8358:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "8358:2:18"
																		},
																		"nativeSrc": "8358:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8358:30:18"
																	},
																	"nativeSrc": "8355:117:18",
																	"nodeType": "YulIf",
																	"src": "8355:117:18"
																},
																{
																	"nativeSrc": "8486:72:18",
																	"nodeType": "YulAssignment",
																	"src": "8486:72:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8530:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8530:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8541:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8541:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8526:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8526:3:18"
																				},
																				"nativeSrc": "8526:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8526:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8550:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8550:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "8496:29:18",
																			"nodeType": "YulIdentifier",
																			"src": "8496:29:18"
																		},
																		"nativeSrc": "8496:62:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8496:62:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8486:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8486:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "7923:652:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7977:9:18",
														"nodeType": "YulTypedName",
														"src": "7977:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7988:7:18",
														"nodeType": "YulTypedName",
														"src": "7988:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8000:6:18",
														"nodeType": "YulTypedName",
														"src": "8000:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8008:6:18",
														"nodeType": "YulTypedName",
														"src": "8008:6:18",
														"type": ""
													}
												],
												"src": "7923:652:18"
											},
											{
												"body": {
													"nativeSrc": "8626:32:18",
													"nodeType": "YulBlock",
													"src": "8626:32:18",
													"statements": [
														{
															"nativeSrc": "8636:16:18",
															"nodeType": "YulAssignment",
															"src": "8636:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "8647:5:18",
																"nodeType": "YulIdentifier",
																"src": "8647:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8636:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "8636:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "8581:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8608:5:18",
														"nodeType": "YulTypedName",
														"src": "8608:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8618:7:18",
														"nodeType": "YulTypedName",
														"src": "8618:7:18",
														"type": ""
													}
												],
												"src": "8581:77:18"
											},
											{
												"body": {
													"nativeSrc": "8729:53:18",
													"nodeType": "YulBlock",
													"src": "8729:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8746:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8746:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8769:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8769:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8751:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "8751:17:18"
																		},
																		"nativeSrc": "8751:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8751:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8739:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8739:6:18"
																},
																"nativeSrc": "8739:37:18",
																"nodeType": "YulFunctionCall",
																"src": "8739:37:18"
															},
															"nativeSrc": "8739:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "8739:37:18"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8664:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8717:5:18",
														"nodeType": "YulTypedName",
														"src": "8717:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8724:3:18",
														"nodeType": "YulTypedName",
														"src": "8724:3:18",
														"type": ""
													}
												],
												"src": "8664:118:18"
											},
											{
												"body": {
													"nativeSrc": "8886:124:18",
													"nodeType": "YulBlock",
													"src": "8886:124:18",
													"statements": [
														{
															"nativeSrc": "8896:26:18",
															"nodeType": "YulAssignment",
															"src": "8896:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8908:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8908:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8919:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8919:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8904:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8904:3:18"
																},
																"nativeSrc": "8904:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8904:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8896:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8896:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8976:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8976:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8989:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8989:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9000:1:18",
																				"nodeType": "YulLiteral",
																				"src": "9000:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8985:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8985:3:18"
																		},
																		"nativeSrc": "8985:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8985:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8932:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "8932:43:18"
																},
																"nativeSrc": "8932:71:18",
																"nodeType": "YulFunctionCall",
																"src": "8932:71:18"
															},
															"nativeSrc": "8932:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "8932:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "8788:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8858:9:18",
														"nodeType": "YulTypedName",
														"src": "8858:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8870:6:18",
														"nodeType": "YulTypedName",
														"src": "8870:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8881:4:18",
														"nodeType": "YulTypedName",
														"src": "8881:4:18",
														"type": ""
													}
												],
												"src": "8788:222:18"
											},
											{
												"body": {
													"nativeSrc": "9105:28:18",
													"nodeType": "YulBlock",
													"src": "9105:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9122:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9122:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9125:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9125:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9115:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9115:6:18"
																},
																"nativeSrc": "9115:12:18",
																"nodeType": "YulFunctionCall",
																"src": "9115:12:18"
															},
															"nativeSrc": "9115:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "9115:12:18"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "9016:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "9016:117:18"
											},
											{
												"body": {
													"nativeSrc": "9228:28:18",
													"nodeType": "YulBlock",
													"src": "9228:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9245:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9245:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9248:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9248:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9238:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9238:6:18"
																},
																"nativeSrc": "9238:12:18",
																"nodeType": "YulFunctionCall",
																"src": "9238:12:18"
															},
															"nativeSrc": "9238:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "9238:12:18"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "9139:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "9139:117:18"
											},
											{
												"body": {
													"nativeSrc": "9369:478:18",
													"nodeType": "YulBlock",
													"src": "9369:478:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9418:83:18",
																"nodeType": "YulBlock",
																"src": "9418:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9420:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9420:77:18"
																			},
																			"nativeSrc": "9420:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9420:79:18"
																		},
																		"nativeSrc": "9420:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9420:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9397:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9397:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9405:4:18",
																						"nodeType": "YulLiteral",
																						"src": "9405:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9393:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9393:3:18"
																				},
																				"nativeSrc": "9393:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9393:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9412:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9412:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9389:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9389:3:18"
																		},
																		"nativeSrc": "9389:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9389:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9382:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9382:6:18"
																},
																"nativeSrc": "9382:35:18",
																"nodeType": "YulFunctionCall",
																"src": "9382:35:18"
															},
															"nativeSrc": "9379:122:18",
															"nodeType": "YulIf",
															"src": "9379:122:18"
														},
														{
															"nativeSrc": "9510:30:18",
															"nodeType": "YulAssignment",
															"src": "9510:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9533:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9533:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9520:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "9520:12:18"
																},
																"nativeSrc": "9520:20:18",
																"nodeType": "YulFunctionCall",
																"src": "9520:20:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9510:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9510:6:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9583:83:18",
																"nodeType": "YulBlock",
																"src": "9583:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "9585:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9585:77:18"
																			},
																			"nativeSrc": "9585:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9585:79:18"
																		},
																		"nativeSrc": "9585:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9585:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9555:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9555:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9563:18:18",
																		"nodeType": "YulLiteral",
																		"src": "9563:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9552:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9552:2:18"
																},
																"nativeSrc": "9552:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9552:30:18"
															},
															"nativeSrc": "9549:117:18",
															"nodeType": "YulIf",
															"src": "9549:117:18"
														},
														{
															"nativeSrc": "9675:29:18",
															"nodeType": "YulAssignment",
															"src": "9675:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9691:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9691:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9699:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9699:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9687:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9687:3:18"
																},
																"nativeSrc": "9687:17:18",
																"nodeType": "YulFunctionCall",
																"src": "9687:17:18"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "9675:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "9675:8:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9758:83:18",
																"nodeType": "YulBlock",
																"src": "9758:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9760:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9760:77:18"
																			},
																			"nativeSrc": "9760:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9760:79:18"
																		},
																		"nativeSrc": "9760:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9760:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "9723:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "9723:8:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "9737:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9737:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9745:4:18",
																						"nodeType": "YulLiteral",
																						"src": "9745:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9733:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:18"
																				},
																				"nativeSrc": "9733:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9733:17:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9719:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9719:3:18"
																		},
																		"nativeSrc": "9719:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9719:32:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9753:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9753:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9716:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9716:2:18"
																},
																"nativeSrc": "9716:41:18",
																"nodeType": "YulFunctionCall",
																"src": "9716:41:18"
															},
															"nativeSrc": "9713:128:18",
															"nodeType": "YulIf",
															"src": "9713:128:18"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "9279:568:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9336:6:18",
														"nodeType": "YulTypedName",
														"src": "9336:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9344:3:18",
														"nodeType": "YulTypedName",
														"src": "9344:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "9352:8:18",
														"nodeType": "YulTypedName",
														"src": "9352:8:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9362:6:18",
														"nodeType": "YulTypedName",
														"src": "9362:6:18",
														"type": ""
													}
												],
												"src": "9279:568:18"
											},
											{
												"body": {
													"nativeSrc": "9960:478:18",
													"nodeType": "YulBlock",
													"src": "9960:478:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10009:83:18",
																"nodeType": "YulBlock",
																"src": "10009:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10011:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10011:77:18"
																			},
																			"nativeSrc": "10011:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10011:79:18"
																		},
																		"nativeSrc": "10011:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10011:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9988:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9988:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9996:4:18",
																						"nodeType": "YulLiteral",
																						"src": "9996:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9984:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9984:3:18"
																				},
																				"nativeSrc": "9984:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9984:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10003:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10003:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9980:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9980:3:18"
																		},
																		"nativeSrc": "9980:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9980:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9973:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9973:6:18"
																},
																"nativeSrc": "9973:35:18",
																"nodeType": "YulFunctionCall",
																"src": "9973:35:18"
															},
															"nativeSrc": "9970:122:18",
															"nodeType": "YulIf",
															"src": "9970:122:18"
														},
														{
															"nativeSrc": "10101:30:18",
															"nodeType": "YulAssignment",
															"src": "10101:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10124:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10124:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10111:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "10111:12:18"
																},
																"nativeSrc": "10111:20:18",
																"nodeType": "YulFunctionCall",
																"src": "10111:20:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10101:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10101:6:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10174:83:18",
																"nodeType": "YulBlock",
																"src": "10174:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "10176:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10176:77:18"
																			},
																			"nativeSrc": "10176:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10176:79:18"
																		},
																		"nativeSrc": "10176:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10176:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10146:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10146:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10154:18:18",
																		"nodeType": "YulLiteral",
																		"src": "10154:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10143:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10143:2:18"
																},
																"nativeSrc": "10143:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10143:30:18"
															},
															"nativeSrc": "10140:117:18",
															"nodeType": "YulIf",
															"src": "10140:117:18"
														},
														{
															"nativeSrc": "10266:29:18",
															"nodeType": "YulAssignment",
															"src": "10266:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10282:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10282:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10290:4:18",
																		"nodeType": "YulLiteral",
																		"src": "10290:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10278:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10278:3:18"
																},
																"nativeSrc": "10278:17:18",
																"nodeType": "YulFunctionCall",
																"src": "10278:17:18"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "10266:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "10266:8:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10349:83:18",
																"nodeType": "YulBlock",
																"src": "10349:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10351:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10351:77:18"
																			},
																			"nativeSrc": "10351:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10351:79:18"
																		},
																		"nativeSrc": "10351:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10351:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "10314:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "10314:8:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "10328:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10328:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10336:4:18",
																						"nodeType": "YulLiteral",
																						"src": "10336:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10324:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10324:3:18"
																				},
																				"nativeSrc": "10324:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10324:17:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10310:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10310:3:18"
																		},
																		"nativeSrc": "10310:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10310:32:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10344:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10344:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10307:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10307:2:18"
																},
																"nativeSrc": "10307:41:18",
																"nodeType": "YulFunctionCall",
																"src": "10307:41:18"
															},
															"nativeSrc": "10304:128:18",
															"nodeType": "YulIf",
															"src": "10304:128:18"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "9870:568:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9927:6:18",
														"nodeType": "YulTypedName",
														"src": "9927:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9935:3:18",
														"nodeType": "YulTypedName",
														"src": "9935:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "9943:8:18",
														"nodeType": "YulTypedName",
														"src": "9943:8:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9953:6:18",
														"nodeType": "YulTypedName",
														"src": "9953:6:18",
														"type": ""
													}
												],
												"src": "9870:568:18"
											},
											{
												"body": {
													"nativeSrc": "10597:781:18",
													"nodeType": "YulBlock",
													"src": "10597:781:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10643:83:18",
																"nodeType": "YulBlock",
																"src": "10643:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10645:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10645:77:18"
																			},
																			"nativeSrc": "10645:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10645:79:18"
																		},
																		"nativeSrc": "10645:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10645:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10618:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10618:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10627:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10627:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10614:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10614:3:18"
																		},
																		"nativeSrc": "10614:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10614:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10639:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10639:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10610:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10610:3:18"
																},
																"nativeSrc": "10610:32:18",
																"nodeType": "YulFunctionCall",
																"src": "10610:32:18"
															},
															"nativeSrc": "10607:119:18",
															"nodeType": "YulIf",
															"src": "10607:119:18"
														},
														{
															"nativeSrc": "10736:312:18",
															"nodeType": "YulBlock",
															"src": "10736:312:18",
															"statements": [
																{
																	"nativeSrc": "10751:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10751:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10782:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10782:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10793:1:18",
																						"nodeType": "YulLiteral",
																						"src": "10793:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10778:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10778:3:18"
																				},
																				"nativeSrc": "10778:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10778:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10765:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "10765:12:18"
																		},
																		"nativeSrc": "10765:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10765:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10755:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10755:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10843:83:18",
																		"nodeType": "YulBlock",
																		"src": "10843:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10845:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "10845:77:18"
																					},
																					"nativeSrc": "10845:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10845:79:18"
																				},
																				"nativeSrc": "10845:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "10845:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10815:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10815:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10823:18:18",
																				"nodeType": "YulLiteral",
																				"src": "10823:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10812:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "10812:2:18"
																		},
																		"nativeSrc": "10812:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10812:30:18"
																	},
																	"nativeSrc": "10809:117:18",
																	"nodeType": "YulIf",
																	"src": "10809:117:18"
																},
																{
																	"nativeSrc": "10940:98:18",
																	"nodeType": "YulAssignment",
																	"src": "10940:98:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11010:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11010:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11021:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11021:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11006:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11006:3:18"
																				},
																				"nativeSrc": "11006:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11006:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11030:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11030:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "10958:47:18",
																			"nodeType": "YulIdentifier",
																			"src": "10958:47:18"
																		},
																		"nativeSrc": "10958:80:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10958:80:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10940:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10940:6:18"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "10948:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10948:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11058:313:18",
															"nodeType": "YulBlock",
															"src": "11058:313:18",
															"statements": [
																{
																	"nativeSrc": "11073:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11073:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11104:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11104:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11115:2:18",
																						"nodeType": "YulLiteral",
																						"src": "11115:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11100:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11100:3:18"
																				},
																				"nativeSrc": "11100:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11100:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11087:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "11087:12:18"
																		},
																		"nativeSrc": "11087:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11087:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11077:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11077:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11166:83:18",
																		"nodeType": "YulBlock",
																		"src": "11166:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11168:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "11168:77:18"
																					},
																					"nativeSrc": "11168:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11168:79:18"
																				},
																				"nativeSrc": "11168:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "11168:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11138:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11138:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11146:18:18",
																				"nodeType": "YulLiteral",
																				"src": "11146:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11135:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "11135:2:18"
																		},
																		"nativeSrc": "11135:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11135:30:18"
																	},
																	"nativeSrc": "11132:117:18",
																	"nodeType": "YulIf",
																	"src": "11132:117:18"
																},
																{
																	"nativeSrc": "11263:98:18",
																	"nodeType": "YulAssignment",
																	"src": "11263:98:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11333:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11333:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11344:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11344:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11329:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11329:3:18"
																				},
																				"nativeSrc": "11329:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11329:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11353:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11353:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "11281:47:18",
																			"nodeType": "YulIdentifier",
																			"src": "11281:47:18"
																		},
																		"nativeSrc": "11281:80:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11281:80:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11263:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11263:6:18"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "11271:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11271:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "10444:934:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10543:9:18",
														"nodeType": "YulTypedName",
														"src": "10543:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10554:7:18",
														"nodeType": "YulTypedName",
														"src": "10554:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10566:6:18",
														"nodeType": "YulTypedName",
														"src": "10566:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10574:6:18",
														"nodeType": "YulTypedName",
														"src": "10574:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10582:6:18",
														"nodeType": "YulTypedName",
														"src": "10582:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10590:6:18",
														"nodeType": "YulTypedName",
														"src": "10590:6:18",
														"type": ""
													}
												],
												"src": "10444:934:18"
											},
											{
												"body": {
													"nativeSrc": "11449:53:18",
													"nodeType": "YulBlock",
													"src": "11449:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11466:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11466:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11489:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "11489:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11471:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "11471:17:18"
																		},
																		"nativeSrc": "11471:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11471:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11459:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11459:6:18"
																},
																"nativeSrc": "11459:37:18",
																"nodeType": "YulFunctionCall",
																"src": "11459:37:18"
															},
															"nativeSrc": "11459:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "11459:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11384:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11437:5:18",
														"nodeType": "YulTypedName",
														"src": "11437:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11444:3:18",
														"nodeType": "YulTypedName",
														"src": "11444:3:18",
														"type": ""
													}
												],
												"src": "11384:118:18"
											},
											{
												"body": {
													"nativeSrc": "11606:124:18",
													"nodeType": "YulBlock",
													"src": "11606:124:18",
													"statements": [
														{
															"nativeSrc": "11616:26:18",
															"nodeType": "YulAssignment",
															"src": "11616:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11628:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11628:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11639:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11639:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11624:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11624:3:18"
																},
																"nativeSrc": "11624:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11624:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11616:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11616:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11696:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11696:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11709:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11709:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11720:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11720:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11705:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11705:3:18"
																		},
																		"nativeSrc": "11705:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11705:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11652:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "11652:43:18"
																},
																"nativeSrc": "11652:71:18",
																"nodeType": "YulFunctionCall",
																"src": "11652:71:18"
															},
															"nativeSrc": "11652:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "11652:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11508:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11578:9:18",
														"nodeType": "YulTypedName",
														"src": "11578:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11590:6:18",
														"nodeType": "YulTypedName",
														"src": "11590:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11601:4:18",
														"nodeType": "YulTypedName",
														"src": "11601:4:18",
														"type": ""
													}
												],
												"src": "11508:222:18"
											},
											{
												"body": {
													"nativeSrc": "11803:241:18",
													"nodeType": "YulBlock",
													"src": "11803:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11908:22:18",
																"nodeType": "YulBlock",
																"src": "11908:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11910:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "11910:16:18"
																			},
																			"nativeSrc": "11910:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11910:18:18"
																		},
																		"nativeSrc": "11910:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11910:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11880:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11880:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11888:18:18",
																		"nodeType": "YulLiteral",
																		"src": "11888:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11877:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11877:2:18"
																},
																"nativeSrc": "11877:30:18",
																"nodeType": "YulFunctionCall",
																"src": "11877:30:18"
															},
															"nativeSrc": "11874:56:18",
															"nodeType": "YulIf",
															"src": "11874:56:18"
														},
														{
															"nativeSrc": "11940:37:18",
															"nodeType": "YulAssignment",
															"src": "11940:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11970:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11970:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "11948:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "11948:21:18"
																},
																"nativeSrc": "11948:29:18",
																"nodeType": "YulFunctionCall",
																"src": "11948:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11940:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11940:4:18"
																}
															]
														},
														{
															"nativeSrc": "12014:23:18",
															"nodeType": "YulAssignment",
															"src": "12014:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "12026:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "12026:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12032:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12032:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12022:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12022:3:18"
																},
																"nativeSrc": "12022:15:18",
																"nodeType": "YulFunctionCall",
																"src": "12022:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12014:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12014:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "11736:308:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "11787:6:18",
														"nodeType": "YulTypedName",
														"src": "11787:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "11798:4:18",
														"nodeType": "YulTypedName",
														"src": "11798:4:18",
														"type": ""
													}
												],
												"src": "11736:308:18"
											},
											{
												"body": {
													"nativeSrc": "12134:341:18",
													"nodeType": "YulBlock",
													"src": "12134:341:18",
													"statements": [
														{
															"nativeSrc": "12144:75:18",
															"nodeType": "YulAssignment",
															"src": "12144:75:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12211:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12211:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "12169:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "12169:41:18"
																		},
																		"nativeSrc": "12169:49:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12169:49:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12153:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "12153:15:18"
																},
																"nativeSrc": "12153:66:18",
																"nodeType": "YulFunctionCall",
																"src": "12153:66:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12144:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12144:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12235:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12235:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12242:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12242:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12228:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12228:6:18"
																},
																"nativeSrc": "12228:21:18",
																"nodeType": "YulFunctionCall",
																"src": "12228:21:18"
															},
															"nativeSrc": "12228:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "12228:21:18"
														},
														{
															"nativeSrc": "12258:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12258:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12273:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12273:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12280:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12280:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12269:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12269:3:18"
																},
																"nativeSrc": "12269:16:18",
																"nodeType": "YulFunctionCall",
																"src": "12269:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12262:3:18",
																	"nodeType": "YulTypedName",
																	"src": "12262:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12323:83:18",
																"nodeType": "YulBlock",
																"src": "12323:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "12325:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "12325:77:18"
																			},
																			"nativeSrc": "12325:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12325:79:18"
																		},
																		"nativeSrc": "12325:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12325:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "12304:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "12304:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12309:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12309:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12300:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12300:3:18"
																		},
																		"nativeSrc": "12300:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12300:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12318:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12318:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12297:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12297:2:18"
																},
																"nativeSrc": "12297:25:18",
																"nodeType": "YulFunctionCall",
																"src": "12297:25:18"
															},
															"nativeSrc": "12294:112:18",
															"nodeType": "YulIf",
															"src": "12294:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12452:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12452:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "12457:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12457:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12462:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12462:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "12415:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "12415:36:18"
																},
																"nativeSrc": "12415:54:18",
																"nodeType": "YulFunctionCall",
																"src": "12415:54:18"
															},
															"nativeSrc": "12415:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "12415:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "12050:425:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12107:3:18",
														"nodeType": "YulTypedName",
														"src": "12107:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12112:6:18",
														"nodeType": "YulTypedName",
														"src": "12112:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12120:3:18",
														"nodeType": "YulTypedName",
														"src": "12120:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12128:5:18",
														"nodeType": "YulTypedName",
														"src": "12128:5:18",
														"type": ""
													}
												],
												"src": "12050:425:18"
											},
											{
												"body": {
													"nativeSrc": "12557:278:18",
													"nodeType": "YulBlock",
													"src": "12557:278:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12606:83:18",
																"nodeType": "YulBlock",
																"src": "12606:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12608:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "12608:77:18"
																			},
																			"nativeSrc": "12608:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12608:79:18"
																		},
																		"nativeSrc": "12608:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12608:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12585:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12585:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12593:4:18",
																						"nodeType": "YulLiteral",
																						"src": "12593:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12581:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12581:3:18"
																				},
																				"nativeSrc": "12581:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12581:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12600:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "12600:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12577:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12577:3:18"
																		},
																		"nativeSrc": "12577:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12577:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12570:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12570:6:18"
																},
																"nativeSrc": "12570:35:18",
																"nodeType": "YulFunctionCall",
																"src": "12570:35:18"
															},
															"nativeSrc": "12567:122:18",
															"nodeType": "YulIf",
															"src": "12567:122:18"
														},
														{
															"nativeSrc": "12698:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12698:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12725:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12725:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12712:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "12712:12:18"
																},
																"nativeSrc": "12712:20:18",
																"nodeType": "YulFunctionCall",
																"src": "12712:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12702:6:18",
																	"nodeType": "YulTypedName",
																	"src": "12702:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12741:88:18",
															"nodeType": "YulAssignment",
															"src": "12741:88:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12802:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12802:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12810:4:18",
																				"nodeType": "YulLiteral",
																				"src": "12810:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12798:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12798:3:18"
																		},
																		"nativeSrc": "12798:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12798:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12817:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12817:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12825:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12825:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "12750:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "12750:47:18"
																},
																"nativeSrc": "12750:79:18",
																"nodeType": "YulFunctionCall",
																"src": "12750:79:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12741:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12741:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "12495:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12535:6:18",
														"nodeType": "YulTypedName",
														"src": "12535:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12543:3:18",
														"nodeType": "YulTypedName",
														"src": "12543:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12551:5:18",
														"nodeType": "YulTypedName",
														"src": "12551:5:18",
														"type": ""
													}
												],
												"src": "12495:340:18"
											},
											{
												"body": {
													"nativeSrc": "12961:859:18",
													"nodeType": "YulBlock",
													"src": "12961:859:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "13007:83:18",
																"nodeType": "YulBlock",
																"src": "13007:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13009:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "13009:77:18"
																			},
																			"nativeSrc": "13009:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13009:79:18"
																		},
																		"nativeSrc": "13009:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13009:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12982:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12982:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12991:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12991:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12978:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12978:3:18"
																		},
																		"nativeSrc": "12978:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12978:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13003:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13003:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12974:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12974:3:18"
																},
																"nativeSrc": "12974:32:18",
																"nodeType": "YulFunctionCall",
																"src": "12974:32:18"
															},
															"nativeSrc": "12971:119:18",
															"nodeType": "YulIf",
															"src": "12971:119:18"
														},
														{
															"nativeSrc": "13100:287:18",
															"nodeType": "YulBlock",
															"src": "13100:287:18",
															"statements": [
																{
																	"nativeSrc": "13115:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13115:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13146:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13146:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13157:1:18",
																						"nodeType": "YulLiteral",
																						"src": "13157:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13142:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13142:3:18"
																				},
																				"nativeSrc": "13142:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13142:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13129:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "13129:12:18"
																		},
																		"nativeSrc": "13129:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13129:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13119:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13119:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13207:83:18",
																		"nodeType": "YulBlock",
																		"src": "13207:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13209:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "13209:77:18"
																					},
																					"nativeSrc": "13209:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13209:79:18"
																				},
																				"nativeSrc": "13209:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "13209:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13179:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13179:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13187:18:18",
																				"nodeType": "YulLiteral",
																				"src": "13187:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13176:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "13176:2:18"
																		},
																		"nativeSrc": "13176:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13176:30:18"
																	},
																	"nativeSrc": "13173:117:18",
																	"nodeType": "YulIf",
																	"src": "13173:117:18"
																},
																{
																	"nativeSrc": "13304:73:18",
																	"nodeType": "YulAssignment",
																	"src": "13304:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13349:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13349:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13360:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13360:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13345:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13345:3:18"
																				},
																				"nativeSrc": "13345:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13345:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13369:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13369:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "13314:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "13314:30:18"
																		},
																		"nativeSrc": "13314:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13314:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13304:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13304:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13397:288:18",
															"nodeType": "YulBlock",
															"src": "13397:288:18",
															"statements": [
																{
																	"nativeSrc": "13412:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13412:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13443:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13443:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13454:2:18",
																						"nodeType": "YulLiteral",
																						"src": "13454:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13439:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13439:3:18"
																				},
																				"nativeSrc": "13439:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13439:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13426:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "13426:12:18"
																		},
																		"nativeSrc": "13426:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13426:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13416:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13416:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13505:83:18",
																		"nodeType": "YulBlock",
																		"src": "13505:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13507:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "13507:77:18"
																					},
																					"nativeSrc": "13507:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13507:79:18"
																				},
																				"nativeSrc": "13507:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "13507:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13477:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13477:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13485:18:18",
																				"nodeType": "YulLiteral",
																				"src": "13485:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13474:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "13474:2:18"
																		},
																		"nativeSrc": "13474:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13474:30:18"
																	},
																	"nativeSrc": "13471:117:18",
																	"nodeType": "YulIf",
																	"src": "13471:117:18"
																},
																{
																	"nativeSrc": "13602:73:18",
																	"nodeType": "YulAssignment",
																	"src": "13602:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13647:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13647:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13658:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13658:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13643:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13643:3:18"
																				},
																				"nativeSrc": "13643:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13643:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13667:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13667:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "13612:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "13612:30:18"
																		},
																		"nativeSrc": "13612:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13612:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13602:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13602:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13695:118:18",
															"nodeType": "YulBlock",
															"src": "13695:118:18",
															"statements": [
																{
																	"nativeSrc": "13710:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13710:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13724:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13724:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13714:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13714:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13740:63:18",
																	"nodeType": "YulAssignment",
																	"src": "13740:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13775:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13775:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13786:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13786:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13771:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13771:3:18"
																				},
																				"nativeSrc": "13771:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13771:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13795:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13795:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13750:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "13750:20:18"
																		},
																		"nativeSrc": "13750:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13750:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13740:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13740:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
												"nativeSrc": "12841:979:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12915:9:18",
														"nodeType": "YulTypedName",
														"src": "12915:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12926:7:18",
														"nodeType": "YulTypedName",
														"src": "12926:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12938:6:18",
														"nodeType": "YulTypedName",
														"src": "12938:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12946:6:18",
														"nodeType": "YulTypedName",
														"src": "12946:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12954:6:18",
														"nodeType": "YulTypedName",
														"src": "12954:6:18",
														"type": ""
													}
												],
												"src": "12841:979:18"
											},
											{
												"body": {
													"nativeSrc": "13909:391:18",
													"nodeType": "YulBlock",
													"src": "13909:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "13955:83:18",
																"nodeType": "YulBlock",
																"src": "13955:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13957:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "13957:77:18"
																			},
																			"nativeSrc": "13957:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13957:79:18"
																		},
																		"nativeSrc": "13957:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13957:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13930:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13930:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13939:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13939:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13926:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13926:3:18"
																		},
																		"nativeSrc": "13926:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13926:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13951:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13951:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13922:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13922:3:18"
																},
																"nativeSrc": "13922:32:18",
																"nodeType": "YulFunctionCall",
																"src": "13922:32:18"
															},
															"nativeSrc": "13919:119:18",
															"nodeType": "YulIf",
															"src": "13919:119:18"
														},
														{
															"nativeSrc": "14048:117:18",
															"nodeType": "YulBlock",
															"src": "14048:117:18",
															"statements": [
																{
																	"nativeSrc": "14063:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14063:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14077:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14077:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14067:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14067:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14092:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14092:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14127:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14127:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14138:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14138:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14123:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14123:3:18"
																				},
																				"nativeSrc": "14123:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14123:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14147:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14147:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14102:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14102:20:18"
																		},
																		"nativeSrc": "14102:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14102:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14092:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14092:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14175:118:18",
															"nodeType": "YulBlock",
															"src": "14175:118:18",
															"statements": [
																{
																	"nativeSrc": "14190:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14190:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14204:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14204:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14194:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14194:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14220:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14220:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14255:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14255:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14266:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14266:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14251:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14251:3:18"
																				},
																				"nativeSrc": "14251:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14251:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14275:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14275:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14230:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14230:20:18"
																		},
																		"nativeSrc": "14230:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14230:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14220:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14220:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13826:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13871:9:18",
														"nodeType": "YulTypedName",
														"src": "13871:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13882:7:18",
														"nodeType": "YulTypedName",
														"src": "13882:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13894:6:18",
														"nodeType": "YulTypedName",
														"src": "13894:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13902:6:18",
														"nodeType": "YulTypedName",
														"src": "13902:6:18",
														"type": ""
													}
												],
												"src": "13826:474:18"
											},
											{
												"body": {
													"nativeSrc": "14406:519:18",
													"nodeType": "YulBlock",
													"src": "14406:519:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "14452:83:18",
																"nodeType": "YulBlock",
																"src": "14452:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14454:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "14454:77:18"
																			},
																			"nativeSrc": "14454:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14454:79:18"
																		},
																		"nativeSrc": "14454:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "14454:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14427:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14427:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14436:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14436:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14423:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14423:3:18"
																		},
																		"nativeSrc": "14423:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14423:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14448:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14448:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14419:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14419:3:18"
																},
																"nativeSrc": "14419:32:18",
																"nodeType": "YulFunctionCall",
																"src": "14419:32:18"
															},
															"nativeSrc": "14416:119:18",
															"nodeType": "YulIf",
															"src": "14416:119:18"
														},
														{
															"nativeSrc": "14545:117:18",
															"nodeType": "YulBlock",
															"src": "14545:117:18",
															"statements": [
																{
																	"nativeSrc": "14560:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14560:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14574:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14574:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14564:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14564:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14589:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14589:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14624:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14624:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14635:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14635:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14620:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14620:3:18"
																				},
																				"nativeSrc": "14620:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14620:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14644:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14644:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14599:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14599:20:18"
																		},
																		"nativeSrc": "14599:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14599:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14589:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14589:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14672:118:18",
															"nodeType": "YulBlock",
															"src": "14672:118:18",
															"statements": [
																{
																	"nativeSrc": "14687:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14687:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14701:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14701:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14691:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14691:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14717:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14717:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14752:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14752:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14763:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14763:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14748:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14748:3:18"
																				},
																				"nativeSrc": "14748:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14748:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14772:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14772:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "14727:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14727:20:18"
																		},
																		"nativeSrc": "14727:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14727:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14717:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14717:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14800:118:18",
															"nodeType": "YulBlock",
															"src": "14800:118:18",
															"statements": [
																{
																	"nativeSrc": "14815:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14815:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14829:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14829:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14819:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14819:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14845:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14845:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14880:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14880:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14891:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14891:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14876:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14876:3:18"
																				},
																				"nativeSrc": "14876:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14876:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14900:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14900:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "14855:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14855:20:18"
																		},
																		"nativeSrc": "14855:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14855:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "14845:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14845:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "14306:619:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14360:9:18",
														"nodeType": "YulTypedName",
														"src": "14360:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14371:7:18",
														"nodeType": "YulTypedName",
														"src": "14371:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14383:6:18",
														"nodeType": "YulTypedName",
														"src": "14383:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14391:6:18",
														"nodeType": "YulTypedName",
														"src": "14391:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14399:6:18",
														"nodeType": "YulTypedName",
														"src": "14399:6:18",
														"type": ""
													}
												],
												"src": "14306:619:18"
											},
											{
												"body": {
													"nativeSrc": "14959:152:18",
													"nodeType": "YulBlock",
													"src": "14959:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14976:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14976:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14979:77:18",
																		"nodeType": "YulLiteral",
																		"src": "14979:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14969:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14969:6:18"
																},
																"nativeSrc": "14969:88:18",
																"nodeType": "YulFunctionCall",
																"src": "14969:88:18"
															},
															"nativeSrc": "14969:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "14969:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15073:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15073:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15076:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15076:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15066:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15066:6:18"
																},
																"nativeSrc": "15066:15:18",
																"nodeType": "YulFunctionCall",
																"src": "15066:15:18"
															},
															"nativeSrc": "15066:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "15066:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15097:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15097:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15100:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15100:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15090:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15090:6:18"
																},
																"nativeSrc": "15090:15:18",
																"nodeType": "YulFunctionCall",
																"src": "15090:15:18"
															},
															"nativeSrc": "15090:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "15090:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "14931:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "14931:180:18"
											},
											{
												"body": {
													"nativeSrc": "15168:269:18",
													"nodeType": "YulBlock",
													"src": "15168:269:18",
													"statements": [
														{
															"nativeSrc": "15178:22:18",
															"nodeType": "YulAssignment",
															"src": "15178:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15192:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "15192:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15198:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15198:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15188:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15188:3:18"
																},
																"nativeSrc": "15188:12:18",
																"nodeType": "YulFunctionCall",
																"src": "15188:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15178:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15178:6:18"
																}
															]
														},
														{
															"nativeSrc": "15209:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15209:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15239:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "15239:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15245:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15245:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15235:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15235:3:18"
																},
																"nativeSrc": "15235:12:18",
																"nodeType": "YulFunctionCall",
																"src": "15235:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "15213:18:18",
																	"nodeType": "YulTypedName",
																	"src": "15213:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15286:51:18",
																"nodeType": "YulBlock",
																"src": "15286:51:18",
																"statements": [
																	{
																		"nativeSrc": "15300:27:18",
																		"nodeType": "YulAssignment",
																		"src": "15300:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "15314:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "15314:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15322:4:18",
																					"nodeType": "YulLiteral",
																					"src": "15322:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "15310:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "15310:3:18"
																			},
																			"nativeSrc": "15310:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15310:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "15300:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15300:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15266:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "15266:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15259:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15259:6:18"
																},
																"nativeSrc": "15259:26:18",
																"nodeType": "YulFunctionCall",
																"src": "15259:26:18"
															},
															"nativeSrc": "15256:81:18",
															"nodeType": "YulIf",
															"src": "15256:81:18"
														},
														{
															"body": {
																"nativeSrc": "15389:42:18",
																"nodeType": "YulBlock",
																"src": "15389:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "15403:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "15403:16:18"
																			},
																			"nativeSrc": "15403:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15403:18:18"
																		},
																		"nativeSrc": "15403:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "15403:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15353:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "15353:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15376:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15376:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15384:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15384:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "15373:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "15373:2:18"
																		},
																		"nativeSrc": "15373:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15373:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15350:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "15350:2:18"
																},
																"nativeSrc": "15350:38:18",
																"nodeType": "YulFunctionCall",
																"src": "15350:38:18"
															},
															"nativeSrc": "15347:84:18",
															"nodeType": "YulIf",
															"src": "15347:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "15117:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15152:4:18",
														"nodeType": "YulTypedName",
														"src": "15152:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15161:6:18",
														"nodeType": "YulTypedName",
														"src": "15161:6:18",
														"type": ""
													}
												],
												"src": "15117:320:18"
											},
											{
												"body": {
													"nativeSrc": "15549:56:18",
													"nodeType": "YulBlock",
													"src": "15549:56:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15571:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15571:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15579:1:18",
																				"nodeType": "YulLiteral",
																				"src": "15579:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15567:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15567:3:18"
																		},
																		"nativeSrc": "15567:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15567:14:18"
																	},
																	{
																		"hexValue": "4e756c6c2041646472657373",
																		"kind": "string",
																		"nativeSrc": "15583:14:18",
																		"nodeType": "YulLiteral",
																		"src": "15583:14:18",
																		"type": "",
																		"value": "Null Address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15560:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15560:6:18"
																},
																"nativeSrc": "15560:38:18",
																"nodeType": "YulFunctionCall",
																"src": "15560:38:18"
															},
															"nativeSrc": "15560:38:18",
															"nodeType": "YulExpressionStatement",
															"src": "15560:38:18"
														}
													]
												},
												"name": "store_literal_in_memory_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
												"nativeSrc": "15443:162:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15541:6:18",
														"nodeType": "YulTypedName",
														"src": "15541:6:18",
														"type": ""
													}
												],
												"src": "15443:162:18"
											},
											{
												"body": {
													"nativeSrc": "15757:220:18",
													"nodeType": "YulBlock",
													"src": "15757:220:18",
													"statements": [
														{
															"nativeSrc": "15767:74:18",
															"nodeType": "YulAssignment",
															"src": "15767:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15833:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15833:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15838:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15838:2:18",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15774:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "15774:58:18"
																},
																"nativeSrc": "15774:67:18",
																"nodeType": "YulFunctionCall",
																"src": "15774:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15767:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15767:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15939:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15939:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																	"nativeSrc": "15850:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "15850:88:18"
																},
																"nativeSrc": "15850:93:18",
																"nodeType": "YulFunctionCall",
																"src": "15850:93:18"
															},
															"nativeSrc": "15850:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "15850:93:18"
														},
														{
															"nativeSrc": "15952:19:18",
															"nodeType": "YulAssignment",
															"src": "15952:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15963:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15963:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15968:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15968:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15959:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15959:3:18"
																},
																"nativeSrc": "15959:12:18",
																"nodeType": "YulFunctionCall",
																"src": "15959:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15952:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15952:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15611:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15745:3:18",
														"nodeType": "YulTypedName",
														"src": "15745:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15753:3:18",
														"nodeType": "YulTypedName",
														"src": "15753:3:18",
														"type": ""
													}
												],
												"src": "15611:366:18"
											},
											{
												"body": {
													"nativeSrc": "16154:248:18",
													"nodeType": "YulBlock",
													"src": "16154:248:18",
													"statements": [
														{
															"nativeSrc": "16164:26:18",
															"nodeType": "YulAssignment",
															"src": "16164:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16176:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "16176:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16187:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16187:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16172:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16172:3:18"
																},
																"nativeSrc": "16172:18:18",
																"nodeType": "YulFunctionCall",
																"src": "16172:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16164:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16164:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16211:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16211:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16222:1:18",
																				"nodeType": "YulLiteral",
																				"src": "16222:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16207:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16207:3:18"
																		},
																		"nativeSrc": "16207:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16207:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16230:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "16230:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16236:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16236:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16226:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16226:3:18"
																		},
																		"nativeSrc": "16226:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16226:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16200:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16200:6:18"
																},
																"nativeSrc": "16200:47:18",
																"nodeType": "YulFunctionCall",
																"src": "16200:47:18"
															},
															"nativeSrc": "16200:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "16200:47:18"
														},
														{
															"nativeSrc": "16256:139:18",
															"nodeType": "YulAssignment",
															"src": "16256:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16390:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "16390:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16264:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "16264:124:18"
																},
																"nativeSrc": "16264:131:18",
																"nodeType": "YulFunctionCall",
																"src": "16264:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16256:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16256:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15983:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16134:9:18",
														"nodeType": "YulTypedName",
														"src": "16134:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16149:4:18",
														"nodeType": "YulTypedName",
														"src": "16149:4:18",
														"type": ""
													}
												],
												"src": "15983:419:18"
											},
											{
												"body": {
													"nativeSrc": "16514:119:18",
													"nodeType": "YulBlock",
													"src": "16514:119:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16536:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16536:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16544:1:18",
																				"nodeType": "YulLiteral",
																				"src": "16544:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16532:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16532:3:18"
																		},
																		"nativeSrc": "16532:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16532:14:18"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b",
																		"kind": "string",
																		"nativeSrc": "16548:34:18",
																		"nodeType": "YulLiteral",
																		"src": "16548:34:18",
																		"type": "",
																		"value": "Transfer failed: Sender is black"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16525:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16525:6:18"
																},
																"nativeSrc": "16525:58:18",
																"nodeType": "YulFunctionCall",
																"src": "16525:58:18"
															},
															"nativeSrc": "16525:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "16525:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16604:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16604:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16612:2:18",
																				"nodeType": "YulLiteral",
																				"src": "16612:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16600:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16600:3:18"
																		},
																		"nativeSrc": "16600:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16600:15:18"
																	},
																	{
																		"hexValue": "6c6973746564",
																		"kind": "string",
																		"nativeSrc": "16617:8:18",
																		"nodeType": "YulLiteral",
																		"src": "16617:8:18",
																		"type": "",
																		"value": "listed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16593:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16593:6:18"
																},
																"nativeSrc": "16593:33:18",
																"nodeType": "YulFunctionCall",
																"src": "16593:33:18"
															},
															"nativeSrc": "16593:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "16593:33:18"
														}
													]
												},
												"name": "store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
												"nativeSrc": "16408:225:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16506:6:18",
														"nodeType": "YulTypedName",
														"src": "16506:6:18",
														"type": ""
													}
												],
												"src": "16408:225:18"
											},
											{
												"body": {
													"nativeSrc": "16785:220:18",
													"nodeType": "YulBlock",
													"src": "16785:220:18",
													"statements": [
														{
															"nativeSrc": "16795:74:18",
															"nodeType": "YulAssignment",
															"src": "16795:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16861:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16861:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16866:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16866:2:18",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16802:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "16802:58:18"
																},
																"nativeSrc": "16802:67:18",
																"nodeType": "YulFunctionCall",
																"src": "16802:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16795:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16795:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16967:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16967:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																	"nativeSrc": "16878:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "16878:88:18"
																},
																"nativeSrc": "16878:93:18",
																"nodeType": "YulFunctionCall",
																"src": "16878:93:18"
															},
															"nativeSrc": "16878:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "16878:93:18"
														},
														{
															"nativeSrc": "16980:19:18",
															"nodeType": "YulAssignment",
															"src": "16980:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16991:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16991:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16996:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16996:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16987:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16987:3:18"
																},
																"nativeSrc": "16987:12:18",
																"nodeType": "YulFunctionCall",
																"src": "16987:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16980:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16980:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16639:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16773:3:18",
														"nodeType": "YulTypedName",
														"src": "16773:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16781:3:18",
														"nodeType": "YulTypedName",
														"src": "16781:3:18",
														"type": ""
													}
												],
												"src": "16639:366:18"
											},
											{
												"body": {
													"nativeSrc": "17182:248:18",
													"nodeType": "YulBlock",
													"src": "17182:248:18",
													"statements": [
														{
															"nativeSrc": "17192:26:18",
															"nodeType": "YulAssignment",
															"src": "17192:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17204:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "17204:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17215:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17215:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17200:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17200:3:18"
																},
																"nativeSrc": "17200:18:18",
																"nodeType": "YulFunctionCall",
																"src": "17200:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17192:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "17192:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17239:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17239:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17250:1:18",
																				"nodeType": "YulLiteral",
																				"src": "17250:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17235:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17235:3:18"
																		},
																		"nativeSrc": "17235:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17235:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17258:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "17258:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17264:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17264:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17254:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17254:3:18"
																		},
																		"nativeSrc": "17254:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17254:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17228:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17228:6:18"
																},
																"nativeSrc": "17228:47:18",
																"nodeType": "YulFunctionCall",
																"src": "17228:47:18"
															},
															"nativeSrc": "17228:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "17228:47:18"
														},
														{
															"nativeSrc": "17284:139:18",
															"nodeType": "YulAssignment",
															"src": "17284:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17418:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "17418:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17292:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "17292:124:18"
																},
																"nativeSrc": "17292:131:18",
																"nodeType": "YulFunctionCall",
																"src": "17292:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17284:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "17284:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17011:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17162:9:18",
														"nodeType": "YulTypedName",
														"src": "17162:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17177:4:18",
														"nodeType": "YulTypedName",
														"src": "17177:4:18",
														"type": ""
													}
												],
												"src": "17011:419:18"
											},
											{
												"body": {
													"nativeSrc": "17542:122:18",
													"nodeType": "YulBlock",
													"src": "17542:122:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17564:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "17564:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17572:1:18",
																				"nodeType": "YulLiteral",
																				"src": "17572:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17560:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17560:3:18"
																		},
																		"nativeSrc": "17560:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17560:14:18"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c",
																		"kind": "string",
																		"nativeSrc": "17576:34:18",
																		"nodeType": "YulLiteral",
																		"src": "17576:34:18",
																		"type": "",
																		"value": "Transfer failed: Recipient is bl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17553:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17553:6:18"
																},
																"nativeSrc": "17553:58:18",
																"nodeType": "YulFunctionCall",
																"src": "17553:58:18"
															},
															"nativeSrc": "17553:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "17553:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17632:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "17632:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17640:2:18",
																				"nodeType": "YulLiteral",
																				"src": "17640:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17628:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17628:3:18"
																		},
																		"nativeSrc": "17628:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17628:15:18"
																	},
																	{
																		"hexValue": "61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "17645:11:18",
																		"nodeType": "YulLiteral",
																		"src": "17645:11:18",
																		"type": "",
																		"value": "acklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17621:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17621:6:18"
																},
																"nativeSrc": "17621:36:18",
																"nodeType": "YulFunctionCall",
																"src": "17621:36:18"
															},
															"nativeSrc": "17621:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "17621:36:18"
														}
													]
												},
												"name": "store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
												"nativeSrc": "17436:228:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17534:6:18",
														"nodeType": "YulTypedName",
														"src": "17534:6:18",
														"type": ""
													}
												],
												"src": "17436:228:18"
											},
											{
												"body": {
													"nativeSrc": "17816:220:18",
													"nodeType": "YulBlock",
													"src": "17816:220:18",
													"statements": [
														{
															"nativeSrc": "17826:74:18",
															"nodeType": "YulAssignment",
															"src": "17826:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17892:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17892:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17897:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17897:2:18",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17833:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "17833:58:18"
																},
																"nativeSrc": "17833:67:18",
																"nodeType": "YulFunctionCall",
																"src": "17833:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17826:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17826:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17998:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17998:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																	"nativeSrc": "17909:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "17909:88:18"
																},
																"nativeSrc": "17909:93:18",
																"nodeType": "YulFunctionCall",
																"src": "17909:93:18"
															},
															"nativeSrc": "17909:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "17909:93:18"
														},
														{
															"nativeSrc": "18011:19:18",
															"nodeType": "YulAssignment",
															"src": "18011:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18022:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18022:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18027:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18027:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18018:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18018:3:18"
																},
																"nativeSrc": "18018:12:18",
																"nodeType": "YulFunctionCall",
																"src": "18018:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18011:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18011:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17670:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17804:3:18",
														"nodeType": "YulTypedName",
														"src": "17804:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17812:3:18",
														"nodeType": "YulTypedName",
														"src": "17812:3:18",
														"type": ""
													}
												],
												"src": "17670:366:18"
											},
											{
												"body": {
													"nativeSrc": "18213:248:18",
													"nodeType": "YulBlock",
													"src": "18213:248:18",
													"statements": [
														{
															"nativeSrc": "18223:26:18",
															"nodeType": "YulAssignment",
															"src": "18223:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18235:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "18235:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18246:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18246:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18231:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18231:3:18"
																},
																"nativeSrc": "18231:18:18",
																"nodeType": "YulFunctionCall",
																"src": "18231:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18223:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18223:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18270:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18270:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18281:1:18",
																				"nodeType": "YulLiteral",
																				"src": "18281:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18266:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18266:3:18"
																		},
																		"nativeSrc": "18266:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18266:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18289:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "18289:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18295:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18295:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18285:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18285:3:18"
																		},
																		"nativeSrc": "18285:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18285:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18259:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18259:6:18"
																},
																"nativeSrc": "18259:47:18",
																"nodeType": "YulFunctionCall",
																"src": "18259:47:18"
															},
															"nativeSrc": "18259:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "18259:47:18"
														},
														{
															"nativeSrc": "18315:139:18",
															"nodeType": "YulAssignment",
															"src": "18315:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18449:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18449:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18323:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "18323:124:18"
																},
																"nativeSrc": "18323:131:18",
																"nodeType": "YulFunctionCall",
																"src": "18323:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18315:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18315:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18042:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18193:9:18",
														"nodeType": "YulTypedName",
														"src": "18193:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18208:4:18",
														"nodeType": "YulTypedName",
														"src": "18208:4:18",
														"type": ""
													}
												],
												"src": "18042:419:18"
											},
											{
												"body": {
													"nativeSrc": "18573:68:18",
													"nodeType": "YulBlock",
													"src": "18573:68:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18595:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "18595:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18603:1:18",
																				"nodeType": "YulLiteral",
																				"src": "18603:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18591:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18591:3:18"
																		},
																		"nativeSrc": "18591:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18591:14:18"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c646e2774206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "18607:26:18",
																		"nodeType": "YulLiteral",
																		"src": "18607:26:18",
																		"type": "",
																		"value": "Amount shouldn't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18584:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18584:6:18"
																},
																"nativeSrc": "18584:50:18",
																"nodeType": "YulFunctionCall",
																"src": "18584:50:18"
															},
															"nativeSrc": "18584:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "18584:50:18"
														}
													]
												},
												"name": "store_literal_in_memory_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
												"nativeSrc": "18467:174:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18565:6:18",
														"nodeType": "YulTypedName",
														"src": "18565:6:18",
														"type": ""
													}
												],
												"src": "18467:174:18"
											},
											{
												"body": {
													"nativeSrc": "18793:220:18",
													"nodeType": "YulBlock",
													"src": "18793:220:18",
													"statements": [
														{
															"nativeSrc": "18803:74:18",
															"nodeType": "YulAssignment",
															"src": "18803:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18869:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18869:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18874:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18874:2:18",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18810:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "18810:58:18"
																},
																"nativeSrc": "18810:67:18",
																"nodeType": "YulFunctionCall",
																"src": "18810:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18803:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18803:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18975:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18975:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																	"nativeSrc": "18886:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "18886:88:18"
																},
																"nativeSrc": "18886:93:18",
																"nodeType": "YulFunctionCall",
																"src": "18886:93:18"
															},
															"nativeSrc": "18886:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "18886:93:18"
														},
														{
															"nativeSrc": "18988:19:18",
															"nodeType": "YulAssignment",
															"src": "18988:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18999:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18999:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19004:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19004:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18995:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18995:3:18"
																},
																"nativeSrc": "18995:12:18",
																"nodeType": "YulFunctionCall",
																"src": "18995:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18988:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18988:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18647:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18781:3:18",
														"nodeType": "YulTypedName",
														"src": "18781:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18789:3:18",
														"nodeType": "YulTypedName",
														"src": "18789:3:18",
														"type": ""
													}
												],
												"src": "18647:366:18"
											},
											{
												"body": {
													"nativeSrc": "19190:248:18",
													"nodeType": "YulBlock",
													"src": "19190:248:18",
													"statements": [
														{
															"nativeSrc": "19200:26:18",
															"nodeType": "YulAssignment",
															"src": "19200:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19212:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "19212:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19223:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19223:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19208:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19208:3:18"
																},
																"nativeSrc": "19208:18:18",
																"nodeType": "YulFunctionCall",
																"src": "19208:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19200:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19200:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19247:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19247:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19258:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19258:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19243:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19243:3:18"
																		},
																		"nativeSrc": "19243:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19243:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19266:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "19266:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19272:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19272:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19262:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19262:3:18"
																		},
																		"nativeSrc": "19262:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19262:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19236:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19236:6:18"
																},
																"nativeSrc": "19236:47:18",
																"nodeType": "YulFunctionCall",
																"src": "19236:47:18"
															},
															"nativeSrc": "19236:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "19236:47:18"
														},
														{
															"nativeSrc": "19292:139:18",
															"nodeType": "YulAssignment",
															"src": "19292:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19426:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "19426:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19300:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "19300:124:18"
																},
																"nativeSrc": "19300:131:18",
																"nodeType": "YulFunctionCall",
																"src": "19300:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19292:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19292:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19019:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19170:9:18",
														"nodeType": "YulTypedName",
														"src": "19170:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19185:4:18",
														"nodeType": "YulTypedName",
														"src": "19185:4:18",
														"type": ""
													}
												],
												"src": "19019:419:18"
											},
											{
												"body": {
													"nativeSrc": "19550:115:18",
													"nodeType": "YulBlock",
													"src": "19550:115:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19572:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19572:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19580:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19580:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19568:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19568:3:18"
																		},
																		"nativeSrc": "19568:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19568:14:18"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b",
																		"kind": "string",
																		"nativeSrc": "19584:34:18",
																		"nodeType": "YulLiteral",
																		"src": "19584:34:18",
																		"type": "",
																		"value": "Transfer failed: Tokens are lock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19561:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19561:6:18"
																},
																"nativeSrc": "19561:58:18",
																"nodeType": "YulFunctionCall",
																"src": "19561:58:18"
															},
															"nativeSrc": "19561:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "19561:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19640:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19640:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19648:2:18",
																				"nodeType": "YulLiteral",
																				"src": "19648:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19636:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19636:3:18"
																		},
																		"nativeSrc": "19636:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19636:15:18"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "19653:4:18",
																		"nodeType": "YulLiteral",
																		"src": "19653:4:18",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19629:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19629:6:18"
																},
																"nativeSrc": "19629:29:18",
																"nodeType": "YulFunctionCall",
																"src": "19629:29:18"
															},
															"nativeSrc": "19629:29:18",
															"nodeType": "YulExpressionStatement",
															"src": "19629:29:18"
														}
													]
												},
												"name": "store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
												"nativeSrc": "19444:221:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19542:6:18",
														"nodeType": "YulTypedName",
														"src": "19542:6:18",
														"type": ""
													}
												],
												"src": "19444:221:18"
											},
											{
												"body": {
													"nativeSrc": "19817:220:18",
													"nodeType": "YulBlock",
													"src": "19817:220:18",
													"statements": [
														{
															"nativeSrc": "19827:74:18",
															"nodeType": "YulAssignment",
															"src": "19827:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19893:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19893:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19898:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19898:2:18",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19834:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "19834:58:18"
																},
																"nativeSrc": "19834:67:18",
																"nodeType": "YulFunctionCall",
																"src": "19834:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19827:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19827:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19999:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19999:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																	"nativeSrc": "19910:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "19910:88:18"
																},
																"nativeSrc": "19910:93:18",
																"nodeType": "YulFunctionCall",
																"src": "19910:93:18"
															},
															"nativeSrc": "19910:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "19910:93:18"
														},
														{
															"nativeSrc": "20012:19:18",
															"nodeType": "YulAssignment",
															"src": "20012:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20023:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20023:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20028:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20028:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20019:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20019:3:18"
																},
																"nativeSrc": "20019:12:18",
																"nodeType": "YulFunctionCall",
																"src": "20019:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20012:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20012:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19671:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19805:3:18",
														"nodeType": "YulTypedName",
														"src": "19805:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19813:3:18",
														"nodeType": "YulTypedName",
														"src": "19813:3:18",
														"type": ""
													}
												],
												"src": "19671:366:18"
											},
											{
												"body": {
													"nativeSrc": "20214:248:18",
													"nodeType": "YulBlock",
													"src": "20214:248:18",
													"statements": [
														{
															"nativeSrc": "20224:26:18",
															"nodeType": "YulAssignment",
															"src": "20224:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20236:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "20236:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20247:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20247:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20232:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20232:3:18"
																},
																"nativeSrc": "20232:18:18",
																"nodeType": "YulFunctionCall",
																"src": "20232:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20224:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20224:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20271:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20271:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20282:1:18",
																				"nodeType": "YulLiteral",
																				"src": "20282:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20267:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20267:3:18"
																		},
																		"nativeSrc": "20267:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20267:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20290:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "20290:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20296:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20296:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20286:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20286:3:18"
																		},
																		"nativeSrc": "20286:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20286:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20260:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20260:6:18"
																},
																"nativeSrc": "20260:47:18",
																"nodeType": "YulFunctionCall",
																"src": "20260:47:18"
															},
															"nativeSrc": "20260:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "20260:47:18"
														},
														{
															"nativeSrc": "20316:139:18",
															"nodeType": "YulAssignment",
															"src": "20316:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20450:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "20450:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20324:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "20324:124:18"
																},
																"nativeSrc": "20324:131:18",
																"nodeType": "YulFunctionCall",
																"src": "20324:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20316:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20316:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20043:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20194:9:18",
														"nodeType": "YulTypedName",
														"src": "20194:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20209:4:18",
														"nodeType": "YulTypedName",
														"src": "20209:4:18",
														"type": ""
													}
												],
												"src": "20043:419:18"
											},
											{
												"body": {
													"nativeSrc": "20574:69:18",
													"nodeType": "YulBlock",
													"src": "20574:69:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20596:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "20596:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20604:1:18",
																				"nodeType": "YulLiteral",
																				"src": "20604:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20592:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20592:3:18"
																		},
																		"nativeSrc": "20592:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20592:14:18"
																	},
																	{
																		"hexValue": "41646472657373206973206e6f74206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "20608:27:18",
																		"nodeType": "YulLiteral",
																		"src": "20608:27:18",
																		"type": "",
																		"value": "Address is not a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20585:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20585:6:18"
																},
																"nativeSrc": "20585:51:18",
																"nodeType": "YulFunctionCall",
																"src": "20585:51:18"
															},
															"nativeSrc": "20585:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "20585:51:18"
														}
													]
												},
												"name": "store_literal_in_memory_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed",
												"nativeSrc": "20468:175:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20566:6:18",
														"nodeType": "YulTypedName",
														"src": "20566:6:18",
														"type": ""
													}
												],
												"src": "20468:175:18"
											},
											{
												"body": {
													"nativeSrc": "20795:220:18",
													"nodeType": "YulBlock",
													"src": "20795:220:18",
													"statements": [
														{
															"nativeSrc": "20805:74:18",
															"nodeType": "YulAssignment",
															"src": "20805:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20871:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20871:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20876:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20876:2:18",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20812:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "20812:58:18"
																},
																"nativeSrc": "20812:67:18",
																"nodeType": "YulFunctionCall",
																"src": "20812:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20805:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20805:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20977:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20977:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed",
																	"nativeSrc": "20888:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "20888:88:18"
																},
																"nativeSrc": "20888:93:18",
																"nodeType": "YulFunctionCall",
																"src": "20888:93:18"
															},
															"nativeSrc": "20888:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "20888:93:18"
														},
														{
															"nativeSrc": "20990:19:18",
															"nodeType": "YulAssignment",
															"src": "20990:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21001:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21001:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21006:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21006:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20997:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20997:3:18"
																},
																"nativeSrc": "20997:12:18",
																"nodeType": "YulFunctionCall",
																"src": "20997:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20990:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20990:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20649:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20783:3:18",
														"nodeType": "YulTypedName",
														"src": "20783:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20791:3:18",
														"nodeType": "YulTypedName",
														"src": "20791:3:18",
														"type": ""
													}
												],
												"src": "20649:366:18"
											},
											{
												"body": {
													"nativeSrc": "21192:248:18",
													"nodeType": "YulBlock",
													"src": "21192:248:18",
													"statements": [
														{
															"nativeSrc": "21202:26:18",
															"nodeType": "YulAssignment",
															"src": "21202:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21214:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "21214:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21225:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21225:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21210:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21210:3:18"
																},
																"nativeSrc": "21210:18:18",
																"nodeType": "YulFunctionCall",
																"src": "21210:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21202:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "21202:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21249:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21249:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21260:1:18",
																				"nodeType": "YulLiteral",
																				"src": "21260:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21245:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21245:3:18"
																		},
																		"nativeSrc": "21245:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21245:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21268:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "21268:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21274:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21274:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21264:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21264:3:18"
																		},
																		"nativeSrc": "21264:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21264:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21238:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21238:6:18"
																},
																"nativeSrc": "21238:47:18",
																"nodeType": "YulFunctionCall",
																"src": "21238:47:18"
															},
															"nativeSrc": "21238:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "21238:47:18"
														},
														{
															"nativeSrc": "21294:139:18",
															"nodeType": "YulAssignment",
															"src": "21294:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21428:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "21428:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21302:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "21302:124:18"
																},
																"nativeSrc": "21302:131:18",
																"nodeType": "YulFunctionCall",
																"src": "21302:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21294:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "21294:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21021:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21172:9:18",
														"nodeType": "YulTypedName",
														"src": "21172:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21187:4:18",
														"nodeType": "YulTypedName",
														"src": "21187:4:18",
														"type": ""
													}
												],
												"src": "21021:419:18"
											},
											{
												"body": {
													"nativeSrc": "21552:120:18",
													"nodeType": "YulBlock",
													"src": "21552:120:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21574:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "21574:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21582:1:18",
																				"nodeType": "YulLiteral",
																				"src": "21582:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21570:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21570:3:18"
																		},
																		"nativeSrc": "21570:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21570:14:18"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a204d69736d617463686564",
																		"kind": "string",
																		"nativeSrc": "21586:34:18",
																		"nodeType": "YulLiteral",
																		"src": "21586:34:18",
																		"type": "",
																		"value": "BatchTransfer failed: Mismatched"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21563:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21563:6:18"
																},
																"nativeSrc": "21563:58:18",
																"nodeType": "YulFunctionCall",
																"src": "21563:58:18"
															},
															"nativeSrc": "21563:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "21563:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21642:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "21642:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21650:2:18",
																				"nodeType": "YulLiteral",
																				"src": "21650:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21638:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21638:3:18"
																		},
																		"nativeSrc": "21638:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21638:15:18"
																	},
																	{
																		"hexValue": "20617272617973",
																		"kind": "string",
																		"nativeSrc": "21655:9:18",
																		"nodeType": "YulLiteral",
																		"src": "21655:9:18",
																		"type": "",
																		"value": " arrays"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21631:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21631:6:18"
																},
																"nativeSrc": "21631:34:18",
																"nodeType": "YulFunctionCall",
																"src": "21631:34:18"
															},
															"nativeSrc": "21631:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "21631:34:18"
														}
													]
												},
												"name": "store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
												"nativeSrc": "21446:226:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21544:6:18",
														"nodeType": "YulTypedName",
														"src": "21544:6:18",
														"type": ""
													}
												],
												"src": "21446:226:18"
											},
											{
												"body": {
													"nativeSrc": "21824:220:18",
													"nodeType": "YulBlock",
													"src": "21824:220:18",
													"statements": [
														{
															"nativeSrc": "21834:74:18",
															"nodeType": "YulAssignment",
															"src": "21834:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21900:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21900:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21905:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21905:2:18",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21841:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "21841:58:18"
																},
																"nativeSrc": "21841:67:18",
																"nodeType": "YulFunctionCall",
																"src": "21841:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21834:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21834:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22006:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22006:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																	"nativeSrc": "21917:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "21917:88:18"
																},
																"nativeSrc": "21917:93:18",
																"nodeType": "YulFunctionCall",
																"src": "21917:93:18"
															},
															"nativeSrc": "21917:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "21917:93:18"
														},
														{
															"nativeSrc": "22019:19:18",
															"nodeType": "YulAssignment",
															"src": "22019:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22030:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22030:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22035:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22035:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22026:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22026:3:18"
																},
																"nativeSrc": "22026:12:18",
																"nodeType": "YulFunctionCall",
																"src": "22026:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22019:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22019:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21678:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21812:3:18",
														"nodeType": "YulTypedName",
														"src": "21812:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21820:3:18",
														"nodeType": "YulTypedName",
														"src": "21820:3:18",
														"type": ""
													}
												],
												"src": "21678:366:18"
											},
											{
												"body": {
													"nativeSrc": "22221:248:18",
													"nodeType": "YulBlock",
													"src": "22221:248:18",
													"statements": [
														{
															"nativeSrc": "22231:26:18",
															"nodeType": "YulAssignment",
															"src": "22231:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22243:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "22243:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22254:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22254:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22239:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22239:3:18"
																},
																"nativeSrc": "22239:18:18",
																"nodeType": "YulFunctionCall",
																"src": "22239:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22231:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22231:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22278:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22278:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22289:1:18",
																				"nodeType": "YulLiteral",
																				"src": "22289:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22274:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22274:3:18"
																		},
																		"nativeSrc": "22274:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22274:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22297:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "22297:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22303:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22303:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22293:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22293:3:18"
																		},
																		"nativeSrc": "22293:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22293:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22267:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22267:6:18"
																},
																"nativeSrc": "22267:47:18",
																"nodeType": "YulFunctionCall",
																"src": "22267:47:18"
															},
															"nativeSrc": "22267:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "22267:47:18"
														},
														{
															"nativeSrc": "22323:139:18",
															"nodeType": "YulAssignment",
															"src": "22323:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22457:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22457:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22331:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "22331:124:18"
																},
																"nativeSrc": "22331:131:18",
																"nodeType": "YulFunctionCall",
																"src": "22331:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22323:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22323:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22050:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22201:9:18",
														"nodeType": "YulTypedName",
														"src": "22201:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22216:4:18",
														"nodeType": "YulTypedName",
														"src": "22216:4:18",
														"type": ""
													}
												],
												"src": "22050:419:18"
											},
											{
												"body": {
													"nativeSrc": "22503:152:18",
													"nodeType": "YulBlock",
													"src": "22503:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22520:1:18",
																		"nodeType": "YulLiteral",
																		"src": "22520:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22523:77:18",
																		"nodeType": "YulLiteral",
																		"src": "22523:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22513:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22513:6:18"
																},
																"nativeSrc": "22513:88:18",
																"nodeType": "YulFunctionCall",
																"src": "22513:88:18"
															},
															"nativeSrc": "22513:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "22513:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22617:1:18",
																		"nodeType": "YulLiteral",
																		"src": "22617:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22620:4:18",
																		"nodeType": "YulLiteral",
																		"src": "22620:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22610:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22610:6:18"
																},
																"nativeSrc": "22610:15:18",
																"nodeType": "YulFunctionCall",
																"src": "22610:15:18"
															},
															"nativeSrc": "22610:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "22610:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22641:1:18",
																		"nodeType": "YulLiteral",
																		"src": "22641:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22644:4:18",
																		"nodeType": "YulLiteral",
																		"src": "22644:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22634:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22634:6:18"
																},
																"nativeSrc": "22634:15:18",
																"nodeType": "YulFunctionCall",
																"src": "22634:15:18"
															},
															"nativeSrc": "22634:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "22634:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "22475:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "22475:180:18"
											},
											{
												"body": {
													"nativeSrc": "22767:127:18",
													"nodeType": "YulBlock",
													"src": "22767:127:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22789:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "22789:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22797:1:18",
																				"nodeType": "YulLiteral",
																				"src": "22797:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22785:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22785:3:18"
																		},
																		"nativeSrc": "22785:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22785:14:18"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420",
																		"kind": "string",
																		"nativeSrc": "22801:34:18",
																		"nodeType": "YulLiteral",
																		"src": "22801:34:18",
																		"type": "",
																		"value": "BatchTransfer failed: Recipient "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22778:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22778:6:18"
																},
																"nativeSrc": "22778:58:18",
																"nodeType": "YulFunctionCall",
																"src": "22778:58:18"
															},
															"nativeSrc": "22778:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "22778:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22857:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "22857:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22865:2:18",
																				"nodeType": "YulLiteral",
																				"src": "22865:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22853:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22853:3:18"
																		},
																		"nativeSrc": "22853:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22853:15:18"
																	},
																	{
																		"hexValue": "697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "22870:16:18",
																		"nodeType": "YulLiteral",
																		"src": "22870:16:18",
																		"type": "",
																		"value": "is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22846:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22846:6:18"
																},
																"nativeSrc": "22846:41:18",
																"nodeType": "YulFunctionCall",
																"src": "22846:41:18"
															},
															"nativeSrc": "22846:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "22846:41:18"
														}
													]
												},
												"name": "store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
												"nativeSrc": "22661:233:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22759:6:18",
														"nodeType": "YulTypedName",
														"src": "22759:6:18",
														"type": ""
													}
												],
												"src": "22661:233:18"
											},
											{
												"body": {
													"nativeSrc": "23046:220:18",
													"nodeType": "YulBlock",
													"src": "23046:220:18",
													"statements": [
														{
															"nativeSrc": "23056:74:18",
															"nodeType": "YulAssignment",
															"src": "23056:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23122:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23122:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23127:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23127:2:18",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23063:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "23063:58:18"
																},
																"nativeSrc": "23063:67:18",
																"nodeType": "YulFunctionCall",
																"src": "23063:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23056:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23056:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23228:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23228:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																	"nativeSrc": "23139:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "23139:88:18"
																},
																"nativeSrc": "23139:93:18",
																"nodeType": "YulFunctionCall",
																"src": "23139:93:18"
															},
															"nativeSrc": "23139:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "23139:93:18"
														},
														{
															"nativeSrc": "23241:19:18",
															"nodeType": "YulAssignment",
															"src": "23241:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23252:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23252:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23257:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23257:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23248:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23248:3:18"
																},
																"nativeSrc": "23248:12:18",
																"nodeType": "YulFunctionCall",
																"src": "23248:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23241:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23241:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22900:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23034:3:18",
														"nodeType": "YulTypedName",
														"src": "23034:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23042:3:18",
														"nodeType": "YulTypedName",
														"src": "23042:3:18",
														"type": ""
													}
												],
												"src": "22900:366:18"
											},
											{
												"body": {
													"nativeSrc": "23443:248:18",
													"nodeType": "YulBlock",
													"src": "23443:248:18",
													"statements": [
														{
															"nativeSrc": "23453:26:18",
															"nodeType": "YulAssignment",
															"src": "23453:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23465:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "23465:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23476:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23476:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23461:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23461:3:18"
																},
																"nativeSrc": "23461:18:18",
																"nodeType": "YulFunctionCall",
																"src": "23461:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23453:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23453:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23500:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "23500:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23511:1:18",
																				"nodeType": "YulLiteral",
																				"src": "23511:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23496:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23496:3:18"
																		},
																		"nativeSrc": "23496:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23496:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23519:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "23519:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23525:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "23525:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23515:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23515:3:18"
																		},
																		"nativeSrc": "23515:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23515:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23489:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23489:6:18"
																},
																"nativeSrc": "23489:47:18",
																"nodeType": "YulFunctionCall",
																"src": "23489:47:18"
															},
															"nativeSrc": "23489:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "23489:47:18"
														},
														{
															"nativeSrc": "23545:139:18",
															"nodeType": "YulAssignment",
															"src": "23545:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23679:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "23679:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23553:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "23553:124:18"
																},
																"nativeSrc": "23553:131:18",
																"nodeType": "YulFunctionCall",
																"src": "23553:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23545:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23545:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23272:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23423:9:18",
														"nodeType": "YulTypedName",
														"src": "23423:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23438:4:18",
														"nodeType": "YulTypedName",
														"src": "23438:4:18",
														"type": ""
													}
												],
												"src": "23272:419:18"
											},
											{
												"body": {
													"nativeSrc": "23750:32:18",
													"nodeType": "YulBlock",
													"src": "23750:32:18",
													"statements": [
														{
															"nativeSrc": "23760:16:18",
															"nodeType": "YulAssignment",
															"src": "23760:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "23771:5:18",
																"nodeType": "YulIdentifier",
																"src": "23771:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "23760:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "23760:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "23697:85:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23732:5:18",
														"nodeType": "YulTypedName",
														"src": "23732:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "23742:7:18",
														"nodeType": "YulTypedName",
														"src": "23742:7:18",
														"type": ""
													}
												],
												"src": "23697:85:18"
											},
											{
												"body": {
													"nativeSrc": "23832:57:18",
													"nodeType": "YulBlock",
													"src": "23832:57:18",
													"statements": [
														{
															"nativeSrc": "23842:41:18",
															"nodeType": "YulAssignment",
															"src": "23842:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23857:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "23857:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23864:18:18",
																		"nodeType": "YulLiteral",
																		"src": "23864:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23853:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23853:3:18"
																},
																"nativeSrc": "23853:30:18",
																"nodeType": "YulFunctionCall",
																"src": "23853:30:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "23842:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "23842:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "23788:101:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23814:5:18",
														"nodeType": "YulTypedName",
														"src": "23814:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "23824:7:18",
														"nodeType": "YulTypedName",
														"src": "23824:7:18",
														"type": ""
													}
												],
												"src": "23788:101:18"
											},
											{
												"body": {
													"nativeSrc": "23927:28:18",
													"nodeType": "YulBlock",
													"src": "23927:28:18",
													"statements": [
														{
															"nativeSrc": "23937:12:18",
															"nodeType": "YulAssignment",
															"src": "23937:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "23944:5:18",
																"nodeType": "YulIdentifier",
																"src": "23944:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23937:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23937:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "23895:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23913:5:18",
														"nodeType": "YulTypedName",
														"src": "23913:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23923:3:18",
														"nodeType": "YulTypedName",
														"src": "23923:3:18",
														"type": ""
													}
												],
												"src": "23895:60:18"
											},
											{
												"body": {
													"nativeSrc": "24028:89:18",
													"nodeType": "YulBlock",
													"src": "24028:89:18",
													"statements": [
														{
															"nativeSrc": "24038:73:18",
															"nodeType": "YulAssignment",
															"src": "24038:73:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "24103:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "24103:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "24077:25:18",
																					"nodeType": "YulIdentifier",
																					"src": "24077:25:18"
																				},
																				"nativeSrc": "24077:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "24077:32:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "24068:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "24068:8:18"
																		},
																		"nativeSrc": "24068:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24068:42:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "24051:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "24051:16:18"
																},
																"nativeSrc": "24051:60:18",
																"nodeType": "YulFunctionCall",
																"src": "24051:60:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "24038:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "24038:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "23961:156:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24008:5:18",
														"nodeType": "YulTypedName",
														"src": "24008:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "24018:9:18",
														"nodeType": "YulTypedName",
														"src": "24018:9:18",
														"type": ""
													}
												],
												"src": "23961:156:18"
											},
											{
												"body": {
													"nativeSrc": "24195:73:18",
													"nodeType": "YulBlock",
													"src": "24195:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24212:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24212:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24255:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "24255:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "24217:37:18",
																			"nodeType": "YulIdentifier",
																			"src": "24217:37:18"
																		},
																		"nativeSrc": "24217:44:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24217:44:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24205:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "24205:6:18"
																},
																"nativeSrc": "24205:57:18",
																"nodeType": "YulFunctionCall",
																"src": "24205:57:18"
															},
															"nativeSrc": "24205:57:18",
															"nodeType": "YulExpressionStatement",
															"src": "24205:57:18"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "24123:145:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24183:5:18",
														"nodeType": "YulTypedName",
														"src": "24183:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24190:3:18",
														"nodeType": "YulTypedName",
														"src": "24190:3:18",
														"type": ""
													}
												],
												"src": "24123:145:18"
											},
											{
												"body": {
													"nativeSrc": "24379:131:18",
													"nodeType": "YulBlock",
													"src": "24379:131:18",
													"statements": [
														{
															"nativeSrc": "24389:26:18",
															"nodeType": "YulAssignment",
															"src": "24389:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24401:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "24401:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24412:2:18",
																		"nodeType": "YulLiteral",
																		"src": "24412:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24397:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24397:3:18"
																},
																"nativeSrc": "24397:18:18",
																"nodeType": "YulFunctionCall",
																"src": "24397:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24389:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "24389:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24476:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24476:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24489:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "24489:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24500:1:18",
																				"nodeType": "YulLiteral",
																				"src": "24500:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24485:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "24485:3:18"
																		},
																		"nativeSrc": "24485:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24485:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "24425:50:18",
																	"nodeType": "YulIdentifier",
																	"src": "24425:50:18"
																},
																"nativeSrc": "24425:78:18",
																"nodeType": "YulFunctionCall",
																"src": "24425:78:18"
															},
															"nativeSrc": "24425:78:18",
															"nodeType": "YulExpressionStatement",
															"src": "24425:78:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "24274:236:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24351:9:18",
														"nodeType": "YulTypedName",
														"src": "24351:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24363:6:18",
														"nodeType": "YulTypedName",
														"src": "24363:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24374:4:18",
														"nodeType": "YulTypedName",
														"src": "24374:4:18",
														"type": ""
													}
												],
												"src": "24274:236:18"
											},
											{
												"body": {
													"nativeSrc": "24622:58:18",
													"nodeType": "YulBlock",
													"src": "24622:58:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24644:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "24644:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24652:1:18",
																				"nodeType": "YulLiteral",
																				"src": "24652:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24640:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "24640:3:18"
																		},
																		"nativeSrc": "24640:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24640:14:18"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "24656:16:18",
																		"nodeType": "YulLiteral",
																		"src": "24656:16:18",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24633:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "24633:6:18"
																},
																"nativeSrc": "24633:40:18",
																"nodeType": "YulFunctionCall",
																"src": "24633:40:18"
															},
															"nativeSrc": "24633:40:18",
															"nodeType": "YulExpressionStatement",
															"src": "24633:40:18"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nativeSrc": "24516:164:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24614:6:18",
														"nodeType": "YulTypedName",
														"src": "24614:6:18",
														"type": ""
													}
												],
												"src": "24516:164:18"
											},
											{
												"body": {
													"nativeSrc": "24832:220:18",
													"nodeType": "YulBlock",
													"src": "24832:220:18",
													"statements": [
														{
															"nativeSrc": "24842:74:18",
															"nodeType": "YulAssignment",
															"src": "24842:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24908:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24908:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24913:2:18",
																		"nodeType": "YulLiteral",
																		"src": "24913:2:18",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24849:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "24849:58:18"
																},
																"nativeSrc": "24849:67:18",
																"nodeType": "YulFunctionCall",
																"src": "24849:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24842:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24842:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25014:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25014:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nativeSrc": "24925:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "24925:88:18"
																},
																"nativeSrc": "24925:93:18",
																"nodeType": "YulFunctionCall",
																"src": "24925:93:18"
															},
															"nativeSrc": "24925:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "24925:93:18"
														},
														{
															"nativeSrc": "25027:19:18",
															"nodeType": "YulAssignment",
															"src": "25027:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25038:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25038:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25043:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25043:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25034:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25034:3:18"
																},
																"nativeSrc": "25034:12:18",
																"nodeType": "YulFunctionCall",
																"src": "25034:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25027:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25027:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24686:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24820:3:18",
														"nodeType": "YulTypedName",
														"src": "24820:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24828:3:18",
														"nodeType": "YulTypedName",
														"src": "24828:3:18",
														"type": ""
													}
												],
												"src": "24686:366:18"
											},
											{
												"body": {
													"nativeSrc": "25229:248:18",
													"nodeType": "YulBlock",
													"src": "25229:248:18",
													"statements": [
														{
															"nativeSrc": "25239:26:18",
															"nodeType": "YulAssignment",
															"src": "25239:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25251:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "25251:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25262:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25262:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25247:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25247:3:18"
																},
																"nativeSrc": "25247:18:18",
																"nodeType": "YulFunctionCall",
																"src": "25247:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25239:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "25239:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25286:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25286:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25297:1:18",
																				"nodeType": "YulLiteral",
																				"src": "25297:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25282:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25282:3:18"
																		},
																		"nativeSrc": "25282:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25282:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25305:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "25305:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25311:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25311:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25301:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25301:3:18"
																		},
																		"nativeSrc": "25301:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25301:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25275:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25275:6:18"
																},
																"nativeSrc": "25275:47:18",
																"nodeType": "YulFunctionCall",
																"src": "25275:47:18"
															},
															"nativeSrc": "25275:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "25275:47:18"
														},
														{
															"nativeSrc": "25331:139:18",
															"nodeType": "YulAssignment",
															"src": "25331:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25465:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "25465:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25339:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "25339:124:18"
																},
																"nativeSrc": "25339:131:18",
																"nodeType": "YulFunctionCall",
																"src": "25339:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25331:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "25331:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25058:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25209:9:18",
														"nodeType": "YulTypedName",
														"src": "25209:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25224:4:18",
														"nodeType": "YulTypedName",
														"src": "25224:4:18",
														"type": ""
													}
												],
												"src": "25058:419:18"
											},
											{
												"body": {
													"nativeSrc": "25589:76:18",
													"nodeType": "YulBlock",
													"src": "25589:76:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25611:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "25611:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25619:1:18",
																				"nodeType": "YulLiteral",
																				"src": "25619:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25607:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25607:3:18"
																		},
																		"nativeSrc": "25607:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25607:14:18"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "25623:34:18",
																		"nodeType": "YulLiteral",
																		"src": "25623:34:18",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25600:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25600:6:18"
																},
																"nativeSrc": "25600:58:18",
																"nodeType": "YulFunctionCall",
																"src": "25600:58:18"
															},
															"nativeSrc": "25600:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "25600:58:18"
														}
													]
												},
												"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
												"nativeSrc": "25483:182:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25581:6:18",
														"nodeType": "YulTypedName",
														"src": "25581:6:18",
														"type": ""
													}
												],
												"src": "25483:182:18"
											},
											{
												"body": {
													"nativeSrc": "25817:220:18",
													"nodeType": "YulBlock",
													"src": "25817:220:18",
													"statements": [
														{
															"nativeSrc": "25827:74:18",
															"nodeType": "YulAssignment",
															"src": "25827:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25893:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25893:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25898:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25898:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25834:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "25834:58:18"
																},
																"nativeSrc": "25834:67:18",
																"nodeType": "YulFunctionCall",
																"src": "25834:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25827:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25827:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25999:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25999:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																	"nativeSrc": "25910:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "25910:88:18"
																},
																"nativeSrc": "25910:93:18",
																"nodeType": "YulFunctionCall",
																"src": "25910:93:18"
															},
															"nativeSrc": "25910:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "25910:93:18"
														},
														{
															"nativeSrc": "26012:19:18",
															"nodeType": "YulAssignment",
															"src": "26012:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26023:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "26023:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26028:2:18",
																		"nodeType": "YulLiteral",
																		"src": "26028:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26019:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26019:3:18"
																},
																"nativeSrc": "26019:12:18",
																"nodeType": "YulFunctionCall",
																"src": "26019:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26012:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26012:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25671:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25805:3:18",
														"nodeType": "YulTypedName",
														"src": "25805:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25813:3:18",
														"nodeType": "YulTypedName",
														"src": "25813:3:18",
														"type": ""
													}
												],
												"src": "25671:366:18"
											},
											{
												"body": {
													"nativeSrc": "26214:248:18",
													"nodeType": "YulBlock",
													"src": "26214:248:18",
													"statements": [
														{
															"nativeSrc": "26224:26:18",
															"nodeType": "YulAssignment",
															"src": "26224:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26236:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "26236:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26247:2:18",
																		"nodeType": "YulLiteral",
																		"src": "26247:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26232:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26232:3:18"
																},
																"nativeSrc": "26232:18:18",
																"nodeType": "YulFunctionCall",
																"src": "26232:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26224:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "26224:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26271:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26271:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26282:1:18",
																				"nodeType": "YulLiteral",
																				"src": "26282:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26267:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26267:3:18"
																		},
																		"nativeSrc": "26267:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26267:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26290:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "26290:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26296:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26296:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26286:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26286:3:18"
																		},
																		"nativeSrc": "26286:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26286:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26260:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "26260:6:18"
																},
																"nativeSrc": "26260:47:18",
																"nodeType": "YulFunctionCall",
																"src": "26260:47:18"
															},
															"nativeSrc": "26260:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "26260:47:18"
														},
														{
															"nativeSrc": "26316:139:18",
															"nodeType": "YulAssignment",
															"src": "26316:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26450:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "26450:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26324:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "26324:124:18"
																},
																"nativeSrc": "26324:131:18",
																"nodeType": "YulFunctionCall",
																"src": "26324:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26316:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "26316:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26043:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26194:9:18",
														"nodeType": "YulTypedName",
														"src": "26194:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26209:4:18",
														"nodeType": "YulTypedName",
														"src": "26209:4:18",
														"type": ""
													}
												],
												"src": "26043:419:18"
											},
											{
												"body": {
													"nativeSrc": "26594:206:18",
													"nodeType": "YulBlock",
													"src": "26594:206:18",
													"statements": [
														{
															"nativeSrc": "26604:26:18",
															"nodeType": "YulAssignment",
															"src": "26604:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26616:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "26616:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26627:2:18",
																		"nodeType": "YulLiteral",
																		"src": "26627:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26612:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26612:3:18"
																},
																"nativeSrc": "26612:18:18",
																"nodeType": "YulFunctionCall",
																"src": "26612:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26604:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "26604:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26684:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "26684:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26697:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26697:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26708:1:18",
																				"nodeType": "YulLiteral",
																				"src": "26708:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26693:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26693:3:18"
																		},
																		"nativeSrc": "26693:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26693:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26640:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "26640:43:18"
																},
																"nativeSrc": "26640:71:18",
																"nodeType": "YulFunctionCall",
																"src": "26640:71:18"
															},
															"nativeSrc": "26640:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "26640:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26765:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "26765:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26778:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26778:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26789:2:18",
																				"nodeType": "YulLiteral",
																				"src": "26789:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26774:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26774:3:18"
																		},
																		"nativeSrc": "26774:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26774:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26721:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "26721:43:18"
																},
																"nativeSrc": "26721:72:18",
																"nodeType": "YulFunctionCall",
																"src": "26721:72:18"
															},
															"nativeSrc": "26721:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "26721:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "26468:332:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26558:9:18",
														"nodeType": "YulTypedName",
														"src": "26558:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26570:6:18",
														"nodeType": "YulTypedName",
														"src": "26570:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26578:6:18",
														"nodeType": "YulTypedName",
														"src": "26578:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26589:4:18",
														"nodeType": "YulTypedName",
														"src": "26589:4:18",
														"type": ""
													}
												],
												"src": "26468:332:18"
											},
											{
												"body": {
													"nativeSrc": "26912:60:18",
													"nodeType": "YulBlock",
													"src": "26912:60:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26934:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "26934:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26942:1:18",
																				"nodeType": "YulLiteral",
																				"src": "26942:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26930:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26930:3:18"
																		},
																		"nativeSrc": "26930:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26930:14:18"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "26946:18:18",
																		"nodeType": "YulLiteral",
																		"src": "26946:18:18",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26923:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "26923:6:18"
																},
																"nativeSrc": "26923:42:18",
																"nodeType": "YulFunctionCall",
																"src": "26923:42:18"
															},
															"nativeSrc": "26923:42:18",
															"nodeType": "YulExpressionStatement",
															"src": "26923:42:18"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "26806:166:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26904:6:18",
														"nodeType": "YulTypedName",
														"src": "26904:6:18",
														"type": ""
													}
												],
												"src": "26806:166:18"
											},
											{
												"body": {
													"nativeSrc": "27124:220:18",
													"nodeType": "YulBlock",
													"src": "27124:220:18",
													"statements": [
														{
															"nativeSrc": "27134:74:18",
															"nodeType": "YulAssignment",
															"src": "27134:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27200:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "27200:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27205:2:18",
																		"nodeType": "YulLiteral",
																		"src": "27205:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27141:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "27141:58:18"
																},
																"nativeSrc": "27141:67:18",
																"nodeType": "YulFunctionCall",
																"src": "27141:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27134:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27134:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27306:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "27306:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "27217:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "27217:88:18"
																},
																"nativeSrc": "27217:93:18",
																"nodeType": "YulFunctionCall",
																"src": "27217:93:18"
															},
															"nativeSrc": "27217:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "27217:93:18"
														},
														{
															"nativeSrc": "27319:19:18",
															"nodeType": "YulAssignment",
															"src": "27319:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27330:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "27330:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27335:2:18",
																		"nodeType": "YulLiteral",
																		"src": "27335:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27326:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27326:3:18"
																},
																"nativeSrc": "27326:12:18",
																"nodeType": "YulFunctionCall",
																"src": "27326:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27319:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27319:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26978:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27112:3:18",
														"nodeType": "YulTypedName",
														"src": "27112:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27120:3:18",
														"nodeType": "YulTypedName",
														"src": "27120:3:18",
														"type": ""
													}
												],
												"src": "26978:366:18"
											},
											{
												"body": {
													"nativeSrc": "27521:248:18",
													"nodeType": "YulBlock",
													"src": "27521:248:18",
													"statements": [
														{
															"nativeSrc": "27531:26:18",
															"nodeType": "YulAssignment",
															"src": "27531:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27543:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "27543:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27554:2:18",
																		"nodeType": "YulLiteral",
																		"src": "27554:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27539:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27539:3:18"
																},
																"nativeSrc": "27539:18:18",
																"nodeType": "YulFunctionCall",
																"src": "27539:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27531:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "27531:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27578:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "27578:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27589:1:18",
																				"nodeType": "YulLiteral",
																				"src": "27589:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27574:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27574:3:18"
																		},
																		"nativeSrc": "27574:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27574:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27597:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "27597:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27603:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "27603:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27593:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27593:3:18"
																		},
																		"nativeSrc": "27593:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27593:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27567:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "27567:6:18"
																},
																"nativeSrc": "27567:47:18",
																"nodeType": "YulFunctionCall",
																"src": "27567:47:18"
															},
															"nativeSrc": "27567:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "27567:47:18"
														},
														{
															"nativeSrc": "27623:139:18",
															"nodeType": "YulAssignment",
															"src": "27623:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27757:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "27757:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27631:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "27631:124:18"
																},
																"nativeSrc": "27631:131:18",
																"nodeType": "YulFunctionCall",
																"src": "27631:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27623:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "27623:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27350:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27501:9:18",
														"nodeType": "YulTypedName",
														"src": "27501:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27516:4:18",
														"nodeType": "YulTypedName",
														"src": "27516:4:18",
														"type": ""
													}
												],
												"src": "27350:419:18"
											},
											{
												"body": {
													"nativeSrc": "27818:79:18",
													"nodeType": "YulBlock",
													"src": "27818:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "27875:16:18",
																"nodeType": "YulBlock",
																"src": "27875:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "27884:1:18",
																					"nodeType": "YulLiteral",
																					"src": "27884:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "27887:1:18",
																					"nodeType": "YulLiteral",
																					"src": "27887:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "27877:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "27877:6:18"
																			},
																			"nativeSrc": "27877:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "27877:12:18"
																		},
																		"nativeSrc": "27877:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "27877:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "27841:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "27841:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "27866:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "27866:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "27848:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "27848:17:18"
																				},
																				"nativeSrc": "27848:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "27848:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "27838:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "27838:2:18"
																		},
																		"nativeSrc": "27838:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27838:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "27831:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "27831:6:18"
																},
																"nativeSrc": "27831:43:18",
																"nodeType": "YulFunctionCall",
																"src": "27831:43:18"
															},
															"nativeSrc": "27828:63:18",
															"nodeType": "YulIf",
															"src": "27828:63:18"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "27775:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27811:5:18",
														"nodeType": "YulTypedName",
														"src": "27811:5:18",
														"type": ""
													}
												],
												"src": "27775:122:18"
											},
											{
												"body": {
													"nativeSrc": "27966:80:18",
													"nodeType": "YulBlock",
													"src": "27966:80:18",
													"statements": [
														{
															"nativeSrc": "27976:22:18",
															"nodeType": "YulAssignment",
															"src": "27976:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "27991:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "27991:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27985:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "27985:5:18"
																},
																"nativeSrc": "27985:13:18",
																"nodeType": "YulFunctionCall",
																"src": "27985:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "27976:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "27976:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28034:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "28034:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "28007:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "28007:26:18"
																},
																"nativeSrc": "28007:33:18",
																"nodeType": "YulFunctionCall",
																"src": "28007:33:18"
															},
															"nativeSrc": "28007:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "28007:33:18"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "27903:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "27944:6:18",
														"nodeType": "YulTypedName",
														"src": "27944:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "27952:3:18",
														"nodeType": "YulTypedName",
														"src": "27952:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "27960:5:18",
														"nodeType": "YulTypedName",
														"src": "27960:5:18",
														"type": ""
													}
												],
												"src": "27903:143:18"
											},
											{
												"body": {
													"nativeSrc": "28129:274:18",
													"nodeType": "YulBlock",
													"src": "28129:274:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "28175:83:18",
																"nodeType": "YulBlock",
																"src": "28175:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "28177:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "28177:77:18"
																			},
																			"nativeSrc": "28177:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28177:79:18"
																		},
																		"nativeSrc": "28177:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "28177:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28150:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "28150:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28159:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "28159:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28146:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28146:3:18"
																		},
																		"nativeSrc": "28146:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28146:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28171:2:18",
																		"nodeType": "YulLiteral",
																		"src": "28171:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "28142:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28142:3:18"
																},
																"nativeSrc": "28142:32:18",
																"nodeType": "YulFunctionCall",
																"src": "28142:32:18"
															},
															"nativeSrc": "28139:119:18",
															"nodeType": "YulIf",
															"src": "28139:119:18"
														},
														{
															"nativeSrc": "28268:128:18",
															"nodeType": "YulBlock",
															"src": "28268:128:18",
															"statements": [
																{
																	"nativeSrc": "28283:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "28283:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28297:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28297:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "28287:6:18",
																			"nodeType": "YulTypedName",
																			"src": "28287:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "28312:74:18",
																	"nodeType": "YulAssignment",
																	"src": "28312:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "28358:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "28358:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "28369:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "28369:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "28354:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "28354:3:18"
																				},
																				"nativeSrc": "28354:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "28354:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28378:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "28378:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "28322:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "28322:31:18"
																		},
																		"nativeSrc": "28322:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28322:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "28312:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "28312:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "28052:351:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28099:9:18",
														"nodeType": "YulTypedName",
														"src": "28099:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "28110:7:18",
														"nodeType": "YulTypedName",
														"src": "28110:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "28122:6:18",
														"nodeType": "YulTypedName",
														"src": "28122:6:18",
														"type": ""
													}
												],
												"src": "28052:351:18"
											},
											{
												"body": {
													"nativeSrc": "28563:288:18",
													"nodeType": "YulBlock",
													"src": "28563:288:18",
													"statements": [
														{
															"nativeSrc": "28573:26:18",
															"nodeType": "YulAssignment",
															"src": "28573:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28585:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "28585:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28596:2:18",
																		"nodeType": "YulLiteral",
																		"src": "28596:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28581:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28581:3:18"
																},
																"nativeSrc": "28581:18:18",
																"nodeType": "YulFunctionCall",
																"src": "28581:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28573:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "28573:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28653:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "28653:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28666:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "28666:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28677:1:18",
																				"nodeType": "YulLiteral",
																				"src": "28677:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28662:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28662:3:18"
																		},
																		"nativeSrc": "28662:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28662:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28609:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "28609:43:18"
																},
																"nativeSrc": "28609:71:18",
																"nodeType": "YulFunctionCall",
																"src": "28609:71:18"
															},
															"nativeSrc": "28609:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "28609:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28734:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "28734:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28747:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "28747:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28758:2:18",
																				"nodeType": "YulLiteral",
																				"src": "28758:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28743:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28743:3:18"
																		},
																		"nativeSrc": "28743:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28743:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28690:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "28690:43:18"
																},
																"nativeSrc": "28690:72:18",
																"nodeType": "YulFunctionCall",
																"src": "28690:72:18"
															},
															"nativeSrc": "28690:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "28690:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "28816:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "28816:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28829:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "28829:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28840:2:18",
																				"nodeType": "YulLiteral",
																				"src": "28840:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28825:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28825:3:18"
																		},
																		"nativeSrc": "28825:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28825:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28772:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "28772:43:18"
																},
																"nativeSrc": "28772:72:18",
																"nodeType": "YulFunctionCall",
																"src": "28772:72:18"
															},
															"nativeSrc": "28772:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "28772:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "28409:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28519:9:18",
														"nodeType": "YulTypedName",
														"src": "28519:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "28531:6:18",
														"nodeType": "YulTypedName",
														"src": "28531:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28539:6:18",
														"nodeType": "YulTypedName",
														"src": "28539:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28547:6:18",
														"nodeType": "YulTypedName",
														"src": "28547:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28558:4:18",
														"nodeType": "YulTypedName",
														"src": "28558:4:18",
														"type": ""
													}
												],
												"src": "28409:442:18"
											},
											{
												"body": {
													"nativeSrc": "28963:64:18",
													"nodeType": "YulBlock",
													"src": "28963:64:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28985:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "28985:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28993:1:18",
																				"nodeType": "YulLiteral",
																				"src": "28993:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28981:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28981:3:18"
																		},
																		"nativeSrc": "28981:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28981:14:18"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "28997:22:18",
																		"nodeType": "YulLiteral",
																		"src": "28997:22:18",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28974:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "28974:6:18"
																},
																"nativeSrc": "28974:46:18",
																"nodeType": "YulFunctionCall",
																"src": "28974:46:18"
															},
															"nativeSrc": "28974:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "28974:46:18"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "28857:170:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28955:6:18",
														"nodeType": "YulTypedName",
														"src": "28955:6:18",
														"type": ""
													}
												],
												"src": "28857:170:18"
											},
											{
												"body": {
													"nativeSrc": "29179:220:18",
													"nodeType": "YulBlock",
													"src": "29179:220:18",
													"statements": [
														{
															"nativeSrc": "29189:74:18",
															"nodeType": "YulAssignment",
															"src": "29189:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29255:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "29255:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29260:2:18",
																		"nodeType": "YulLiteral",
																		"src": "29260:2:18",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29196:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "29196:58:18"
																},
																"nativeSrc": "29196:67:18",
																"nodeType": "YulFunctionCall",
																"src": "29196:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29189:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29189:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29361:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "29361:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "29272:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "29272:88:18"
																},
																"nativeSrc": "29272:93:18",
																"nodeType": "YulFunctionCall",
																"src": "29272:93:18"
															},
															"nativeSrc": "29272:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "29272:93:18"
														},
														{
															"nativeSrc": "29374:19:18",
															"nodeType": "YulAssignment",
															"src": "29374:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29385:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "29385:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29390:2:18",
																		"nodeType": "YulLiteral",
																		"src": "29390:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29381:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29381:3:18"
																},
																"nativeSrc": "29381:12:18",
																"nodeType": "YulFunctionCall",
																"src": "29381:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29374:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29374:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29033:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29167:3:18",
														"nodeType": "YulTypedName",
														"src": "29167:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29175:3:18",
														"nodeType": "YulTypedName",
														"src": "29175:3:18",
														"type": ""
													}
												],
												"src": "29033:366:18"
											},
											{
												"body": {
													"nativeSrc": "29576:248:18",
													"nodeType": "YulBlock",
													"src": "29576:248:18",
													"statements": [
														{
															"nativeSrc": "29586:26:18",
															"nodeType": "YulAssignment",
															"src": "29586:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29598:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "29598:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29609:2:18",
																		"nodeType": "YulLiteral",
																		"src": "29609:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29594:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29594:3:18"
																},
																"nativeSrc": "29594:18:18",
																"nodeType": "YulFunctionCall",
																"src": "29594:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29586:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "29586:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29633:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "29633:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29644:1:18",
																				"nodeType": "YulLiteral",
																				"src": "29644:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29629:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "29629:3:18"
																		},
																		"nativeSrc": "29629:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "29629:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29652:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "29652:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29658:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "29658:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29648:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "29648:3:18"
																		},
																		"nativeSrc": "29648:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "29648:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29622:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29622:6:18"
																},
																"nativeSrc": "29622:47:18",
																"nodeType": "YulFunctionCall",
																"src": "29622:47:18"
															},
															"nativeSrc": "29622:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "29622:47:18"
														},
														{
															"nativeSrc": "29678:139:18",
															"nodeType": "YulAssignment",
															"src": "29678:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29812:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "29812:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29686:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "29686:124:18"
																},
																"nativeSrc": "29686:131:18",
																"nodeType": "YulFunctionCall",
																"src": "29686:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29678:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "29678:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29405:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29556:9:18",
														"nodeType": "YulTypedName",
														"src": "29556:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29571:4:18",
														"nodeType": "YulTypedName",
														"src": "29571:4:18",
														"type": ""
													}
												],
												"src": "29405:419:18"
											},
											{
												"body": {
													"nativeSrc": "29858:152:18",
													"nodeType": "YulBlock",
													"src": "29858:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29875:1:18",
																		"nodeType": "YulLiteral",
																		"src": "29875:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29878:77:18",
																		"nodeType": "YulLiteral",
																		"src": "29878:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29868:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29868:6:18"
																},
																"nativeSrc": "29868:88:18",
																"nodeType": "YulFunctionCall",
																"src": "29868:88:18"
															},
															"nativeSrc": "29868:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "29868:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29972:1:18",
																		"nodeType": "YulLiteral",
																		"src": "29972:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29975:4:18",
																		"nodeType": "YulLiteral",
																		"src": "29975:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29965:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29965:6:18"
																},
																"nativeSrc": "29965:15:18",
																"nodeType": "YulFunctionCall",
																"src": "29965:15:18"
															},
															"nativeSrc": "29965:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "29965:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29996:1:18",
																		"nodeType": "YulLiteral",
																		"src": "29996:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29999:4:18",
																		"nodeType": "YulLiteral",
																		"src": "29999:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "29989:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29989:6:18"
																},
																"nativeSrc": "29989:15:18",
																"nodeType": "YulFunctionCall",
																"src": "29989:15:18"
															},
															"nativeSrc": "29989:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "29989:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "29830:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "29830:180:18"
											},
											{
												"body": {
													"nativeSrc": "30060:147:18",
													"nodeType": "YulBlock",
													"src": "30060:147:18",
													"statements": [
														{
															"nativeSrc": "30070:25:18",
															"nodeType": "YulAssignment",
															"src": "30070:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "30093:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "30093:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "30075:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "30075:17:18"
																},
																"nativeSrc": "30075:20:18",
																"nodeType": "YulFunctionCall",
																"src": "30075:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "30070:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "30070:1:18"
																}
															]
														},
														{
															"nativeSrc": "30104:25:18",
															"nodeType": "YulAssignment",
															"src": "30104:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "30127:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "30127:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "30109:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "30109:17:18"
																},
																"nativeSrc": "30109:20:18",
																"nodeType": "YulFunctionCall",
																"src": "30109:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "30104:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "30104:1:18"
																}
															]
														},
														{
															"nativeSrc": "30138:16:18",
															"nodeType": "YulAssignment",
															"src": "30138:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "30149:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "30149:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "30152:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "30152:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30145:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30145:3:18"
																},
																"nativeSrc": "30145:9:18",
																"nodeType": "YulFunctionCall",
																"src": "30145:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "30138:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30138:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "30178:22:18",
																"nodeType": "YulBlock",
																"src": "30178:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "30180:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "30180:16:18"
																			},
																			"nativeSrc": "30180:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "30180:18:18"
																		},
																		"nativeSrc": "30180:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "30180:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "30170:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "30170:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "30173:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "30173:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "30167:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "30167:2:18"
																},
																"nativeSrc": "30167:10:18",
																"nodeType": "YulFunctionCall",
																"src": "30167:10:18"
															},
															"nativeSrc": "30164:36:18",
															"nodeType": "YulIf",
															"src": "30164:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "30016:191:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "30047:1:18",
														"nodeType": "YulTypedName",
														"src": "30047:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "30050:1:18",
														"nodeType": "YulTypedName",
														"src": "30050:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "30056:3:18",
														"nodeType": "YulTypedName",
														"src": "30056:3:18",
														"type": ""
													}
												],
												"src": "30016:191:18"
											},
											{
												"body": {
													"nativeSrc": "30267:87:18",
													"nodeType": "YulBlock",
													"src": "30267:87:18",
													"statements": [
														{
															"nativeSrc": "30277:11:18",
															"nodeType": "YulAssignment",
															"src": "30277:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "30285:3:18",
																"nodeType": "YulIdentifier",
																"src": "30285:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "30277:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "30277:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "30305:1:18",
																		"nodeType": "YulLiteral",
																		"src": "30305:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "30308:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "30308:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30298:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "30298:6:18"
																},
																"nativeSrc": "30298:14:18",
																"nodeType": "YulFunctionCall",
																"src": "30298:14:18"
															},
															"nativeSrc": "30298:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "30298:14:18"
														},
														{
															"nativeSrc": "30321:26:18",
															"nodeType": "YulAssignment",
															"src": "30321:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "30339:1:18",
																		"nodeType": "YulLiteral",
																		"src": "30339:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30342:4:18",
																		"nodeType": "YulLiteral",
																		"src": "30342:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "30329:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "30329:9:18"
																},
																"nativeSrc": "30329:18:18",
																"nodeType": "YulFunctionCall",
																"src": "30329:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "30321:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "30321:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "30213:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "30254:3:18",
														"nodeType": "YulTypedName",
														"src": "30254:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "30262:4:18",
														"nodeType": "YulTypedName",
														"src": "30262:4:18",
														"type": ""
													}
												],
												"src": "30213:141:18"
											},
											{
												"body": {
													"nativeSrc": "30404:49:18",
													"nodeType": "YulBlock",
													"src": "30404:49:18",
													"statements": [
														{
															"nativeSrc": "30414:33:18",
															"nodeType": "YulAssignment",
															"src": "30414:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "30432:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "30432:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30439:2:18",
																				"nodeType": "YulLiteral",
																				"src": "30439:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30428:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "30428:3:18"
																		},
																		"nativeSrc": "30428:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "30428:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30444:2:18",
																		"nodeType": "YulLiteral",
																		"src": "30444:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "30424:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30424:3:18"
																},
																"nativeSrc": "30424:23:18",
																"nodeType": "YulFunctionCall",
																"src": "30424:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "30414:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "30414:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "30360:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "30387:5:18",
														"nodeType": "YulTypedName",
														"src": "30387:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "30397:6:18",
														"nodeType": "YulTypedName",
														"src": "30397:6:18",
														"type": ""
													}
												],
												"src": "30360:93:18"
											},
											{
												"body": {
													"nativeSrc": "30512:54:18",
													"nodeType": "YulBlock",
													"src": "30512:54:18",
													"statements": [
														{
															"nativeSrc": "30522:37:18",
															"nodeType": "YulAssignment",
															"src": "30522:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "30547:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "30547:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "30553:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "30553:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "30543:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30543:3:18"
																},
																"nativeSrc": "30543:16:18",
																"nodeType": "YulFunctionCall",
																"src": "30543:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "30522:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "30522:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "30459:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "30487:4:18",
														"nodeType": "YulTypedName",
														"src": "30487:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "30493:5:18",
														"nodeType": "YulTypedName",
														"src": "30493:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "30503:8:18",
														"nodeType": "YulTypedName",
														"src": "30503:8:18",
														"type": ""
													}
												],
												"src": "30459:107:18"
											},
											{
												"body": {
													"nativeSrc": "30648:317:18",
													"nodeType": "YulBlock",
													"src": "30648:317:18",
													"statements": [
														{
															"nativeSrc": "30658:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "30658:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "30679:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "30679:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30691:1:18",
																		"nodeType": "YulLiteral",
																		"src": "30691:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "30675:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30675:3:18"
																},
																"nativeSrc": "30675:18:18",
																"nodeType": "YulFunctionCall",
																"src": "30675:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "30662:9:18",
																	"nodeType": "YulTypedName",
																	"src": "30662:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "30702:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "30702:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "30733:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "30733:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30744:66:18",
																		"nodeType": "YulLiteral",
																		"src": "30744:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "30714:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "30714:18:18"
																},
																"nativeSrc": "30714:97:18",
																"nodeType": "YulFunctionCall",
																"src": "30714:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "30706:4:18",
																	"nodeType": "YulTypedName",
																	"src": "30706:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "30820:51:18",
															"nodeType": "YulAssignment",
															"src": "30820:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "30851:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "30851:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "30862:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "30862:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "30832:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "30832:18:18"
																},
																"nativeSrc": "30832:39:18",
																"nodeType": "YulFunctionCall",
																"src": "30832:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "30820:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "30820:8:18"
																}
															]
														},
														{
															"nativeSrc": "30880:30:18",
															"nodeType": "YulAssignment",
															"src": "30880:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30893:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "30893:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "30904:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "30904:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "30900:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "30900:3:18"
																		},
																		"nativeSrc": "30900:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "30900:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "30889:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30889:3:18"
																},
																"nativeSrc": "30889:21:18",
																"nodeType": "YulFunctionCall",
																"src": "30889:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "30880:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "30880:5:18"
																}
															]
														},
														{
															"nativeSrc": "30919:40:18",
															"nodeType": "YulAssignment",
															"src": "30919:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30932:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "30932:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "30943:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "30943:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "30953:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "30953:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "30939:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "30939:3:18"
																		},
																		"nativeSrc": "30939:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "30939:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "30929:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "30929:2:18"
																},
																"nativeSrc": "30929:30:18",
																"nodeType": "YulFunctionCall",
																"src": "30929:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "30919:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "30919:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "30572:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "30609:5:18",
														"nodeType": "YulTypedName",
														"src": "30609:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "30616:10:18",
														"nodeType": "YulTypedName",
														"src": "30616:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "30628:8:18",
														"nodeType": "YulTypedName",
														"src": "30628:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "30641:6:18",
														"nodeType": "YulTypedName",
														"src": "30641:6:18",
														"type": ""
													}
												],
												"src": "30572:393:18"
											},
											{
												"body": {
													"nativeSrc": "31031:82:18",
													"nodeType": "YulBlock",
													"src": "31031:82:18",
													"statements": [
														{
															"nativeSrc": "31041:66:18",
															"nodeType": "YulAssignment",
															"src": "31041:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "31099:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "31099:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "31081:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "31081:17:18"
																				},
																				"nativeSrc": "31081:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "31081:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "31072:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "31072:8:18"
																		},
																		"nativeSrc": "31072:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "31072:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "31054:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "31054:17:18"
																},
																"nativeSrc": "31054:53:18",
																"nodeType": "YulFunctionCall",
																"src": "31054:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "31041:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "31041:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "30971:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31011:5:18",
														"nodeType": "YulTypedName",
														"src": "31011:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "31021:9:18",
														"nodeType": "YulTypedName",
														"src": "31021:9:18",
														"type": ""
													}
												],
												"src": "30971:142:18"
											},
											{
												"body": {
													"nativeSrc": "31166:28:18",
													"nodeType": "YulBlock",
													"src": "31166:28:18",
													"statements": [
														{
															"nativeSrc": "31176:12:18",
															"nodeType": "YulAssignment",
															"src": "31176:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "31183:5:18",
																"nodeType": "YulIdentifier",
																"src": "31183:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "31176:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "31176:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "31119:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31152:5:18",
														"nodeType": "YulTypedName",
														"src": "31152:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "31162:3:18",
														"nodeType": "YulTypedName",
														"src": "31162:3:18",
														"type": ""
													}
												],
												"src": "31119:75:18"
											},
											{
												"body": {
													"nativeSrc": "31276:193:18",
													"nodeType": "YulBlock",
													"src": "31276:193:18",
													"statements": [
														{
															"nativeSrc": "31286:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "31286:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "31341:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "31341:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "31310:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "31310:30:18"
																},
																"nativeSrc": "31310:39:18",
																"nodeType": "YulFunctionCall",
																"src": "31310:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "31290:16:18",
																	"nodeType": "YulTypedName",
																	"src": "31290:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "31365:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "31365:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "31405:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "31405:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "31399:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "31399:5:18"
																				},
																				"nativeSrc": "31399:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "31399:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "31412:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "31412:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "31444:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "31444:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "31420:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "31420:23:18"
																				},
																				"nativeSrc": "31420:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "31420:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "31371:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "31371:27:18"
																		},
																		"nativeSrc": "31371:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "31371:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "31358:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "31358:6:18"
																},
																"nativeSrc": "31358:105:18",
																"nodeType": "YulFunctionCall",
																"src": "31358:105:18"
															},
															"nativeSrc": "31358:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "31358:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "31200:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "31253:4:18",
														"nodeType": "YulTypedName",
														"src": "31253:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "31259:6:18",
														"nodeType": "YulTypedName",
														"src": "31259:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "31267:7:18",
														"nodeType": "YulTypedName",
														"src": "31267:7:18",
														"type": ""
													}
												],
												"src": "31200:269:18"
											},
											{
												"body": {
													"nativeSrc": "31524:24:18",
													"nodeType": "YulBlock",
													"src": "31524:24:18",
													"statements": [
														{
															"nativeSrc": "31534:8:18",
															"nodeType": "YulAssignment",
															"src": "31534:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "31541:1:18",
																"nodeType": "YulLiteral",
																"src": "31541:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "31534:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "31534:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "31475:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "31520:3:18",
														"nodeType": "YulTypedName",
														"src": "31520:3:18",
														"type": ""
													}
												],
												"src": "31475:73:18"
											},
											{
												"body": {
													"nativeSrc": "31607:136:18",
													"nodeType": "YulBlock",
													"src": "31607:136:18",
													"statements": [
														{
															"nativeSrc": "31617:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "31617:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "31631:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "31631:30:18"
																},
																"nativeSrc": "31631:32:18",
																"nodeType": "YulFunctionCall",
																"src": "31631:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "31621:6:18",
																	"nodeType": "YulTypedName",
																	"src": "31621:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "31716:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "31716:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "31722:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "31722:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "31730:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "31730:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "31672:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "31672:43:18"
																},
																"nativeSrc": "31672:65:18",
																"nodeType": "YulFunctionCall",
																"src": "31672:65:18"
															},
															"nativeSrc": "31672:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "31672:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "31554:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "31593:4:18",
														"nodeType": "YulTypedName",
														"src": "31593:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "31599:6:18",
														"nodeType": "YulTypedName",
														"src": "31599:6:18",
														"type": ""
													}
												],
												"src": "31554:189:18"
											},
											{
												"body": {
													"nativeSrc": "31799:136:18",
													"nodeType": "YulBlock",
													"src": "31799:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "31866:63:18",
																"nodeType": "YulBlock",
																"src": "31866:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "31910:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "31910:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "31917:1:18",
																					"nodeType": "YulLiteral",
																					"src": "31917:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "31880:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "31880:29:18"
																			},
																			"nativeSrc": "31880:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "31880:39:18"
																		},
																		"nativeSrc": "31880:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "31880:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "31819:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "31819:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "31826:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "31826:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "31816:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "31816:2:18"
																},
																"nativeSrc": "31816:14:18",
																"nodeType": "YulFunctionCall",
																"src": "31816:14:18"
															},
															"nativeSrc": "31809:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "31831:26:18",
																"nodeType": "YulBlock",
																"src": "31831:26:18",
																"statements": [
																	{
																		"nativeSrc": "31833:22:18",
																		"nodeType": "YulAssignment",
																		"src": "31833:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "31846:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "31846:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "31853:1:18",
																					"nodeType": "YulLiteral",
																					"src": "31853:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "31842:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "31842:3:18"
																			},
																			"nativeSrc": "31842:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "31842:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "31833:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "31833:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "31813:2:18",
																"nodeType": "YulBlock",
																"src": "31813:2:18",
																"statements": []
															},
															"src": "31809:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "31749:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "31787:5:18",
														"nodeType": "YulTypedName",
														"src": "31787:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "31794:3:18",
														"nodeType": "YulTypedName",
														"src": "31794:3:18",
														"type": ""
													}
												],
												"src": "31749:186:18"
											},
											{
												"body": {
													"nativeSrc": "32020:464:18",
													"nodeType": "YulBlock",
													"src": "32020:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "32046:431:18",
																"nodeType": "YulBlock",
																"src": "32046:431:18",
																"statements": [
																	{
																		"nativeSrc": "32060:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "32060:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "32108:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "32108:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "32076:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "32076:31:18"
																			},
																			"nativeSrc": "32076:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "32076:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "32064:8:18",
																				"nodeType": "YulTypedName",
																				"src": "32064:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "32127:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "32127:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "32150:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "32150:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "32178:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "32178:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "32160:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "32160:17:18"
																					},
																					"nativeSrc": "32160:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "32160:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "32146:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "32146:3:18"
																			},
																			"nativeSrc": "32146:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "32146:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "32131:11:18",
																				"nodeType": "YulTypedName",
																				"src": "32131:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "32347:27:18",
																			"nodeType": "YulBlock",
																			"src": "32347:27:18",
																			"statements": [
																				{
																					"nativeSrc": "32349:23:18",
																					"nodeType": "YulAssignment",
																					"src": "32349:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "32364:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "32364:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "32349:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "32349:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "32331:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "32331:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "32343:2:18",
																					"nodeType": "YulLiteral",
																					"src": "32343:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "32328:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "32328:2:18"
																			},
																			"nativeSrc": "32328:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "32328:18:18"
																		},
																		"nativeSrc": "32325:49:18",
																		"nodeType": "YulIf",
																		"src": "32325:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "32416:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "32416:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "32433:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "32433:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "32461:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "32461:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "32443:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "32443:17:18"
																							},
																							"nativeSrc": "32443:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "32443:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "32429:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "32429:3:18"
																					},
																					"nativeSrc": "32429:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "32429:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "32387:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "32387:28:18"
																			},
																			"nativeSrc": "32387:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "32387:80:18"
																		},
																		"nativeSrc": "32387:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "32387:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "32037:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "32037:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32042:2:18",
																		"nodeType": "YulLiteral",
																		"src": "32042:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "32034:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "32034:2:18"
																},
																"nativeSrc": "32034:11:18",
																"nodeType": "YulFunctionCall",
																"src": "32034:11:18"
															},
															"nativeSrc": "32031:446:18",
															"nodeType": "YulIf",
															"src": "32031:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "31941:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "31996:5:18",
														"nodeType": "YulTypedName",
														"src": "31996:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "32003:3:18",
														"nodeType": "YulTypedName",
														"src": "32003:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "32008:10:18",
														"nodeType": "YulTypedName",
														"src": "32008:10:18",
														"type": ""
													}
												],
												"src": "31941:543:18"
											},
											{
												"body": {
													"nativeSrc": "32553:54:18",
													"nodeType": "YulBlock",
													"src": "32553:54:18",
													"statements": [
														{
															"nativeSrc": "32563:37:18",
															"nodeType": "YulAssignment",
															"src": "32563:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "32588:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "32588:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "32594:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "32594:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "32584:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "32584:3:18"
																},
																"nativeSrc": "32584:16:18",
																"nodeType": "YulFunctionCall",
																"src": "32584:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "32563:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "32563:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "32490:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "32528:4:18",
														"nodeType": "YulTypedName",
														"src": "32528:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "32534:5:18",
														"nodeType": "YulTypedName",
														"src": "32534:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "32544:8:18",
														"nodeType": "YulTypedName",
														"src": "32544:8:18",
														"type": ""
													}
												],
												"src": "32490:117:18"
											},
											{
												"body": {
													"nativeSrc": "32664:118:18",
													"nodeType": "YulBlock",
													"src": "32664:118:18",
													"statements": [
														{
															"nativeSrc": "32674:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "32674:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "32723:1:18",
																						"nodeType": "YulLiteral",
																						"src": "32723:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "32726:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "32726:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "32719:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "32719:3:18"
																				},
																				"nativeSrc": "32719:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "32719:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "32738:1:18",
																						"nodeType": "YulLiteral",
																						"src": "32738:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "32734:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "32734:3:18"
																				},
																				"nativeSrc": "32734:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "32734:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "32690:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "32690:28:18"
																		},
																		"nativeSrc": "32690:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "32690:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "32686:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "32686:3:18"
																},
																"nativeSrc": "32686:56:18",
																"nodeType": "YulFunctionCall",
																"src": "32686:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "32678:4:18",
																	"nodeType": "YulTypedName",
																	"src": "32678:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "32751:25:18",
															"nodeType": "YulAssignment",
															"src": "32751:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "32765:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "32765:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "32771:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "32771:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "32761:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "32761:3:18"
																},
																"nativeSrc": "32761:15:18",
																"nodeType": "YulFunctionCall",
																"src": "32761:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "32751:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "32751:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "32613:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "32641:4:18",
														"nodeType": "YulTypedName",
														"src": "32641:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "32647:5:18",
														"nodeType": "YulTypedName",
														"src": "32647:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "32657:6:18",
														"nodeType": "YulTypedName",
														"src": "32657:6:18",
														"type": ""
													}
												],
												"src": "32613:169:18"
											},
											{
												"body": {
													"nativeSrc": "32868:214:18",
													"nodeType": "YulBlock",
													"src": "32868:214:18",
													"statements": [
														{
															"nativeSrc": "33001:37:18",
															"nodeType": "YulAssignment",
															"src": "33001:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "33028:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "33028:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "33034:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "33034:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "33009:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "33009:18:18"
																},
																"nativeSrc": "33009:29:18",
																"nodeType": "YulFunctionCall",
																"src": "33009:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "33001:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "33001:4:18"
																}
															]
														},
														{
															"nativeSrc": "33047:29:18",
															"nodeType": "YulAssignment",
															"src": "33047:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "33058:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "33058:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "33068:1:18",
																				"nodeType": "YulLiteral",
																				"src": "33068:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "33071:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "33071:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "33064:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "33064:3:18"
																		},
																		"nativeSrc": "33064:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "33064:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "33055:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "33055:2:18"
																},
																"nativeSrc": "33055:21:18",
																"nodeType": "YulFunctionCall",
																"src": "33055:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "33047:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "33047:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "32787:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "32849:4:18",
														"nodeType": "YulTypedName",
														"src": "32849:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "32855:3:18",
														"nodeType": "YulTypedName",
														"src": "32855:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "32863:4:18",
														"nodeType": "YulTypedName",
														"src": "32863:4:18",
														"type": ""
													}
												],
												"src": "32787:295:18"
											},
											{
												"body": {
													"nativeSrc": "33179:1303:18",
													"nodeType": "YulBlock",
													"src": "33179:1303:18",
													"statements": [
														{
															"nativeSrc": "33190:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "33190:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "33237:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "33237:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "33204:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "33204:32:18"
																},
																"nativeSrc": "33204:37:18",
																"nodeType": "YulFunctionCall",
																"src": "33204:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "33194:6:18",
																	"nodeType": "YulTypedName",
																	"src": "33194:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "33326:22:18",
																"nodeType": "YulBlock",
																"src": "33326:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "33328:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "33328:16:18"
																			},
																			"nativeSrc": "33328:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "33328:18:18"
																		},
																		"nativeSrc": "33328:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "33328:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "33298:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "33298:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33306:18:18",
																		"nodeType": "YulLiteral",
																		"src": "33306:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "33295:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "33295:2:18"
																},
																"nativeSrc": "33295:30:18",
																"nodeType": "YulFunctionCall",
																"src": "33295:30:18"
															},
															"nativeSrc": "33292:56:18",
															"nodeType": "YulIf",
															"src": "33292:56:18"
														},
														{
															"nativeSrc": "33358:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "33358:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "33404:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "33404:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "33398:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "33398:5:18"
																		},
																		"nativeSrc": "33398:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "33398:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "33372:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "33372:25:18"
																},
																"nativeSrc": "33372:38:18",
																"nodeType": "YulFunctionCall",
																"src": "33372:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "33362:6:18",
																	"nodeType": "YulTypedName",
																	"src": "33362:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "33503:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "33503:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "33509:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "33509:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "33517:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "33517:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "33457:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "33457:45:18"
																},
																"nativeSrc": "33457:67:18",
																"nodeType": "YulFunctionCall",
																"src": "33457:67:18"
															},
															"nativeSrc": "33457:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "33457:67:18"
														},
														{
															"nativeSrc": "33534:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "33534:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "33551:1:18",
																"nodeType": "YulLiteral",
																"src": "33551:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "33538:9:18",
																	"nodeType": "YulTypedName",
																	"src": "33538:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "33562:17:18",
															"nodeType": "YulAssignment",
															"src": "33562:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "33575:4:18",
																"nodeType": "YulLiteral",
																"src": "33575:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "33562:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "33562:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "33626:611:18",
																		"nodeType": "YulBlock",
																		"src": "33626:611:18",
																		"statements": [
																			{
																				"nativeSrc": "33640:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "33640:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "33659:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "33659:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "33671:4:18",
																									"nodeType": "YulLiteral",
																									"src": "33671:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "33667:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "33667:3:18"
																							},
																							"nativeSrc": "33667:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "33667:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "33655:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "33655:3:18"
																					},
																					"nativeSrc": "33655:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "33655:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "33644:7:18",
																						"nodeType": "YulTypedName",
																						"src": "33644:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "33691:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "33691:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "33737:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "33737:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "33705:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "33705:31:18"
																					},
																					"nativeSrc": "33705:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "33705:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "33695:6:18",
																						"nodeType": "YulTypedName",
																						"src": "33695:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "33755:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "33755:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "33764:1:18",
																					"nodeType": "YulLiteral",
																					"src": "33764:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "33759:1:18",
																						"nodeType": "YulTypedName",
																						"src": "33759:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "33823:163:18",
																					"nodeType": "YulBlock",
																					"src": "33823:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "33848:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "33848:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "33866:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "33866:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "33871:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "33871:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "33862:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "33862:3:18"
																												},
																												"nativeSrc": "33862:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "33862:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "33856:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "33856:5:18"
																										},
																										"nativeSrc": "33856:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "33856:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "33841:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "33841:6:18"
																								},
																								"nativeSrc": "33841:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "33841:42:18"
																							},
																							"nativeSrc": "33841:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "33841:42:18"
																						},
																						{
																							"nativeSrc": "33900:24:18",
																							"nodeType": "YulAssignment",
																							"src": "33900:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "33914:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "33914:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "33922:1:18",
																										"nodeType": "YulLiteral",
																										"src": "33922:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "33910:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "33910:3:18"
																								},
																								"nativeSrc": "33910:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "33910:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "33900:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "33900:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "33941:31:18",
																							"nodeType": "YulAssignment",
																							"src": "33941:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "33958:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "33958:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "33969:2:18",
																										"nodeType": "YulLiteral",
																										"src": "33969:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "33954:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "33954:3:18"
																								},
																								"nativeSrc": "33954:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "33954:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "33941:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "33941:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "33789:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "33789:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "33792:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "33792:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "33786:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "33786:2:18"
																					},
																					"nativeSrc": "33786:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "33786:14:18"
																				},
																				"nativeSrc": "33778:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "33801:21:18",
																					"nodeType": "YulBlock",
																					"src": "33801:21:18",
																					"statements": [
																						{
																							"nativeSrc": "33803:17:18",
																							"nodeType": "YulAssignment",
																							"src": "33803:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "33812:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "33812:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "33815:4:18",
																										"nodeType": "YulLiteral",
																										"src": "33815:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "33808:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "33808:3:18"
																								},
																								"nativeSrc": "33808:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "33808:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "33803:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "33803:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "33782:3:18",
																					"nodeType": "YulBlock",
																					"src": "33782:3:18",
																					"statements": []
																				},
																				"src": "33778:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "34022:156:18",
																					"nodeType": "YulBlock",
																					"src": "34022:156:18",
																					"statements": [
																						{
																							"nativeSrc": "34040:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "34040:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "34067:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "34067:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "34072:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "34072:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "34063:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "34063:3:18"
																										},
																										"nativeSrc": "34063:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "34063:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "34057:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "34057:5:18"
																								},
																								"nativeSrc": "34057:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "34057:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "34044:9:18",
																									"nodeType": "YulTypedName",
																									"src": "34044:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "34107:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "34107:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "34134:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "34134:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "34149:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "34149:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "34157:4:18",
																														"nodeType": "YulLiteral",
																														"src": "34157:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "34145:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "34145:3:18"
																												},
																												"nativeSrc": "34145:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "34145:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "34115:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "34115:18:18"
																										},
																										"nativeSrc": "34115:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "34115:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "34100:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "34100:6:18"
																								},
																								"nativeSrc": "34100:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "34100:64:18"
																							},
																							"nativeSrc": "34100:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "34100:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "34005:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "34005:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "34014:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "34014:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "34002:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "34002:2:18"
																					},
																					"nativeSrc": "34002:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "34002:19:18"
																				},
																				"nativeSrc": "33999:179:18",
																				"nodeType": "YulIf",
																				"src": "33999:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "34198:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "34198:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "34212:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "34212:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "34220:1:18",
																											"nodeType": "YulLiteral",
																											"src": "34220:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "34208:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "34208:3:18"
																									},
																									"nativeSrc": "34208:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "34208:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "34224:1:18",
																									"nodeType": "YulLiteral",
																									"src": "34224:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "34204:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "34204:3:18"
																							},
																							"nativeSrc": "34204:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "34204:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "34191:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "34191:6:18"
																					},
																					"nativeSrc": "34191:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "34191:36:18"
																				},
																				"nativeSrc": "34191:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "34191:36:18"
																			}
																		]
																	},
																	"nativeSrc": "33619:618:18",
																	"nodeType": "YulCase",
																	"src": "33619:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "33624:1:18",
																		"nodeType": "YulLiteral",
																		"src": "33624:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "34254:222:18",
																		"nodeType": "YulBlock",
																		"src": "34254:222:18",
																		"statements": [
																			{
																				"nativeSrc": "34268:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "34268:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "34281:1:18",
																					"nodeType": "YulLiteral",
																					"src": "34281:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "34272:5:18",
																						"nodeType": "YulTypedName",
																						"src": "34272:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "34305:67:18",
																					"nodeType": "YulBlock",
																					"src": "34305:67:18",
																					"statements": [
																						{
																							"nativeSrc": "34323:35:18",
																							"nodeType": "YulAssignment",
																							"src": "34323:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "34342:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "34342:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "34347:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "34347:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "34338:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "34338:3:18"
																										},
																										"nativeSrc": "34338:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "34338:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "34332:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "34332:5:18"
																								},
																								"nativeSrc": "34332:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "34332:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "34323:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "34323:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "34298:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "34298:6:18"
																				},
																				"nativeSrc": "34295:77:18",
																				"nodeType": "YulIf",
																				"src": "34295:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "34392:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "34392:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "34451:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "34451:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "34458:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "34458:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "34398:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "34398:52:18"
																							},
																							"nativeSrc": "34398:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "34398:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "34385:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "34385:6:18"
																					},
																					"nativeSrc": "34385:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "34385:81:18"
																				},
																				"nativeSrc": "34385:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "34385:81:18"
																			}
																		]
																	},
																	"nativeSrc": "34246:230:18",
																	"nodeType": "YulCase",
																	"src": "34246:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "33599:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "33599:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33607:2:18",
																		"nodeType": "YulLiteral",
																		"src": "33607:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "33596:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "33596:2:18"
																},
																"nativeSrc": "33596:14:18",
																"nodeType": "YulFunctionCall",
																"src": "33596:14:18"
															},
															"nativeSrc": "33589:887:18",
															"nodeType": "YulSwitch",
															"src": "33589:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "33087:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "33168:4:18",
														"nodeType": "YulTypedName",
														"src": "33168:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "33174:3:18",
														"nodeType": "YulTypedName",
														"src": "33174:3:18",
														"type": ""
													}
												],
												"src": "33087:1395:18"
											},
											{
												"body": {
													"nativeSrc": "34546:40:18",
													"nodeType": "YulBlock",
													"src": "34546:40:18",
													"statements": [
														{
															"nativeSrc": "34557:22:18",
															"nodeType": "YulAssignment",
															"src": "34557:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "34573:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "34573:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "34567:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "34567:5:18"
																},
																"nativeSrc": "34567:12:18",
																"nodeType": "YulFunctionCall",
																"src": "34567:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "34557:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "34557:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "34488:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34529:5:18",
														"nodeType": "YulTypedName",
														"src": "34529:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "34539:6:18",
														"nodeType": "YulTypedName",
														"src": "34539:6:18",
														"type": ""
													}
												],
												"src": "34488:98:18"
											},
											{
												"body": {
													"nativeSrc": "34705:34:18",
													"nodeType": "YulBlock",
													"src": "34705:34:18",
													"statements": [
														{
															"nativeSrc": "34715:18:18",
															"nodeType": "YulAssignment",
															"src": "34715:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "34730:3:18",
																"nodeType": "YulIdentifier",
																"src": "34730:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "34715:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "34715:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "34592:147:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "34677:3:18",
														"nodeType": "YulTypedName",
														"src": "34677:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "34682:6:18",
														"nodeType": "YulTypedName",
														"src": "34682:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "34693:11:18",
														"nodeType": "YulTypedName",
														"src": "34693:11:18",
														"type": ""
													}
												],
												"src": "34592:147:18"
											},
											{
												"body": {
													"nativeSrc": "34853:278:18",
													"nodeType": "YulBlock",
													"src": "34853:278:18",
													"statements": [
														{
															"nativeSrc": "34863:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "34863:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "34909:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "34909:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "34877:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "34877:31:18"
																},
																"nativeSrc": "34877:38:18",
																"nodeType": "YulFunctionCall",
																"src": "34877:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "34867:6:18",
																	"nodeType": "YulTypedName",
																	"src": "34867:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "34924:95:18",
															"nodeType": "YulAssignment",
															"src": "34924:95:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "35007:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "35007:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "35012:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "35012:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "34931:75:18",
																	"nodeType": "YulIdentifier",
																	"src": "34931:75:18"
																},
																"nativeSrc": "34931:88:18",
																"nodeType": "YulFunctionCall",
																"src": "34931:88:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "34924:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "34924:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "35067:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "35067:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "35074:4:18",
																				"nodeType": "YulLiteral",
																				"src": "35074:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "35063:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "35063:3:18"
																		},
																		"nativeSrc": "35063:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "35063:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "35081:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "35081:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "35086:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "35086:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "35028:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "35028:34:18"
																},
																"nativeSrc": "35028:65:18",
																"nodeType": "YulFunctionCall",
																"src": "35028:65:18"
															},
															"nativeSrc": "35028:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "35028:65:18"
														},
														{
															"nativeSrc": "35102:23:18",
															"nodeType": "YulAssignment",
															"src": "35102:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "35113:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "35113:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "35118:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "35118:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "35109:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "35109:3:18"
																},
																"nativeSrc": "35109:16:18",
																"nodeType": "YulFunctionCall",
																"src": "35109:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "35102:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "35102:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "34745:386:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34834:5:18",
														"nodeType": "YulTypedName",
														"src": "34834:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "34841:3:18",
														"nodeType": "YulTypedName",
														"src": "34841:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "34849:3:18",
														"nodeType": "YulTypedName",
														"src": "34849:3:18",
														"type": ""
													}
												],
												"src": "34745:386:18"
											},
											{
												"body": {
													"nativeSrc": "35271:137:18",
													"nodeType": "YulBlock",
													"src": "35271:137:18",
													"statements": [
														{
															"nativeSrc": "35282:100:18",
															"nodeType": "YulAssignment",
															"src": "35282:100:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "35369:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "35369:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "35378:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "35378:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "35289:79:18",
																	"nodeType": "YulIdentifier",
																	"src": "35289:79:18"
																},
																"nativeSrc": "35289:93:18",
																"nodeType": "YulFunctionCall",
																"src": "35289:93:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "35282:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "35282:3:18"
																}
															]
														},
														{
															"nativeSrc": "35392:10:18",
															"nodeType": "YulAssignment",
															"src": "35392:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "35399:3:18",
																"nodeType": "YulIdentifier",
																"src": "35399:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "35392:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "35392:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "35137:271:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "35250:3:18",
														"nodeType": "YulTypedName",
														"src": "35250:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "35256:6:18",
														"nodeType": "YulTypedName",
														"src": "35256:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "35267:3:18",
														"nodeType": "YulTypedName",
														"src": "35267:3:18",
														"type": ""
													}
												],
												"src": "35137:271:18"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Null Address\")\n\n    }\n\n    function abi_encode_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Sender is black\")\n\n        mstore(add(memPtr, 32), \"listed\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Recipient is bl\")\n\n        mstore(add(memPtr, 32), \"acklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount shouldn't be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Tokens are lock\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is not a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f(memPtr) {\n\n        mstore(add(memPtr, 0), \"BatchTransfer failed: Mismatched\")\n\n        mstore(add(memPtr, 32), \" arrays\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc(memPtr) {\n\n        mstore(add(memPtr, 0), \"BatchTransfer failed: Recipient \")\n\n        mstore(add(memPtr, 32), \"is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"468": [
									{
										"length": 32,
										"start": 6436
									},
									{
										"length": 32,
										"start": 6521
									},
									{
										"length": 32,
										"start": 6971
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061019b575f3560e01c80638456cb59116100eb578063ad3cb1cc11610089578063dbac26e911610063578063dbac26e91461057f578063dd62ed3e146105bb578063f2fde38b146105f7578063f326f0d71461061f5761019b565b8063ad3cb1cc14610503578063b119490e1461052d578063c66e4095146105555761019b565b806395d89b41116100c557806395d89b41146104255780639bc289f11461044f578063a153e7081461048b578063a9059cbb146104c75761019b565b80638456cb59146103bd57806388d695b2146103d35780638da5cb5b146103fb5761019b565b8063313ce5671161015857806352d1902d1161013257806352d1902d146103175780635c975abb1461034157806370a082311461036b578063715018a6146103a75761019b565b8063313ce567146102bb5780633f4ba83a146102e55780634f1ef286146102fb5761019b565b806306fdde031461019f578063095ea7b3146101c9578063153b0d1e1461020557806318160ddd1461022d57806323b872dd146102575780632e0d2a0014610293575b5f80fd5b3480156101aa575f80fd5b506101b3610647565b6040516101c091906128d2565b60405180910390f35b3480156101d4575f80fd5b506101ef60048036038101906101ea9190612990565b6106e5565b6040516101fc91906129e8565b60405180910390f35b348015610210575f80fd5b5061022b60048036038101906102269190612a2b565b610707565b005b348015610238575f80fd5b50610241610823565b60405161024e9190612a78565b60405180910390f35b348015610262575f80fd5b5061027d60048036038101906102789190612a91565b61083a565b60405161028a91906129e8565b60405180910390f35b34801561029e575f80fd5b506102b960048036038101906102b49190612ae1565b610a74565b005b3480156102c6575f80fd5b506102cf610bd6565b6040516102dc9190612b27565b60405180910390f35b3480156102f0575f80fd5b506102f9610bde565b005b61031560048036038101906103109190612c6c565b610bf0565b005b348015610322575f80fd5b5061032b610c0f565b6040516103389190612cde565b60405180910390f35b34801561034c575f80fd5b50610355610c40565b60405161036291906129e8565b60405180910390f35b348015610376575f80fd5b50610391600480360381019061038c9190612ae1565b610c54565b60405161039e9190612a78565b60405180910390f35b3480156103b2575f80fd5b506103bb610ca7565b005b3480156103c8575f80fd5b506103d1610cba565b005b3480156103de575f80fd5b506103f960048036038101906103f49190612da9565b610ccc565b005b348015610406575f80fd5b5061040f610e3e565b60405161041c9190612e36565b60405180910390f35b348015610430575f80fd5b50610439610e73565b60405161044691906128d2565b60405180910390f35b34801561045a575f80fd5b5061047560048036038101906104709190612ae1565b610f11565b6040516104829190612a78565b60405180910390f35b348015610496575f80fd5b506104b160048036038101906104ac9190612ae1565b610f26565b6040516104be9190612a78565b60405180910390f35b3480156104d2575f80fd5b506104ed60048036038101906104e89190612990565b610f3b565b6040516104fa91906129e8565b60405180910390f35b34801561050e575f80fd5b50610517611173565b60405161052491906128d2565b60405180910390f35b348015610538575f80fd5b50610553600480360381019061054e9190612eed565b6111ac565b005b348015610560575f80fd5b5061056961135c565b6040516105769190612e36565b60405180910390f35b34801561058a575f80fd5b506105a560048036038101906105a09190612ae1565b611381565b6040516105b291906129e8565b60405180910390f35b3480156105c6575f80fd5b506105e160048036038101906105dc9190612f75565b61139e565b6040516105ee9190612a78565b60405180910390f35b348015610602575f80fd5b5061061d60048036038101906106189190612ae1565b61142e565b005b34801561062a575f80fd5b5061064560048036038101906106409190612fb3565b6114b2565b005b60605f610652611761565b905080600301805461066390613030565b80601f016020809104026020016040519081016040528092919081815260200182805461068f90613030565b80156106da5780601f106106b1576101008083540402835291602001916106da565b820191905f5260205f20905b8154815290600101906020018083116106bd57829003601f168201915b505050505091505090565b5f806106ef611788565b90506106fc81858561178f565b600191505092915050565b61070f6117a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361077d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610774906130aa565b60405180910390fd5b8060345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd88260405161081791906129e8565b60405180910390a25050565b5f8061082d611761565b9050806002015491505090565b5f610843611828565b60345f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156108cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c490613138565b60405180910390fd5b60345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094e906131c6565b60405180910390fd5b5f8211610999576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109909061322e565b60405180910390fd5b60355f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442101580610a2157505f60355f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a57906132bc565b60405180910390fd5b610a6b848484611872565b90509392505050565b610a7c611828565b610a846117a1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae9906130aa565b60405180910390fd5b610b118173ffffffffffffffffffffffffffffffffffffffff166118a0565b610b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4790613324565b60405180910390fd5b8060325f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad860405160405180910390a250565b5f6012905090565b610be66117a1565b610bee6118c2565b565b610bf8611922565b610c0182611a08565b610c0b8282611a1b565b5050565b5f610c18611b39565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f805f9054906101000a900460ff16905090565b5f80610c5e611761565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610caf6117a1565b610cb85f611bc0565b565b610cc26117a1565b610cca611c91565b565b610cd4611828565b818190508484905014610d1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d13906133b2565b60405180910390fd5b5f8484905090505f5b81811015610e365760345f878784818110610d4357610d426133d0565b5b9050602002016020810190610d589190612ae1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd59061346d565b60405180910390fd5b610e2933878784818110610df557610df46133d0565b5b9050602002016020810190610e0a9190612ae1565b868685818110610e1d57610e1c6133d0565b5b90506020020135611cf2565b8080600101915050610d25565b505050505050565b5f80610e48611de2565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610e7e611761565b9050806004018054610e8f90613030565b80601f0160208091040260200160405190810160405280929190818152602001828054610ebb90613030565b8015610f065780601f10610edd57610100808354040283529160200191610f06565b820191905f5260205f20905b815481529060010190602001808311610ee957829003601f168201915b505050505091505090565b6035602052805f5260405f205f915090505481565b6036602052805f5260405f205f915090505481565b5f610f44611828565b60345f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610fce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc590613138565b60405180910390fd5b60345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f906131c6565b60405180910390fd5b5f821161109a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110919061322e565b60405180910390fd5b60355f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544210158061112257505f60355f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b611161576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611158906132bc565b60405180910390fd5b61116b8383611e09565b905092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f6111b5611e2b565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156111fd5750825b90505f60018367ffffffffffffffff1614801561123057505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561123e575080155b15611275576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156112c2576001855f0160086101000a81548160ff0219169083151502179055505b6112cc8888611e52565b6112d533611e68565b6112dd611e7c565b6112e5611e8e565b856033819055506112f833603354611e98565b8315611352575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161134991906134e0565b60405180910390a15b5050505050505050565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6034602052805f5260405f205f915054906101000a900460ff1681565b5f806113a8611761565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6114366117a1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114a6575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161149d9190612e36565b60405180910390fd5b6114af81611bc0565b50565b6114ba611828565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154090613543565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ae906130aa565b60405180910390fd5b5f81116115f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f0906135ab565b60405180910390fd5b8160355f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414158061168257508060365f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414155b1561175c578160355f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060365f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff167f86f2e10d5622d896b3f56e66c1a60639ca21a4674480f054bec2cb9ba62f40cb83836040516117539291906135c9565b60405180910390a25b505050565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b61179c8383836001611f17565b505050565b6117a9611788565b73ffffffffffffffffffffffffffffffffffffffff166117c7610e3e565b73ffffffffffffffffffffffffffffffffffffffff1614611826576117ea611788565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161181d9190612e36565b60405180910390fd5b565b611830610c40565b15611870576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118679061363a565b60405180910390fd5b565b5f8061187c611788565b90506118898582856120f4565b611894858585611cf2565b60019150509392505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6118ca612186565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61190b611788565b6040516119189190612e36565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806119cf57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166119b66121cf565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611a06576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611a10611828565b611a186117a1565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611a8357506040513d601f19601f82011682018060405250810190611a809190613682565b60015b611ac457816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611abb9190612e36565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114611b2a57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611b219190612cde565b60405180910390fd5b611b348383612222565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611bbe576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f611bc9611de2565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b611c99611828565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611cdb611788565b604051611ce89190612e36565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d62575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611d599190612e36565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611dd2575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611dc99190612e36565b60405180910390fd5b611ddd838383612294565b505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f80611e13611788565b9050611e20818585611cf2565b600191505092915050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611e5a6124c3565b611e648282612503565b5050565b611e706124c3565b611e798161253f565b50565b611e846124c3565b611e8c6125c3565b565b611e966124c3565b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f08575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611eff9190612e36565b60405180910390fd5b611f135f8383612294565b5050565b5f611f20611761565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611f92575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611f899190612e36565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612002575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611ff99190612e36565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555081156120ed578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516120e49190612a78565b60405180910390a35b5050505050565b5f6120ff848461139e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146121805781811015612171578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401612168939291906136ad565b60405180910390fd5b61217f84848484035f611f17565b5b50505050565b61218e610c40565b6121cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c49061372c565b60405180910390fd5b565b5f6121fb7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6125e5565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61222b826125ee565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156122875761228182826126b7565b50612290565b61228f612737565b5b5050565b5f61229d611761565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036122f15781816002015f8282546122e59190613777565b925050819055506123c3565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508281101561237c578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401612373939291906136ad565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361240c5781816002015f8282540392505081905550612458565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124b59190612a78565b60405180910390a350505050565b6124cb612773565b612501576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61250b6124c3565b5f612514611761565b905082816003019081612527919061393e565b5081816004019081612539919061393e565b50505050565b6125476124c3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125b7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016125ae9190612e36565b60405180910390fd5b6125c081611bc0565b50565b6125cb6124c3565b5f805f6101000a81548160ff021916908315150217905550565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361264957806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016126409190612e36565b60405180910390fd5b806126757f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6125e5565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516126e09190613a51565b5f60405180830381855af49150503d805f8114612718576040519150601f19603f3d011682016040523d82523d5f602084013e61271d565b606091505b509150915061272d858383612791565b9250505092915050565b5f341115612771576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61277c611e2b565b5f0160089054906101000a900460ff16905090565b6060826127a6576127a18261281e565b612816565b5f82511480156127cc57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561280e57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016128059190612e36565b60405180910390fd5b819050612817565b5b9392505050565b5f815111156128305780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6128a482612862565b6128ae818561286c565b93506128be81856020860161287c565b6128c78161288a565b840191505092915050565b5f6020820190508181035f8301526128ea818461289a565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61292c82612903565b9050919050565b61293c81612922565b8114612946575f80fd5b50565b5f8135905061295781612933565b92915050565b5f819050919050565b61296f8161295d565b8114612979575f80fd5b50565b5f8135905061298a81612966565b92915050565b5f80604083850312156129a6576129a56128fb565b5b5f6129b385828601612949565b92505060206129c48582860161297c565b9150509250929050565b5f8115159050919050565b6129e2816129ce565b82525050565b5f6020820190506129fb5f8301846129d9565b92915050565b612a0a816129ce565b8114612a14575f80fd5b50565b5f81359050612a2581612a01565b92915050565b5f8060408385031215612a4157612a406128fb565b5b5f612a4e85828601612949565b9250506020612a5f85828601612a17565b9150509250929050565b612a728161295d565b82525050565b5f602082019050612a8b5f830184612a69565b92915050565b5f805f60608486031215612aa857612aa76128fb565b5b5f612ab586828701612949565b9350506020612ac686828701612949565b9250506040612ad78682870161297c565b9150509250925092565b5f60208284031215612af657612af56128fb565b5b5f612b0384828501612949565b91505092915050565b5f60ff82169050919050565b612b2181612b0c565b82525050565b5f602082019050612b3a5f830184612b18565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612b7e8261288a565b810181811067ffffffffffffffff82111715612b9d57612b9c612b48565b5b80604052505050565b5f612baf6128f2565b9050612bbb8282612b75565b919050565b5f67ffffffffffffffff821115612bda57612bd9612b48565b5b612be38261288a565b9050602081019050919050565b828183375f83830152505050565b5f612c10612c0b84612bc0565b612ba6565b905082815260208101848484011115612c2c57612c2b612b44565b5b612c37848285612bf0565b509392505050565b5f82601f830112612c5357612c52612b40565b5b8135612c63848260208601612bfe565b91505092915050565b5f8060408385031215612c8257612c816128fb565b5b5f612c8f85828601612949565b925050602083013567ffffffffffffffff811115612cb057612caf6128ff565b5b612cbc85828601612c3f565b9150509250929050565b5f819050919050565b612cd881612cc6565b82525050565b5f602082019050612cf15f830184612ccf565b92915050565b5f80fd5b5f80fd5b5f8083601f840112612d1457612d13612b40565b5b8235905067ffffffffffffffff811115612d3157612d30612cf7565b5b602083019150836020820283011115612d4d57612d4c612cfb565b5b9250929050565b5f8083601f840112612d6957612d68612b40565b5b8235905067ffffffffffffffff811115612d8657612d85612cf7565b5b602083019150836020820283011115612da257612da1612cfb565b5b9250929050565b5f805f8060408587031215612dc157612dc06128fb565b5b5f85013567ffffffffffffffff811115612dde57612ddd6128ff565b5b612dea87828801612cff565b9450945050602085013567ffffffffffffffff811115612e0d57612e0c6128ff565b5b612e1987828801612d54565b925092505092959194509250565b612e3081612922565b82525050565b5f602082019050612e495f830184612e27565b92915050565b5f67ffffffffffffffff821115612e6957612e68612b48565b5b612e728261288a565b9050602081019050919050565b5f612e91612e8c84612e4f565b612ba6565b905082815260208101848484011115612ead57612eac612b44565b5b612eb8848285612bf0565b509392505050565b5f82601f830112612ed457612ed3612b40565b5b8135612ee4848260208601612e7f565b91505092915050565b5f805f60608486031215612f0457612f036128fb565b5b5f84013567ffffffffffffffff811115612f2157612f206128ff565b5b612f2d86828701612ec0565b935050602084013567ffffffffffffffff811115612f4e57612f4d6128ff565b5b612f5a86828701612ec0565b9250506040612f6b8682870161297c565b9150509250925092565b5f8060408385031215612f8b57612f8a6128fb565b5b5f612f9885828601612949565b9250506020612fa985828601612949565b9150509250929050565b5f805f60608486031215612fca57612fc96128fb565b5b5f612fd786828701612949565b9350506020612fe88682870161297c565b9250506040612ff98682870161297c565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061304757607f821691505b60208210810361305a57613059613003565b5b50919050565b7f4e756c6c204164647265737300000000000000000000000000000000000000005f82015250565b5f613094600c8361286c565b915061309f82613060565b602082019050919050565b5f6020820190508181035f8301526130c181613088565b9050919050565b7f5472616e73666572206661696c65643a2053656e64657220697320626c61636b5f8201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b5f61312260268361286c565b915061312d826130c8565b604082019050919050565b5f6020820190508181035f83015261314f81613116565b9050919050565b7f5472616e73666572206661696c65643a20526563697069656e7420697320626c5f8201527f61636b6c69737465640000000000000000000000000000000000000000000000602082015250565b5f6131b060298361286c565b91506131bb82613156565b604082019050919050565b5f6020820190508181035f8301526131dd816131a4565b9050919050565b7f416d6f756e742073686f756c646e2774206265207a65726f00000000000000005f82015250565b5f61321860188361286c565b9150613223826131e4565b602082019050919050565b5f6020820190508181035f8301526132458161320c565b9050919050565b7f5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b5f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f6132a660228361286c565b91506132b18261324c565b604082019050919050565b5f6020820190508181035f8301526132d38161329a565b9050919050565b7f41646472657373206973206e6f74206120636f6e7472616374000000000000005f82015250565b5f61330e60198361286c565b9150613319826132da565b602082019050919050565b5f6020820190508181035f83015261333b81613302565b9050919050565b7f42617463685472616e73666572206661696c65643a204d69736d6174636865645f8201527f2061727261797300000000000000000000000000000000000000000000000000602082015250565b5f61339c60278361286c565b91506133a782613342565b604082019050919050565b5f6020820190508181035f8301526133c981613390565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f42617463685472616e73666572206661696c65643a20526563697069656e74205f8201527f697320626c61636b6c6973746564000000000000000000000000000000000000602082015250565b5f613457602e8361286c565b9150613462826133fd565b604082019050919050565b5f6020820190508181035f8301526134848161344b565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f6134ca6134c56134c08461348b565b6134a7565b613494565b9050919050565b6134da816134b0565b82525050565b5f6020820190506134f35f8301846134d1565b92915050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f61352d600e8361286c565b9150613538826134f9565b602082019050919050565b5f6020820190508181035f83015261355a81613521565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61359560208361286c565b91506135a082613561565b602082019050919050565b5f6020820190508181035f8301526135c281613589565b9050919050565b5f6040820190506135dc5f830185612a69565b6135e96020830184612a69565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f61362460108361286c565b915061362f826135f0565b602082019050919050565b5f6020820190508181035f83015261365181613618565b9050919050565b61366181612cc6565b811461366b575f80fd5b50565b5f8151905061367c81613658565b92915050565b5f60208284031215613697576136966128fb565b5b5f6136a48482850161366e565b91505092915050565b5f6060820190506136c05f830186612e27565b6136cd6020830185612a69565b6136da6040830184612a69565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f61371660148361286c565b9150613721826136e2565b602082019050919050565b5f6020820190508181035f8301526137438161370a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6137818261295d565b915061378c8361295d565b92508282019050808211156137a4576137a361374a565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026138067fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826137cb565b61381086836137cb565b95508019841693508086168417925050509392505050565b5f61384261383d6138388461295d565b6134a7565b61295d565b9050919050565b5f819050919050565b61385b83613828565b61386f61386782613849565b8484546137d7565b825550505050565b5f90565b613883613877565b61388e818484613852565b505050565b5b818110156138b1576138a65f8261387b565b600181019050613894565b5050565b601f8211156138f6576138c7816137aa565b6138d0846137bc565b810160208510156138df578190505b6138f36138eb856137bc565b830182613893565b50505b505050565b5f82821c905092915050565b5f6139165f19846008026138fb565b1980831691505092915050565b5f61392e8383613907565b9150826002028217905092915050565b61394782612862565b67ffffffffffffffff8111156139605761395f612b48565b5b61396a8254613030565b6139758282856138b5565b5f60209050601f8311600181146139a6575f8415613994578287015190505b61399e8582613923565b865550613a05565b601f1984166139b4866137aa565b5f5b828110156139db578489015182556001820191506020850194506020810190506139b6565b868310156139f857848901516139f4601f891682613907565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f613a2b82613a0d565b613a358185613a17565b9350613a4581856020860161287c565b80840191505092915050565b5f613a5c8284613a21565b91508190509291505056fea26469706673582212208e7937636e50c16c1e1072c313a080d5418685b960b5c0ee5e198bd06fcadb7b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDBAC26E9 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xF326F0D7 EQ PUSH2 0x61F JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xB119490E EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x555 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xA153E708 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C7 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3FB JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3A7 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2FB JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x293 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x2A2B JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x2B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0xBDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0xCA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D1 PUSH2 0xCBA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST PUSH2 0xCCC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40F PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x439 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x517 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x2EED JUMP JUMPDEST PUSH2 0x11AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x569 PUSH2 0x135C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH2 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH2 0x142E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x645 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x2FB3 JUMP JUMPDEST PUSH2 0x14B2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x652 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x663 SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x68F SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6EF PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP PUSH2 0x6FC DUP2 DUP6 DUP6 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x70F PUSH2 0x17A1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x774 SWAP1 PUSH2 0x30AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x82D PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x843 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x34 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP1 PUSH2 0x3138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94E SWAP1 PUSH2 0x31C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x990 SWAP1 PUSH2 0x322E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0xA21 JUMPI POP PUSH0 PUSH1 0x35 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP1 PUSH2 0x32BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6B DUP5 DUP5 DUP5 PUSH2 0x1872 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA7C PUSH2 0x1828 JUMP JUMPDEST PUSH2 0xA84 PUSH2 0x17A1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE9 SWAP1 PUSH2 0x30AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB11 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18A0 JUMP JUMPDEST PUSH2 0xB50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB47 SWAP1 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBE6 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xBEE PUSH2 0x18C2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xBF8 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0xC01 DUP3 PUSH2 0x1A08 JUMP JUMPDEST PUSH2 0xC0B DUP3 DUP3 PUSH2 0x1A1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC18 PUSH2 0x1B39 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC5E PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAF PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xCB8 PUSH0 PUSH2 0x1BC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCC2 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xCCA PUSH2 0x1C91 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0x1828 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xD1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD13 SWAP1 PUSH2 0x33B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE36 JUMPI PUSH1 0x34 PUSH0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xD43 JUMPI PUSH2 0xD42 PUSH2 0x33D0 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD5 SWAP1 PUSH2 0x346D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE29 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xDF5 JUMPI PUSH2 0xDF4 PUSH2 0x33D0 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE0A SWAP2 SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xE1D JUMPI PUSH2 0xE1C PUSH2 0x33D0 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1CF2 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD25 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE48 PUSH2 0x1DE2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE7E PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xE8F SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEBB SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF06 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF06 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEE9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xF44 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x34 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC5 SWAP1 PUSH2 0x3138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x31C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x109A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1091 SWAP1 PUSH2 0x322E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x1122 JUMPI POP PUSH0 PUSH1 0x35 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1158 SWAP1 PUSH2 0x32BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116B DUP4 DUP4 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x11B5 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x11FD JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1230 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x123E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1275 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x12CC DUP9 DUP9 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x12D5 CALLER PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x12DD PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0x12E5 PUSH2 0x1E8E JUMP JUMPDEST DUP6 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH2 0x12F8 CALLER PUSH1 0x33 SLOAD PUSH2 0x1E98 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1352 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x34E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13A8 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1436 PUSH2 0x17A1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149D SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14AF DUP2 PUSH2 0x1BC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x14BA PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1549 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1540 SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AE SWAP1 PUSH2 0x30AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x15F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F0 SWAP1 PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x35 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO DUP1 PUSH2 0x1682 JUMPI POP DUP1 PUSH1 0x36 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x175C JUMPI DUP2 PUSH1 0x35 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x36 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x86F2E10D5622D896B3F56E66C1A60639CA21A4674480F054BEC2CB9BA62F40CB DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1753 SWAP3 SWAP2 SWAP1 PUSH2 0x35C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x179C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1F17 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17A9 PUSH2 0x1788 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17C7 PUSH2 0xE3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1826 JUMPI PUSH2 0x17EA PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181D SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1830 PUSH2 0xC40 JUMP JUMPDEST ISZERO PUSH2 0x1870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1867 SWAP1 PUSH2 0x363A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x187C PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP PUSH2 0x1889 DUP6 DUP3 DUP6 PUSH2 0x20F4 JUMP JUMPDEST PUSH2 0x1894 DUP6 DUP6 DUP6 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18CA PUSH2 0x2186 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x190B PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1918 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x19CF JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19B6 PUSH2 0x21CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A06 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1A10 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x1A18 PUSH2 0x17A1 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A83 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A80 SWAP2 SWAP1 PUSH2 0x3682 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1AC4 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABB SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1B2A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B21 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B34 DUP4 DUP4 PUSH2 0x2222 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BBE JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1BC9 PUSH2 0x1DE2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1C99 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1CDB PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE8 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D62 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D59 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DD2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC9 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DDD DUP4 DUP4 DUP4 PUSH2 0x2294 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1E13 PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E20 DUP2 DUP6 DUP6 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E5A PUSH2 0x24C3 JUMP JUMPDEST PUSH2 0x1E64 DUP3 DUP3 PUSH2 0x2503 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E70 PUSH2 0x24C3 JUMP JUMPDEST PUSH2 0x1E79 DUP2 PUSH2 0x253F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E84 PUSH2 0x24C3 JUMP JUMPDEST PUSH2 0x1E8C PUSH2 0x25C3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E96 PUSH2 0x24C3 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EFF SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F13 PUSH0 DUP4 DUP4 PUSH2 0x2294 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F20 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F92 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F89 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2002 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF9 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x20ED JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x20E4 SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20FF DUP5 DUP5 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x2180 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2171 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2168 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x217F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1F17 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x218E PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x21CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C4 SWAP1 PUSH2 0x372C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x21FB PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x25E5 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x222B DUP3 PUSH2 0x25EE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2287 JUMPI PUSH2 0x2281 DUP3 DUP3 PUSH2 0x26B7 JUMP JUMPDEST POP PUSH2 0x2290 JUMP JUMPDEST PUSH2 0x228F PUSH2 0x2737 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x229D PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22F1 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22E5 SWAP2 SWAP1 PUSH2 0x3777 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x23C3 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x237C JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2373 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x240C JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2458 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x24B5 SWAP2 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x24CB PUSH2 0x2773 JUMP JUMPDEST PUSH2 0x2501 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x250B PUSH2 0x24C3 JUMP JUMPDEST PUSH0 PUSH2 0x2514 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2527 SWAP2 SWAP1 PUSH2 0x393E JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2539 SWAP2 SWAP1 PUSH2 0x393E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2547 PUSH2 0x24C3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25B7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25AE SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C0 DUP2 PUSH2 0x1BC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25CB PUSH2 0x24C3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2649 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2640 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2675 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x25E5 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x26E0 SWAP2 SWAP1 PUSH2 0x3A51 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2718 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x271D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x272D DUP6 DUP4 DUP4 PUSH2 0x2791 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x2771 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x277C PUSH2 0x1E2B JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x27A6 JUMPI PUSH2 0x27A1 DUP3 PUSH2 0x281E JUMP JUMPDEST PUSH2 0x2816 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x27CC JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x280E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2805 SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2817 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2830 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28A4 DUP3 PUSH2 0x2862 JUMP JUMPDEST PUSH2 0x28AE DUP2 DUP6 PUSH2 0x286C JUMP JUMPDEST SWAP4 POP PUSH2 0x28BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x287C JUMP JUMPDEST PUSH2 0x28C7 DUP2 PUSH2 0x288A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28EA DUP2 DUP5 PUSH2 0x289A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x292C DUP3 PUSH2 0x2903 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x293C DUP2 PUSH2 0x2922 JUMP JUMPDEST DUP2 EQ PUSH2 0x2946 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2957 DUP2 PUSH2 0x2933 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x296F DUP2 PUSH2 0x295D JUMP JUMPDEST DUP2 EQ PUSH2 0x2979 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x298A DUP2 PUSH2 0x2966 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29A6 JUMPI PUSH2 0x29A5 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29B3 DUP6 DUP3 DUP7 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29C4 DUP6 DUP3 DUP7 ADD PUSH2 0x297C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E2 DUP2 PUSH2 0x29CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29FB PUSH0 DUP4 ADD DUP5 PUSH2 0x29D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A0A DUP2 PUSH2 0x29CE JUMP JUMPDEST DUP2 EQ PUSH2 0x2A14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A25 DUP2 PUSH2 0x2A01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A41 JUMPI PUSH2 0x2A40 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A4E DUP6 DUP3 DUP7 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A5F DUP6 DUP3 DUP7 ADD PUSH2 0x2A17 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A72 DUP2 PUSH2 0x295D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A8B PUSH0 DUP4 ADD DUP5 PUSH2 0x2A69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AA8 JUMPI PUSH2 0x2AA7 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AB5 DUP7 DUP3 DUP8 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AC6 DUP7 DUP3 DUP8 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2AD7 DUP7 DUP3 DUP8 ADD PUSH2 0x297C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF6 JUMPI PUSH2 0x2AF5 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B03 DUP5 DUP3 DUP6 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B21 DUP2 PUSH2 0x2B0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B3A PUSH0 DUP4 ADD DUP5 PUSH2 0x2B18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2B7E DUP3 PUSH2 0x288A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B9D JUMPI PUSH2 0x2B9C PUSH2 0x2B48 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BAF PUSH2 0x28F2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BBB DUP3 DUP3 PUSH2 0x2B75 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BDA JUMPI PUSH2 0x2BD9 PUSH2 0x2B48 JUMP JUMPDEST JUMPDEST PUSH2 0x2BE3 DUP3 PUSH2 0x288A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C10 PUSH2 0x2C0B DUP5 PUSH2 0x2BC0 JUMP JUMPDEST PUSH2 0x2BA6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C2C JUMPI PUSH2 0x2C2B PUSH2 0x2B44 JUMP JUMPDEST JUMPDEST PUSH2 0x2C37 DUP5 DUP3 DUP6 PUSH2 0x2BF0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C53 JUMPI PUSH2 0x2C52 PUSH2 0x2B40 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C63 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C82 JUMPI PUSH2 0x2C81 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C8F DUP6 DUP3 DUP7 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB0 JUMPI PUSH2 0x2CAF PUSH2 0x28FF JUMP JUMPDEST JUMPDEST PUSH2 0x2CBC DUP6 DUP3 DUP7 ADD PUSH2 0x2C3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD8 DUP2 PUSH2 0x2CC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CF1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2CCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2D14 JUMPI PUSH2 0x2D13 PUSH2 0x2B40 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D31 JUMPI PUSH2 0x2D30 PUSH2 0x2CF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2D4D JUMPI PUSH2 0x2D4C PUSH2 0x2CFB JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2D69 JUMPI PUSH2 0x2D68 PUSH2 0x2B40 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D86 JUMPI PUSH2 0x2D85 PUSH2 0x2CF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2DA2 JUMPI PUSH2 0x2DA1 PUSH2 0x2CFB JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2DC1 JUMPI PUSH2 0x2DC0 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DDE JUMPI PUSH2 0x2DDD PUSH2 0x28FF JUMP JUMPDEST JUMPDEST PUSH2 0x2DEA DUP8 DUP3 DUP9 ADD PUSH2 0x2CFF JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E0D JUMPI PUSH2 0x2E0C PUSH2 0x28FF JUMP JUMPDEST JUMPDEST PUSH2 0x2E19 DUP8 DUP3 DUP9 ADD PUSH2 0x2D54 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2E30 DUP2 PUSH2 0x2922 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E49 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E69 JUMPI PUSH2 0x2E68 PUSH2 0x2B48 JUMP JUMPDEST JUMPDEST PUSH2 0x2E72 DUP3 PUSH2 0x288A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2E91 PUSH2 0x2E8C DUP5 PUSH2 0x2E4F JUMP JUMPDEST PUSH2 0x2BA6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2EAD JUMPI PUSH2 0x2EAC PUSH2 0x2B44 JUMP JUMPDEST JUMPDEST PUSH2 0x2EB8 DUP5 DUP3 DUP6 PUSH2 0x2BF0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2ED4 JUMPI PUSH2 0x2ED3 PUSH2 0x2B40 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2EE4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2E7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F04 JUMPI PUSH2 0x2F03 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F21 JUMPI PUSH2 0x2F20 PUSH2 0x28FF JUMP JUMPDEST JUMPDEST PUSH2 0x2F2D DUP7 DUP3 DUP8 ADD PUSH2 0x2EC0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F4E JUMPI PUSH2 0x2F4D PUSH2 0x28FF JUMP JUMPDEST JUMPDEST PUSH2 0x2F5A DUP7 DUP3 DUP8 ADD PUSH2 0x2EC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F6B DUP7 DUP3 DUP8 ADD PUSH2 0x297C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F8B JUMPI PUSH2 0x2F8A PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F98 DUP6 DUP3 DUP7 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FA9 DUP6 DUP3 DUP7 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2FCA JUMPI PUSH2 0x2FC9 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FD7 DUP7 DUP3 DUP8 ADD PUSH2 0x2949 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2FE8 DUP7 DUP3 DUP8 ADD PUSH2 0x297C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2FF9 DUP7 DUP3 DUP8 ADD PUSH2 0x297C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3047 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x305A JUMPI PUSH2 0x3059 PUSH2 0x3003 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756C6C20416464726573730000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3094 PUSH1 0xC DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x309F DUP3 PUSH2 0x3060 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30C1 DUP2 PUSH2 0x3088 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH0 DUP3 ADD MSTORE PUSH32 0x6C69737465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3122 PUSH1 0x26 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x312D DUP3 PUSH2 0x30C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x314F DUP2 PUSH2 0x3116 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH0 DUP3 ADD MSTORE PUSH32 0x61636B6C69737465640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31B0 PUSH1 0x29 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x31BB DUP3 PUSH2 0x3156 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31DD DUP2 PUSH2 0x31A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C646E2774206265207A65726F0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3218 PUSH1 0x18 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3223 DUP3 PUSH2 0x31E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3245 DUP2 PUSH2 0x320C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32A6 PUSH1 0x22 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x32B1 DUP3 PUSH2 0x324C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x32D3 DUP2 PUSH2 0x329A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206973206E6F74206120636F6E747261637400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x330E PUSH1 0x19 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3319 DUP3 PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x333B DUP2 PUSH2 0x3302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2061727261797300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x339C PUSH1 0x27 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x33A7 DUP3 PUSH2 0x3342 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33C9 DUP2 PUSH2 0x3390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x697320626C61636B6C6973746564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3457 PUSH1 0x2E DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3462 DUP3 PUSH2 0x33FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3484 DUP2 PUSH2 0x344B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x34CA PUSH2 0x34C5 PUSH2 0x34C0 DUP5 PUSH2 0x348B JUMP JUMPDEST PUSH2 0x34A7 JUMP JUMPDEST PUSH2 0x3494 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34DA DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x34D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x352D PUSH1 0xE DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3538 DUP3 PUSH2 0x34F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x355A DUP2 PUSH2 0x3521 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3595 PUSH1 0x20 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x35A0 DUP3 PUSH2 0x3561 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35C2 DUP2 PUSH2 0x3589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35DC PUSH0 DUP4 ADD DUP6 PUSH2 0x2A69 JUMP JUMPDEST PUSH2 0x35E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3624 PUSH1 0x10 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x362F DUP3 PUSH2 0x35F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3651 DUP2 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3661 DUP2 PUSH2 0x2CC6 JUMP JUMPDEST DUP2 EQ PUSH2 0x366B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x367C DUP2 PUSH2 0x3658 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3697 JUMPI PUSH2 0x3696 PUSH2 0x28FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x36A4 DUP5 DUP3 DUP6 ADD PUSH2 0x366E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x36C0 PUSH0 DUP4 ADD DUP7 PUSH2 0x2E27 JUMP JUMPDEST PUSH2 0x36CD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A69 JUMP JUMPDEST PUSH2 0x36DA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A69 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3716 PUSH1 0x14 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3721 DUP3 PUSH2 0x36E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3743 DUP2 PUSH2 0x370A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3781 DUP3 PUSH2 0x295D JUMP JUMPDEST SWAP2 POP PUSH2 0x378C DUP4 PUSH2 0x295D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x37A4 JUMPI PUSH2 0x37A3 PUSH2 0x374A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x3806 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x37CB JUMP JUMPDEST PUSH2 0x3810 DUP7 DUP4 PUSH2 0x37CB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3842 PUSH2 0x383D PUSH2 0x3838 DUP5 PUSH2 0x295D JUMP JUMPDEST PUSH2 0x34A7 JUMP JUMPDEST PUSH2 0x295D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x385B DUP4 PUSH2 0x3828 JUMP JUMPDEST PUSH2 0x386F PUSH2 0x3867 DUP3 PUSH2 0x3849 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x37D7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3883 PUSH2 0x3877 JUMP JUMPDEST PUSH2 0x388E DUP2 DUP5 DUP5 PUSH2 0x3852 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38B1 JUMPI PUSH2 0x38A6 PUSH0 DUP3 PUSH2 0x387B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3894 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x38F6 JUMPI PUSH2 0x38C7 DUP2 PUSH2 0x37AA JUMP JUMPDEST PUSH2 0x38D0 DUP5 PUSH2 0x37BC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x38DF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x38F3 PUSH2 0x38EB DUP6 PUSH2 0x37BC JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3893 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3916 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x38FB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x392E DUP4 DUP4 PUSH2 0x3907 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3947 DUP3 PUSH2 0x2862 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3960 JUMPI PUSH2 0x395F PUSH2 0x2B48 JUMP JUMPDEST JUMPDEST PUSH2 0x396A DUP3 SLOAD PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x3975 DUP3 DUP3 DUP6 PUSH2 0x38B5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x39A6 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3994 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x399E DUP6 DUP3 PUSH2 0x3923 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A05 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x39B4 DUP7 PUSH2 0x37AA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39DB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39B6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39F8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x39F4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3907 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A2B DUP3 PUSH2 0x3A0D JUMP JUMPDEST PUSH2 0x3A35 DUP2 DUP6 PUSH2 0x3A17 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A45 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x287C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A5C DUP3 DUP5 PUSH2 0x3A21 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH26 0x37636E50C16C1E1072C313A080D5418685B960B5C0EE5E198BD0 PUSH16 0xCADB7B64736F6C634300081A00330000 ",
							"sourceMap": "445:4368:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2424:214:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3896:152:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3289:533:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3828:300;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3754:82:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1822:65:17;;;;;;;;;;;;;:::i;:::-;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1879:84:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4106:171:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;1755:61:17;;;;;;;;;;;;;:::i;:::-;;4134:573;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2973:148:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;707:46:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;759:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2770:513;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1273:363:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;549:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;658:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4708:195:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1893:525:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2716:144:4;2761:13;2786:22;2811:18;:16;:18::i;:::-;2786:43;;2846:1;:7;;2839:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144;:::o;5210:186::-;5283:4;5299:13;5315:12;:10;:12::i;:::-;5299:28;;5337:31;5346:5;5353:7;5362:5;5337:8;:31::i;:::-;5385:4;5378:11;;;5210:186;;;;:::o;2424:214:17:-;2334:13:0;:11;:13::i;:::-;2531:1:17::1;2513:20;;:7;:20;;::::0;2505:44:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2582:6;2559:11;:20;2571:7;2559:20;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2615:7;2603:28;;;2624:6;2603:28;;;;;;:::i;:::-;;;;;;;;2424:214:::0;;:::o;3896:152:4:-;3948:7;3967:22;3992:18;:16;:18::i;:::-;3967:43;;4027:1;:14;;;4020:21;;;3896:152;:::o;3289:533:17:-;3401:4;1503:19:3;:17;:19::i;:::-;3426:11:17::1;:19;3438:6;3426:19;;;;;;;;;;;;;;;;;;;;;;;;;3425:20;3417:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3507:11;:22;3519:9;3507:22;;;;;;;;;;;;;;;;;;;;;;;;;3506:23;3498:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3601:1;3593:6;:9;3585:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;3667:11;:19;3679:6;3667:19;;;;;;;;;;;;;;;;3648:15;:38;;:66;;;;3713:1;3690:11;:19;3702:6;3690:19;;;;;;;;;;;;;;;;:24;3648:66;3640:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;3770:45;3789:6;3797:9;3808:6;3770:18;:45::i;:::-;3763:52;;3289:533:::0;;;;;:::o;3828:300::-;1503:19:3;:17;:19::i;:::-;2334:13:0::1;:11;:13::i;:::-;3950:1:17::2;3926:26;;:12;:26;;::::0;3918:51:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3987:25;:12;:23;;;:25::i;:::-;3979:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4066:12;4052:11;;:26;;;;;;;;;;;;;;;;;;4108:12;4093:28;;;;;;;;;;;;3828:300:::0;:::o;3754:82:4:-;3803:5;3827:2;3820:9;;3754:82;:::o;1822:65:17:-;2334:13:0;:11;:13::i;:::-;1870:10:17::1;:8;:10::i;:::-;1822:65::o:0;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:10::1;3803:32:2;;3796:39;;3708:134:::0;:::o;1879:84:3:-;1926:4;1949:7;;;;;;;;;;;1942:14;;1879:84;:::o;4106:171:4:-;4171:7;4190:22;4215:18;:16;:18::i;:::-;4190:43;;4250:1;:11;;:20;4262:7;4250:20;;;;;;;;;;;;;;;;4243:27;;;4106:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1755:61:17:-;2334:13:0;:11;:13::i;:::-;1801:8:17::1;:6;:8::i;:::-;1755:61::o:0;4134:573::-;1503:19:3;:17;:19::i;:::-;4278:7:17::1;;:14;;4257:10;;:17;;:35;4249:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4346:23;4372:10;;:17;;4346:43;;4404:9;4399:302;4423:15;4419:1;:19;4399:302;;;4490:11;:26;4502:10;;4513:1;4502:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4490:26;;;;;;;;;;;;;;;;;;;;;;;;;4486:129;;;4540:56;;;;;;;;;;:::i;:::-;;;;;;;;4486:129;4628:48;4638:10;4650;;4661:1;4650:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4665:7;;4673:1;4665:10;;;;;;;:::i;:::-;;;;;;;;4628:9;:48::i;:::-;4440:3;;;;;;;4399:302;;;;4239:468;4134:573:::0;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2973:148:4:-;3020:13;3045:22;3070:18;:16;:18::i;:::-;3045:43;;3105:1;:9;;3098:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:148;:::o;707:46:17:-;;;;;;;;;;;;;;;;;:::o;759:47::-;;;;;;;;;;;;;;;;;:::o;2770:513::-;2862:4;1503:19:3;:17;:19::i;:::-;2887:11:17::1;:23;2899:10;2887:23;;;;;;;;;;;;;;;;;;;;;;;;;2886:24;2878:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2972:11;:22;2984:9;2972:22;;;;;;;;;;;;;;;;;;;;;;;;;2971:23;2963:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3066:1;3058:6;:9;3050:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;3132:11;:23;3144:10;3132:23;;;;;;;;;;;;;;;;3113:15;:42;;:74;;;;3186:1;3159:11;:23;3171:10;3159:23;;;;;;;;;;;;;;;;:28;3113:74;3105:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;3243:33;3258:9;3269:6;3243:14;:33::i;:::-;3236:40;;2770:513:::0;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;1273:363:17:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1388:26:17::1;1401:4;1407:6;1388:12;:26::i;:::-;1424;1439:10;1424:14;:26::i;:::-;1460:17;:15;:17::i;:::-;1487:24;:22;:24::i;:::-;1537:12;1522;:27;;;;1559:31;1565:10;1577:12;;1559:5;:31::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1273:363:17;;;:::o;549:26::-;;;;;;;;;;;;;:::o;658:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;4708:195:4:-;4788:7;4807:22;4832:18;:16;:18::i;:::-;4807:43;;4867:1;:13;;:20;4881:5;4867:20;;;;;;;;;;;;;;;:29;4888:7;4867:29;;;;;;;;;;;;;;;;4860:36;;;4708:195;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1893:525:17:-;1503:19:3;:17;:19::i;:::-;1701:11:17::1;;;;;;;;;;;1687:25;;:10;:25;;;1679:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2037:1:::2;2018:21;;:7;:21;;::::0;2010:46:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2079:1;2070:6;:10;2062:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2198:9;2174:11;:20;2186:7;2174:20;;;;;;;;;;;;;;;;:33;;:68;;;;2236:6;2211:12;:21;2224:7;2211:21;;;;;;;;;;;;;;;;:31;;2174:68;2170:246;;;2277:9;2254:11;:20;2266:7;2254:20;;;;;;;;;;;;;;;:32;;;;2320:6;2296:12;:21;2309:7;2296:21;;;;;;;;;;;;;;;:30;;;;2382:7;2372:37;;;2391:9;2402:6;2372:37;;;;;;;:::i;:::-;;;;;;;;2170:246;1893:525:::0;;;:::o;1947:153:4:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:6:-;940:7;966:10;959:17;;887:96;:::o;10001:128:4:-;10085:37;10094:5;10101:7;10110:5;10117:4;10085:8;:37::i;:::-;10001:128;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;2031:106:3:-;2101:8;:6;:8::i;:::-;2100:9;2092:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:106::o;5988:244:4:-;6075:4;6091:15;6109:12;:10;:12::i;:::-;6091:30;;6131:37;6147:4;6153:7;6162:5;6131:15;:37::i;:::-;6178:26;6188:4;6194:2;6198:5;6178:9;:26::i;:::-;6221:4;6214:11;;;5988:244;;;;;:::o;1423:320:5:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;2697:117:3:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2785:22;2794:12;:10;:12::i;:::-;2785:22;;;;;;:::i;:::-;;;;;;;;2697:117::o:0;4603:312:2:-;4692:6;4675:23;;4683:4;4675:23;;;:120;;;;4789:6;4753:42;;:32;:30;:32::i;:::-;:42;;;;4675:120;4658:251;;;4869:29;;;;;;;;;;;;;;4658:251;4603:312::o;4713:98:17:-;1503:19:3;:17;:19::i;:::-;2334:13:0::1;:11;:13::i;:::-;4713:98:17::0;:::o;6057:538:2:-;6174:17;6156:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6152:437;;6560:17;6518:60;;;;;;;;;;;:::i;:::-;;;;;;;;6152:437;811:66:10;6258:32:2;;6250:4;:40;6246:120;;6346:4;6317:34;;;;;;;;;;;:::i;:::-;;;;;;;;6246:120;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;5032:213::-;5115:6;5098:23;;5106:4;5098:23;;;5094:145;;5199:29;;;;;;;;;;;;;;5094:145;5032:213::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;2450:115:3:-;1503:19;:17;:19::i;:::-;2519:4:::1;2509:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;2538:20;2545:12;:10;:12::i;:::-;2538:20;;;;;;:::i;:::-;;;;;;;;2450:115::o:0;6605:300:4:-;6704:1;6688:18;;:4;:18;;;6684:86;;6756:1;6729:30;;;;;;;;;;;:::i;:::-;;;;;;;;6684:86;6797:1;6783:16;;:2;:16;;;6779:86;;6851:1;6822:32;;;;;;;;;;;:::i;:::-;;;;;;;;6779:86;6874:24;6882:4;6888:2;6892:5;6874:7;:24::i;:::-;6605:300;;;:::o;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;4472:178:4:-;4541:4;4557:13;4573:12;:10;:12::i;:::-;4557:28;;4595:27;4605:5;4612:2;4616:5;4595:9;:27::i;:::-;4639:4;4632:11;;;4472:178;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2282:147:4:-;6931:20:1;:18;:20::i;:::-;2384:38:4::1;2407:5;2414:7;2384:22;:38::i;:::-;2282:147:::0;;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1084:97:3:-;6931:20:1;:18;:20::i;:::-;1147:27:3::1;:25;:27::i;:::-;1084:97::o:0;2970:67:2:-;6931:20:1;:18;:20::i;:::-;2970:67:2:o;8733:208:4:-;8822:1;8803:21;;:7;:21;;;8799:91;;8876:1;8847:32;;;;;;;;;;;:::i;:::-;;;;;;;;8799:91;8899:35;8915:1;8919:7;8928:5;8899:7;:35::i;:::-;8733:208;;:::o;10976:487::-;11084:22;11109:18;:16;:18::i;:::-;11084:43;;11158:1;11141:19;;:5;:19;;;11137:89;;11212:1;11183:32;;;;;;;;;;;:::i;:::-;;;;;;;;11137:89;11258:1;11239:21;;:7;:21;;;11235:90;;11311:1;11283:31;;;;;;;;;;;:::i;:::-;;;;;;;;11235:90;11366:5;11334:1;:13;;:20;11348:5;11334:20;;;;;;;;;;;;;;;:29;11355:7;11334:29;;;;;;;;;;;;;;;:37;;;;11385:9;11381:76;;;11431:7;11415:31;;11424:5;11415:31;;;11440:5;11415:31;;;;;;:::i;:::-;;;;;;;;11381:76;11074:389;10976:487;;;;:::o;11745:477::-;11844:24;11871:25;11881:5;11888:7;11871:9;:25::i;:::-;11844:52;;11930:17;11910:16;:37;11906:310;;11986:5;11967:16;:24;11963:130;;;12045:7;12054:16;12072:5;12018:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11963:130;12134:57;12143:5;12150:7;12178:5;12159:16;:24;12185:5;12134:8;:57::i;:::-;11906:310;11834:388;11745:477;;;:::o;2209:106:3:-;2275:8;:6;:8::i;:::-;2267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:106::o;1441:138:10:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;7220:1170:4:-;7305:22;7330:18;:16;:18::i;:::-;7305:43;;7378:1;7362:18;;:4;:18;;;7358:546;;7516:5;7498:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7358:546;;;7552:19;7574:1;:11;;:17;7586:4;7574:17;;;;;;;;;;;;;;;;7552:39;;7623:5;7609:11;:19;7605:115;;;7680:4;7686:11;7699:5;7655:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7605:115;7874:5;7860:11;:19;7840:1;:11;;:17;7852:4;7840:17;;;;;;;;;;;;;;;:39;;;;7538:366;7358:546;7932:1;7918:16;;:2;:16;;;7914:429;;8099:5;8081:1;:14;;;:23;;;;;;;;;;;7914:429;;;8313:5;8294:1;:11;;:15;8306:2;8294:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7914:429;8373:2;8358:25;;8367:4;8358:25;;;8377:5;8358:25;;;;;;:::i;:::-;;;;;;;;7295:1095;7220:1170;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2435:216:4:-;6931:20:1;:18;:20::i;:::-;2547:22:4::1;2572:18;:16;:18::i;:::-;2547:43;;2610:5;2600:1;:7;;:15;;;;;;:::i;:::-;;2637:7;2625:1;:9;;:19;;;;;;:::i;:::-;;2537:114;2435:216:::0;;:::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1187:95:3:-;6931:20:1;:18;:20::i;:::-;1270:5:3::1;1260:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;1187:95::o:0;1899:163:16:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:10:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3900:253:14:-;3983:12;4008;4022:23;4049:6;:19;;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;:55::i;:::-;4084:62;;;;3900:253;;;;:::o;6113:122:10:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4421:582:14:-;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4862:1;4841:10;:17;:22;:49;;;;;4889:1;4867:6;:18;;;:23;4841:49;4837:119;;;4934:6;4917:24;;;;;;;;;;;:::i;:::-;;;;;;;;4837:119;4976:10;4969:17;;;;4589:408;4421:582;;;;;;:::o;5543:487::-;5694:1;5674:10;:17;:21;5670:354;;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;;;;;;;;;;;;;7:99:18;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:116::-;3409:21;3424:5;3409:21;:::i;:::-;3402:5;3399:32;3389:60;;3445:1;3442;3435:12;3389:60;3339:116;:::o;3461:133::-;3504:5;3542:6;3529:20;3520:29;;3558:30;3582:5;3558:30;:::i;:::-;3461:133;;;;:::o;3600:468::-;3665:6;3673;3722:2;3710:9;3701:7;3697:23;3693:32;3690:119;;;3728:79;;:::i;:::-;3690:119;3848:1;3873:53;3918:7;3909:6;3898:9;3894:22;3873:53;:::i;:::-;3863:63;;3819:117;3975:2;4001:50;4043:7;4034:6;4023:9;4019:22;4001:50;:::i;:::-;3991:60;;3946:115;3600:468;;;;;:::o;4074:118::-;4161:24;4179:5;4161:24;:::i;:::-;4156:3;4149:37;4074:118;;:::o;4198:222::-;4291:4;4329:2;4318:9;4314:18;4306:26;;4342:71;4410:1;4399:9;4395:17;4386:6;4342:71;:::i;:::-;4198:222;;;;:::o;4426:619::-;4503:6;4511;4519;4568:2;4556:9;4547:7;4543:23;4539:32;4536:119;;;4574:79;;:::i;:::-;4536:119;4694:1;4719:53;4764:7;4755:6;4744:9;4740:22;4719:53;:::i;:::-;4709:63;;4665:117;4821:2;4847:53;4892:7;4883:6;4872:9;4868:22;4847:53;:::i;:::-;4837:63;;4792:118;4949:2;4975:53;5020:7;5011:6;5000:9;4996:22;4975:53;:::i;:::-;4965:63;;4920:118;4426:619;;;;;:::o;5051:329::-;5110:6;5159:2;5147:9;5138:7;5134:23;5130:32;5127:119;;;5165:79;;:::i;:::-;5127:119;5285:1;5310:53;5355:7;5346:6;5335:9;5331:22;5310:53;:::i;:::-;5300:63;;5256:117;5051:329;;;;:::o;5386:86::-;5421:7;5461:4;5454:5;5450:16;5439:27;;5386:86;;;:::o;5478:112::-;5561:22;5577:5;5561:22;:::i;:::-;5556:3;5549:35;5478:112;;:::o;5596:214::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:67;5800:1;5789:9;5785:17;5776:6;5736:67;:::i;:::-;5596:214;;;;:::o;5816:117::-;5925:1;5922;5915:12;5939:117;6048:1;6045;6038:12;6062:180;6110:77;6107:1;6100:88;6207:4;6204:1;6197:15;6231:4;6228:1;6221:15;6248:281;6331:27;6353:4;6331:27;:::i;:::-;6323:6;6319:40;6461:6;6449:10;6446:22;6425:18;6413:10;6410:34;6407:62;6404:88;;;6472:18;;:::i;:::-;6404:88;6512:10;6508:2;6501:22;6291:238;6248:281;;:::o;6535:129::-;6569:6;6596:20;;:::i;:::-;6586:30;;6625:33;6653:4;6645:6;6625:33;:::i;:::-;6535:129;;;:::o;6670:307::-;6731:4;6821:18;6813:6;6810:30;6807:56;;;6843:18;;:::i;:::-;6807:56;6881:29;6903:6;6881:29;:::i;:::-;6873:37;;6965:4;6959;6955:15;6947:23;;6670:307;;;:::o;6983:148::-;7081:6;7076:3;7071;7058:30;7122:1;7113:6;7108:3;7104:16;7097:27;6983:148;;;:::o;7137:423::-;7214:5;7239:65;7255:48;7296:6;7255:48;:::i;:::-;7239:65;:::i;:::-;7230:74;;7327:6;7320:5;7313:21;7365:4;7358:5;7354:16;7403:3;7394:6;7389:3;7385:16;7382:25;7379:112;;;7410:79;;:::i;:::-;7379:112;7500:54;7547:6;7542:3;7537;7500:54;:::i;:::-;7220:340;7137:423;;;;;:::o;7579:338::-;7634:5;7683:3;7676:4;7668:6;7664:17;7660:27;7650:122;;7691:79;;:::i;:::-;7650:122;7808:6;7795:20;7833:78;7907:3;7899:6;7892:4;7884:6;7880:17;7833:78;:::i;:::-;7824:87;;7640:277;7579:338;;;;:::o;7923:652::-;8000:6;8008;8057:2;8045:9;8036:7;8032:23;8028:32;8025:119;;;8063:79;;:::i;:::-;8025:119;8183:1;8208:53;8253:7;8244:6;8233:9;8229:22;8208:53;:::i;:::-;8198:63;;8154:117;8338:2;8327:9;8323:18;8310:32;8369:18;8361:6;8358:30;8355:117;;;8391:79;;:::i;:::-;8355:117;8496:62;8550:7;8541:6;8530:9;8526:22;8496:62;:::i;:::-;8486:72;;8281:287;7923:652;;;;;:::o;8581:77::-;8618:7;8647:5;8636:16;;8581:77;;;:::o;8664:118::-;8751:24;8769:5;8751:24;:::i;:::-;8746:3;8739:37;8664:118;;:::o;8788:222::-;8881:4;8919:2;8908:9;8904:18;8896:26;;8932:71;9000:1;8989:9;8985:17;8976:6;8932:71;:::i;:::-;8788:222;;;;:::o;9016:117::-;9125:1;9122;9115:12;9139:117;9248:1;9245;9238:12;9279:568;9352:8;9362:6;9412:3;9405:4;9397:6;9393:17;9389:27;9379:122;;9420:79;;:::i;:::-;9379:122;9533:6;9520:20;9510:30;;9563:18;9555:6;9552:30;9549:117;;;9585:79;;:::i;:::-;9549:117;9699:4;9691:6;9687:17;9675:29;;9753:3;9745:4;9737:6;9733:17;9723:8;9719:32;9716:41;9713:128;;;9760:79;;:::i;:::-;9713:128;9279:568;;;;;:::o;9870:::-;9943:8;9953:6;10003:3;9996:4;9988:6;9984:17;9980:27;9970:122;;10011:79;;:::i;:::-;9970:122;10124:6;10111:20;10101:30;;10154:18;10146:6;10143:30;10140:117;;;10176:79;;:::i;:::-;10140:117;10290:4;10282:6;10278:17;10266:29;;10344:3;10336:4;10328:6;10324:17;10314:8;10310:32;10307:41;10304:128;;;10351:79;;:::i;:::-;10304:128;9870:568;;;;;:::o;10444:934::-;10566:6;10574;10582;10590;10639:2;10627:9;10618:7;10614:23;10610:32;10607:119;;;10645:79;;:::i;:::-;10607:119;10793:1;10782:9;10778:17;10765:31;10823:18;10815:6;10812:30;10809:117;;;10845:79;;:::i;:::-;10809:117;10958:80;11030:7;11021:6;11010:9;11006:22;10958:80;:::i;:::-;10940:98;;;;10736:312;11115:2;11104:9;11100:18;11087:32;11146:18;11138:6;11135:30;11132:117;;;11168:79;;:::i;:::-;11132:117;11281:80;11353:7;11344:6;11333:9;11329:22;11281:80;:::i;:::-;11263:98;;;;11058:313;10444:934;;;;;;;:::o;11384:118::-;11471:24;11489:5;11471:24;:::i;:::-;11466:3;11459:37;11384:118;;:::o;11508:222::-;11601:4;11639:2;11628:9;11624:18;11616:26;;11652:71;11720:1;11709:9;11705:17;11696:6;11652:71;:::i;:::-;11508:222;;;;:::o;11736:308::-;11798:4;11888:18;11880:6;11877:30;11874:56;;;11910:18;;:::i;:::-;11874:56;11948:29;11970:6;11948:29;:::i;:::-;11940:37;;12032:4;12026;12022:15;12014:23;;11736:308;;;:::o;12050:425::-;12128:5;12153:66;12169:49;12211:6;12169:49;:::i;:::-;12153:66;:::i;:::-;12144:75;;12242:6;12235:5;12228:21;12280:4;12273:5;12269:16;12318:3;12309:6;12304:3;12300:16;12297:25;12294:112;;;12325:79;;:::i;:::-;12294:112;12415:54;12462:6;12457:3;12452;12415:54;:::i;:::-;12134:341;12050:425;;;;;:::o;12495:340::-;12551:5;12600:3;12593:4;12585:6;12581:17;12577:27;12567:122;;12608:79;;:::i;:::-;12567:122;12725:6;12712:20;12750:79;12825:3;12817:6;12810:4;12802:6;12798:17;12750:79;:::i;:::-;12741:88;;12557:278;12495:340;;;;:::o;12841:979::-;12938:6;12946;12954;13003:2;12991:9;12982:7;12978:23;12974:32;12971:119;;;13009:79;;:::i;:::-;12971:119;13157:1;13146:9;13142:17;13129:31;13187:18;13179:6;13176:30;13173:117;;;13209:79;;:::i;:::-;13173:117;13314:63;13369:7;13360:6;13349:9;13345:22;13314:63;:::i;:::-;13304:73;;13100:287;13454:2;13443:9;13439:18;13426:32;13485:18;13477:6;13474:30;13471:117;;;13507:79;;:::i;:::-;13471:117;13612:63;13667:7;13658:6;13647:9;13643:22;13612:63;:::i;:::-;13602:73;;13397:288;13724:2;13750:53;13795:7;13786:6;13775:9;13771:22;13750:53;:::i;:::-;13740:63;;13695:118;12841:979;;;;;:::o;13826:474::-;13894:6;13902;13951:2;13939:9;13930:7;13926:23;13922:32;13919:119;;;13957:79;;:::i;:::-;13919:119;14077:1;14102:53;14147:7;14138:6;14127:9;14123:22;14102:53;:::i;:::-;14092:63;;14048:117;14204:2;14230:53;14275:7;14266:6;14255:9;14251:22;14230:53;:::i;:::-;14220:63;;14175:118;13826:474;;;;;:::o;14306:619::-;14383:6;14391;14399;14448:2;14436:9;14427:7;14423:23;14419:32;14416:119;;;14454:79;;:::i;:::-;14416:119;14574:1;14599:53;14644:7;14635:6;14624:9;14620:22;14599:53;:::i;:::-;14589:63;;14545:117;14701:2;14727:53;14772:7;14763:6;14752:9;14748:22;14727:53;:::i;:::-;14717:63;;14672:118;14829:2;14855:53;14900:7;14891:6;14880:9;14876:22;14855:53;:::i;:::-;14845:63;;14800:118;14306:619;;;;;:::o;14931:180::-;14979:77;14976:1;14969:88;15076:4;15073:1;15066:15;15100:4;15097:1;15090:15;15117:320;15161:6;15198:1;15192:4;15188:12;15178:22;;15245:1;15239:4;15235:12;15266:18;15256:81;;15322:4;15314:6;15310:17;15300:27;;15256:81;15384:2;15376:6;15373:14;15353:18;15350:38;15347:84;;15403:18;;:::i;:::-;15347:84;15168:269;15117:320;;;:::o;15443:162::-;15583:14;15579:1;15571:6;15567:14;15560:38;15443:162;:::o;15611:366::-;15753:3;15774:67;15838:2;15833:3;15774:67;:::i;:::-;15767:74;;15850:93;15939:3;15850:93;:::i;:::-;15968:2;15963:3;15959:12;15952:19;;15611:366;;;:::o;15983:419::-;16149:4;16187:2;16176:9;16172:18;16164:26;;16236:9;16230:4;16226:20;16222:1;16211:9;16207:17;16200:47;16264:131;16390:4;16264:131;:::i;:::-;16256:139;;15983:419;;;:::o;16408:225::-;16548:34;16544:1;16536:6;16532:14;16525:58;16617:8;16612:2;16604:6;16600:15;16593:33;16408:225;:::o;16639:366::-;16781:3;16802:67;16866:2;16861:3;16802:67;:::i;:::-;16795:74;;16878:93;16967:3;16878:93;:::i;:::-;16996:2;16991:3;16987:12;16980:19;;16639:366;;;:::o;17011:419::-;17177:4;17215:2;17204:9;17200:18;17192:26;;17264:9;17258:4;17254:20;17250:1;17239:9;17235:17;17228:47;17292:131;17418:4;17292:131;:::i;:::-;17284:139;;17011:419;;;:::o;17436:228::-;17576:34;17572:1;17564:6;17560:14;17553:58;17645:11;17640:2;17632:6;17628:15;17621:36;17436:228;:::o;17670:366::-;17812:3;17833:67;17897:2;17892:3;17833:67;:::i;:::-;17826:74;;17909:93;17998:3;17909:93;:::i;:::-;18027:2;18022:3;18018:12;18011:19;;17670:366;;;:::o;18042:419::-;18208:4;18246:2;18235:9;18231:18;18223:26;;18295:9;18289:4;18285:20;18281:1;18270:9;18266:17;18259:47;18323:131;18449:4;18323:131;:::i;:::-;18315:139;;18042:419;;;:::o;18467:174::-;18607:26;18603:1;18595:6;18591:14;18584:50;18467:174;:::o;18647:366::-;18789:3;18810:67;18874:2;18869:3;18810:67;:::i;:::-;18803:74;;18886:93;18975:3;18886:93;:::i;:::-;19004:2;18999:3;18995:12;18988:19;;18647:366;;;:::o;19019:419::-;19185:4;19223:2;19212:9;19208:18;19200:26;;19272:9;19266:4;19262:20;19258:1;19247:9;19243:17;19236:47;19300:131;19426:4;19300:131;:::i;:::-;19292:139;;19019:419;;;:::o;19444:221::-;19584:34;19580:1;19572:6;19568:14;19561:58;19653:4;19648:2;19640:6;19636:15;19629:29;19444:221;:::o;19671:366::-;19813:3;19834:67;19898:2;19893:3;19834:67;:::i;:::-;19827:74;;19910:93;19999:3;19910:93;:::i;:::-;20028:2;20023:3;20019:12;20012:19;;19671:366;;;:::o;20043:419::-;20209:4;20247:2;20236:9;20232:18;20224:26;;20296:9;20290:4;20286:20;20282:1;20271:9;20267:17;20260:47;20324:131;20450:4;20324:131;:::i;:::-;20316:139;;20043:419;;;:::o;20468:175::-;20608:27;20604:1;20596:6;20592:14;20585:51;20468:175;:::o;20649:366::-;20791:3;20812:67;20876:2;20871:3;20812:67;:::i;:::-;20805:74;;20888:93;20977:3;20888:93;:::i;:::-;21006:2;21001:3;20997:12;20990:19;;20649:366;;;:::o;21021:419::-;21187:4;21225:2;21214:9;21210:18;21202:26;;21274:9;21268:4;21264:20;21260:1;21249:9;21245:17;21238:47;21302:131;21428:4;21302:131;:::i;:::-;21294:139;;21021:419;;;:::o;21446:226::-;21586:34;21582:1;21574:6;21570:14;21563:58;21655:9;21650:2;21642:6;21638:15;21631:34;21446:226;:::o;21678:366::-;21820:3;21841:67;21905:2;21900:3;21841:67;:::i;:::-;21834:74;;21917:93;22006:3;21917:93;:::i;:::-;22035:2;22030:3;22026:12;22019:19;;21678:366;;;:::o;22050:419::-;22216:4;22254:2;22243:9;22239:18;22231:26;;22303:9;22297:4;22293:20;22289:1;22278:9;22274:17;22267:47;22331:131;22457:4;22331:131;:::i;:::-;22323:139;;22050:419;;;:::o;22475:180::-;22523:77;22520:1;22513:88;22620:4;22617:1;22610:15;22644:4;22641:1;22634:15;22661:233;22801:34;22797:1;22789:6;22785:14;22778:58;22870:16;22865:2;22857:6;22853:15;22846:41;22661:233;:::o;22900:366::-;23042:3;23063:67;23127:2;23122:3;23063:67;:::i;:::-;23056:74;;23139:93;23228:3;23139:93;:::i;:::-;23257:2;23252:3;23248:12;23241:19;;22900:366;;;:::o;23272:419::-;23438:4;23476:2;23465:9;23461:18;23453:26;;23525:9;23519:4;23515:20;23511:1;23500:9;23496:17;23489:47;23553:131;23679:4;23553:131;:::i;:::-;23545:139;;23272:419;;;:::o;23697:85::-;23742:7;23771:5;23760:16;;23697:85;;;:::o;23788:101::-;23824:7;23864:18;23857:5;23853:30;23842:41;;23788:101;;;:::o;23895:60::-;23923:3;23944:5;23937:12;;23895:60;;;:::o;23961:156::-;24018:9;24051:60;24068:42;24077:32;24103:5;24077:32;:::i;:::-;24068:42;:::i;:::-;24051:60;:::i;:::-;24038:73;;23961:156;;;:::o;24123:145::-;24217:44;24255:5;24217:44;:::i;:::-;24212:3;24205:57;24123:145;;:::o;24274:236::-;24374:4;24412:2;24401:9;24397:18;24389:26;;24425:78;24500:1;24489:9;24485:17;24476:6;24425:78;:::i;:::-;24274:236;;;;:::o;24516:164::-;24656:16;24652:1;24644:6;24640:14;24633:40;24516:164;:::o;24686:366::-;24828:3;24849:67;24913:2;24908:3;24849:67;:::i;:::-;24842:74;;24925:93;25014:3;24925:93;:::i;:::-;25043:2;25038:3;25034:12;25027:19;;24686:366;;;:::o;25058:419::-;25224:4;25262:2;25251:9;25247:18;25239:26;;25311:9;25305:4;25301:20;25297:1;25286:9;25282:17;25275:47;25339:131;25465:4;25339:131;:::i;:::-;25331:139;;25058:419;;;:::o;25483:182::-;25623:34;25619:1;25611:6;25607:14;25600:58;25483:182;:::o;25671:366::-;25813:3;25834:67;25898:2;25893:3;25834:67;:::i;:::-;25827:74;;25910:93;25999:3;25910:93;:::i;:::-;26028:2;26023:3;26019:12;26012:19;;25671:366;;;:::o;26043:419::-;26209:4;26247:2;26236:9;26232:18;26224:26;;26296:9;26290:4;26286:20;26282:1;26271:9;26267:17;26260:47;26324:131;26450:4;26324:131;:::i;:::-;26316:139;;26043:419;;;:::o;26468:332::-;26589:4;26627:2;26616:9;26612:18;26604:26;;26640:71;26708:1;26697:9;26693:17;26684:6;26640:71;:::i;:::-;26721:72;26789:2;26778:9;26774:18;26765:6;26721:72;:::i;:::-;26468:332;;;;;:::o;26806:166::-;26946:18;26942:1;26934:6;26930:14;26923:42;26806:166;:::o;26978:366::-;27120:3;27141:67;27205:2;27200:3;27141:67;:::i;:::-;27134:74;;27217:93;27306:3;27217:93;:::i;:::-;27335:2;27330:3;27326:12;27319:19;;26978:366;;;:::o;27350:419::-;27516:4;27554:2;27543:9;27539:18;27531:26;;27603:9;27597:4;27593:20;27589:1;27578:9;27574:17;27567:47;27631:131;27757:4;27631:131;:::i;:::-;27623:139;;27350:419;;;:::o;27775:122::-;27848:24;27866:5;27848:24;:::i;:::-;27841:5;27838:35;27828:63;;27887:1;27884;27877:12;27828:63;27775:122;:::o;27903:143::-;27960:5;27991:6;27985:13;27976:22;;28007:33;28034:5;28007:33;:::i;:::-;27903:143;;;;:::o;28052:351::-;28122:6;28171:2;28159:9;28150:7;28146:23;28142:32;28139:119;;;28177:79;;:::i;:::-;28139:119;28297:1;28322:64;28378:7;28369:6;28358:9;28354:22;28322:64;:::i;:::-;28312:74;;28268:128;28052:351;;;;:::o;28409:442::-;28558:4;28596:2;28585:9;28581:18;28573:26;;28609:71;28677:1;28666:9;28662:17;28653:6;28609:71;:::i;:::-;28690:72;28758:2;28747:9;28743:18;28734:6;28690:72;:::i;:::-;28772;28840:2;28829:9;28825:18;28816:6;28772:72;:::i;:::-;28409:442;;;;;;:::o;28857:170::-;28997:22;28993:1;28985:6;28981:14;28974:46;28857:170;:::o;29033:366::-;29175:3;29196:67;29260:2;29255:3;29196:67;:::i;:::-;29189:74;;29272:93;29361:3;29272:93;:::i;:::-;29390:2;29385:3;29381:12;29374:19;;29033:366;;;:::o;29405:419::-;29571:4;29609:2;29598:9;29594:18;29586:26;;29658:9;29652:4;29648:20;29644:1;29633:9;29629:17;29622:47;29686:131;29812:4;29686:131;:::i;:::-;29678:139;;29405:419;;;:::o;29830:180::-;29878:77;29875:1;29868:88;29975:4;29972:1;29965:15;29999:4;29996:1;29989:15;30016:191;30056:3;30075:20;30093:1;30075:20;:::i;:::-;30070:25;;30109:20;30127:1;30109:20;:::i;:::-;30104:25;;30152:1;30149;30145:9;30138:16;;30173:3;30170:1;30167:10;30164:36;;;30180:18;;:::i;:::-;30164:36;30016:191;;;;:::o;30213:141::-;30262:4;30285:3;30277:11;;30308:3;30305:1;30298:14;30342:4;30339:1;30329:18;30321:26;;30213:141;;;:::o;30360:93::-;30397:6;30444:2;30439;30432:5;30428:14;30424:23;30414:33;;30360:93;;;:::o;30459:107::-;30503:8;30553:5;30547:4;30543:16;30522:37;;30459:107;;;;:::o;30572:393::-;30641:6;30691:1;30679:10;30675:18;30714:97;30744:66;30733:9;30714:97;:::i;:::-;30832:39;30862:8;30851:9;30832:39;:::i;:::-;30820:51;;30904:4;30900:9;30893:5;30889:21;30880:30;;30953:4;30943:8;30939:19;30932:5;30929:30;30919:40;;30648:317;;30572:393;;;;;:::o;30971:142::-;31021:9;31054:53;31072:34;31081:24;31099:5;31081:24;:::i;:::-;31072:34;:::i;:::-;31054:53;:::i;:::-;31041:66;;30971:142;;;:::o;31119:75::-;31162:3;31183:5;31176:12;;31119:75;;;:::o;31200:269::-;31310:39;31341:7;31310:39;:::i;:::-;31371:91;31420:41;31444:16;31420:41;:::i;:::-;31412:6;31405:4;31399:11;31371:91;:::i;:::-;31365:4;31358:105;31276:193;31200:269;;;:::o;31475:73::-;31520:3;31475:73;:::o;31554:189::-;31631:32;;:::i;:::-;31672:65;31730:6;31722;31716:4;31672:65;:::i;:::-;31607:136;31554:189;;:::o;31749:186::-;31809:120;31826:3;31819:5;31816:14;31809:120;;;31880:39;31917:1;31910:5;31880:39;:::i;:::-;31853:1;31846:5;31842:13;31833:22;;31809:120;;;31749:186;;:::o;31941:543::-;32042:2;32037:3;32034:11;32031:446;;;32076:38;32108:5;32076:38;:::i;:::-;32160:29;32178:10;32160:29;:::i;:::-;32150:8;32146:44;32343:2;32331:10;32328:18;32325:49;;;32364:8;32349:23;;32325:49;32387:80;32443:22;32461:3;32443:22;:::i;:::-;32433:8;32429:37;32416:11;32387:80;:::i;:::-;32046:431;;32031:446;31941:543;;;:::o;32490:117::-;32544:8;32594:5;32588:4;32584:16;32563:37;;32490:117;;;;:::o;32613:169::-;32657:6;32690:51;32738:1;32734:6;32726:5;32723:1;32719:13;32690:51;:::i;:::-;32686:56;32771:4;32765;32761:15;32751:25;;32664:118;32613:169;;;;:::o;32787:295::-;32863:4;33009:29;33034:3;33028:4;33009:29;:::i;:::-;33001:37;;33071:3;33068:1;33064:11;33058:4;33055:21;33047:29;;32787:295;;;;:::o;33087:1395::-;33204:37;33237:3;33204:37;:::i;:::-;33306:18;33298:6;33295:30;33292:56;;;33328:18;;:::i;:::-;33292:56;33372:38;33404:4;33398:11;33372:38;:::i;:::-;33457:67;33517:6;33509;33503:4;33457:67;:::i;:::-;33551:1;33575:4;33562:17;;33607:2;33599:6;33596:14;33624:1;33619:618;;;;34281:1;34298:6;34295:77;;;34347:9;34342:3;34338:19;34332:26;34323:35;;34295:77;34398:67;34458:6;34451:5;34398:67;:::i;:::-;34392:4;34385:81;34254:222;33589:887;;33619:618;33671:4;33667:9;33659:6;33655:22;33705:37;33737:4;33705:37;:::i;:::-;33764:1;33778:208;33792:7;33789:1;33786:14;33778:208;;;33871:9;33866:3;33862:19;33856:26;33848:6;33841:42;33922:1;33914:6;33910:14;33900:24;;33969:2;33958:9;33954:18;33941:31;;33815:4;33812:1;33808:12;33803:17;;33778:208;;;34014:6;34005:7;34002:19;33999:179;;;34072:9;34067:3;34063:19;34057:26;34115:48;34157:4;34149:6;34145:17;34134:9;34115:48;:::i;:::-;34107:6;34100:64;34022:156;33999:179;34224:1;34220;34212:6;34208:14;34204:22;34198:4;34191:36;33626:611;;;33589:887;;33179:1303;;;33087:1395;;:::o;34488:98::-;34539:6;34573:5;34567:12;34557:22;;34488:98;;;:::o;34592:147::-;34693:11;34730:3;34715:18;;34592:147;;;;:::o;34745:386::-;34849:3;34877:38;34909:5;34877:38;:::i;:::-;34931:88;35012:6;35007:3;34931:88;:::i;:::-;34924:95;;35028:65;35086:6;35081:3;35074:4;35067:5;35063:16;35028:65;:::i;:::-;35118:6;35113:3;35109:16;35102:23;;34853:278;34745:386;;;;:::o;35137:271::-;35267:3;35289:93;35378:3;35369:6;35289:93;:::i;:::-;35282:100;;35399:3;35392:10;;35137:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3001000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2970",
								"batchTransfer(address[],uint256[])": "infinite",
								"blacklisted(address)": "2877",
								"decimals()": "384",
								"icoContract()": "2597",
								"initialize(string,string,uint256)": "infinite",
								"lockedAmount(address)": "2891",
								"lockedUntil(address)": "2869",
								"name()": "infinite",
								"owner()": "2657",
								"pause()": "infinite",
								"paused()": "2540",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"setBlacklist(address,bool)": "infinite",
								"setICOContract(address)": "infinite",
								"setLockup(address,uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2575",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 445,
									"end": 4813,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1186,
									"end": 1208,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1186,
									"end": 1206,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 1186,
									"end": 1206,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1186,
									"end": 1206,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1186,
									"end": 1208,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1186,
									"end": 1208,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 1186,
									"end": 1208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1186,
									"end": 1208,
									"name": "tag",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1186,
									"end": 1208,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "6"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7986,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8052,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8036,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8099,
									"end": 8115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 8087,
									"end": 8116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8795,
									"end": 8825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 108,
									"name": "tag",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 108,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 43,
									"end": 50,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 101,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 76,
									"end": 81,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 72,
									"end": 102,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 61,
									"end": 102,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 61,
									"end": 102,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"name": "tag",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 114,
									"end": 229,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 221,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 199,
									"end": 222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 199,
									"end": 222,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 194,
									"end": 197,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 187,
									"end": 223,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "tag",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 235,
									"end": 453,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 366,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 362,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 349,
									"end": 367,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 341,
									"end": 367,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 341,
									"end": 367,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 441,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 428,
									"end": 445,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 377,
									"end": 446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 377,
									"end": 446,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 377,
									"end": 446,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "tag",
									"source": 17,
									"value": "6"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "468"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4813,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e7937636e50c16c1e1072c313a080d5418685b960b5c0ee5e198bd06fcadb7b64736f6c634300081a0033",
									".code": [
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "8456CB59"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "AD3CB1CC"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "DBAC26E9"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "DBAC26E9"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "DD62ED3E"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "F326F0D7"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "AD3CB1CC"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "B119490E"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "C66E4095"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "9BC289F1"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "A153E708"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "A9059CBB"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "8456CB59"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "88D695B2"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "52D1902D"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "52D1902D"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "5C975ABB"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "3F4BA83A"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "4F1EF286"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "153B0D1E"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "18160DDD"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "2E0D2A00"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4813,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 2424,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 2424,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "tag",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3289,
											"end": 3822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 3289,
											"end": 3822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "tag",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 3289,
											"end": 3822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "tag",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "tag",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "tag",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 3828,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 3828,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1822,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "tag",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "tag",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 1755,
											"end": 1816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "tag",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "tag",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 4134,
											"end": 4707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 4134,
											"end": 4707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "tag",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 707,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 707,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 707,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 707,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 759,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 759,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 759,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "tag",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 2770,
											"end": 3283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "tag",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2770,
											"end": 3283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "tag",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 2770,
											"end": 3283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "tag",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "135"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 1273,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "tag",
											"source": 17,
											"value": "135"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 1273,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "tag",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "138"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "138"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 549,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 549,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 658,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 658,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "tag",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 658,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "tag",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 1893,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 1893,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "tag",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2786,
											"end": 2808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2811,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5315,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5315,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5337,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5385,
											"end": 5389,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2533,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2513,
											"end": 2520,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2513,
											"end": 2533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2533,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 2505,
											"end": 2549,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 2505,
											"end": 2549,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2582,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2578,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2559,
											"end": 2588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2615,
											"end": 2622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "CF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8"
										},
										{
											"begin": 2624,
											"end": 2630,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 2603,
											"end": 2631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2603,
											"end": 2631,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2424,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3992,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3992,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3401,
											"end": 3405,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3425,
											"end": 3445,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 3417,
											"end": 3488,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 3417,
											"end": 3488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3507,
											"end": 3529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3506,
											"end": 3529,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 3498,
											"end": 3575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 3498,
											"end": 3575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3601,
											"end": 3602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3599,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3593,
											"end": 3602,
											"modifierDepth": 1,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 3585,
											"end": 3630,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 3585,
											"end": 3630,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3685,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3686,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3648,
											"end": 3663,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 3648,
											"end": 3686,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3648,
											"end": 3686,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3648,
											"end": 3714,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3648,
											"end": 3714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 3648,
											"end": 3714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3648,
											"end": 3714,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3713,
											"end": 3714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3708,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3714,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3648,
											"end": 3714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 3648,
											"end": 3714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 3640,
											"end": 3753,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 3640,
											"end": 3753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3770,
											"end": 3815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 3789,
											"end": 3795,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3797,
											"end": 3806,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3808,
											"end": 3814,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3770,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "204"
										},
										{
											"begin": 3770,
											"end": 3815,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3770,
											"end": 3815,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 3770,
											"end": 3815,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3763,
											"end": 3815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3763,
											"end": 3815,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "tag",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2334,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3950,
											"end": 3951,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3926,
											"end": 3952,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3926,
											"end": 3938,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3926,
											"end": 3952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3926,
											"end": 3952,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 3918,
											"end": 3969,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 3918,
											"end": 3969,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3987,
											"end": 4012,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 3987,
											"end": 3999,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3987,
											"end": 4010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 4010,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3987,
											"end": 4010,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 3987,
											"end": 4012,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3987,
											"end": 4012,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 3987,
											"end": 4012,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 3979,
											"end": 4042,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 3979,
											"end": 4042,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4078,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4063,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 4052,
											"end": 4063,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4078,
											"modifierDepth": 2,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4108,
											"end": 4120,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "E7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8"
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 4128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 1870,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 1870,
											"end": 1880,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1870,
											"end": 1880,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 1870,
											"end": 1880,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 4215,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4215,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 1801,
											"end": 1807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 1801,
											"end": 1809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 1809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 1801,
											"end": 1809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "tag",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4278,
											"end": 4285,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4278,
											"end": 4285,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4278,
											"end": 4292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4278,
											"end": 4292,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4257,
											"end": 4267,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4257,
											"end": 4267,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4257,
											"end": 4274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4257,
											"end": 4274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4257,
											"end": 4292,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 4249,
											"end": 4336,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 4249,
											"end": 4336,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4346,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4382,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4382,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4346,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4346,
											"end": 4389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4404,
											"end": 4413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 4399,
											"end": 4701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4423,
											"end": 4438,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4419,
											"end": 4420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4419,
											"end": 4438,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4399,
											"end": 4701,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4399,
											"end": 4701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 4399,
											"end": 4701,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4512,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4512,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4513,
											"end": 4514,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 4502,
											"end": 4515,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 4502,
											"end": 4515,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 4502,
											"end": 4515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 4490,
											"end": 4516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4486,
											"end": 4615,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4486,
											"end": 4615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 4486,
											"end": 4615,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 4540,
											"end": 4596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4540,
											"end": 4596,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4486,
											"end": 4615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 4486,
											"end": 4615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4628,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 4638,
											"end": 4648,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4660,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4661,
											"end": 4662,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 4650,
											"end": 4663,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 4650,
											"end": 4663,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 4650,
											"end": 4663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4672,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4672,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4673,
											"end": 4674,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 4665,
											"end": 4675,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4675,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4628,
											"end": 4637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 4628,
											"end": 4676,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4628,
											"end": 4676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 4628,
											"end": 4676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4443,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4443,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4440,
											"end": 4443,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4443,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4399,
											"end": 4701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 4399,
											"end": 4701,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4399,
											"end": 4701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 4399,
											"end": 4701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4399,
											"end": 4701,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4239,
											"end": 4707,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 3070,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3070,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 707,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "tag",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2862,
											"end": 2866,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2887,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2909,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2887,
											"end": 2910,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2886,
											"end": 2910,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 2878,
											"end": 2953,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 2878,
											"end": 2953,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 2993,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2972,
											"end": 2994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2971,
											"end": 2994,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 2963,
											"end": 3040,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 2963,
											"end": 3040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3066,
											"end": 3067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3058,
											"end": 3067,
											"modifierDepth": 1,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 3050,
											"end": 3095,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 3050,
											"end": 3095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3154,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3155,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3113,
											"end": 3128,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 3113,
											"end": 3155,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3113,
											"end": 3155,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3113,
											"end": 3187,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3113,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 3113,
											"end": 3187,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3113,
											"end": 3187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3186,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3181,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3182,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3187,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3113,
											"end": 3187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 3113,
											"end": 3187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 3105,
											"end": 3226,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 3105,
											"end": 3226,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 3258,
											"end": 3267,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3269,
											"end": 3275,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 3243,
											"end": 3276,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 3243,
											"end": 3276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3236,
											"end": 3276,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3236,
											"end": 3276,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2770,
											"end": 3283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "tag",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 1401,
											"end": 1405,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 1413,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 1388,
											"end": 1400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 1388,
											"end": 1414,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 1439,
											"end": 1449,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "307"
										},
										{
											"begin": 1424,
											"end": 1450,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 1424,
											"end": 1450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1460,
											"end": 1477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 1460,
											"end": 1475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 1460,
											"end": 1477,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1460,
											"end": 1477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 1460,
											"end": 1477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 1487,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 1487,
											"end": 1511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 1487,
											"end": 1511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1537,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1522,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1549,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1559,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 1565,
											"end": 1575,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1577,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1577,
											"end": 1589,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1559,
											"end": 1564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 1559,
											"end": 1590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1559,
											"end": 1590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 1559,
											"end": 1590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 4832,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4832,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1687,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1687,
											"end": 1697,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1687,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1687,
											"end": 1712,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 1679,
											"end": 1731,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2037,
											"end": 2038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2018,
											"end": 2025,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2018,
											"end": 2039,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 2010,
											"end": 2056,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2079,
											"end": 2080,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2076,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2080,
											"modifierDepth": 2,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 2062,
											"end": 2117,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 2062,
											"end": 2117,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2198,
											"end": 2207,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2185,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2193,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2207,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2207,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2242,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2242,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 2174,
											"end": 2242,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2242,
											"modifierDepth": 2,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2236,
											"end": 2242,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2223,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2231,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2232,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2242,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2211,
											"end": 2242,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2242,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 2174,
											"end": 2242,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2170,
											"end": 2416,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2170,
											"end": 2416,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 2170,
											"end": 2416,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2277,
											"end": 2286,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2265,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2273,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2274,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2286,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2286,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2286,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2286,
											"modifierDepth": 2,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2326,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2316,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2317,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2326,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2326,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2326,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2326,
											"modifierDepth": 2,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2382,
											"end": 2389,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "86F2E10D5622D896B3F56E66C1A60639CA21A4674480F054BEC2CB9BA62F40CB"
										},
										{
											"begin": 2391,
											"end": 2400,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2402,
											"end": 2408,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 2372,
											"end": 2409,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2372,
											"end": 2409,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 2170,
											"end": 2416,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 2170,
											"end": 2416,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10085,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 10085,
											"end": 10122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2101,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 2092,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 6109,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6109,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6167,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 6131,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6194,
											"end": 6196,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6198,
											"end": 6203,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6178,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 1750,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 2794,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2794,
											"end": 2806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2785,
											"end": 2807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 4753,
											"end": 4783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 4753,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 4811,
											"name": "tag",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 4713,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 2334,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4713,
											"end": 4811,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4713,
											"end": 4811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 6518,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "tag",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6317,
											"end": 6351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6209,
											"end": 6444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 2545,
											"end": 2555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2545,
											"end": 2557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2538,
											"end": 2558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6729,
											"end": 6759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "tag",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6822,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "tag",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "tag",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 6874,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "tag",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 4573,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4573,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "tag",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 4605,
											"end": 4610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 4595,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 2407,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 2384,
											"end": 2422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 1147,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8822,
											"end": 8823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 8847,
											"end": 8879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 8915,
											"end": 8916,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8928,
											"end": 8933,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 8899,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 11109,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 11109,
											"end": 11127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11158,
											"end": 11159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11146,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 11183,
											"end": 11215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11246,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 11283,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11366,
											"end": 11371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11355,
											"end": 11362,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11440,
											"end": 11445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 11415,
											"end": 11446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "tag",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "tag",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 11881,
											"end": 11886,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11888,
											"end": 11895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 11871,
											"end": 11896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "tag",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11930,
											"end": 11947,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11910,
											"end": 11926,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11910,
											"end": 11947,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11986,
											"end": 11991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11967,
											"end": 11983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11967,
											"end": 11991,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12045,
											"end": 12052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12072,
											"end": 12077,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 12018,
											"end": 12078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "tag",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "tag",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 12143,
											"end": 12148,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12150,
											"end": 12157,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12178,
											"end": 12183,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12159,
											"end": 12183,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12185,
											"end": 12190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 12134,
											"end": 12191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "tag",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "tag",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11834,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "453"
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2275,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "tag",
											"source": 3,
											"value": "453"
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "455"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "456"
										},
										{
											"begin": 2267,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "455"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "tag",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "470"
										},
										{
											"begin": 7330,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 4,
											"value": "470"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "473"
										},
										{
											"begin": 7498,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "tag",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7590,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7623,
											"end": 7628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7699,
											"end": 7704,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "476"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 7655,
											"end": 7705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "tag",
											"source": 4,
											"value": "476"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "tag",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7874,
											"end": 7879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7538,
											"end": 7904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8099,
											"end": 8104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8373,
											"end": 8375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8377,
											"end": 8382,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 8358,
											"end": 8383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "tag",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7295,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 2572,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2572,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 2600,
											"end": 2615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2637,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 2625,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 4049,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DELEGATECALL",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 4091,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3900,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4617,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 4617,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4851,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4873,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 14,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 4917,
											"end": 4941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5865,
											"end": 5882,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5927,
											"end": 5942,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5914,
											"end": 5924,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5925,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5899,
											"end": 5943,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 18
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "625"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 18,
											"value": "625"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "639"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 18,
											"value": "639"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3339,
											"end": 3455,
											"name": "tag",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 3339,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3409,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3409,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 3409,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3409,
											"end": 3430,
											"name": "tag",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 3409,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3399,
											"end": 3431,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "660"
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3435,
											"end": 3447,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "tag",
											"source": 18,
											"value": "660"
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3339,
											"end": 3455,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3339,
											"end": 3455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3504,
											"end": 3509,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3520,
											"end": 3549,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3520,
											"end": 3549,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3558,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "662"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3558,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 3558,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3558,
											"end": 3588,
											"name": "tag",
											"source": 18,
											"value": "662"
										},
										{
											"begin": 3558,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3461,
											"end": 3594,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3461,
											"end": 3594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3665,
											"end": 3671,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3722,
											"end": 3724,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3719,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3701,
											"end": 3708,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3697,
											"end": 3720,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3693,
											"end": 3725,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 3728,
											"end": 3807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "tag",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "tag",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 3918,
											"end": 3925,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 3915,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3894,
											"end": 3916,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3873,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 3873,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3873,
											"end": 3926,
											"name": "tag",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 3873,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3863,
											"end": 3926,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3863,
											"end": 3926,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3819,
											"end": 3936,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3975,
											"end": 3977,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4001,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 4043,
											"end": 4050,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4034,
											"end": 4040,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4023,
											"end": 4032,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4019,
											"end": 4041,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4001,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 4001,
											"end": 4051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4001,
											"end": 4051,
											"name": "tag",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 4001,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3991,
											"end": 4051,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3991,
											"end": 4051,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3946,
											"end": 4061,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3600,
											"end": 4068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3600,
											"end": 4068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4074,
											"end": 4192,
											"name": "tag",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 4074,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4161,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 4179,
											"end": 4184,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4161,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 4161,
											"end": 4185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4161,
											"end": 4185,
											"name": "tag",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 4161,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4156,
											"end": 4159,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4149,
											"end": 4186,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4074,
											"end": 4192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4074,
											"end": 4192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4074,
											"end": 4192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4291,
											"end": 4295,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4331,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4318,
											"end": 4327,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4314,
											"end": 4332,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4306,
											"end": 4332,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4306,
											"end": 4332,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4342,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 4410,
											"end": 4411,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4408,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4386,
											"end": 4392,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4342,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 4342,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4342,
											"end": 4413,
											"name": "tag",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 4342,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4198,
											"end": 4420,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4198,
											"end": 4420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4517,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4519,
											"end": 4525,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4570,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4556,
											"end": 4565,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4543,
											"end": 4566,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4539,
											"end": 4571,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4536,
											"end": 4655,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4536,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 4536,
											"end": 4655,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4574,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 4574,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 4574,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4574,
											"end": 4653,
											"name": "tag",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 4574,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4536,
											"end": 4655,
											"name": "tag",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 4536,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4694,
											"end": 4695,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "675"
										},
										{
											"begin": 4764,
											"end": 4771,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4755,
											"end": 4761,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4740,
											"end": 4762,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4719,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 4719,
											"end": 4772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4719,
											"end": 4772,
											"name": "tag",
											"source": 18,
											"value": "675"
										},
										{
											"begin": 4719,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4709,
											"end": 4772,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4709,
											"end": 4772,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4665,
											"end": 4782,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4821,
											"end": 4823,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4847,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "676"
										},
										{
											"begin": 4892,
											"end": 4899,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4872,
											"end": 4881,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4868,
											"end": 4890,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4847,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 4847,
											"end": 4900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4847,
											"end": 4900,
											"name": "tag",
											"source": 18,
											"value": "676"
										},
										{
											"begin": 4847,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4837,
											"end": 4900,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4837,
											"end": 4900,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4792,
											"end": 4910,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "677"
										},
										{
											"begin": 5020,
											"end": 5027,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5009,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4996,
											"end": 5018,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 4975,
											"end": 5028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "tag",
											"source": 18,
											"value": "677"
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 5028,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 5028,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 5038,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4426,
											"end": 5045,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4426,
											"end": 5045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5051,
											"end": 5380,
											"name": "tag",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 5051,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5110,
											"end": 5116,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5159,
											"end": 5161,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5147,
											"end": 5156,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5138,
											"end": 5145,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5134,
											"end": 5157,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5162,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5127,
											"end": 5246,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5127,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 5127,
											"end": 5246,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5165,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 5165,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 5165,
											"end": 5244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5165,
											"end": 5244,
											"name": "tag",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 5165,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5127,
											"end": 5246,
											"name": "tag",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 5127,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5285,
											"end": 5286,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 5355,
											"end": 5362,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5346,
											"end": 5352,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5335,
											"end": 5344,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5331,
											"end": 5353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5310,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 5310,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5310,
											"end": 5363,
											"name": "tag",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 5310,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5300,
											"end": 5363,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5300,
											"end": 5363,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5256,
											"end": 5373,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5051,
											"end": 5380,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5051,
											"end": 5380,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5051,
											"end": 5380,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5051,
											"end": 5380,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5051,
											"end": 5380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5386,
											"end": 5472,
											"name": "tag",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 5386,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5421,
											"end": 5428,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 5454,
											"end": 5459,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5450,
											"end": 5466,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5439,
											"end": 5466,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5439,
											"end": 5466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5386,
											"end": 5472,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5386,
											"end": 5472,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5386,
											"end": 5472,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5386,
											"end": 5472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5478,
											"end": 5590,
											"name": "tag",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 5478,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5561,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "684"
										},
										{
											"begin": 5577,
											"end": 5582,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5561,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 5561,
											"end": 5583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5561,
											"end": 5583,
											"name": "tag",
											"source": 18,
											"value": "684"
										},
										{
											"begin": 5561,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5556,
											"end": 5559,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5549,
											"end": 5584,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5478,
											"end": 5590,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5478,
											"end": 5590,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5478,
											"end": 5590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5596,
											"end": 5810,
											"name": "tag",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 5596,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5685,
											"end": 5689,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5725,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5712,
											"end": 5721,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5708,
											"end": 5726,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5700,
											"end": 5726,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5700,
											"end": 5726,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5736,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 5800,
											"end": 5801,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5798,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5785,
											"end": 5802,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5776,
											"end": 5782,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5736,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 5736,
											"end": 5803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5736,
											"end": 5803,
											"name": "tag",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 5736,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5596,
											"end": 5810,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5596,
											"end": 5810,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5596,
											"end": 5810,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5596,
											"end": 5810,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5596,
											"end": 5810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5816,
											"end": 5933,
											"name": "tag",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 5816,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5923,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5939,
											"end": 6056,
											"name": "tag",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 5939,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6045,
											"end": 6046,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6038,
											"end": 6050,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6062,
											"end": 6242,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 6062,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6110,
											"end": 6187,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6107,
											"end": 6108,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6188,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6207,
											"end": 6211,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 6204,
											"end": 6205,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 6197,
											"end": 6212,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 6228,
											"end": 6229,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6236,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6248,
											"end": 6529,
											"name": "tag",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 6248,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6331,
											"end": 6358,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "691"
										},
										{
											"begin": 6353,
											"end": 6357,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6331,
											"end": 6358,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 6331,
											"end": 6358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6331,
											"end": 6358,
											"name": "tag",
											"source": 18,
											"value": "691"
										},
										{
											"begin": 6331,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6323,
											"end": 6329,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6319,
											"end": 6359,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6467,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6449,
											"end": 6459,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6446,
											"end": 6468,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 6425,
											"end": 6443,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6413,
											"end": 6423,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6410,
											"end": 6444,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 6407,
											"end": 6469,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 6404,
											"end": 6492,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6404,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "692"
										},
										{
											"begin": 6404,
											"end": 6492,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6472,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 6472,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 6472,
											"end": 6490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6472,
											"end": 6490,
											"name": "tag",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 6472,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6404,
											"end": 6492,
											"name": "tag",
											"source": 18,
											"value": "692"
										},
										{
											"begin": 6404,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6512,
											"end": 6522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6508,
											"end": 6510,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6501,
											"end": 6523,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6291,
											"end": 6529,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6248,
											"end": 6529,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6248,
											"end": 6529,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6248,
											"end": 6529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6535,
											"end": 6664,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 6535,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6596,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "695"
										},
										{
											"begin": 6596,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 6596,
											"end": 6616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6596,
											"end": 6616,
											"name": "tag",
											"source": 18,
											"value": "695"
										},
										{
											"begin": 6596,
											"end": 6616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6586,
											"end": 6616,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6586,
											"end": 6616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6625,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 6653,
											"end": 6657,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6625,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 6625,
											"end": 6658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6625,
											"end": 6658,
											"name": "tag",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 6625,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6535,
											"end": 6664,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6535,
											"end": 6664,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6535,
											"end": 6664,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6535,
											"end": 6664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6670,
											"end": 6977,
											"name": "tag",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 6670,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6813,
											"end": 6819,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6810,
											"end": 6840,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 6807,
											"end": 6863,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6807,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "698"
										},
										{
											"begin": 6807,
											"end": 6863,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6843,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "699"
										},
										{
											"begin": 6843,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 6843,
											"end": 6861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6843,
											"end": 6861,
											"name": "tag",
											"source": 18,
											"value": "699"
										},
										{
											"begin": 6843,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6807,
											"end": 6863,
											"name": "tag",
											"source": 18,
											"value": "698"
										},
										{
											"begin": 6807,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6881,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 6903,
											"end": 6909,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6881,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 6881,
											"end": 6910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6881,
											"end": 6910,
											"name": "tag",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 6881,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6873,
											"end": 6910,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6873,
											"end": 6910,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6965,
											"end": 6969,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6959,
											"end": 6963,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6955,
											"end": 6970,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6947,
											"end": 6970,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6947,
											"end": 6970,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6670,
											"end": 6977,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6670,
											"end": 6977,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6670,
											"end": 6977,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6670,
											"end": 6977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 7131,
											"name": "tag",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 6983,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7081,
											"end": 7087,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7076,
											"end": 7079,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7071,
											"end": 7074,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7058,
											"end": 7088,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7113,
											"end": 7119,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7108,
											"end": 7111,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7104,
											"end": 7120,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 7131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 7131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 7131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6983,
											"end": 7131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7137,
											"end": 7560,
											"name": "tag",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 7137,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7214,
											"end": 7219,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7239,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 7255,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 7296,
											"end": 7302,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7255,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 7255,
											"end": 7303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7255,
											"end": 7303,
											"name": "tag",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 7255,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7239,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 7239,
											"end": 7304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7239,
											"end": 7304,
											"name": "tag",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 7239,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7230,
											"end": 7304,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7230,
											"end": 7304,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7333,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7320,
											"end": 7325,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7313,
											"end": 7334,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7365,
											"end": 7369,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7363,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7354,
											"end": 7370,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7403,
											"end": 7406,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7394,
											"end": 7400,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7385,
											"end": 7401,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7382,
											"end": 7407,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7379,
											"end": 7491,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7379,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 7379,
											"end": 7491,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7410,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 7410,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 7410,
											"end": 7489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7410,
											"end": 7489,
											"name": "tag",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 7410,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7379,
											"end": 7491,
											"name": "tag",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 7379,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7500,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7542,
											"end": 7545,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7537,
											"end": 7540,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7500,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 7500,
											"end": 7554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7500,
											"end": 7554,
											"name": "tag",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 7500,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7220,
											"end": 7560,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7137,
											"end": 7560,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7137,
											"end": 7560,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7137,
											"end": 7560,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7137,
											"end": 7560,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7137,
											"end": 7560,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7137,
											"end": 7560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7917,
											"name": "tag",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 7579,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7686,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7676,
											"end": 7680,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 7668,
											"end": 7674,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7664,
											"end": 7681,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7660,
											"end": 7687,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 7650,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 7650,
											"end": 7772,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7691,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "710"
										},
										{
											"begin": 7691,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 7691,
											"end": 7770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7691,
											"end": 7770,
											"name": "tag",
											"source": 18,
											"value": "710"
										},
										{
											"begin": 7691,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7650,
											"end": 7772,
											"name": "tag",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 7650,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7808,
											"end": 7814,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7795,
											"end": 7815,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 7833,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "711"
										},
										{
											"begin": 7907,
											"end": 7910,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7899,
											"end": 7905,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7892,
											"end": 7896,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7884,
											"end": 7890,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7880,
											"end": 7897,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7833,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 7833,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7833,
											"end": 7911,
											"name": "tag",
											"source": 18,
											"value": "711"
										},
										{
											"begin": 7833,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7824,
											"end": 7911,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7824,
											"end": 7911,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7640,
											"end": 7917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7917,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7917,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7923,
											"end": 8575,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 7923,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8000,
											"end": 8006,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8057,
											"end": 8059,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8054,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8036,
											"end": 8043,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8032,
											"end": 8055,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8028,
											"end": 8060,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8025,
											"end": 8144,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8025,
											"end": 8144,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 8025,
											"end": 8144,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8063,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "714"
										},
										{
											"begin": 8063,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 8063,
											"end": 8142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8063,
											"end": 8142,
											"name": "tag",
											"source": 18,
											"value": "714"
										},
										{
											"begin": 8063,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8025,
											"end": 8144,
											"name": "tag",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 8025,
											"end": 8144,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8183,
											"end": 8184,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "715"
										},
										{
											"begin": 8253,
											"end": 8260,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8244,
											"end": 8250,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8233,
											"end": 8242,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8229,
											"end": 8251,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8208,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 8208,
											"end": 8261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8208,
											"end": 8261,
											"name": "tag",
											"source": 18,
											"value": "715"
										},
										{
											"begin": 8208,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8198,
											"end": 8261,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8198,
											"end": 8261,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8154,
											"end": 8271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8323,
											"end": 8341,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8310,
											"end": 8342,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8361,
											"end": 8367,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8358,
											"end": 8388,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8355,
											"end": 8472,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8355,
											"end": 8472,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "716"
										},
										{
											"begin": 8355,
											"end": 8472,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8391,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "717"
										},
										{
											"begin": 8391,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 8391,
											"end": 8470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8391,
											"end": 8470,
											"name": "tag",
											"source": 18,
											"value": "717"
										},
										{
											"begin": 8391,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8355,
											"end": 8472,
											"name": "tag",
											"source": 18,
											"value": "716"
										},
										{
											"begin": 8355,
											"end": 8472,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8496,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "718"
										},
										{
											"begin": 8550,
											"end": 8557,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8541,
											"end": 8547,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8530,
											"end": 8539,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8526,
											"end": 8548,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8496,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 8496,
											"end": 8558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8496,
											"end": 8558,
											"name": "tag",
											"source": 18,
											"value": "718"
										},
										{
											"begin": 8496,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8486,
											"end": 8558,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8486,
											"end": 8558,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8281,
											"end": 8568,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7923,
											"end": 8575,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7923,
											"end": 8575,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7923,
											"end": 8575,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7923,
											"end": 8575,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7923,
											"end": 8575,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7923,
											"end": 8575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8581,
											"end": 8658,
											"name": "tag",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 8581,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8618,
											"end": 8625,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8647,
											"end": 8652,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8636,
											"end": 8652,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8636,
											"end": 8652,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8581,
											"end": 8658,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8581,
											"end": 8658,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8581,
											"end": 8658,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8581,
											"end": 8658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8664,
											"end": 8782,
											"name": "tag",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 8664,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8751,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 8769,
											"end": 8774,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8751,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 8751,
											"end": 8775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8751,
											"end": 8775,
											"name": "tag",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 8751,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8746,
											"end": 8749,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8664,
											"end": 8782,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8664,
											"end": 8782,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8664,
											"end": 8782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8788,
											"end": 9010,
											"name": "tag",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 8788,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8921,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8908,
											"end": 8917,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8904,
											"end": 8922,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8896,
											"end": 8922,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8896,
											"end": 8922,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8932,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "723"
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8989,
											"end": 8998,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8985,
											"end": 9002,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8976,
											"end": 8982,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8932,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 8932,
											"end": 9003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8932,
											"end": 9003,
											"name": "tag",
											"source": 18,
											"value": "723"
										},
										{
											"begin": 8932,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8788,
											"end": 9010,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8788,
											"end": 9010,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8788,
											"end": 9010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8788,
											"end": 9010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8788,
											"end": 9010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9016,
											"end": 9133,
											"name": "tag",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 9016,
											"end": 9133,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9125,
											"end": 9126,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9122,
											"end": 9123,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9115,
											"end": 9127,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9139,
											"end": 9256,
											"name": "tag",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 9139,
											"end": 9256,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9248,
											"end": 9249,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9246,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9238,
											"end": 9250,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9279,
											"end": 9847,
											"name": "tag",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 9279,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9352,
											"end": 9360,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9412,
											"end": 9415,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9405,
											"end": 9409,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 9397,
											"end": 9403,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9393,
											"end": 9410,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9389,
											"end": 9416,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 9379,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "727"
										},
										{
											"begin": 9379,
											"end": 9501,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9420,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "728"
										},
										{
											"begin": 9420,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 9420,
											"end": 9499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9420,
											"end": 9499,
											"name": "tag",
											"source": 18,
											"value": "728"
										},
										{
											"begin": 9420,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9379,
											"end": 9501,
											"name": "tag",
											"source": 18,
											"value": "727"
										},
										{
											"begin": 9379,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9533,
											"end": 9539,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9520,
											"end": 9540,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9563,
											"end": 9581,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9555,
											"end": 9561,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9552,
											"end": 9582,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9549,
											"end": 9666,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9549,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "729"
										},
										{
											"begin": 9549,
											"end": 9666,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9585,
											"end": 9664,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "730"
										},
										{
											"begin": 9585,
											"end": 9664,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 9585,
											"end": 9664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9585,
											"end": 9664,
											"name": "tag",
											"source": 18,
											"value": "730"
										},
										{
											"begin": 9585,
											"end": 9664,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9549,
											"end": 9666,
											"name": "tag",
											"source": 18,
											"value": "729"
										},
										{
											"begin": 9549,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9699,
											"end": 9703,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9691,
											"end": 9697,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9687,
											"end": 9704,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9675,
											"end": 9704,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9675,
											"end": 9704,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9753,
											"end": 9756,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9745,
											"end": 9749,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9737,
											"end": 9743,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9733,
											"end": 9750,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 9723,
											"end": 9731,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9719,
											"end": 9751,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9713,
											"end": 9841,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9713,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "731"
										},
										{
											"begin": 9713,
											"end": 9841,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9760,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "732"
										},
										{
											"begin": 9760,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 9760,
											"end": 9839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9760,
											"end": 9839,
											"name": "tag",
											"source": 18,
											"value": "732"
										},
										{
											"begin": 9760,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9713,
											"end": 9841,
											"name": "tag",
											"source": 18,
											"value": "731"
										},
										{
											"begin": 9713,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9279,
											"end": 9847,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9279,
											"end": 9847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9279,
											"end": 9847,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9279,
											"end": 9847,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9279,
											"end": 9847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9279,
											"end": 9847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9870,
											"end": 10438,
											"name": "tag",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 9870,
											"end": 10438,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9943,
											"end": 9951,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9953,
											"end": 9959,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10003,
											"end": 10006,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9996,
											"end": 10000,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 9988,
											"end": 9994,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9984,
											"end": 10001,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9980,
											"end": 10007,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 9970,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "734"
										},
										{
											"begin": 9970,
											"end": 10092,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10011,
											"end": 10090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "735"
										},
										{
											"begin": 10011,
											"end": 10090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 10011,
											"end": 10090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10011,
											"end": 10090,
											"name": "tag",
											"source": 18,
											"value": "735"
										},
										{
											"begin": 10011,
											"end": 10090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9970,
											"end": 10092,
											"name": "tag",
											"source": 18,
											"value": "734"
										},
										{
											"begin": 9970,
											"end": 10092,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10124,
											"end": 10130,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10111,
											"end": 10131,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10101,
											"end": 10131,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10101,
											"end": 10131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10146,
											"end": 10152,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10140,
											"end": 10257,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10140,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "736"
										},
										{
											"begin": 10140,
											"end": 10257,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "737"
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 10176,
											"end": 10255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "tag",
											"source": 18,
											"value": "737"
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10140,
											"end": 10257,
											"name": "tag",
											"source": 18,
											"value": "736"
										},
										{
											"begin": 10140,
											"end": 10257,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10290,
											"end": 10294,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10282,
											"end": 10288,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10278,
											"end": 10295,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10266,
											"end": 10295,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10266,
											"end": 10295,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10344,
											"end": 10347,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10336,
											"end": 10340,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10328,
											"end": 10334,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10324,
											"end": 10341,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 10314,
											"end": 10322,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10310,
											"end": 10342,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10307,
											"end": 10348,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10304,
											"end": 10432,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10304,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "738"
										},
										{
											"begin": 10304,
											"end": 10432,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10351,
											"end": 10430,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "739"
										},
										{
											"begin": 10351,
											"end": 10430,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 10351,
											"end": 10430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10351,
											"end": 10430,
											"name": "tag",
											"source": 18,
											"value": "739"
										},
										{
											"begin": 10351,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10304,
											"end": 10432,
											"name": "tag",
											"source": 18,
											"value": "738"
										},
										{
											"begin": 10304,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9870,
											"end": 10438,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9870,
											"end": 10438,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9870,
											"end": 10438,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9870,
											"end": 10438,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9870,
											"end": 10438,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9870,
											"end": 10438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10444,
											"end": 11378,
											"name": "tag",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 10444,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10566,
											"end": 10572,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10580,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10582,
											"end": 10588,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10590,
											"end": 10596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10639,
											"end": 10641,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10636,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 10614,
											"end": 10637,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10610,
											"end": 10642,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10607,
											"end": 10726,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10607,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "741"
										},
										{
											"begin": 10607,
											"end": 10726,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10645,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "742"
										},
										{
											"begin": 10645,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 10645,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10645,
											"end": 10724,
											"name": "tag",
											"source": 18,
											"value": "742"
										},
										{
											"begin": 10645,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10607,
											"end": 10726,
											"name": "tag",
											"source": 18,
											"value": "741"
										},
										{
											"begin": 10607,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10793,
											"end": 10794,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10782,
											"end": 10791,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10778,
											"end": 10795,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10765,
											"end": 10796,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10823,
											"end": 10841,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10815,
											"end": 10821,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10812,
											"end": 10842,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10809,
											"end": 10926,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10809,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "743"
										},
										{
											"begin": 10809,
											"end": 10926,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10845,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "744"
										},
										{
											"begin": 10845,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 10845,
											"end": 10924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10845,
											"end": 10924,
											"name": "tag",
											"source": 18,
											"value": "744"
										},
										{
											"begin": 10845,
											"end": 10924,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10809,
											"end": 10926,
											"name": "tag",
											"source": 18,
											"value": "743"
										},
										{
											"begin": 10809,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10958,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "745"
										},
										{
											"begin": 11030,
											"end": 11037,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11021,
											"end": 11027,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11010,
											"end": 11019,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11006,
											"end": 11028,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10958,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 10958,
											"end": 11038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10958,
											"end": 11038,
											"name": "tag",
											"source": 18,
											"value": "745"
										},
										{
											"begin": 10958,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10940,
											"end": 11038,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10940,
											"end": 11038,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10940,
											"end": 11038,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10940,
											"end": 11038,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10736,
											"end": 11048,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11115,
											"end": 11117,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11104,
											"end": 11113,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 11146,
											"end": 11164,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11138,
											"end": 11144,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11135,
											"end": 11165,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11132,
											"end": 11249,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11132,
											"end": 11249,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "746"
										},
										{
											"begin": 11132,
											"end": 11249,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11168,
											"end": 11247,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "747"
										},
										{
											"begin": 11168,
											"end": 11247,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 11168,
											"end": 11247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11168,
											"end": 11247,
											"name": "tag",
											"source": 18,
											"value": "747"
										},
										{
											"begin": 11168,
											"end": 11247,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11132,
											"end": 11249,
											"name": "tag",
											"source": 18,
											"value": "746"
										},
										{
											"begin": 11132,
											"end": 11249,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11281,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "748"
										},
										{
											"begin": 11353,
											"end": 11360,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11344,
											"end": 11350,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11333,
											"end": 11342,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11329,
											"end": 11351,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11281,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 11281,
											"end": 11361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11281,
											"end": 11361,
											"name": "tag",
											"source": 18,
											"value": "748"
										},
										{
											"begin": 11281,
											"end": 11361,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11263,
											"end": 11361,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11263,
											"end": 11361,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11263,
											"end": 11361,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11263,
											"end": 11361,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11058,
											"end": 11371,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10444,
											"end": 11378,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10444,
											"end": 11378,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 10444,
											"end": 11378,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10444,
											"end": 11378,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10444,
											"end": 11378,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10444,
											"end": 11378,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10444,
											"end": 11378,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10444,
											"end": 11378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11384,
											"end": 11502,
											"name": "tag",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 11384,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11471,
											"end": 11495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "750"
										},
										{
											"begin": 11489,
											"end": 11494,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11471,
											"end": 11495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 11471,
											"end": 11495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11471,
											"end": 11495,
											"name": "tag",
											"source": 18,
											"value": "750"
										},
										{
											"begin": 11471,
											"end": 11495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11466,
											"end": 11469,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11459,
											"end": 11496,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11384,
											"end": 11502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11384,
											"end": 11502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11384,
											"end": 11502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11508,
											"end": 11730,
											"name": "tag",
											"source": 18,
											"value": "109"
										},
										{
											"begin": 11508,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11601,
											"end": 11605,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11641,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11628,
											"end": 11637,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11616,
											"end": 11642,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11616,
											"end": 11642,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11652,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "752"
										},
										{
											"begin": 11720,
											"end": 11721,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11705,
											"end": 11722,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11696,
											"end": 11702,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11652,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 11652,
											"end": 11723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11652,
											"end": 11723,
											"name": "tag",
											"source": 18,
											"value": "752"
										},
										{
											"begin": 11652,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11508,
											"end": 11730,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11508,
											"end": 11730,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11508,
											"end": 11730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11508,
											"end": 11730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11508,
											"end": 11730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11736,
											"end": 12044,
											"name": "tag",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 11736,
											"end": 12044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11798,
											"end": 11802,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11888,
											"end": 11906,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11880,
											"end": 11886,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11877,
											"end": 11907,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11874,
											"end": 11930,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11874,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "754"
										},
										{
											"begin": 11874,
											"end": 11930,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "755"
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 11910,
											"end": 11928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "tag",
											"source": 18,
											"value": "755"
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11874,
											"end": 11930,
											"name": "tag",
											"source": 18,
											"value": "754"
										},
										{
											"begin": 11874,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11948,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "756"
										},
										{
											"begin": 11970,
											"end": 11976,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11948,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 11948,
											"end": 11977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11948,
											"end": 11977,
											"name": "tag",
											"source": 18,
											"value": "756"
										},
										{
											"begin": 11948,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11940,
											"end": 11977,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11940,
											"end": 11977,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12032,
											"end": 12036,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12026,
											"end": 12030,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12022,
											"end": 12037,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12014,
											"end": 12037,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12014,
											"end": 12037,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11736,
											"end": 12044,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11736,
											"end": 12044,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11736,
											"end": 12044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11736,
											"end": 12044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12050,
											"end": 12475,
											"name": "tag",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 12050,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12128,
											"end": 12133,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "758"
										},
										{
											"begin": 12169,
											"end": 12218,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "759"
										},
										{
											"begin": 12211,
											"end": 12217,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12169,
											"end": 12218,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 12169,
											"end": 12218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12169,
											"end": 12218,
											"name": "tag",
											"source": 18,
											"value": "759"
										},
										{
											"begin": 12169,
											"end": 12218,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12153,
											"end": 12219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 12153,
											"end": 12219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12153,
											"end": 12219,
											"name": "tag",
											"source": 18,
											"value": "758"
										},
										{
											"begin": 12153,
											"end": 12219,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12144,
											"end": 12219,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12144,
											"end": 12219,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12242,
											"end": 12248,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12235,
											"end": 12240,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12280,
											"end": 12284,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12273,
											"end": 12278,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12269,
											"end": 12285,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12318,
											"end": 12321,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12309,
											"end": 12315,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12304,
											"end": 12307,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12300,
											"end": 12316,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12297,
											"end": 12322,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12294,
											"end": 12406,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12294,
											"end": 12406,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "760"
										},
										{
											"begin": 12294,
											"end": 12406,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12325,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "761"
										},
										{
											"begin": 12325,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 12325,
											"end": 12404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12325,
											"end": 12404,
											"name": "tag",
											"source": 18,
											"value": "761"
										},
										{
											"begin": 12325,
											"end": 12404,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12294,
											"end": 12406,
											"name": "tag",
											"source": 18,
											"value": "760"
										},
										{
											"begin": 12294,
											"end": 12406,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12415,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "762"
										},
										{
											"begin": 12462,
											"end": 12468,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12457,
											"end": 12460,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12452,
											"end": 12455,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12415,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 12415,
											"end": 12469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12415,
											"end": 12469,
											"name": "tag",
											"source": 18,
											"value": "762"
										},
										{
											"begin": 12415,
											"end": 12469,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12134,
											"end": 12475,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12050,
											"end": 12475,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 12050,
											"end": 12475,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12050,
											"end": 12475,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12050,
											"end": 12475,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12050,
											"end": 12475,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12050,
											"end": 12475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12495,
											"end": 12835,
											"name": "tag",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 12495,
											"end": 12835,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12551,
											"end": 12556,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12600,
											"end": 12603,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12593,
											"end": 12597,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 12585,
											"end": 12591,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12581,
											"end": 12598,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12577,
											"end": 12604,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 12567,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "764"
										},
										{
											"begin": 12567,
											"end": 12689,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "765"
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 12608,
											"end": 12687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "tag",
											"source": 18,
											"value": "765"
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12567,
											"end": 12689,
											"name": "tag",
											"source": 18,
											"value": "764"
										},
										{
											"begin": 12567,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12725,
											"end": 12731,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12712,
											"end": 12732,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 12750,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "766"
										},
										{
											"begin": 12825,
											"end": 12828,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12817,
											"end": 12823,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12810,
											"end": 12814,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12802,
											"end": 12808,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12798,
											"end": 12815,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12750,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 12750,
											"end": 12829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12750,
											"end": 12829,
											"name": "tag",
											"source": 18,
											"value": "766"
										},
										{
											"begin": 12750,
											"end": 12829,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12741,
											"end": 12829,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12741,
											"end": 12829,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12557,
											"end": 12835,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12495,
											"end": 12835,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12495,
											"end": 12835,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12495,
											"end": 12835,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12495,
											"end": 12835,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12495,
											"end": 12835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12841,
											"end": 13820,
											"name": "tag",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 12841,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12938,
											"end": 12944,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12946,
											"end": 12952,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12954,
											"end": 12960,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13003,
											"end": 13005,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 12991,
											"end": 13000,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12982,
											"end": 12989,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12978,
											"end": 13001,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 12974,
											"end": 13006,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 12971,
											"end": 13090,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12971,
											"end": 13090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "768"
										},
										{
											"begin": 12971,
											"end": 13090,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13009,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "769"
										},
										{
											"begin": 13009,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 13009,
											"end": 13088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13009,
											"end": 13088,
											"name": "tag",
											"source": 18,
											"value": "769"
										},
										{
											"begin": 13009,
											"end": 13088,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12971,
											"end": 13090,
											"name": "tag",
											"source": 18,
											"value": "768"
										},
										{
											"begin": 12971,
											"end": 13090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13157,
											"end": 13158,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13146,
											"end": 13155,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13142,
											"end": 13159,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13129,
											"end": 13160,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 13187,
											"end": 13205,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13179,
											"end": 13185,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13176,
											"end": 13206,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 13173,
											"end": 13290,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13173,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "770"
										},
										{
											"begin": 13173,
											"end": 13290,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13209,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "771"
										},
										{
											"begin": 13209,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 13209,
											"end": 13288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13209,
											"end": 13288,
											"name": "tag",
											"source": 18,
											"value": "771"
										},
										{
											"begin": 13209,
											"end": 13288,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13173,
											"end": 13290,
											"name": "tag",
											"source": 18,
											"value": "770"
										},
										{
											"begin": 13173,
											"end": 13290,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13314,
											"end": 13377,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "772"
										},
										{
											"begin": 13369,
											"end": 13376,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13360,
											"end": 13366,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13349,
											"end": 13358,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13345,
											"end": 13367,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13314,
											"end": 13377,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 13314,
											"end": 13377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13314,
											"end": 13377,
											"name": "tag",
											"source": 18,
											"value": "772"
										},
										{
											"begin": 13314,
											"end": 13377,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13304,
											"end": 13377,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 13304,
											"end": 13377,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13100,
											"end": 13387,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13454,
											"end": 13456,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13443,
											"end": 13452,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13439,
											"end": 13457,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13426,
											"end": 13458,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 13485,
											"end": 13503,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13477,
											"end": 13483,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13474,
											"end": 13504,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 13471,
											"end": 13588,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13471,
											"end": 13588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "773"
										},
										{
											"begin": 13471,
											"end": 13588,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13507,
											"end": 13586,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "774"
										},
										{
											"begin": 13507,
											"end": 13586,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 13507,
											"end": 13586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13507,
											"end": 13586,
											"name": "tag",
											"source": 18,
											"value": "774"
										},
										{
											"begin": 13507,
											"end": 13586,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13471,
											"end": 13588,
											"name": "tag",
											"source": 18,
											"value": "773"
										},
										{
											"begin": 13471,
											"end": 13588,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13612,
											"end": 13675,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "775"
										},
										{
											"begin": 13667,
											"end": 13674,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13658,
											"end": 13664,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13647,
											"end": 13656,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13643,
											"end": 13665,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13612,
											"end": 13675,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 13612,
											"end": 13675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13612,
											"end": 13675,
											"name": "tag",
											"source": 18,
											"value": "775"
										},
										{
											"begin": 13612,
											"end": 13675,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13602,
											"end": 13675,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13602,
											"end": 13675,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13397,
											"end": 13685,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13724,
											"end": 13726,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 13750,
											"end": 13803,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "776"
										},
										{
											"begin": 13795,
											"end": 13802,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13786,
											"end": 13792,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13775,
											"end": 13784,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13771,
											"end": 13793,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13750,
											"end": 13803,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 13750,
											"end": 13803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13750,
											"end": 13803,
											"name": "tag",
											"source": 18,
											"value": "776"
										},
										{
											"begin": 13750,
											"end": 13803,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13740,
											"end": 13803,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13740,
											"end": 13803,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13695,
											"end": 13813,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12841,
											"end": 13820,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12841,
											"end": 13820,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12841,
											"end": 13820,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12841,
											"end": 13820,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12841,
											"end": 13820,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12841,
											"end": 13820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13826,
											"end": 14300,
											"name": "tag",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 13826,
											"end": 14300,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13894,
											"end": 13900,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13902,
											"end": 13908,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13951,
											"end": 13953,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 13939,
											"end": 13948,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13930,
											"end": 13937,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13926,
											"end": 13949,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 13922,
											"end": 13954,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 13919,
											"end": 14038,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13919,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "778"
										},
										{
											"begin": 13919,
											"end": 14038,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13957,
											"end": 14036,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "779"
										},
										{
											"begin": 13957,
											"end": 14036,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 13957,
											"end": 14036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13957,
											"end": 14036,
											"name": "tag",
											"source": 18,
											"value": "779"
										},
										{
											"begin": 13957,
											"end": 14036,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13919,
											"end": 14038,
											"name": "tag",
											"source": 18,
											"value": "778"
										},
										{
											"begin": 13919,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14077,
											"end": 14078,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14102,
											"end": 14155,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "780"
										},
										{
											"begin": 14147,
											"end": 14154,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14138,
											"end": 14144,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14127,
											"end": 14136,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14123,
											"end": 14145,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14102,
											"end": 14155,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 14102,
											"end": 14155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14102,
											"end": 14155,
											"name": "tag",
											"source": 18,
											"value": "780"
										},
										{
											"begin": 14102,
											"end": 14155,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14092,
											"end": 14155,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14092,
											"end": 14155,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14048,
											"end": 14165,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14204,
											"end": 14206,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14283,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "781"
										},
										{
											"begin": 14275,
											"end": 14282,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14266,
											"end": 14272,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14255,
											"end": 14264,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14251,
											"end": 14273,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14230,
											"end": 14283,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 14230,
											"end": 14283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14230,
											"end": 14283,
											"name": "tag",
											"source": 18,
											"value": "781"
										},
										{
											"begin": 14230,
											"end": 14283,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14220,
											"end": 14283,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14220,
											"end": 14283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14175,
											"end": 14293,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13826,
											"end": 14300,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13826,
											"end": 14300,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13826,
											"end": 14300,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13826,
											"end": 14300,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13826,
											"end": 14300,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13826,
											"end": 14300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14306,
											"end": 14925,
											"name": "tag",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 14306,
											"end": 14925,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14383,
											"end": 14389,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14391,
											"end": 14397,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 14399,
											"end": 14405,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14448,
											"end": 14450,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 14436,
											"end": 14445,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14427,
											"end": 14434,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14423,
											"end": 14446,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14419,
											"end": 14451,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 14416,
											"end": 14535,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14416,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "783"
										},
										{
											"begin": 14416,
											"end": 14535,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14454,
											"end": 14533,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "784"
										},
										{
											"begin": 14454,
											"end": 14533,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 14454,
											"end": 14533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14454,
											"end": 14533,
											"name": "tag",
											"source": 18,
											"value": "784"
										},
										{
											"begin": 14454,
											"end": 14533,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14416,
											"end": 14535,
											"name": "tag",
											"source": 18,
											"value": "783"
										},
										{
											"begin": 14416,
											"end": 14535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14574,
											"end": 14575,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14599,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "785"
										},
										{
											"begin": 14644,
											"end": 14651,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14635,
											"end": 14641,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14624,
											"end": 14633,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14620,
											"end": 14642,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14599,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 14599,
											"end": 14652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14599,
											"end": 14652,
											"name": "tag",
											"source": 18,
											"value": "785"
										},
										{
											"begin": 14599,
											"end": 14652,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14589,
											"end": 14652,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 14589,
											"end": 14652,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14545,
											"end": 14662,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14701,
											"end": 14703,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14727,
											"end": 14780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "786"
										},
										{
											"begin": 14772,
											"end": 14779,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14763,
											"end": 14769,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14752,
											"end": 14761,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14748,
											"end": 14770,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14727,
											"end": 14780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 14727,
											"end": 14780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14727,
											"end": 14780,
											"name": "tag",
											"source": 18,
											"value": "786"
										},
										{
											"begin": 14727,
											"end": 14780,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14717,
											"end": 14780,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14717,
											"end": 14780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14672,
											"end": 14790,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14829,
											"end": 14831,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 14855,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "787"
										},
										{
											"begin": 14900,
											"end": 14907,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14891,
											"end": 14897,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14876,
											"end": 14898,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14855,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 14855,
											"end": 14908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14855,
											"end": 14908,
											"name": "tag",
											"source": 18,
											"value": "787"
										},
										{
											"begin": 14855,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14845,
											"end": 14908,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14845,
											"end": 14908,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14800,
											"end": 14918,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14306,
											"end": 14925,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14306,
											"end": 14925,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14306,
											"end": 14925,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14306,
											"end": 14925,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14306,
											"end": 14925,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14306,
											"end": 14925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14931,
											"end": 15111,
											"name": "tag",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 14931,
											"end": 15111,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14979,
											"end": 15056,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14976,
											"end": 14977,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14969,
											"end": 15057,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15076,
											"end": 15080,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 15073,
											"end": 15074,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 15066,
											"end": 15081,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15100,
											"end": 15104,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 15097,
											"end": 15098,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15090,
											"end": 15105,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 15117,
											"end": 15437,
											"name": "tag",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 15117,
											"end": 15437,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15161,
											"end": 15167,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15198,
											"end": 15199,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 15192,
											"end": 15196,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15188,
											"end": 15200,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 15178,
											"end": 15200,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15178,
											"end": 15200,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15245,
											"end": 15246,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 15239,
											"end": 15243,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15235,
											"end": 15247,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 15266,
											"end": 15284,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 15256,
											"end": 15337,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "790"
										},
										{
											"begin": 15256,
											"end": 15337,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15322,
											"end": 15326,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 15314,
											"end": 15320,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15310,
											"end": 15327,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 15300,
											"end": 15327,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15300,
											"end": 15327,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15256,
											"end": 15337,
											"name": "tag",
											"source": 18,
											"value": "790"
										},
										{
											"begin": 15256,
											"end": 15337,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15384,
											"end": 15386,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15376,
											"end": 15382,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15373,
											"end": 15387,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 15353,
											"end": 15371,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15350,
											"end": 15388,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 15347,
											"end": 15431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "791"
										},
										{
											"begin": 15347,
											"end": 15431,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15403,
											"end": 15421,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "792"
										},
										{
											"begin": 15403,
											"end": 15421,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 15403,
											"end": 15421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15403,
											"end": 15421,
											"name": "tag",
											"source": 18,
											"value": "792"
										},
										{
											"begin": 15403,
											"end": 15421,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15347,
											"end": 15431,
											"name": "tag",
											"source": 18,
											"value": "791"
										},
										{
											"begin": 15347,
											"end": 15431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15168,
											"end": 15437,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15117,
											"end": 15437,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15117,
											"end": 15437,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15117,
											"end": 15437,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15117,
											"end": 15437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15443,
											"end": 15605,
											"name": "tag",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 15443,
											"end": 15605,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15583,
											"end": 15597,
											"name": "PUSH",
											"source": 18,
											"value": "4E756C6C20416464726573730000000000000000000000000000000000000000"
										},
										{
											"begin": 15579,
											"end": 15580,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15571,
											"end": 15577,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15567,
											"end": 15581,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15560,
											"end": 15598,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15443,
											"end": 15605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15443,
											"end": 15605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15611,
											"end": 15977,
											"name": "tag",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 15611,
											"end": 15977,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15753,
											"end": 15756,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15774,
											"end": 15841,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "795"
										},
										{
											"begin": 15838,
											"end": 15840,
											"name": "PUSH",
											"source": 18,
											"value": "C"
										},
										{
											"begin": 15833,
											"end": 15836,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15774,
											"end": 15841,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 15774,
											"end": 15841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15774,
											"end": 15841,
											"name": "tag",
											"source": 18,
											"value": "795"
										},
										{
											"begin": 15774,
											"end": 15841,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15767,
											"end": 15841,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15767,
											"end": 15841,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15850,
											"end": 15943,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "796"
										},
										{
											"begin": 15939,
											"end": 15942,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15850,
											"end": 15943,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 15850,
											"end": 15943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15850,
											"end": 15943,
											"name": "tag",
											"source": 18,
											"value": "796"
										},
										{
											"begin": 15850,
											"end": 15943,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15968,
											"end": 15970,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15963,
											"end": 15966,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15959,
											"end": 15971,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15611,
											"end": 15977,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15611,
											"end": 15977,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15611,
											"end": 15977,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15611,
											"end": 15977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15983,
											"end": 16402,
											"name": "tag",
											"source": 18,
											"value": "182"
										},
										{
											"begin": 15983,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16149,
											"end": 16153,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16187,
											"end": 16189,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16176,
											"end": 16185,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16172,
											"end": 16190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16164,
											"end": 16190,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16164,
											"end": 16190,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16236,
											"end": 16245,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16230,
											"end": 16234,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16226,
											"end": 16246,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 16222,
											"end": 16223,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16211,
											"end": 16220,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16207,
											"end": 16224,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16200,
											"end": 16247,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16264,
											"end": 16395,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "798"
										},
										{
											"begin": 16390,
											"end": 16394,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16264,
											"end": 16395,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 16264,
											"end": 16395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16264,
											"end": 16395,
											"name": "tag",
											"source": 18,
											"value": "798"
										},
										{
											"begin": 16264,
											"end": 16395,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16256,
											"end": 16395,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16256,
											"end": 16395,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15983,
											"end": 16402,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15983,
											"end": 16402,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15983,
											"end": 16402,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15983,
											"end": 16402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16408,
											"end": 16633,
											"name": "tag",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 16408,
											"end": 16633,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16548,
											"end": 16582,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73666572206661696C65643A2053656E64657220697320626C61636B"
										},
										{
											"begin": 16544,
											"end": 16545,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16532,
											"end": 16546,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16525,
											"end": 16583,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16617,
											"end": 16625,
											"name": "PUSH",
											"source": 18,
											"value": "6C69737465640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16612,
											"end": 16614,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16604,
											"end": 16610,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16600,
											"end": 16615,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16593,
											"end": 16626,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16408,
											"end": 16633,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16408,
											"end": 16633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16639,
											"end": 17005,
											"name": "tag",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 16639,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16781,
											"end": 16784,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16802,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "801"
										},
										{
											"begin": 16866,
											"end": 16868,
											"name": "PUSH",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 16861,
											"end": 16864,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16802,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 16802,
											"end": 16869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16802,
											"end": 16869,
											"name": "tag",
											"source": 18,
											"value": "801"
										},
										{
											"begin": 16802,
											"end": 16869,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16795,
											"end": 16869,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16795,
											"end": 16869,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16878,
											"end": 16971,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "802"
										},
										{
											"begin": 16967,
											"end": 16970,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16878,
											"end": 16971,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 16878,
											"end": 16971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16878,
											"end": 16971,
											"name": "tag",
											"source": 18,
											"value": "802"
										},
										{
											"begin": 16878,
											"end": 16971,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16996,
											"end": 16998,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 16991,
											"end": 16994,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16987,
											"end": 16999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16980,
											"end": 16999,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16980,
											"end": 16999,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16639,
											"end": 17005,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16639,
											"end": 17005,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16639,
											"end": 17005,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16639,
											"end": 17005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17011,
											"end": 17430,
											"name": "tag",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 17011,
											"end": 17430,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17177,
											"end": 17181,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17215,
											"end": 17217,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17204,
											"end": 17213,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17200,
											"end": 17218,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17192,
											"end": 17218,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17192,
											"end": 17218,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17264,
											"end": 17273,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17258,
											"end": 17262,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17254,
											"end": 17274,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 17250,
											"end": 17251,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17239,
											"end": 17248,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17235,
											"end": 17252,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17228,
											"end": 17275,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17292,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "804"
										},
										{
											"begin": 17418,
											"end": 17422,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17292,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 17292,
											"end": 17423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17292,
											"end": 17423,
											"name": "tag",
											"source": 18,
											"value": "804"
										},
										{
											"begin": 17292,
											"end": 17423,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17284,
											"end": 17423,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17284,
											"end": 17423,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17011,
											"end": 17430,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17011,
											"end": 17430,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17011,
											"end": 17430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17011,
											"end": 17430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17436,
											"end": 17664,
											"name": "tag",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 17436,
											"end": 17664,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17576,
											"end": 17610,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73666572206661696C65643A20526563697069656E7420697320626C"
										},
										{
											"begin": 17572,
											"end": 17573,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17564,
											"end": 17570,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17560,
											"end": 17574,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17553,
											"end": 17611,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17645,
											"end": 17656,
											"name": "PUSH",
											"source": 18,
											"value": "61636B6C69737465640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17640,
											"end": 17642,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17632,
											"end": 17638,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17628,
											"end": 17643,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17621,
											"end": 17657,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17436,
											"end": 17664,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17436,
											"end": 17664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17670,
											"end": 18036,
											"name": "tag",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 17670,
											"end": 18036,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17812,
											"end": 17815,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17833,
											"end": 17900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "807"
										},
										{
											"begin": 17897,
											"end": 17899,
											"name": "PUSH",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 17892,
											"end": 17895,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17833,
											"end": 17900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 17833,
											"end": 17900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17833,
											"end": 17900,
											"name": "tag",
											"source": 18,
											"value": "807"
										},
										{
											"begin": 17833,
											"end": 17900,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17826,
											"end": 17900,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17826,
											"end": 17900,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17909,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "808"
										},
										{
											"begin": 17998,
											"end": 18001,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17909,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 17909,
											"end": 18002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17909,
											"end": 18002,
											"name": "tag",
											"source": 18,
											"value": "808"
										},
										{
											"begin": 17909,
											"end": 18002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18027,
											"end": 18029,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 18022,
											"end": 18025,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18018,
											"end": 18030,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18011,
											"end": 18030,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18011,
											"end": 18030,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17670,
											"end": 18036,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17670,
											"end": 18036,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17670,
											"end": 18036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17670,
											"end": 18036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18042,
											"end": 18461,
											"name": "tag",
											"source": 18,
											"value": "195"
										},
										{
											"begin": 18042,
											"end": 18461,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18208,
											"end": 18212,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18246,
											"end": 18248,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18235,
											"end": 18244,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18231,
											"end": 18249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18223,
											"end": 18249,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18223,
											"end": 18249,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18295,
											"end": 18304,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18289,
											"end": 18293,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18285,
											"end": 18305,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 18281,
											"end": 18282,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18270,
											"end": 18279,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18266,
											"end": 18283,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18259,
											"end": 18306,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18323,
											"end": 18454,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "810"
										},
										{
											"begin": 18449,
											"end": 18453,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18323,
											"end": 18454,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 18323,
											"end": 18454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18323,
											"end": 18454,
											"name": "tag",
											"source": 18,
											"value": "810"
										},
										{
											"begin": 18323,
											"end": 18454,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18315,
											"end": 18454,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18315,
											"end": 18454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18042,
											"end": 18461,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18042,
											"end": 18461,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18042,
											"end": 18461,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18042,
											"end": 18461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18467,
											"end": 18641,
											"name": "tag",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 18467,
											"end": 18641,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18607,
											"end": 18633,
											"name": "PUSH",
											"source": 18,
											"value": "416D6F756E742073686F756C646E2774206265207A65726F0000000000000000"
										},
										{
											"begin": 18603,
											"end": 18604,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18595,
											"end": 18601,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18591,
											"end": 18605,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18584,
											"end": 18634,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18467,
											"end": 18641,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18467,
											"end": 18641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18647,
											"end": 19013,
											"name": "tag",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 18647,
											"end": 19013,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18789,
											"end": 18792,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18810,
											"end": 18877,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "813"
										},
										{
											"begin": 18874,
											"end": 18876,
											"name": "PUSH",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 18869,
											"end": 18872,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18810,
											"end": 18877,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 18810,
											"end": 18877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18810,
											"end": 18877,
											"name": "tag",
											"source": 18,
											"value": "813"
										},
										{
											"begin": 18810,
											"end": 18877,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18803,
											"end": 18877,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18803,
											"end": 18877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18886,
											"end": 18979,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "814"
										},
										{
											"begin": 18975,
											"end": 18978,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18886,
											"end": 18979,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 18886,
											"end": 18979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18886,
											"end": 18979,
											"name": "tag",
											"source": 18,
											"value": "814"
										},
										{
											"begin": 18886,
											"end": 18979,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19004,
											"end": 19006,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18999,
											"end": 19002,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18995,
											"end": 19007,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18988,
											"end": 19007,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18988,
											"end": 19007,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18647,
											"end": 19013,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18647,
											"end": 19013,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18647,
											"end": 19013,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18647,
											"end": 19013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19019,
											"end": 19438,
											"name": "tag",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 19019,
											"end": 19438,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19185,
											"end": 19189,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19223,
											"end": 19225,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19212,
											"end": 19221,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19208,
											"end": 19226,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19200,
											"end": 19226,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19200,
											"end": 19226,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19272,
											"end": 19281,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19266,
											"end": 19270,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19262,
											"end": 19282,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 19258,
											"end": 19259,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19247,
											"end": 19256,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19243,
											"end": 19260,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19236,
											"end": 19283,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19300,
											"end": 19431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "816"
										},
										{
											"begin": 19426,
											"end": 19430,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19300,
											"end": 19431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 19300,
											"end": 19431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19300,
											"end": 19431,
											"name": "tag",
											"source": 18,
											"value": "816"
										},
										{
											"begin": 19300,
											"end": 19431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19292,
											"end": 19431,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19292,
											"end": 19431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19019,
											"end": 19438,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19019,
											"end": 19438,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19019,
											"end": 19438,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19019,
											"end": 19438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19444,
											"end": 19665,
											"name": "tag",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 19444,
											"end": 19665,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19584,
											"end": 19618,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B"
										},
										{
											"begin": 19580,
											"end": 19581,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19572,
											"end": 19578,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19568,
											"end": 19582,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19561,
											"end": 19619,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19653,
											"end": 19657,
											"name": "PUSH",
											"source": 18,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19648,
											"end": 19650,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19640,
											"end": 19646,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19636,
											"end": 19651,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19629,
											"end": 19658,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19444,
											"end": 19665,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19444,
											"end": 19665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19671,
											"end": 20037,
											"name": "tag",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 19671,
											"end": 20037,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19813,
											"end": 19816,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19834,
											"end": 19901,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "819"
										},
										{
											"begin": 19898,
											"end": 19900,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 19893,
											"end": 19896,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19834,
											"end": 19901,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 19834,
											"end": 19901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19834,
											"end": 19901,
											"name": "tag",
											"source": 18,
											"value": "819"
										},
										{
											"begin": 19834,
											"end": 19901,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19827,
											"end": 19901,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19827,
											"end": 19901,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19910,
											"end": 20003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "820"
										},
										{
											"begin": 19999,
											"end": 20002,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19910,
											"end": 20003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 19910,
											"end": 20003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19910,
											"end": 20003,
											"name": "tag",
											"source": 18,
											"value": "820"
										},
										{
											"begin": 19910,
											"end": 20003,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20028,
											"end": 20030,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 20023,
											"end": 20026,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20019,
											"end": 20031,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20012,
											"end": 20031,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20012,
											"end": 20031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19671,
											"end": 20037,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19671,
											"end": 20037,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19671,
											"end": 20037,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19671,
											"end": 20037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20043,
											"end": 20462,
											"name": "tag",
											"source": 18,
											"value": "202"
										},
										{
											"begin": 20043,
											"end": 20462,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20209,
											"end": 20213,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20247,
											"end": 20249,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20236,
											"end": 20245,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20232,
											"end": 20250,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20224,
											"end": 20250,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20224,
											"end": 20250,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20296,
											"end": 20305,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20290,
											"end": 20294,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20286,
											"end": 20306,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 20282,
											"end": 20283,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20271,
											"end": 20280,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20267,
											"end": 20284,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20260,
											"end": 20307,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20324,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "822"
										},
										{
											"begin": 20450,
											"end": 20454,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20324,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 20324,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20324,
											"end": 20455,
											"name": "tag",
											"source": 18,
											"value": "822"
										},
										{
											"begin": 20324,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20316,
											"end": 20455,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20316,
											"end": 20455,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20043,
											"end": 20462,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20043,
											"end": 20462,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20043,
											"end": 20462,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20043,
											"end": 20462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20468,
											"end": 20643,
											"name": "tag",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 20468,
											"end": 20643,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20608,
											"end": 20635,
											"name": "PUSH",
											"source": 18,
											"value": "41646472657373206973206E6F74206120636F6E747261637400000000000000"
										},
										{
											"begin": 20604,
											"end": 20605,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20596,
											"end": 20602,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20592,
											"end": 20606,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20585,
											"end": 20636,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20468,
											"end": 20643,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20468,
											"end": 20643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20649,
											"end": 21015,
											"name": "tag",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 20649,
											"end": 21015,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20791,
											"end": 20794,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20812,
											"end": 20879,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "825"
										},
										{
											"begin": 20876,
											"end": 20878,
											"name": "PUSH",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 20871,
											"end": 20874,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20812,
											"end": 20879,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 20812,
											"end": 20879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20812,
											"end": 20879,
											"name": "tag",
											"source": 18,
											"value": "825"
										},
										{
											"begin": 20812,
											"end": 20879,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20805,
											"end": 20879,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20805,
											"end": 20879,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20888,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "826"
										},
										{
											"begin": 20977,
											"end": 20980,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20888,
											"end": 20981,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 20888,
											"end": 20981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20888,
											"end": 20981,
											"name": "tag",
											"source": 18,
											"value": "826"
										},
										{
											"begin": 20888,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21006,
											"end": 21008,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21001,
											"end": 21004,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20997,
											"end": 21009,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20990,
											"end": 21009,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20990,
											"end": 21009,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20649,
											"end": 21015,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20649,
											"end": 21015,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20649,
											"end": 21015,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20649,
											"end": 21015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21021,
											"end": 21440,
											"name": "tag",
											"source": 18,
											"value": "216"
										},
										{
											"begin": 21021,
											"end": 21440,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21187,
											"end": 21191,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21225,
											"end": 21227,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21214,
											"end": 21223,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21210,
											"end": 21228,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21274,
											"end": 21283,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21268,
											"end": 21272,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21264,
											"end": 21284,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 21260,
											"end": 21261,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21249,
											"end": 21258,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21245,
											"end": 21262,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21238,
											"end": 21285,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 21302,
											"end": 21433,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "828"
										},
										{
											"begin": 21428,
											"end": 21432,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21302,
											"end": 21433,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 21302,
											"end": 21433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21302,
											"end": 21433,
											"name": "tag",
											"source": 18,
											"value": "828"
										},
										{
											"begin": 21302,
											"end": 21433,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21294,
											"end": 21433,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21294,
											"end": 21433,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21021,
											"end": 21440,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21021,
											"end": 21440,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21021,
											"end": 21440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21021,
											"end": 21440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21446,
											"end": 21672,
											"name": "tag",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 21446,
											"end": 21672,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21586,
											"end": 21620,
											"name": "PUSH",
											"source": 18,
											"value": "42617463685472616E73666572206661696C65643A204D69736D617463686564"
										},
										{
											"begin": 21582,
											"end": 21583,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21574,
											"end": 21580,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21570,
											"end": 21584,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21563,
											"end": 21621,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 21655,
											"end": 21664,
											"name": "PUSH",
											"source": 18,
											"value": "2061727261797300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21650,
											"end": 21652,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21642,
											"end": 21648,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21638,
											"end": 21653,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21631,
											"end": 21665,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 21446,
											"end": 21672,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21446,
											"end": 21672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21678,
											"end": 22044,
											"name": "tag",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 21678,
											"end": 22044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21820,
											"end": 21823,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21841,
											"end": 21908,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "831"
										},
										{
											"begin": 21905,
											"end": 21907,
											"name": "PUSH",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 21900,
											"end": 21903,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21841,
											"end": 21908,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 21841,
											"end": 21908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21841,
											"end": 21908,
											"name": "tag",
											"source": 18,
											"value": "831"
										},
										{
											"begin": 21841,
											"end": 21908,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21834,
											"end": 21908,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21834,
											"end": 21908,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21917,
											"end": 22010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "832"
										},
										{
											"begin": 22006,
											"end": 22009,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21917,
											"end": 22010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 21917,
											"end": 22010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21917,
											"end": 22010,
											"name": "tag",
											"source": 18,
											"value": "832"
										},
										{
											"begin": 21917,
											"end": 22010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22035,
											"end": 22037,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 22030,
											"end": 22033,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22026,
											"end": 22038,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22019,
											"end": 22038,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22019,
											"end": 22038,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21678,
											"end": 22044,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21678,
											"end": 22044,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21678,
											"end": 22044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21678,
											"end": 22044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22050,
											"end": 22469,
											"name": "tag",
											"source": 18,
											"value": "253"
										},
										{
											"begin": 22050,
											"end": 22469,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22216,
											"end": 22220,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22254,
											"end": 22256,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22243,
											"end": 22252,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22239,
											"end": 22257,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22231,
											"end": 22257,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22231,
											"end": 22257,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22303,
											"end": 22312,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22297,
											"end": 22301,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22293,
											"end": 22313,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 22289,
											"end": 22290,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22278,
											"end": 22287,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22274,
											"end": 22291,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22267,
											"end": 22314,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22331,
											"end": 22462,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "834"
										},
										{
											"begin": 22457,
											"end": 22461,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22331,
											"end": 22462,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 22331,
											"end": 22462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22331,
											"end": 22462,
											"name": "tag",
											"source": 18,
											"value": "834"
										},
										{
											"begin": 22331,
											"end": 22462,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22323,
											"end": 22462,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22323,
											"end": 22462,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22050,
											"end": 22469,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22050,
											"end": 22469,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22050,
											"end": 22469,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22050,
											"end": 22469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22475,
											"end": 22655,
											"name": "tag",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 22475,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22523,
											"end": 22600,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22520,
											"end": 22521,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22513,
											"end": 22601,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22620,
											"end": 22624,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 22617,
											"end": 22618,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 22610,
											"end": 22625,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22644,
											"end": 22648,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 22641,
											"end": 22642,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22634,
											"end": 22649,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 22661,
											"end": 22894,
											"name": "tag",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 22661,
											"end": 22894,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22801,
											"end": 22835,
											"name": "PUSH",
											"source": 18,
											"value": "42617463685472616E73666572206661696C65643A20526563697069656E7420"
										},
										{
											"begin": 22797,
											"end": 22798,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22789,
											"end": 22795,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22785,
											"end": 22799,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22778,
											"end": 22836,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22870,
											"end": 22886,
											"name": "PUSH",
											"source": 18,
											"value": "697320626C61636B6C6973746564000000000000000000000000000000000000"
										},
										{
											"begin": 22865,
											"end": 22867,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22857,
											"end": 22863,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22853,
											"end": 22868,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22846,
											"end": 22887,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22661,
											"end": 22894,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22661,
											"end": 22894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22900,
											"end": 23266,
											"name": "tag",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 22900,
											"end": 23266,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23042,
											"end": 23045,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23063,
											"end": 23130,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "838"
										},
										{
											"begin": 23127,
											"end": 23129,
											"name": "PUSH",
											"source": 18,
											"value": "2E"
										},
										{
											"begin": 23122,
											"end": 23125,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23063,
											"end": 23130,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 23063,
											"end": 23130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23063,
											"end": 23130,
											"name": "tag",
											"source": 18,
											"value": "838"
										},
										{
											"begin": 23063,
											"end": 23130,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23056,
											"end": 23130,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23056,
											"end": 23130,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23139,
											"end": 23232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "839"
										},
										{
											"begin": 23228,
											"end": 23231,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23139,
											"end": 23232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 23139,
											"end": 23232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23139,
											"end": 23232,
											"name": "tag",
											"source": 18,
											"value": "839"
										},
										{
											"begin": 23139,
											"end": 23232,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23257,
											"end": 23259,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 23252,
											"end": 23255,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23248,
											"end": 23260,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23241,
											"end": 23260,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23241,
											"end": 23260,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22900,
											"end": 23266,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22900,
											"end": 23266,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22900,
											"end": 23266,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22900,
											"end": 23266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23272,
											"end": 23691,
											"name": "tag",
											"source": 18,
											"value": "263"
										},
										{
											"begin": 23272,
											"end": 23691,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23438,
											"end": 23442,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23476,
											"end": 23478,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23465,
											"end": 23474,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23461,
											"end": 23479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23453,
											"end": 23479,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23453,
											"end": 23479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23525,
											"end": 23534,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23519,
											"end": 23523,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23515,
											"end": 23535,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 23511,
											"end": 23512,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23500,
											"end": 23509,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23496,
											"end": 23513,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23489,
											"end": 23536,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 23553,
											"end": 23684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "841"
										},
										{
											"begin": 23679,
											"end": 23683,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23553,
											"end": 23684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 23553,
											"end": 23684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23553,
											"end": 23684,
											"name": "tag",
											"source": 18,
											"value": "841"
										},
										{
											"begin": 23553,
											"end": 23684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23545,
											"end": 23684,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23545,
											"end": 23684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23272,
											"end": 23691,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23272,
											"end": 23691,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23272,
											"end": 23691,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23272,
											"end": 23691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23697,
											"end": 23782,
											"name": "tag",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 23697,
											"end": 23782,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23742,
											"end": 23749,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23771,
											"end": 23776,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23760,
											"end": 23776,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23760,
											"end": 23776,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23697,
											"end": 23782,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23697,
											"end": 23782,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23697,
											"end": 23782,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23697,
											"end": 23782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23788,
											"end": 23889,
											"name": "tag",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 23788,
											"end": 23889,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23824,
											"end": 23831,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23864,
											"end": 23882,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23857,
											"end": 23862,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23853,
											"end": 23883,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 23842,
											"end": 23883,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23842,
											"end": 23883,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23788,
											"end": 23889,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23788,
											"end": 23889,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23788,
											"end": 23889,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23788,
											"end": 23889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23895,
											"end": 23955,
											"name": "tag",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 23895,
											"end": 23955,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23923,
											"end": 23926,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23944,
											"end": 23949,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23937,
											"end": 23949,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23937,
											"end": 23949,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23895,
											"end": 23955,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23895,
											"end": 23955,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23895,
											"end": 23955,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23895,
											"end": 23955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23961,
											"end": 24117,
											"name": "tag",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 23961,
											"end": 24117,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24018,
											"end": 24027,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24051,
											"end": 24111,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "846"
										},
										{
											"begin": 24068,
											"end": 24110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "847"
										},
										{
											"begin": 24077,
											"end": 24109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "848"
										},
										{
											"begin": 24103,
											"end": 24108,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24077,
											"end": 24109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 24077,
											"end": 24109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24077,
											"end": 24109,
											"name": "tag",
											"source": 18,
											"value": "848"
										},
										{
											"begin": 24077,
											"end": 24109,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24068,
											"end": 24110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 24068,
											"end": 24110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24068,
											"end": 24110,
											"name": "tag",
											"source": 18,
											"value": "847"
										},
										{
											"begin": 24068,
											"end": 24110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24051,
											"end": 24111,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 24051,
											"end": 24111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24051,
											"end": 24111,
											"name": "tag",
											"source": 18,
											"value": "846"
										},
										{
											"begin": 24051,
											"end": 24111,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24038,
											"end": 24111,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24038,
											"end": 24111,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23961,
											"end": 24117,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23961,
											"end": 24117,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23961,
											"end": 24117,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23961,
											"end": 24117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24123,
											"end": 24268,
											"name": "tag",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 24123,
											"end": 24268,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24217,
											"end": 24261,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "850"
										},
										{
											"begin": 24255,
											"end": 24260,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24217,
											"end": 24261,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 24217,
											"end": 24261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24217,
											"end": 24261,
											"name": "tag",
											"source": 18,
											"value": "850"
										},
										{
											"begin": 24217,
											"end": 24261,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24212,
											"end": 24215,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24205,
											"end": 24262,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 24123,
											"end": 24268,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24123,
											"end": 24268,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24123,
											"end": 24268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24274,
											"end": 24510,
											"name": "tag",
											"source": 18,
											"value": "316"
										},
										{
											"begin": 24274,
											"end": 24510,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24374,
											"end": 24378,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24412,
											"end": 24414,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 24401,
											"end": 24410,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24397,
											"end": 24415,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24389,
											"end": 24415,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24389,
											"end": 24415,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24425,
											"end": 24503,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "852"
										},
										{
											"begin": 24500,
											"end": 24501,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24489,
											"end": 24498,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24485,
											"end": 24502,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24476,
											"end": 24482,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24425,
											"end": 24503,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 24425,
											"end": 24503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24425,
											"end": 24503,
											"name": "tag",
											"source": 18,
											"value": "852"
										},
										{
											"begin": 24425,
											"end": 24503,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24274,
											"end": 24510,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24274,
											"end": 24510,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24274,
											"end": 24510,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24274,
											"end": 24510,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24274,
											"end": 24510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24516,
											"end": 24680,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 24516,
											"end": 24680,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24656,
											"end": 24672,
											"name": "PUSH",
											"source": 18,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 24652,
											"end": 24653,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24644,
											"end": 24650,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24640,
											"end": 24654,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24633,
											"end": 24673,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 24516,
											"end": 24680,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24516,
											"end": 24680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24686,
											"end": 25052,
											"name": "tag",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 24686,
											"end": 25052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24828,
											"end": 24831,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24849,
											"end": 24916,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "855"
										},
										{
											"begin": 24913,
											"end": 24915,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 24908,
											"end": 24911,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24849,
											"end": 24916,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 24849,
											"end": 24916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24849,
											"end": 24916,
											"name": "tag",
											"source": 18,
											"value": "855"
										},
										{
											"begin": 24849,
											"end": 24916,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24842,
											"end": 24916,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24842,
											"end": 24916,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24925,
											"end": 25018,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "856"
										},
										{
											"begin": 25014,
											"end": 25017,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24925,
											"end": 25018,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 24925,
											"end": 25018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24925,
											"end": 25018,
											"name": "tag",
											"source": 18,
											"value": "856"
										},
										{
											"begin": 24925,
											"end": 25018,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25043,
											"end": 25045,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25038,
											"end": 25041,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25034,
											"end": 25046,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25027,
											"end": 25046,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25027,
											"end": 25046,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24686,
											"end": 25052,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24686,
											"end": 25052,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24686,
											"end": 25052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24686,
											"end": 25052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25058,
											"end": 25477,
											"name": "tag",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 25058,
											"end": 25477,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25224,
											"end": 25228,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25262,
											"end": 25264,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25251,
											"end": 25260,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25247,
											"end": 25265,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25239,
											"end": 25265,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25239,
											"end": 25265,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25311,
											"end": 25320,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25305,
											"end": 25309,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25301,
											"end": 25321,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 25297,
											"end": 25298,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25286,
											"end": 25295,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25282,
											"end": 25299,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25275,
											"end": 25322,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 25339,
											"end": 25470,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "858"
										},
										{
											"begin": 25465,
											"end": 25469,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25339,
											"end": 25470,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 25339,
											"end": 25470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25339,
											"end": 25470,
											"name": "tag",
											"source": 18,
											"value": "858"
										},
										{
											"begin": 25339,
											"end": 25470,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25331,
											"end": 25470,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25331,
											"end": 25470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25058,
											"end": 25477,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25058,
											"end": 25477,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25058,
											"end": 25477,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25058,
											"end": 25477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25483,
											"end": 25665,
											"name": "tag",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 25483,
											"end": 25665,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25623,
											"end": 25657,
											"name": "PUSH",
											"source": 18,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 25619,
											"end": 25620,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25611,
											"end": 25617,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25607,
											"end": 25621,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25600,
											"end": 25658,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 25483,
											"end": 25665,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25483,
											"end": 25665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25671,
											"end": 26037,
											"name": "tag",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 25671,
											"end": 26037,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25813,
											"end": 25816,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25834,
											"end": 25901,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "861"
										},
										{
											"begin": 25898,
											"end": 25900,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25893,
											"end": 25896,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25834,
											"end": 25901,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 25834,
											"end": 25901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25834,
											"end": 25901,
											"name": "tag",
											"source": 18,
											"value": "861"
										},
										{
											"begin": 25834,
											"end": 25901,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25827,
											"end": 25901,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25827,
											"end": 25901,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25910,
											"end": 26003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "862"
										},
										{
											"begin": 25999,
											"end": 26002,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25910,
											"end": 26003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 25910,
											"end": 26003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25910,
											"end": 26003,
											"name": "tag",
											"source": 18,
											"value": "862"
										},
										{
											"begin": 25910,
											"end": 26003,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26028,
											"end": 26030,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26023,
											"end": 26026,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26019,
											"end": 26031,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26012,
											"end": 26031,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26012,
											"end": 26031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25671,
											"end": 26037,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25671,
											"end": 26037,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25671,
											"end": 26037,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25671,
											"end": 26037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26043,
											"end": 26462,
											"name": "tag",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 26043,
											"end": 26462,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26209,
											"end": 26213,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26247,
											"end": 26249,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26236,
											"end": 26245,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26232,
											"end": 26250,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26224,
											"end": 26250,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26224,
											"end": 26250,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26296,
											"end": 26305,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26290,
											"end": 26294,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26286,
											"end": 26306,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 26282,
											"end": 26283,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26271,
											"end": 26280,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26267,
											"end": 26284,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26260,
											"end": 26307,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 26324,
											"end": 26455,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "864"
										},
										{
											"begin": 26450,
											"end": 26454,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26324,
											"end": 26455,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 26324,
											"end": 26455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26324,
											"end": 26455,
											"name": "tag",
											"source": 18,
											"value": "864"
										},
										{
											"begin": 26324,
											"end": 26455,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26316,
											"end": 26455,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26316,
											"end": 26455,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26043,
											"end": 26462,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26043,
											"end": 26462,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26043,
											"end": 26462,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26043,
											"end": 26462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26468,
											"end": 26800,
											"name": "tag",
											"source": 18,
											"value": "340"
										},
										{
											"begin": 26468,
											"end": 26800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26589,
											"end": 26593,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26627,
											"end": 26629,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 26616,
											"end": 26625,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26612,
											"end": 26630,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26640,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "866"
										},
										{
											"begin": 26708,
											"end": 26709,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26697,
											"end": 26706,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26693,
											"end": 26710,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26684,
											"end": 26690,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 26640,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 26640,
											"end": 26711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26640,
											"end": 26711,
											"name": "tag",
											"source": 18,
											"value": "866"
										},
										{
											"begin": 26640,
											"end": 26711,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26721,
											"end": 26793,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "867"
										},
										{
											"begin": 26789,
											"end": 26791,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26778,
											"end": 26787,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26774,
											"end": 26792,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26765,
											"end": 26771,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 26721,
											"end": 26793,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 26721,
											"end": 26793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26721,
											"end": 26793,
											"name": "tag",
											"source": 18,
											"value": "867"
										},
										{
											"begin": 26721,
											"end": 26793,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26468,
											"end": 26800,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 26468,
											"end": 26800,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 26468,
											"end": 26800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26468,
											"end": 26800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26468,
											"end": 26800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26468,
											"end": 26800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26806,
											"end": 26972,
											"name": "tag",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 26806,
											"end": 26972,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26946,
											"end": 26964,
											"name": "PUSH",
											"source": 18,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 26942,
											"end": 26943,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26934,
											"end": 26940,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26930,
											"end": 26944,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26923,
											"end": 26965,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 26806,
											"end": 26972,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26806,
											"end": 26972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26978,
											"end": 27344,
											"name": "tag",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 26978,
											"end": 27344,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27120,
											"end": 27123,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27141,
											"end": 27208,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "870"
										},
										{
											"begin": 27205,
											"end": 27207,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 27200,
											"end": 27203,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 27141,
											"end": 27208,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 27141,
											"end": 27208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27141,
											"end": 27208,
											"name": "tag",
											"source": 18,
											"value": "870"
										},
										{
											"begin": 27141,
											"end": 27208,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27134,
											"end": 27208,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27134,
											"end": 27208,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27217,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "871"
										},
										{
											"begin": 27306,
											"end": 27309,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27217,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 27217,
											"end": 27310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27217,
											"end": 27310,
											"name": "tag",
											"source": 18,
											"value": "871"
										},
										{
											"begin": 27217,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27335,
											"end": 27337,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 27330,
											"end": 27333,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27326,
											"end": 27338,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27319,
											"end": 27338,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27319,
											"end": 27338,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26978,
											"end": 27344,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26978,
											"end": 27344,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26978,
											"end": 27344,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26978,
											"end": 27344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27350,
											"end": 27769,
											"name": "tag",
											"source": 18,
											"value": "356"
										},
										{
											"begin": 27350,
											"end": 27769,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27516,
											"end": 27520,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27554,
											"end": 27556,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 27543,
											"end": 27552,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27539,
											"end": 27557,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27531,
											"end": 27557,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27531,
											"end": 27557,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27603,
											"end": 27612,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27597,
											"end": 27601,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27593,
											"end": 27613,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 27589,
											"end": 27590,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27578,
											"end": 27587,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 27574,
											"end": 27591,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27567,
											"end": 27614,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 27631,
											"end": 27762,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "873"
										},
										{
											"begin": 27757,
											"end": 27761,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27631,
											"end": 27762,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 27631,
											"end": 27762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27631,
											"end": 27762,
											"name": "tag",
											"source": 18,
											"value": "873"
										},
										{
											"begin": 27631,
											"end": 27762,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27623,
											"end": 27762,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27623,
											"end": 27762,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27350,
											"end": 27769,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27350,
											"end": 27769,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27350,
											"end": 27769,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27350,
											"end": 27769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27775,
											"end": 27897,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 27775,
											"end": 27897,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27848,
											"end": 27872,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "875"
										},
										{
											"begin": 27866,
											"end": 27871,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27848,
											"end": 27872,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 27848,
											"end": 27872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27848,
											"end": 27872,
											"name": "tag",
											"source": 18,
											"value": "875"
										},
										{
											"begin": 27848,
											"end": 27872,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27841,
											"end": 27846,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27838,
											"end": 27873,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 27828,
											"end": 27891,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "876"
										},
										{
											"begin": 27828,
											"end": 27891,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 27887,
											"end": 27888,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27884,
											"end": 27885,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 27877,
											"end": 27889,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 27828,
											"end": 27891,
											"name": "tag",
											"source": 18,
											"value": "876"
										},
										{
											"begin": 27828,
											"end": 27891,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27775,
											"end": 27897,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27775,
											"end": 27897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27903,
											"end": 28046,
											"name": "tag",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 27903,
											"end": 28046,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27960,
											"end": 27965,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27991,
											"end": 27997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27985,
											"end": 27998,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 27976,
											"end": 27998,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27976,
											"end": 27998,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28007,
											"end": 28040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "878"
										},
										{
											"begin": 28034,
											"end": 28039,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28007,
											"end": 28040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 28007,
											"end": 28040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28007,
											"end": 28040,
											"name": "tag",
											"source": 18,
											"value": "878"
										},
										{
											"begin": 28007,
											"end": 28040,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27903,
											"end": 28046,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 27903,
											"end": 28046,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27903,
											"end": 28046,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27903,
											"end": 28046,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27903,
											"end": 28046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28052,
											"end": 28403,
											"name": "tag",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 28052,
											"end": 28403,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28122,
											"end": 28128,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28171,
											"end": 28173,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 28159,
											"end": 28168,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28150,
											"end": 28157,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28146,
											"end": 28169,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 28142,
											"end": 28174,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 28139,
											"end": 28258,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 28139,
											"end": 28258,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "880"
										},
										{
											"begin": 28139,
											"end": 28258,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 28177,
											"end": 28256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "881"
										},
										{
											"begin": 28177,
											"end": 28256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 28177,
											"end": 28256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28177,
											"end": 28256,
											"name": "tag",
											"source": 18,
											"value": "881"
										},
										{
											"begin": 28177,
											"end": 28256,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28139,
											"end": 28258,
											"name": "tag",
											"source": 18,
											"value": "880"
										},
										{
											"begin": 28139,
											"end": 28258,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28297,
											"end": 28298,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28322,
											"end": 28386,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "882"
										},
										{
											"begin": 28378,
											"end": 28385,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28369,
											"end": 28375,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28358,
											"end": 28367,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 28354,
											"end": 28376,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28322,
											"end": 28386,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 28322,
											"end": 28386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28322,
											"end": 28386,
											"name": "tag",
											"source": 18,
											"value": "882"
										},
										{
											"begin": 28322,
											"end": 28386,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28312,
											"end": 28386,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28312,
											"end": 28386,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28268,
											"end": 28396,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28052,
											"end": 28403,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28052,
											"end": 28403,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28052,
											"end": 28403,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28052,
											"end": 28403,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28052,
											"end": 28403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28409,
											"end": 28851,
											"name": "tag",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 28409,
											"end": 28851,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28558,
											"end": 28562,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28596,
											"end": 28598,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 28585,
											"end": 28594,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28581,
											"end": 28599,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28573,
											"end": 28599,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28573,
											"end": 28599,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28609,
											"end": 28680,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "884"
										},
										{
											"begin": 28677,
											"end": 28678,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28666,
											"end": 28675,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28662,
											"end": 28679,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28653,
											"end": 28659,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 28609,
											"end": 28680,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 28609,
											"end": 28680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28609,
											"end": 28680,
											"name": "tag",
											"source": 18,
											"value": "884"
										},
										{
											"begin": 28609,
											"end": 28680,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28690,
											"end": 28762,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "885"
										},
										{
											"begin": 28758,
											"end": 28760,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 28747,
											"end": 28756,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28743,
											"end": 28761,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28734,
											"end": 28740,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 28690,
											"end": 28762,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 28690,
											"end": 28762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28690,
											"end": 28762,
											"name": "tag",
											"source": 18,
											"value": "885"
										},
										{
											"begin": 28690,
											"end": 28762,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28772,
											"end": 28844,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "886"
										},
										{
											"begin": 28840,
											"end": 28842,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 28829,
											"end": 28838,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28825,
											"end": 28843,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28816,
											"end": 28822,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28772,
											"end": 28844,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 28772,
											"end": 28844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28772,
											"end": 28844,
											"name": "tag",
											"source": 18,
											"value": "886"
										},
										{
											"begin": 28772,
											"end": 28844,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28409,
											"end": 28851,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 28409,
											"end": 28851,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 28409,
											"end": 28851,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28409,
											"end": 28851,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28409,
											"end": 28851,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28409,
											"end": 28851,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28409,
											"end": 28851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28857,
											"end": 29027,
											"name": "tag",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 28857,
											"end": 29027,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28997,
											"end": 29019,
											"name": "PUSH",
											"source": 18,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 28993,
											"end": 28994,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28985,
											"end": 28991,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28981,
											"end": 28995,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28974,
											"end": 29020,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 28857,
											"end": 29027,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28857,
											"end": 29027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29033,
											"end": 29399,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 29033,
											"end": 29399,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29175,
											"end": 29178,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29196,
											"end": 29263,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "889"
										},
										{
											"begin": 29260,
											"end": 29262,
											"name": "PUSH",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 29255,
											"end": 29258,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 29196,
											"end": 29263,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 29196,
											"end": 29263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29196,
											"end": 29263,
											"name": "tag",
											"source": 18,
											"value": "889"
										},
										{
											"begin": 29196,
											"end": 29263,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29189,
											"end": 29263,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29189,
											"end": 29263,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29272,
											"end": 29365,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "890"
										},
										{
											"begin": 29361,
											"end": 29364,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29272,
											"end": 29365,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 29272,
											"end": 29365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29272,
											"end": 29365,
											"name": "tag",
											"source": 18,
											"value": "890"
										},
										{
											"begin": 29272,
											"end": 29365,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29390,
											"end": 29392,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 29385,
											"end": 29388,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29381,
											"end": 29393,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 29374,
											"end": 29393,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29374,
											"end": 29393,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29033,
											"end": 29399,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29033,
											"end": 29399,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29033,
											"end": 29399,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29033,
											"end": 29399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29405,
											"end": 29824,
											"name": "tag",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 29405,
											"end": 29824,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29571,
											"end": 29575,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29609,
											"end": 29611,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 29598,
											"end": 29607,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29594,
											"end": 29612,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 29586,
											"end": 29612,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29586,
											"end": 29612,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29658,
											"end": 29667,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 29652,
											"end": 29656,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 29648,
											"end": 29668,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 29644,
											"end": 29645,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29633,
											"end": 29642,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 29629,
											"end": 29646,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 29622,
											"end": 29669,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 29686,
											"end": 29817,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "892"
										},
										{
											"begin": 29812,
											"end": 29816,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 29686,
											"end": 29817,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 29686,
											"end": 29817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29686,
											"end": 29817,
											"name": "tag",
											"source": 18,
											"value": "892"
										},
										{
											"begin": 29686,
											"end": 29817,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29678,
											"end": 29817,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29678,
											"end": 29817,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29405,
											"end": 29824,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29405,
											"end": 29824,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29405,
											"end": 29824,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29405,
											"end": 29824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29830,
											"end": 30010,
											"name": "tag",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 29830,
											"end": 30010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29878,
											"end": 29955,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29875,
											"end": 29876,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29868,
											"end": 29956,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 29975,
											"end": 29979,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 29972,
											"end": 29973,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 29965,
											"end": 29980,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 29999,
											"end": 30003,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 29996,
											"end": 29997,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29989,
											"end": 30004,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 30016,
											"end": 30207,
											"name": "tag",
											"source": 18,
											"value": "473"
										},
										{
											"begin": 30016,
											"end": 30207,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30056,
											"end": 30059,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30075,
											"end": 30095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "895"
										},
										{
											"begin": 30093,
											"end": 30094,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30075,
											"end": 30095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 30075,
											"end": 30095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30075,
											"end": 30095,
											"name": "tag",
											"source": 18,
											"value": "895"
										},
										{
											"begin": 30075,
											"end": 30095,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30070,
											"end": 30095,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30070,
											"end": 30095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30109,
											"end": 30129,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "896"
										},
										{
											"begin": 30127,
											"end": 30128,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30109,
											"end": 30129,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 30109,
											"end": 30129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30109,
											"end": 30129,
											"name": "tag",
											"source": 18,
											"value": "896"
										},
										{
											"begin": 30109,
											"end": 30129,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30104,
											"end": 30129,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 30104,
											"end": 30129,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30152,
											"end": 30153,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30149,
											"end": 30150,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30145,
											"end": 30154,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30138,
											"end": 30154,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30138,
											"end": 30154,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30173,
											"end": 30176,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 30170,
											"end": 30171,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30167,
											"end": 30177,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 30164,
											"end": 30200,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 30164,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "897"
										},
										{
											"begin": 30164,
											"end": 30200,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 30180,
											"end": 30198,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "898"
										},
										{
											"begin": 30180,
											"end": 30198,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 30180,
											"end": 30198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30180,
											"end": 30198,
											"name": "tag",
											"source": 18,
											"value": "898"
										},
										{
											"begin": 30180,
											"end": 30198,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30164,
											"end": 30200,
											"name": "tag",
											"source": 18,
											"value": "897"
										},
										{
											"begin": 30164,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30016,
											"end": 30207,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 30016,
											"end": 30207,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30016,
											"end": 30207,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30016,
											"end": 30207,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30016,
											"end": 30207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30213,
											"end": 30354,
											"name": "tag",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 30213,
											"end": 30354,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30262,
											"end": 30266,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30285,
											"end": 30288,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30277,
											"end": 30288,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30277,
											"end": 30288,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30308,
											"end": 30311,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30305,
											"end": 30306,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30298,
											"end": 30312,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 30342,
											"end": 30346,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 30339,
											"end": 30340,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30329,
											"end": 30347,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 30321,
											"end": 30347,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30321,
											"end": 30347,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30213,
											"end": 30354,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30213,
											"end": 30354,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30213,
											"end": 30354,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30213,
											"end": 30354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30360,
											"end": 30453,
											"name": "tag",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 30360,
											"end": 30453,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30397,
											"end": 30403,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30444,
											"end": 30446,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 30439,
											"end": 30441,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 30432,
											"end": 30437,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30428,
											"end": 30442,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30424,
											"end": 30447,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 30414,
											"end": 30447,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30414,
											"end": 30447,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30360,
											"end": 30453,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30360,
											"end": 30453,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30360,
											"end": 30453,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30360,
											"end": 30453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30459,
											"end": 30566,
											"name": "tag",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 30459,
											"end": 30566,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30503,
											"end": 30511,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30553,
											"end": 30558,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30547,
											"end": 30551,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30543,
											"end": 30559,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 30522,
											"end": 30559,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30522,
											"end": 30559,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30459,
											"end": 30566,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 30459,
											"end": 30566,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30459,
											"end": 30566,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30459,
											"end": 30566,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30459,
											"end": 30566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30572,
											"end": 30965,
											"name": "tag",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 30572,
											"end": 30965,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30641,
											"end": 30647,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30691,
											"end": 30692,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 30679,
											"end": 30689,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30675,
											"end": 30693,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 30714,
											"end": 30811,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "903"
										},
										{
											"begin": 30744,
											"end": 30810,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30733,
											"end": 30742,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30714,
											"end": 30811,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 30714,
											"end": 30811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30714,
											"end": 30811,
											"name": "tag",
											"source": 18,
											"value": "903"
										},
										{
											"begin": 30714,
											"end": 30811,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30832,
											"end": 30871,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "904"
										},
										{
											"begin": 30862,
											"end": 30870,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 30851,
											"end": 30860,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30832,
											"end": 30871,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 30832,
											"end": 30871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30832,
											"end": 30871,
											"name": "tag",
											"source": 18,
											"value": "904"
										},
										{
											"begin": 30832,
											"end": 30871,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30820,
											"end": 30871,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 30820,
											"end": 30871,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30904,
											"end": 30908,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 30900,
											"end": 30909,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 30893,
											"end": 30898,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 30889,
											"end": 30910,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 30880,
											"end": 30910,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 30880,
											"end": 30910,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30953,
											"end": 30957,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 30943,
											"end": 30951,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 30939,
											"end": 30958,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 30932,
											"end": 30937,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 30929,
											"end": 30959,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 30919,
											"end": 30959,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 30919,
											"end": 30959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30648,
											"end": 30965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30648,
											"end": 30965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30572,
											"end": 30965,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 30572,
											"end": 30965,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 30572,
											"end": 30965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30572,
											"end": 30965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30572,
											"end": 30965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30572,
											"end": 30965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30971,
											"end": 31113,
											"name": "tag",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 30971,
											"end": 31113,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31021,
											"end": 31030,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31054,
											"end": 31107,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "906"
										},
										{
											"begin": 31072,
											"end": 31106,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "907"
										},
										{
											"begin": 31081,
											"end": 31105,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "908"
										},
										{
											"begin": 31099,
											"end": 31104,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 31081,
											"end": 31105,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 31081,
											"end": 31105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31081,
											"end": 31105,
											"name": "tag",
											"source": 18,
											"value": "908"
										},
										{
											"begin": 31081,
											"end": 31105,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31072,
											"end": 31106,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 31072,
											"end": 31106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31072,
											"end": 31106,
											"name": "tag",
											"source": 18,
											"value": "907"
										},
										{
											"begin": 31072,
											"end": 31106,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31054,
											"end": 31107,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 31054,
											"end": 31107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31054,
											"end": 31107,
											"name": "tag",
											"source": 18,
											"value": "906"
										},
										{
											"begin": 31054,
											"end": 31107,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31041,
											"end": 31107,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31041,
											"end": 31107,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30971,
											"end": 31113,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30971,
											"end": 31113,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30971,
											"end": 31113,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30971,
											"end": 31113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31119,
											"end": 31194,
											"name": "tag",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 31119,
											"end": 31194,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31162,
											"end": 31165,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31183,
											"end": 31188,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31176,
											"end": 31188,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31176,
											"end": 31188,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31119,
											"end": 31194,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 31119,
											"end": 31194,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31119,
											"end": 31194,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31119,
											"end": 31194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31200,
											"end": 31469,
											"name": "tag",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 31200,
											"end": 31469,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31310,
											"end": 31349,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "911"
										},
										{
											"begin": 31341,
											"end": 31348,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 31310,
											"end": 31349,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 31310,
											"end": 31349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31310,
											"end": 31349,
											"name": "tag",
											"source": 18,
											"value": "911"
										},
										{
											"begin": 31310,
											"end": 31349,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31371,
											"end": 31462,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "912"
										},
										{
											"begin": 31420,
											"end": 31461,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "913"
										},
										{
											"begin": 31444,
											"end": 31460,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31420,
											"end": 31461,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 31420,
											"end": 31461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31420,
											"end": 31461,
											"name": "tag",
											"source": 18,
											"value": "913"
										},
										{
											"begin": 31420,
											"end": 31461,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31412,
											"end": 31418,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 31405,
											"end": 31409,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 31399,
											"end": 31410,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 31371,
											"end": 31462,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 31371,
											"end": 31462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31371,
											"end": 31462,
											"name": "tag",
											"source": 18,
											"value": "912"
										},
										{
											"begin": 31371,
											"end": 31462,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31365,
											"end": 31369,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31358,
											"end": 31463,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 31276,
											"end": 31469,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31200,
											"end": 31469,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31200,
											"end": 31469,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31200,
											"end": 31469,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31200,
											"end": 31469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31475,
											"end": 31548,
											"name": "tag",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 31475,
											"end": 31548,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31520,
											"end": 31523,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31475,
											"end": 31548,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31475,
											"end": 31548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31554,
											"end": 31743,
											"name": "tag",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 31554,
											"end": 31743,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31631,
											"end": 31663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "916"
										},
										{
											"begin": 31631,
											"end": 31663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 31631,
											"end": 31663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31631,
											"end": 31663,
											"name": "tag",
											"source": 18,
											"value": "916"
										},
										{
											"begin": 31631,
											"end": 31663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31672,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "917"
										},
										{
											"begin": 31730,
											"end": 31736,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31722,
											"end": 31728,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 31716,
											"end": 31720,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 31672,
											"end": 31737,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 31672,
											"end": 31737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31672,
											"end": 31737,
											"name": "tag",
											"source": 18,
											"value": "917"
										},
										{
											"begin": 31672,
											"end": 31737,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31607,
											"end": 31743,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31554,
											"end": 31743,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31554,
											"end": 31743,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31554,
											"end": 31743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31749,
											"end": 31935,
											"name": "tag",
											"source": 18,
											"value": "611"
										},
										{
											"begin": 31749,
											"end": 31935,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31809,
											"end": 31929,
											"name": "tag",
											"source": 18,
											"value": "919"
										},
										{
											"begin": 31809,
											"end": 31929,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31826,
											"end": 31829,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31819,
											"end": 31824,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31816,
											"end": 31830,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 31809,
											"end": 31929,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 31809,
											"end": 31929,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "921"
										},
										{
											"begin": 31809,
											"end": 31929,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 31880,
											"end": 31919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "922"
										},
										{
											"begin": 31917,
											"end": 31918,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31910,
											"end": 31915,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31880,
											"end": 31919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 31880,
											"end": 31919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31880,
											"end": 31919,
											"name": "tag",
											"source": 18,
											"value": "922"
										},
										{
											"begin": 31880,
											"end": 31919,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31853,
											"end": 31854,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 31846,
											"end": 31851,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31842,
											"end": 31855,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 31833,
											"end": 31855,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31833,
											"end": 31855,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31809,
											"end": 31929,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "919"
										},
										{
											"begin": 31809,
											"end": 31929,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31809,
											"end": 31929,
											"name": "tag",
											"source": 18,
											"value": "921"
										},
										{
											"begin": 31809,
											"end": 31929,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31749,
											"end": 31935,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31749,
											"end": 31935,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31749,
											"end": 31935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31941,
											"end": 32484,
											"name": "tag",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 31941,
											"end": 32484,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32042,
											"end": 32044,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 32037,
											"end": 32040,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32034,
											"end": 32045,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 32031,
											"end": 32477,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 32031,
											"end": 32477,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "924"
										},
										{
											"begin": 32031,
											"end": 32477,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 32076,
											"end": 32114,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "925"
										},
										{
											"begin": 32108,
											"end": 32113,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 32076,
											"end": 32114,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 32076,
											"end": 32114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32076,
											"end": 32114,
											"name": "tag",
											"source": 18,
											"value": "925"
										},
										{
											"begin": 32076,
											"end": 32114,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32160,
											"end": 32189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "926"
										},
										{
											"begin": 32178,
											"end": 32188,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 32160,
											"end": 32189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 32160,
											"end": 32189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32160,
											"end": 32189,
											"name": "tag",
											"source": 18,
											"value": "926"
										},
										{
											"begin": 32160,
											"end": 32189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32150,
											"end": 32158,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 32146,
											"end": 32190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32343,
											"end": 32345,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 32331,
											"end": 32341,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 32328,
											"end": 32346,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 32325,
											"end": 32374,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 32325,
											"end": 32374,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "927"
										},
										{
											"begin": 32325,
											"end": 32374,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 32364,
											"end": 32372,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 32349,
											"end": 32372,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 32349,
											"end": 32372,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32325,
											"end": 32374,
											"name": "tag",
											"source": 18,
											"value": "927"
										},
										{
											"begin": 32325,
											"end": 32374,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32387,
											"end": 32467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "928"
										},
										{
											"begin": 32443,
											"end": 32465,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "929"
										},
										{
											"begin": 32461,
											"end": 32464,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 32443,
											"end": 32465,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 32443,
											"end": 32465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32443,
											"end": 32465,
											"name": "tag",
											"source": 18,
											"value": "929"
										},
										{
											"begin": 32443,
											"end": 32465,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32433,
											"end": 32441,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 32429,
											"end": 32466,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32416,
											"end": 32427,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32387,
											"end": 32467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "611"
										},
										{
											"begin": 32387,
											"end": 32467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32387,
											"end": 32467,
											"name": "tag",
											"source": 18,
											"value": "928"
										},
										{
											"begin": 32387,
											"end": 32467,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32046,
											"end": 32477,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32046,
											"end": 32477,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32031,
											"end": 32477,
											"name": "tag",
											"source": 18,
											"value": "924"
										},
										{
											"begin": 32031,
											"end": 32477,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31941,
											"end": 32484,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31941,
											"end": 32484,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31941,
											"end": 32484,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31941,
											"end": 32484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32490,
											"end": 32607,
											"name": "tag",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 32490,
											"end": 32607,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32544,
											"end": 32552,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 32594,
											"end": 32599,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32588,
											"end": 32592,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32584,
											"end": 32600,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 32563,
											"end": 32600,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 32563,
											"end": 32600,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32490,
											"end": 32607,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 32490,
											"end": 32607,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 32490,
											"end": 32607,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32490,
											"end": 32607,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32490,
											"end": 32607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32613,
											"end": 32782,
											"name": "tag",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 32613,
											"end": 32782,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32657,
											"end": 32663,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 32690,
											"end": 32741,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "932"
										},
										{
											"begin": 32738,
											"end": 32739,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 32734,
											"end": 32740,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 32726,
											"end": 32731,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 32723,
											"end": 32724,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 32719,
											"end": 32732,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 32690,
											"end": 32741,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 32690,
											"end": 32741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32690,
											"end": 32741,
											"name": "tag",
											"source": 18,
											"value": "932"
										},
										{
											"begin": 32690,
											"end": 32741,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32686,
											"end": 32742,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 32771,
											"end": 32775,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 32765,
											"end": 32769,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 32761,
											"end": 32776,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 32751,
											"end": 32776,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 32751,
											"end": 32776,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32664,
											"end": 32782,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32613,
											"end": 32782,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 32613,
											"end": 32782,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 32613,
											"end": 32782,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32613,
											"end": 32782,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32613,
											"end": 32782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32787,
											"end": 33082,
											"name": "tag",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 32787,
											"end": 33082,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32863,
											"end": 32867,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 33009,
											"end": 33038,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "934"
										},
										{
											"begin": 33034,
											"end": 33037,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 33028,
											"end": 33032,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 33009,
											"end": 33038,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 33009,
											"end": 33038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33009,
											"end": 33038,
											"name": "tag",
											"source": 18,
											"value": "934"
										},
										{
											"begin": 33009,
											"end": 33038,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33001,
											"end": 33038,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 33001,
											"end": 33038,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33071,
											"end": 33074,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33068,
											"end": 33069,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 33064,
											"end": 33075,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 33058,
											"end": 33062,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33055,
											"end": 33076,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 33047,
											"end": 33076,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 33047,
											"end": 33076,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32787,
											"end": 33082,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 32787,
											"end": 33082,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 32787,
											"end": 33082,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32787,
											"end": 33082,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32787,
											"end": 33082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33087,
											"end": 34482,
											"name": "tag",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 33087,
											"end": 34482,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33204,
											"end": 33241,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "936"
										},
										{
											"begin": 33237,
											"end": 33240,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33204,
											"end": 33241,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 33204,
											"end": 33241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33204,
											"end": 33241,
											"name": "tag",
											"source": 18,
											"value": "936"
										},
										{
											"begin": 33204,
											"end": 33241,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33306,
											"end": 33324,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33298,
											"end": 33304,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 33295,
											"end": 33325,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 33292,
											"end": 33348,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 33292,
											"end": 33348,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "937"
										},
										{
											"begin": 33292,
											"end": 33348,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 33328,
											"end": 33346,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "938"
										},
										{
											"begin": 33328,
											"end": 33346,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 33328,
											"end": 33346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33328,
											"end": 33346,
											"name": "tag",
											"source": 18,
											"value": "938"
										},
										{
											"begin": 33328,
											"end": 33346,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33292,
											"end": 33348,
											"name": "tag",
											"source": 18,
											"value": "937"
										},
										{
											"begin": 33292,
											"end": 33348,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33372,
											"end": 33410,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "939"
										},
										{
											"begin": 33404,
											"end": 33408,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33398,
											"end": 33409,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 33372,
											"end": 33410,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 33372,
											"end": 33410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33372,
											"end": 33410,
											"name": "tag",
											"source": 18,
											"value": "939"
										},
										{
											"begin": 33372,
											"end": 33410,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33457,
											"end": 33524,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "940"
										},
										{
											"begin": 33517,
											"end": 33523,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33509,
											"end": 33515,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33503,
											"end": 33507,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 33457,
											"end": 33524,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 33457,
											"end": 33524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33457,
											"end": 33524,
											"name": "tag",
											"source": 18,
											"value": "940"
										},
										{
											"begin": 33457,
											"end": 33524,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33551,
											"end": 33552,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 33575,
											"end": 33579,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 33562,
											"end": 33579,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 33562,
											"end": 33579,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33607,
											"end": 33609,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 33599,
											"end": 33605,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 33596,
											"end": 33610,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 33624,
											"end": 33625,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 33619,
											"end": 34237,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 33619,
											"end": 34237,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 33619,
											"end": 34237,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "942"
										},
										{
											"begin": 33619,
											"end": 34237,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 34281,
											"end": 34282,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 34298,
											"end": 34304,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 34295,
											"end": 34372,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 34295,
											"end": 34372,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "943"
										},
										{
											"begin": 34295,
											"end": 34372,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 34347,
											"end": 34356,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 34342,
											"end": 34345,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 34338,
											"end": 34357,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 34332,
											"end": 34358,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 34323,
											"end": 34358,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 34323,
											"end": 34358,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34295,
											"end": 34372,
											"name": "tag",
											"source": 18,
											"value": "943"
										},
										{
											"begin": 34295,
											"end": 34372,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34398,
											"end": 34465,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "944"
										},
										{
											"begin": 34458,
											"end": 34464,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 34451,
											"end": 34456,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 34398,
											"end": 34465,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 34398,
											"end": 34465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34398,
											"end": 34465,
											"name": "tag",
											"source": 18,
											"value": "944"
										},
										{
											"begin": 34398,
											"end": 34465,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34392,
											"end": 34396,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 34385,
											"end": 34466,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 34254,
											"end": 34476,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33589,
											"end": 34476,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "941"
										},
										{
											"begin": 33589,
											"end": 34476,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33619,
											"end": 34237,
											"name": "tag",
											"source": 18,
											"value": "942"
										},
										{
											"begin": 33619,
											"end": 34237,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33671,
											"end": 33675,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 33667,
											"end": 33676,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 33659,
											"end": 33665,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 33655,
											"end": 33677,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 33705,
											"end": 33742,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "945"
										},
										{
											"begin": 33737,
											"end": 33741,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 33705,
											"end": 33742,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 33705,
											"end": 33742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33705,
											"end": 33742,
											"name": "tag",
											"source": 18,
											"value": "945"
										},
										{
											"begin": 33705,
											"end": 33742,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33764,
											"end": 33765,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 33778,
											"end": 33986,
											"name": "tag",
											"source": 18,
											"value": "946"
										},
										{
											"begin": 33778,
											"end": 33986,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33792,
											"end": 33799,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33789,
											"end": 33790,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 33786,
											"end": 33800,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 33778,
											"end": 33986,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 33778,
											"end": 33986,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "948"
										},
										{
											"begin": 33778,
											"end": 33986,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 33871,
											"end": 33880,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 33866,
											"end": 33869,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 33862,
											"end": 33881,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 33856,
											"end": 33882,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 33848,
											"end": 33854,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33841,
											"end": 33883,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 33922,
											"end": 33923,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 33914,
											"end": 33920,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33910,
											"end": 33924,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 33900,
											"end": 33924,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 33900,
											"end": 33924,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33969,
											"end": 33971,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 33958,
											"end": 33967,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 33954,
											"end": 33972,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 33941,
											"end": 33972,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 33941,
											"end": 33972,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33815,
											"end": 33819,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 33812,
											"end": 33813,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 33808,
											"end": 33820,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 33803,
											"end": 33820,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 33803,
											"end": 33820,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33778,
											"end": 33986,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "946"
										},
										{
											"begin": 33778,
											"end": 33986,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33778,
											"end": 33986,
											"name": "tag",
											"source": 18,
											"value": "948"
										},
										{
											"begin": 33778,
											"end": 33986,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34014,
											"end": 34020,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 34005,
											"end": 34012,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 34002,
											"end": 34021,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 33999,
											"end": 34178,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 33999,
											"end": 34178,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "949"
										},
										{
											"begin": 33999,
											"end": 34178,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 34072,
											"end": 34081,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 34067,
											"end": 34070,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 34063,
											"end": 34082,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 34057,
											"end": 34083,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 34115,
											"end": 34163,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "950"
										},
										{
											"begin": 34157,
											"end": 34161,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 34149,
											"end": 34155,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 34145,
											"end": 34162,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 34134,
											"end": 34143,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 34115,
											"end": 34163,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 34115,
											"end": 34163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34115,
											"end": 34163,
											"name": "tag",
											"source": 18,
											"value": "950"
										},
										{
											"begin": 34115,
											"end": 34163,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34107,
											"end": 34113,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 34100,
											"end": 34164,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 34022,
											"end": 34178,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33999,
											"end": 34178,
											"name": "tag",
											"source": 18,
											"value": "949"
										},
										{
											"begin": 33999,
											"end": 34178,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34224,
											"end": 34225,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 34220,
											"end": 34221,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 34212,
											"end": 34218,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 34208,
											"end": 34222,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 34204,
											"end": 34226,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 34198,
											"end": 34202,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 34191,
											"end": 34227,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 33626,
											"end": 34237,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33626,
											"end": 34237,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33626,
											"end": 34237,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33589,
											"end": 34476,
											"name": "tag",
											"source": 18,
											"value": "941"
										},
										{
											"begin": 33589,
											"end": 34476,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33589,
											"end": 34476,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33179,
											"end": 34482,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33179,
											"end": 34482,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33179,
											"end": 34482,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33087,
											"end": 34482,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33087,
											"end": 34482,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33087,
											"end": 34482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34488,
											"end": 34586,
											"name": "tag",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 34488,
											"end": 34586,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34539,
											"end": 34545,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 34573,
											"end": 34578,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 34567,
											"end": 34579,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 34557,
											"end": 34579,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 34557,
											"end": 34579,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34488,
											"end": 34586,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 34488,
											"end": 34586,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 34488,
											"end": 34586,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34488,
											"end": 34586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34592,
											"end": 34739,
											"name": "tag",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 34592,
											"end": 34739,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34693,
											"end": 34704,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 34730,
											"end": 34733,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 34715,
											"end": 34733,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 34715,
											"end": 34733,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34592,
											"end": 34739,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 34592,
											"end": 34739,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 34592,
											"end": 34739,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34592,
											"end": 34739,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34592,
											"end": 34739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34745,
											"end": 35131,
											"name": "tag",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 34745,
											"end": 35131,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34849,
											"end": 34852,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 34877,
											"end": 34915,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "954"
										},
										{
											"begin": 34909,
											"end": 34914,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 34877,
											"end": 34915,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 34877,
											"end": 34915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34877,
											"end": 34915,
											"name": "tag",
											"source": 18,
											"value": "954"
										},
										{
											"begin": 34877,
											"end": 34915,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34931,
											"end": 35019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "955"
										},
										{
											"begin": 35012,
											"end": 35018,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 35007,
											"end": 35010,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 34931,
											"end": 35019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 34931,
											"end": 35019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 34931,
											"end": 35019,
											"name": "tag",
											"source": 18,
											"value": "955"
										},
										{
											"begin": 34931,
											"end": 35019,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 34924,
											"end": 35019,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 34924,
											"end": 35019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35028,
											"end": 35093,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "956"
										},
										{
											"begin": 35086,
											"end": 35092,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 35081,
											"end": 35084,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 35074,
											"end": 35078,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 35067,
											"end": 35072,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 35063,
											"end": 35079,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 35028,
											"end": 35093,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 35028,
											"end": 35093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35028,
											"end": 35093,
											"name": "tag",
											"source": 18,
											"value": "956"
										},
										{
											"begin": 35028,
											"end": 35093,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35118,
											"end": 35124,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 35113,
											"end": 35116,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 35109,
											"end": 35125,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 35102,
											"end": 35125,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 35102,
											"end": 35125,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34853,
											"end": 35131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34745,
											"end": 35131,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 34745,
											"end": 35131,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 34745,
											"end": 35131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34745,
											"end": 35131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 34745,
											"end": 35131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35137,
											"end": 35408,
											"name": "tag",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 35137,
											"end": 35408,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35267,
											"end": 35270,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 35289,
											"end": 35382,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "958"
										},
										{
											"begin": 35378,
											"end": 35381,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 35369,
											"end": 35375,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 35289,
											"end": 35382,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 35289,
											"end": 35382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 35289,
											"end": 35382,
											"name": "tag",
											"source": 18,
											"value": "958"
										},
										{
											"begin": 35289,
											"end": 35382,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 35282,
											"end": 35382,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 35282,
											"end": 35382,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35399,
											"end": 35402,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 35392,
											"end": 35402,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 35392,
											"end": 35402,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35137,
											"end": 35408,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 35137,
											"end": 35408,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 35137,
											"end": 35408,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35137,
											"end": 35408,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 35137,
											"end": 35408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchTransfer(address[],uint256[])": "88d695b2",
							"blacklisted(address)": "dbac26e9",
							"decimals()": "313ce567",
							"icoContract()": "c66e4095",
							"initialize(string,string,uint256)": "b119490e",
							"lockedAmount(address)": "a153e708",
							"lockedUntil(address)": "9bc289f1",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"setBlacklist(address,bool)": "153b0d1e",
							"setICOContract(address)": "2e0d2a00",
							"setLockup(address,uint256,uint256)": "f326f0d7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyTokenRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"icoContract\",\"type\":\"address\"}],\"name\":\"ICOContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedUntilTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"}],\"name\":\"LockupSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_icoContract\",\"type\":\"address\"}],\"name\":\"setICOContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setLockup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RVA/UpgradableToken.sol\":\"ERC20Token\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"RVA/UpgradableToken.sol\":{\"keccak256\":\"0x17534518d617f3d50868437507bc2d26d5d0b8afb5510c64eaf58b778180e38a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b59bfeee927849d2119aafc3b4fcdc1cad00026eee75dc14d9d7bf64c023ee87\",\"dweb:/ipfs/QmWYie2Z7zPVGL48sHMEUtTYrampCktQM5Zuj9hjKsR7kL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 757,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2749,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "icoContract",
								"offset": 0,
								"slot": "50",
								"type": "t_address"
							},
							{
								"astId": 2751,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "51",
								"type": "t_uint256"
							},
							{
								"astId": 2758,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "blacklisted",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2762,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "lockedUntil",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2766,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "lockedAmount",
								"offset": 0,
								"slot": "54",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1752,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1751,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1751,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							2213
						],
						"IERC1822Proxiable": [
							1782
						],
						"Initializable": [
							448
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1783,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1782,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 2214,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2213,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 449,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1023:13:2"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1782,
										"src": "1038:17:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								1782,
								448
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 468,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 466,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 472,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 475,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 480,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 488,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 496,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 630,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 630,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1781
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 516,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1934,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 515,
												"id": 518,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 630,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 630,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4648:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 548,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4692:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 550,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "4753:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1965,
																"src": "4753:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 553,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4789:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "4658:251:2",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "4848:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "4869:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 558,
															"nodeType": "RevertStatement",
															"src": "4862:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:2"
									},
									"scope": 630,
									"src": "4603:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5084:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 570,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5115:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "5094:145:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "5123:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5199:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "5192:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:2"
									},
									"scope": 630,
									"src": "5032:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5655:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:2"
									},
									"scope": 630,
									"src": "5628:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6142:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 617,
															"nodeType": "Block",
															"src": "6232:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6250:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 601,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2213,
																				"src": "6258:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1934,
																			"src": "6258:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 609,
																	"nodeType": "IfStatement",
																	"src": "6246:120:2",
																	"trueBody": {
																		"id": 608,
																		"nodeType": "Block",
																		"src": "6292:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 605,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 598,
																							"src": "6346:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 604,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "6317:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 607,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 613,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6409:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 614,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6428:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2213,
																				"src": "6379:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2028,
																			"src": "6379:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:2"
																}
															]
														},
														"errorName": "",
														"id": 618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 599,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 598,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 618,
																	"src": "6218:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 597,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:2"
														},
														"src": "6209:235:2"
													},
													{
														"block": {
															"id": 625,
															"nodeType": "Block",
															"src": "6451:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 622,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6560:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 619,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2213,
																				"src": "6518:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1939,
																			"src": "6518:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 624,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:2"
																}
															]
														},
														"errorName": "",
														"id": 626,
														"nodeType": "TryCatchClause",
														"src": "6445:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6174:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "6156:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1782_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1782",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1781,
														"src": "6156:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 627,
												"nodeType": "TryStatement",
												"src": "6152:437:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6088:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6115:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:2"
									},
									"scope": 630,
									"src": "6057:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "986:5611:2",
							"usedErrors": [
								211,
								214,
								475,
								480,
								1939,
								1952,
								2337,
								2599
							],
							"usedEvents": [
								219,
								1759
							]
						}
					],
					"src": "115:6483:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							758
						]
					},
					"id": 759,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 759,
							"sourceUnit": 1752,
							"src": "130:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 759,
							"sourceUnit": 449,
							"src": "172:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 634,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "180:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 637,
										"name": "Initializable",
										"nameLocations": [
											"718:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "718:13:3"
									},
									"id": 638,
									"nodeType": "InheritanceSpecifier",
									"src": "718:13:3"
								},
								{
									"baseName": {
										"id": 639,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"733:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "733:18:3"
									},
									"id": 640,
									"nodeType": "InheritanceSpecifier",
									"src": "733:18:3"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 636,
								"nodeType": "StructuredDocumentation",
								"src": "237:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 758,
							"linearizedBaseContracts": [
								758,
								1751,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "695:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "758:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 645,
									"name": "Paused",
									"nameLocation": "842:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "857:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "849:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:17:3"
									},
									"src": "836:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "872:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 650,
									"name": "Unpaused",
									"nameLocation": "953:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"src": "947:32:3"
								},
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "998:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 758,
									"src": "985:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 651,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "985:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "1137:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 658,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1147:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:3"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "1012:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 656,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 655,
												"name": "onlyInitializing",
												"nameLocations": [
													"1120:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1120:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:16:3"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1093:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:3"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:3"
									},
									"scope": 758,
									"src": "1084:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "1250:32:3",
										"statements": [
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "1260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1260:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "1260:15:3"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyInitializing",
												"nameLocations": [
													"1233:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1233:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1233:16:3"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1196:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:3"
									},
									"scope": 758,
									"src": "1187:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1493:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 675,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "1503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "1503:19:3"
											},
											{
												"id": 678,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:3"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "1288:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 680,
									"name": "whenNotPaused",
									"nameLocation": "1477:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:3"
									},
									"src": "1468:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "1740:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 683,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "1750:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "1750:16:3"
											},
											{
												"id": 686,
												"nodeType": "PlaceholderStatement",
												"src": "1776:1:3"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1546:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 688,
									"name": "whenPaused",
									"nameLocation": "1727:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:3"
									},
									"src": "1718:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "1932:31:3",
										"statements": [
											{
												"expression": {
													"id": 694,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 652,
													"src": "1949:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 693,
												"id": 695,
												"nodeType": "Return",
												"src": "1942:14:3"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "1790:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1888:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1926:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:6:3"
									},
									"scope": 758,
									"src": "1879:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "2082:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2100:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 702,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "2101:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2101:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "2092:38:3"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1969:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2040:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:3"
									},
									"scope": 758,
									"src": "2031:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2257:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 714,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "2275:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2275:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2267:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2267:41:3"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "2143:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2218:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:3"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:3"
									},
									"scope": 758,
									"src": "2209:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "2499:66:3",
										"statements": [
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2509:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "2509:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 731,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "2545:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 730,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "2538:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "EmitStatement",
												"src": "2533:25:3"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "2321:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 724,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 723,
												"name": "whenNotPaused",
												"nameLocations": [
													"2485:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2485:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2459:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:3"
									},
									"scope": 758,
									"src": "2450:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "2745:69:3",
										"statements": [
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 742,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2755:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2765:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2755:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "2755:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 747,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "2794:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 746,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "2785:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "EmitStatement",
												"src": "2780:27:3"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "2571:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 740,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 739,
												"name": "whenPaused",
												"nameLocations": [
													"2734:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 688,
												"src": "2734:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2706:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:3"
									},
									"scope": 758,
									"src": "2697:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "2820:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 757,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3099:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 758,
									"src": "3079:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 754,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3079:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 756,
										"length": {
											"hexValue": "3439",
											"id": 755,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3087:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3079:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 759,
							"src": "677:2430:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219,
								645,
								650
							]
						}
					],
					"src": "105:3003:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"ERC20Upgradeable": [
							1375
						],
						"IERC20": [
							2301
						],
						"IERC20Errors": [
							1824
						],
						"IERC20Metadata": [
							2327
						],
						"Initializable": [
							448
						]
					},
					"id": 1376,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 760,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 2302,
							"src": "131:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 761,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2301,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 2328,
							"src": "202:97:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 763,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2327,
										"src": "210:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1752,
							"src": "300:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 765,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1751,
										"src": "308:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1920,
							"src": "371:83:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 767,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1824,
										"src": "379:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 449,
							"src": "455:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 769,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "463:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 772,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1319:13:4"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:4"
								},
								{
									"baseName": {
										"id": 774,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "1334:18:4"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:4"
								},
								{
									"baseName": {
										"id": 776,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2301,
										"src": "1354:6:4"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:4"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2327,
										"src": "1362:14:4"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:4"
								},
								{
									"baseName": {
										"id": 780,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1824,
										"src": "1378:12:4"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:4"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 771,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1375,
							"linearizedBaseContracts": [
								1375,
								1824,
								2327,
								2301,
								1751,
								448
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 799,
									"members": [
										{
											"constant": false,
											"id": 786,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1495:45:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 785,
												"keyName": "account",
												"keyNameLocation": "1511:7:4",
												"keyType": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1551:75:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 791,
												"keyName": "account",
												"keyNameLocation": "1567:7:4",
												"keyType": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 790,
													"keyName": "spender",
													"keyNameLocation": "1594:7:4",
													"keyType": {
														"id": 788,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 789,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1637:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 793,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 796,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1668:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 795,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1690:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 797,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:4",
									"nodeType": "StructDefinition",
									"scope": 1375,
									"src": "1465:246:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 802,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "1826:114:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 800,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 801,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "2021:79:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:4",
													"nodeType": "YulBlock",
													"src": "2040:54:4",
													"statements": [
														{
															"nativeSrc": "2054:30:4",
															"nodeType": "YulAssignment",
															"src": "2054:30:4",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:4",
																"nodeType": "YulIdentifier",
																"src": "2064:20:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 802,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:4",
														"valueSize": 1
													}
												],
												"id": 808,
												"nodeType": "InlineAssembly",
												"src": "2031:63:4"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1997:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 799,
														"src": "1997:12:4"
													},
													"referencedDeclaration": 799,
													"src": "1997:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:4"
									},
									"scope": 1375,
									"src": "1947:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "2374:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "2407:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 822,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "2414:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 820,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2384:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "2384:38:4"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "2106:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 818,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 817,
												"name": "onlyInitializing",
												"nameLocations": [
													"2357:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2357:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2357:16:4"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2291:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2318:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2304:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2304:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2339:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2325:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 814,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:44:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:4"
									},
									"scope": 1375,
									"src": "2282:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "2537:114:4",
										"statements": [
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2568:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "2547:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 836,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 835,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2547:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "2547:12:4"
															},
															"referencedDeclaration": 799,
															"src": "2547:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 840,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 838,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2572:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2547:43:4"
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 841,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "2600:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2602:5:4",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 796,
														"src": "2600:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "2610:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2600:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "2600:15:4"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 847,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "2625:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2627:7:4",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 798,
														"src": "2625:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2637:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2625:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "2625:19:4"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 833,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 832,
												"name": "onlyInitializing",
												"nameLocations": [
													"2520:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2520:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2520:16:4"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2444:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2481:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2467:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 827,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2502:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2488:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:44:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:4"
									},
									"scope": 1375,
									"src": "2435:216:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2314
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "2776:84:4",
										"statements": [
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2807:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "2786:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 861,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 860,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2786:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "2786:12:4"
															},
															"referencedDeclaration": 799,
															"src": "2786:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2811:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 866,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2846:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2848:5:4",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 796,
													"src": "2846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 859,
												"id": 868,
												"nodeType": "Return",
												"src": "2839:14:4"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2657:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2725:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2761:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2761:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:15:4"
									},
									"scope": 1375,
									"src": "2716:144:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2320
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "3035:86:4",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3066:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "3045:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 877,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 876,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3045:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "3045:12:4"
															},
															"referencedDeclaration": 799,
															"src": "3045:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 879,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3070:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3045:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 882,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3105:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3107:7:4",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 798,
													"src": "3105:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 875,
												"id": 884,
												"nodeType": "Return",
												"src": "3098:16:4"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2866:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2982:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:2:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "3020:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3020:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:15:4"
									},
									"scope": 1375,
									"src": "2973:148:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2326
									],
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3810:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3827:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 891,
												"id": 893,
												"nodeType": "Return",
												"src": "3820:9:4"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "3127:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3763:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:2:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3803:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 889,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:7:4"
									},
									"scope": 1375,
									"src": "3754:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2250
									],
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "3957:91:4",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3988:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 910,
														"src": "3967:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 902,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 901,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3967:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "3967:12:4"
															},
															"referencedDeclaration": 799,
															"src": "3967:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 904,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3992:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3967:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 907,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "4027:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4029:12:4",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 794,
													"src": "4027:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 900,
												"id": 909,
												"nodeType": "Return",
												"src": "4020:21:4"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3842:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3905:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:2:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3948:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:4"
									},
									"scope": 1375,
									"src": "3896:152:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2258
									],
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "4180:97:4",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4211:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "4190:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 920,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 919,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4190:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "4190:12:4"
															},
															"referencedDeclaration": 799,
															"src": "4190:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 922,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4215:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4190:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 925,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "4250:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4252:9:4",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 786,
														"src": "4250:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 928,
													"indexExpression": {
														"id": 927,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "4262:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4250:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 918,
												"id": 929,
												"nodeType": "Return",
												"src": "4243:27:4"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "4054:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4115:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4133:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "4125:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:17:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "4171:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:9:4"
									},
									"scope": 1375,
									"src": "4106:171:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2268
									],
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "4547:103:4",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4565:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "4557:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 941,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4557:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 943,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "4573:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4573:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4557:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "4605:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "4612:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "4616:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 946,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4595:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "4595:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4639:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 940,
												"id": 953,
												"nodeType": "Return",
												"src": "4632:11:4"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "4283:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4481:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4498:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4490:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4510:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4502:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:27:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4541:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4541:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:6:4"
									},
									"scope": 1375,
									"src": "4472:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2278
									],
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "4797:106:4",
										"statements": [
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4828:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "4807:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 966,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 965,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4807:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "4807:12:4"
															},
															"referencedDeclaration": 799,
															"src": "4807:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 968,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4832:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4807:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 971,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "4867:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4869:11:4",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 792,
															"src": "4867:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 974,
														"indexExpression": {
															"id": 973,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "4881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4867:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 976,
													"indexExpression": {
														"id": 975,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4888:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4867:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 964,
												"id": 977,
												"nodeType": "Return",
												"src": "4860:36:4"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "4656:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4717:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4727:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4750:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4742:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:32:4"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4788:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4787:9:4"
									},
									"scope": 1375,
									"src": "4708:195:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2288
									],
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "5289:107:4",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5307:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1002,
														"src": "5299:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 989,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5299:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 991,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "5315:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5315:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "5346:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "5353:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "5362:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1326
														],
														"referencedDeclaration": 1258,
														"src": "5337:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "5337:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5385:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 988,
												"id": 1001,
												"nodeType": "Return",
												"src": "5378:11:4"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4909:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5219:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5235:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5227:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5252:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5244:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:32:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5283:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5283:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:6:4"
									},
									"scope": 1375,
									"src": "5210:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2300
									],
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "6081:151:4",
										"statements": [
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6099:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "6091:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1015,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6091:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1017,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "6109:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6091:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6147:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "6153:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6162:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "6131:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "6131:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1027,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6188:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "6194:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6198:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "6178:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "6178:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6221:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1014,
												"id": 1033,
												"nodeType": "Return",
												"src": "6214:11:4"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "5402:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5997:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6018:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6010:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6044:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6036:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:41:4"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6074:6:4"
									},
									"scope": 1375,
									"src": "5988:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "6674:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "6688:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6704:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6696:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1046,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6696:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6696:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6688:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "6684:86:4",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "6708:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6756:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6748:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1052,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6748:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6748:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1051,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "6729:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6729:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1057,
															"nodeType": "RevertStatement",
															"src": "6722:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "6783:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6797:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6789:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1061,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6789:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6789:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6783:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "6779:86:4",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "6801:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6851:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6843:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1067,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6843:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6843:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1066,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "6822:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6822:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1072,
															"nodeType": "RevertStatement",
															"src": "6815:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "6882:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "6888:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "6892:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1075,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "6874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6874:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "6874:24:4"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "6238:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6614:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6632:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6624:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6646:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6638:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6658:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6650:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:41:4"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6674:0:4"
									},
									"scope": 1375,
									"src": "6605:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "7295:1095:4",
										"statements": [
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7326:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "7305:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1093,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1092,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7305:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "7305:12:4"
															},
															"referencedDeclaration": 799,
															"src": "7305:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1097,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1095,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "7330:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7330:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7305:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1098,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "7362:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7378:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1099,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7370:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7370:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7362:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "7538:366:4",
													"statements": [
														{
															"assignments": [
																1112
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1112,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7560:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1140,
																	"src": "7552:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1111,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7552:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1117,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1113,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "7574:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7576:9:4",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 786,
																	"src": "7574:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1116,
																"indexExpression": {
																	"id": 1115,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "7586:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7574:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7552:39:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1118,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "7609:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1119,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "7623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7609:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1128,
															"nodeType": "IfStatement",
															"src": "7605:115:4",
															"trueBody": {
																"id": 1127,
																"nodeType": "Block",
																"src": "7630:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1122,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "7680:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1123,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "7686:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1124,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "7699:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1121,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1794,
																				"src": "7655:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7655:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1126,
																		"nodeType": "RevertStatement",
																		"src": "7648:57:4"
																	}
																]
															}
														},
														{
															"id": 1139,
															"nodeType": "UncheckedBlock",
															"src": "7733:161:4",
															"statements": [
																{
																	"expression": {
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1129,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "7840:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1132,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7842:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 786,
																				"src": "7840:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1133,
																			"indexExpression": {
																				"id": 1131,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "7852:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7840:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1134,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "7860:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1135,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "7874:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7860:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7840:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1138,
																	"nodeType": "ExpressionStatement",
																	"src": "7840:39:4"
																}
															]
														}
													]
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "7358:546:4",
												"trueBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "7382:150:4",
													"statements": [
														{
															"expression": {
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1104,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "7498:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7500:12:4",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "7498:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1107,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "7516:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7498:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "7498:23:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1142,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "7918:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7932:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7924:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7924:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7924:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7918:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "8135:208:4",
													"statements": [
														{
															"id": 1164,
															"nodeType": "UncheckedBlock",
															"src": "8149:184:4",
															"statements": [
																{
																	"expression": {
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1156,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "8294:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8296:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 786,
																				"src": "8294:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1160,
																			"indexExpression": {
																				"id": 1158,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "8306:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8294:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1161,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "8313:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8294:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1163,
																	"nodeType": "ExpressionStatement",
																	"src": "8294:24:4"
																}
															]
														}
													]
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "7914:429:4",
												"trueBody": {
													"id": 1155,
													"nodeType": "Block",
													"src": "7936:193:4",
													"statements": [
														{
															"id": 1154,
															"nodeType": "UncheckedBlock",
															"src": "7950:169:4",
															"statements": [
																{
																	"expression": {
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1148,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "8081:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8083:12:4",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 794,
																			"src": "8081:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "8099:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8081:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1153,
																	"nodeType": "ExpressionStatement",
																	"src": "8081:23:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1168,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "8367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "8373:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "8377:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1167,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "8358:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8358:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "EmitStatement",
												"src": "8353:30:4"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "6911:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7229:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7245:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7237:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7259:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7251:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7251:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7271:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7263:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7236:41:4"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7295:0:4"
									},
									"scope": 1375,
									"src": "7220:1170:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "8789:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1182,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "8803:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8814:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8814:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8814:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8803:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "8799:91:4",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "8826:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8876:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8868:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1189,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8868:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8868:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1188,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "8847:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8847:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1194,
															"nodeType": "RevertStatement",
															"src": "8840:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8915:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8907:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1198,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8907:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8907:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "8919:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "8928:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "8899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8899:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "8899:35:4"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "8396:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8742:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8756:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "8748:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8773:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "8765:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8747:32:4"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8789:0:4"
									},
									"scope": 1375,
									"src": "8733:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "9315:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "9329:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9348:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9340:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9340:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9340:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9329:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1229,
												"nodeType": "IfStatement",
												"src": "9325:89:4",
												"trueBody": {
													"id": 1228,
													"nodeType": "Block",
													"src": "9352:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9400:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9392:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1222,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9392:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9392:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1221,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "9373:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9373:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1227,
															"nodeType": "RevertStatement",
															"src": "9366:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "9431:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9448:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9440:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9440:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9440:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "9452:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1230,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "9423:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9423:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "9423:35:4"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "8947:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9268:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9282:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "9274:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9274:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9299:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "9291:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9291:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9273:32:4"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9315:0:4"
									},
									"scope": 1375,
									"src": "9259:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "10075:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1251,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "10094:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "10101:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "10110:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10117:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1250,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1326
														],
														"referencedDeclaration": 1326,
														"src": "10085:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10085:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "10085:37:4"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "9471:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10010:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10027:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10019:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10019:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10042:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10034:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10034:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:47:4"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10075:0:4"
									},
									"scope": 1375,
									"src": "10001:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "11074:389:4",
										"statements": [
											{
												"assignments": [
													1272
												],
												"declarations": [
													{
														"constant": false,
														"id": 1272,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11105:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "11084:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1271,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1270,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11084:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "11084:12:4"
															},
															"referencedDeclaration": 799,
															"src": "11084:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1275,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1273,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "11109:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11109:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11084:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1276,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "11141:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1277,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11150:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11150:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11141:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "11137:89:4",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "11162:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11212:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11204:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1283,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11204:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11204:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1282,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "11183:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11183:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1288,
															"nodeType": "RevertStatement",
															"src": "11176:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "11239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11258:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11250:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11250:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11250:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11239:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "11235:90:4",
												"trueBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "11262:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11311:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11303:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1298,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11303:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11303:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1297,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "11283:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11283:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1303,
															"nodeType": "RevertStatement",
															"src": "11276:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1306,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "11334:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11336:11:4",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 792,
																"src": "11334:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1311,
															"indexExpression": {
																"id": 1308,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "11348:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11334:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1312,
														"indexExpression": {
															"id": 1309,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "11355:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11334:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1313,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "11366:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11334:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "11334:37:4"
											},
											{
												"condition": {
													"id": 1316,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1267,
													"src": "11385:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1324,
												"nodeType": "IfStatement",
												"src": "11381:76:4",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "11396:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1318,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "11424:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1319,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "11431:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1320,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "11440:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1317,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "11415:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11415:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "EmitStatement",
															"src": "11410:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "10135:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10985:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "10994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11017:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11009:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11009:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11034:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11026:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11046:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11041:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11041:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10993:63:4"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11074:0:4"
									},
									"scope": 1375,
									"src": "10976:487:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "11834:388:4",
										"statements": [
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11852:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "11844:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11844:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"arguments": [
														{
															"id": 1339,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "11881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1340,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "11888:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1338,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "11871:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11871:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11844:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1343,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "11910:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11935:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1345,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11935:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1344,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11930:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11930:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11944:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11930:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11910:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "11906:310:4",
												"trueBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "11949:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1350,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "11967:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1351,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "11986:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11967:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1360,
															"nodeType": "IfStatement",
															"src": "11963:130:4",
															"trueBody": {
																"id": 1359,
																"nodeType": "Block",
																"src": "11993:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1354,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1331,
																					"src": "12045:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1355,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "12054:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1356,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "12072:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1353,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1813,
																				"src": "12018:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12018:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1358,
																		"nodeType": "RevertStatement",
																		"src": "12011:67:4"
																	}
																]
															}
														},
														{
															"id": 1370,
															"nodeType": "UncheckedBlock",
															"src": "12106:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1362,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1329,
																				"src": "12143:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1363,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1331,
																				"src": "12150:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1364,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "12159:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1365,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "12178:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12159:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12185:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1361,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1258,
																				1326
																			],
																			"referencedDeclaration": 1326,
																			"src": "12134:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12134:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "12134:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "11469:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11754:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11778:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11770:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11770:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11793:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11785:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11785:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11810:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11802:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11769:47:4"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11834:0:4"
									},
									"scope": 1375,
									"src": "11745:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1376,
							"src": "1281:10943:4",
							"usedErrors": [
								211,
								214,
								1794,
								1799,
								1804,
								1813,
								1818,
								1823
							],
							"usedEvents": [
								219,
								2235,
								2244
							]
						}
					],
					"src": "105:12120:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1705
						]
					},
					"id": 1706,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1377,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1378,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1705,
							"linearizedBaseContracts": [
								1705
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "1489:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1386,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "1713:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1391,
												"nodeType": "Return",
												"src": "1706:30:5"
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1443:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:5"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1483:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:5"
									},
									"scope": 1705,
									"src": "1423:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "2729:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1404,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1402,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1407,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "2772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:5"
											},
											{
												"assignments": [
													1413,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1426,
														"src": "2824:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1412,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1420,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1414,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "2842:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1416,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "2864:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1422,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "2893:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:5"
											}
										]
									},
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2677:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2704:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:5"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:5"
									},
									"scope": 1705,
									"src": "2658:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "3801:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1438,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "3840:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1439,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "3848:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1437,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1485,
															1529
														],
														"referencedDeclaration": 1529,
														"src": "3818:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1443,
												"nodeType": "Return",
												"src": "3811:79:5"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3734:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3750:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:5"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3787:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:5"
									},
									"scope": 1705,
									"src": "3712:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "4266:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1458,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "4305:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "4313:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1461,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4322:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1457,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1485,
															1529
														],
														"referencedDeclaration": 1529,
														"src": "4283:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1456,
												"id": 1463,
												"nodeType": "Return",
												"src": "4276:59:5"
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4150:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4174:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4201:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:5"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4252:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:5"
									},
									"scope": 1705,
									"src": "4119:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "4817:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1478,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4856:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1479,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "4864:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1480,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "4870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1477,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1485,
															1529
														],
														"referencedDeclaration": 1529,
														"src": "4834:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1476,
												"id": 1483,
												"nodeType": "Return",
												"src": "4827:94:5"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4735:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4751:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4770:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:5"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4803:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:5"
									},
									"scope": 1705,
									"src": "4704:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "5355:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1502,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1500,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1505,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "5398:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:5"
											},
											{
												"assignments": [
													1511,
													1513
												],
												"declarations": [
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "5457:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1510,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1513,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "5471:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1512,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1520,
												"initialValue": {
													"arguments": [
														{
															"id": 1518,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "5524:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1514,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "5498:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1516,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "5517:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1522,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "5573:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1523,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "5581:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1524,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "5590:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1525,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "5602:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1521,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "5546:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1527,
												"nodeType": "Return",
												"src": "5539:76:5"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5216:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5240:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5290:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:5"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5341:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:5"
									},
									"scope": 1705,
									"src": "5176:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "5899:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1540,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "5935:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "5943:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1539,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1546,
															1575
														],
														"referencedDeclaration": 1575,
														"src": "5916:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1544,
												"nodeType": "Return",
												"src": "5909:80:5"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "5827:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "5843:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:5"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "5885:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:5"
									},
									"scope": 1705,
									"src": "5799:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "6338:168:5",
										"statements": [
											{
												"assignments": [
													1559,
													1561
												],
												"declarations": [
													{
														"constant": false,
														"id": 1559,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "6349:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1558,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1561,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "6363:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1560,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"arguments": [
														{
															"id": 1564,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "6408:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1562,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "6390:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1568,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "6457:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1569,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "6465:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1570,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "6474:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1571,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "6486:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1567,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "6430:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1557,
												"id": 1573,
												"nodeType": "Return",
												"src": "6423:76:5"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6217:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6241:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6268:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:5"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6324:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:5"
									},
									"scope": 1705,
									"src": "6180:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "6782:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1586,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "6820:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1587,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "6828:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1585,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1592,
															1621
														],
														"referencedDeclaration": 1621,
														"src": "6799:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1590,
												"nodeType": "Return",
												"src": "6792:84:5"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "6715:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "6731:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:5"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "6768:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:5"
									},
									"scope": 1705,
									"src": "6685:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "7224:170:5",
										"statements": [
											{
												"assignments": [
													1605,
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1620,
														"src": "7235:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1604,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1620,
														"src": "7249:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1606,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"initialValue": {
													"arguments": [
														{
															"id": 1610,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "7296:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1608,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "7276:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1614,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "7345:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1615,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "7353:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1616,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "7362:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1617,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "7374:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1613,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "7318:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1603,
												"id": 1619,
												"nodeType": "Return",
												"src": "7311:76:5"
											}
										]
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7108:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7132:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1596,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7159:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:5"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7210:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:5"
									},
									"scope": 1705,
									"src": "7069:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "7876:434:5",
										"statements": [
											{
												"condition": {
													"id": 1635,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1626,
													"src": "7890:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1657,
													"nodeType": "Block",
													"src": "8246:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1653,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "8268:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1654,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "8280:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1652,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "8260:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1656,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:5"
														}
													]
												},
												"id": 1658,
												"nodeType": "IfStatement",
												"src": "7886:418:5",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "7899:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1636,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "7917:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1648,
															"nodeType": "IfStatement",
															"src": "7913:286:5",
															"trueBody": {
																"id": 1647,
																"nodeType": "Block",
																"src": "7941:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1642,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1624,
																							"src": "8143:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1641,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1393,
																						"src": "8132:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1643,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1640,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1646,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1649,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "8219:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1634,
															"id": 1650,
															"nodeType": "Return",
															"src": "8212:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7751:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7773:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7806:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:5"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7862:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:5"
									},
									"scope": 1705,
									"src": "7682:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "8691:135:5",
										"statements": [
											{
												"condition": {
													"id": 1672,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1663,
													"src": "8705:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1681,
													"nodeType": "Block",
													"src": "8762:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1677,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "8784:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1678,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "8796:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1676,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "8776:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1680,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:5"
														}
													]
												},
												"id": 1682,
												"nodeType": "IfStatement",
												"src": "8701:119:5",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "8714:42:5",
													"statements": [
														{
															"expression": {
																"id": 1673,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1665,
																"src": "8735:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1671,
															"id": 1674,
															"nodeType": "Return",
															"src": "8728:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8566:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8588:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8621:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1666,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:5"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8677:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:5"
									},
									"scope": 1705,
									"src": "8531:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "8915:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1691,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "8991:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1701,
													"nodeType": "Block",
													"src": "9321:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1698,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "9342:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1697,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1700,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:5"
														}
													]
												},
												"id": 1702,
												"nodeType": "IfStatement",
												"src": "8987:379:5",
												"trueBody": {
													"id": 1696,
													"nodeType": "Block",
													"src": "9014:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:5",
																"nodeType": "YulBlock",
																"src": "9172:133:5",
																"statements": [
																	{
																		"nativeSrc": "9190:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:5"
																			},
																			"nativeSrc": "9213:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:5",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:5",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:5"
																					},
																					"nativeSrc": "9254:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:5"
																			},
																			"nativeSrc": "9247:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:5"
																		},
																		"nativeSrc": "9247:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1686,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1686,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:5",
																	"valueSize": 1
																}
															],
															"id": 1695,
															"nodeType": "InlineAssembly",
															"src": "9163:142:5"
														}
													]
												}
											}
										]
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "8849:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "8874:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:5"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:5"
									},
									"scope": 1705,
									"src": "8832:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1706,
							"src": "194:9180:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"Initializable": [
							448
						]
					},
					"id": 1752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1707,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1752,
							"sourceUnit": 449,
							"src": "126:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1708,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1711,
										"name": "Initializable",
										"nameLocations": [
											"728:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:6"
									},
									"id": 1712,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:6"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1710,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1751,
							"linearizedBaseContracts": [
								1751,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "800:7:6",
										"statements": []
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1715,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1714,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:6"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:6"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:6"
									},
									"scope": 1751,
									"src": "748:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "875:7:6",
										"statements": []
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1720,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:6"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:6"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:6"
									},
									"scope": 1751,
									"src": "813:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "949:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1729,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1731,
												"nodeType": "Return",
												"src": "959:17:6"
											}
										]
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:6"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "940:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:6"
									},
									"scope": 1751,
									"src": "887:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "1056:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1738,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1740,
												"nodeType": "Return",
												"src": "1066:15:6"
											}
										]
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:6"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1040:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:6"
									},
									"scope": 1751,
									"src": "989:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "1166:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1746,
												"id": 1748,
												"nodeType": "Return",
												"src": "1176:8:6"
											}
										]
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:6"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1157:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:6"
									},
									"scope": 1751,
									"src": "1094:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1752,
							"src": "688:505:6",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1772
						]
					},
					"id": 1773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1753,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1754,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:7",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1772,
							"linearizedBaseContracts": [
								1772
							],
							"name": "IERC1967",
							"nameLocation": "245:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:7",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1759,
									"name": "Upgraded",
									"nameLocation": "339:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "348:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:7"
									},
									"src": "333:47:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:7",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1766,
									"name": "AdminChanged",
									"nameLocation": "464:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "477:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "500:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:7"
									},
									"src": "458:60:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:7",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1771,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "609:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:7"
									},
									"src": "588:45:7"
								}
							],
							"scope": 1773,
							"src": "235:400:7",
							"usedErrors": [],
							"usedEvents": [
								1759,
								1766,
								1771
							]
						}
					],
					"src": "107:529:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1782
						]
					},
					"id": 1783,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1775,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:8",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1782,
							"linearizedBaseContracts": [
								1782
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:8",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:8"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "869:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1778,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:8"
									},
									"scope": 1782,
									"src": "821:57:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1783,
							"src": "344:536:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1919
						],
						"IERC20Errors": [
							1824
						],
						"IERC721Errors": [
							1872
						]
					},
					"id": 1920,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1784,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1785,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:9",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1824,
							"linearizedBaseContracts": [
								1824
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:9",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1794,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "654:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "670:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "687:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:9"
									},
									"src": "623:80:9"
								},
								{
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1799,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "891:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:9"
									},
									"src": "866:41:9"
								},
								{
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1804,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1104:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:9"
									},
									"src": "1077:45:9"
								},
								{
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:9",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1813,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1511:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1528:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1547:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:9"
									},
									"src": "1478:85:9"
								},
								{
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1818,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "1775:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:9"
									},
									"src": "1748:45:9"
								},
								{
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:9",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1823,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "2025:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:9"
									},
									"src": "1999:43:9"
								}
							],
							"scope": 1920,
							"src": "280:1764:9",
							"usedErrors": [
								1794,
								1799,
								1804,
								1813,
								1818,
								1823
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1825,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:9",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1872,
							"linearizedBaseContracts": [
								1872
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:9",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1830,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "2469:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:9"
									},
									"src": "2444:40:9"
								},
								{
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:9",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1835,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "2656:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:9"
									},
									"src": "2627:46:9"
								},
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:9",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1844,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3000:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3016:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3033:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:9"
									},
									"src": "2973:75:9"
								},
								{
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1849,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "3237:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:9"
									},
									"src": "3211:42:9"
								},
								{
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1854,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "3451:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:9"
									},
									"src": "3423:46:9"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:9",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1861,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "3760:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "3778:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:9"
									},
									"src": "3727:68:9"
								},
								{
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1866,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "4008:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:9"
									},
									"src": "3980:46:9"
								},
								{
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:9",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1871,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "4262:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:9"
									},
									"src": "4234:46:9"
								}
							],
							"scope": 1920,
							"src": "2190:2092:9",
							"usedErrors": [
								1830,
								1835,
								1844,
								1849,
								1854,
								1861,
								1866,
								1871
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1873,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:9",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1919,
							"linearizedBaseContracts": [
								1919
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:9",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1884,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4860:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4876:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4893:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4909:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:9"
									},
									"src": "4827:99:9"
								},
								{
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1889,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "5116:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:9"
									},
									"src": "5089:43:9"
								},
								{
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1894,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "5331:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:9"
									},
									"src": "5302:47:9"
								},
								{
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:9",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1901,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "5651:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "5669:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:9"
									},
									"src": "5616:68:9"
								},
								{
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1906,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "5898:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:9"
									},
									"src": "5869:47:9"
								},
								{
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:9",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1911,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "6153:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:9"
									},
									"src": "6124:47:9"
								},
								{
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:9",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1918,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "6494:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "6513:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:9"
									},
									"src": "6462:73:9"
								}
							],
							"scope": 1920,
							"src": "4430:2107:9",
							"usedErrors": [
								1884,
								1889,
								1894,
								1901,
								1906,
								1911,
								1918
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2586
						],
						"ERC1967Utils": [
							2213
						],
						"IBeacon": [
							2223
						],
						"IERC1967": [
							1772
						],
						"StorageSlot": [
							2732
						]
					},
					"id": 2214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1921,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1923,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 2224,
							"src": "140:46:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1922,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2223,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 1773,
							"src": "187:55:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1924,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1772,
										"src": "195:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 2587,
							"src": "243:48:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1926,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2586,
										"src": "251:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 2733,
							"src": "292:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1928,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2732,
										"src": "300:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1930,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:10",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 2213,
							"linearizedBaseContracts": [
								2213
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:10",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1934,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:10",
									"nodeType": "VariableDeclaration",
									"scope": 2213,
									"src": "763:114:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1932,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1933,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:10",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1939,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "993:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:10"
									},
									"src": "958:59:10"
								},
								{
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:10",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1944,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "1114:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:10"
									},
									"src": "1088:41:10"
								},
								{
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:10",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1949,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1228:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:10"
									},
									"src": "1201:43:10"
								},
								{
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:10",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1952,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:10"
									},
									"src": "1337:26:10"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "1502:77:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1960,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "1546:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1958,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "1519:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2643,
															"src": "1519:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2613,
													"src": "1519:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1957,
												"id": 1963,
												"nodeType": "Return",
												"src": "1512:60:10"
											}
										]
									},
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:10",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:10"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "1493:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:10"
									},
									"scope": 2213,
									"src": "1441:138:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "1734:218:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1971,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1968,
																"src": "1748:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1981,
												"nodeType": "IfStatement",
												"src": "1744:119:10",
												"trueBody": {
													"id": 1980,
													"nodeType": "Block",
													"src": "1784:79:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1977,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1968,
																		"src": "1834:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1976,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "1805:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1979,
															"nodeType": "RevertStatement",
															"src": "1798:54:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1985,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1934,
																	"src": "1899:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1982,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "1872:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2643,
																"src": "1872:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "1872:53:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1988,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "1928:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1990,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:10"
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:10",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "1699:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:10"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:10"
									},
									"scope": 2213,
									"src": "1671:281:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "2345:263:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2001,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "2374:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2000,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "2355:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2003,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2007,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "2425:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2004,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "2407:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1772_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:10",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1759,
														"src": "2407:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2009,
												"nodeType": "EmitStatement",
												"src": "2402:41:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2010,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "2458:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2025,
													"nodeType": "Block",
													"src": "2559:43:10",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2022,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "2573:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2024,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:10"
														}
													]
												},
												"id": 2026,
												"nodeType": "IfStatement",
												"src": "2454:148:10",
												"trueBody": {
													"id": 2021,
													"nodeType": "Block",
													"src": "2475:78:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2017,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1995,
																		"src": "2518:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2018,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1997,
																		"src": "2537:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2014,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "2489:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2586_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:10",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2503,
																	"src": "2489:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2020,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:10",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2290:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2317:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:10"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:10"
									},
									"scope": 2213,
									"src": "2264:344:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:10",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 2032,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2213,
									"src": "2829:105:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2030,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 2031,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "3339:68:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2040,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2032,
																"src": "3383:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2038,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "3356:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2643,
															"src": "3356:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2613,
													"src": "3356:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2037,
												"id": 2043,
												"nodeType": "Return",
												"src": "3349:51:10"
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:10",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:10"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3330:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:10"
									},
									"scope": 2213,
									"src": "3287:120:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "3535:172:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2051,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "3549:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2052,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2065,
												"nodeType": "IfStatement",
												"src": "3545:91:10",
												"trueBody": {
													"id": 2064,
													"nodeType": "Block",
													"src": "3573:63:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2058,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2057,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "3594:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2063,
															"nodeType": "RevertStatement",
															"src": "3587:38:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2069,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2032,
																	"src": "3672:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2066,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "3645:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2643,
																"src": "3645:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "3645:44:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2072,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "3692:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2074,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:10"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:10",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "3509:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:10"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:10"
									},
									"scope": 2213,
									"src": "3490:217:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "3875:94:10",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2085,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "3912:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2087,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "3924:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2082,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "3890:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1772_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:10",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1766,
														"src": "3890:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2089,
												"nodeType": "EmitStatement",
												"src": "3885:48:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2091,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "3953:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2090,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "3943:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:10"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:10",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 2095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "3848:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:10"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:10"
									},
									"scope": 2213,
									"src": "3827:142:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2096,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:10",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 2099,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 2213,
									"src": "4246:106:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2097,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 2098,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2111,
										"nodeType": "Block",
										"src": "4468:69:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2107,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "4512:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2105,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "4485:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2643,
															"src": "4485:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2613,
													"src": "4485:45:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2104,
												"id": 2110,
												"nodeType": "Return",
												"src": "4478:52:10"
											}
										]
									},
									"documentation": {
										"id": 2100,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:10",
										"text": " @dev Returns the current beacon."
									},
									"id": 2112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:10"
									},
									"returnParameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "4459:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:10"
									},
									"scope": 2213,
									"src": "4415:122:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "4667:390:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2118,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "4681:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2128,
												"nodeType": "IfStatement",
												"src": "4677:95:10",
												"trueBody": {
													"id": 2127,
													"nodeType": "Block",
													"src": "4709:63:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2124,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "4751:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2123,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1949,
																	"src": "4730:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2126,
															"nodeType": "RevertStatement",
															"src": "4723:38:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2132,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "4809:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2129,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "4782:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2643,
																"src": "4782:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "4782:45:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2135,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2115,
														"src": "4830:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2137,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:10"
											},
											{
												"assignments": [
													2139
												],
												"declarations": [
													{
														"constant": false,
														"id": 2139,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:10",
														"nodeType": "VariableDeclaration",
														"scope": 2157,
														"src": "4850:28:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2138,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2145,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2141,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2115,
																	"src": "4889:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2140,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2223,
																"src": "4881:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$2223_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$2223",
																"typeString": "contract IBeacon"
															}
														},
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:10",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2222,
														"src": "4881:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2146,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2139,
																"src": "4930:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2156,
												"nodeType": "IfStatement",
												"src": "4926:125:10",
												"trueBody": {
													"id": 2155,
													"nodeType": "Block",
													"src": "4969:82:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2152,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2139,
																		"src": "5019:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2151,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "4990:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2154,
															"nodeType": "RevertStatement",
															"src": "4983:57:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:10",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "4640:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:10"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:10"
									},
									"scope": 2213,
									"src": "4620:437:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "5661:263:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2167,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "5682:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2166,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "5671:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2173,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "5731:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2170,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "5707:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1772_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:10",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1771,
														"src": "5707:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2175,
												"nodeType": "EmitStatement",
												"src": "5702:39:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2176,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "5756:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2195,
													"nodeType": "Block",
													"src": "5875:43:10",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2192,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "5889:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:10"
														}
													]
												},
												"id": 2196,
												"nodeType": "IfStatement",
												"src": "5752:166:10",
												"trueBody": {
													"id": 2191,
													"nodeType": "Block",
													"src": "5773:96:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2184,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2161,
																						"src": "5824:9:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2183,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2223,
																					"src": "5816:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$2223_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 2185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$2223",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:10",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2222,
																			"src": "5816:33:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2188,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2163,
																		"src": "5853:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2180,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "5787:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2586_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:10",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2503,
																	"src": "5787:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2190,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:10",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "5614:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "5633:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:10"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:10"
									},
									"scope": 2213,
									"src": "5582:342:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "6149:86:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2202,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2210,
												"nodeType": "IfStatement",
												"src": "6159:70:10",
												"trueBody": {
													"id": 2209,
													"nodeType": "Block",
													"src": "6178:51:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2206,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "6199:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2208,
															"nodeType": "RevertStatement",
															"src": "6192:26:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:10",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:10"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:10"
									},
									"scope": 2213,
									"src": "6113:122:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2214,
							"src": "496:5741:10",
							"usedErrors": [
								1939,
								1944,
								1949,
								1952
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							2223
						]
					},
					"id": 2224,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2216,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:11",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 2223,
							"linearizedBaseContracts": [
								2223
							],
							"name": "IBeacon",
							"nameLocation": "224:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2217,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:11",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 2222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:11"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "460:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:11"
									},
									"scope": 2223,
									"src": "411:58:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2224,
							"src": "214:257:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2301
						]
					},
					"id": 2302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2225,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2226,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:12",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 2301,
							"linearizedBaseContracts": [
								2301
							],
							"name": "IERC20",
							"nameLocation": "214:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:12",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2235,
									"name": "Transfer",
									"nameLocation": "396:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "405:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "427:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "447:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:12"
									},
									"src": "390:72:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:12",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2244,
									"name": "Approval",
									"nameLocation": "627:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "636:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "659:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "684:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:12"
									},
									"src": "621:78:12"
								},
								{
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:12",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:12"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "821:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:12"
									},
									"scope": 2301,
									"src": "775:55:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:12",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "931:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:12"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "971:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:12"
									},
									"scope": 2301,
									"src": "912:68:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:12",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1222:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1234:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:12"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1267:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:12"
									},
									"scope": 2301,
									"src": "1204:69:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2269,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:12",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "1567:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "1582:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:12"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "1622:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:12"
									},
									"scope": 2301,
									"src": "1548:83:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2279,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:12",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2326:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2343:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:12"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2376:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:12"
									},
									"scope": 2301,
									"src": "2309:73:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:12",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2712:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2726:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2738:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:12"
									},
									"returnParameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2771:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:12"
									},
									"scope": 2301,
									"src": "2690:87:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2302,
							"src": "204:2575:12",
							"usedErrors": [],
							"usedEvents": [
								2235,
								2244
							]
						}
					],
					"src": "106:2674:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							2301
						],
						"IERC20Metadata": [
							2327
						]
					},
					"id": 2328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2303,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 2305,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2328,
							"sourceUnit": 2302,
							"src": "151:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2304,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2301,
										"src": "159:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2307,
										"name": "IERC20",
										"nameLocations": [
											"306:6:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2301,
										"src": "306:6:13"
									},
									"id": 2308,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:13"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2306,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:13",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 2327,
							"linearizedBaseContracts": [
								2327,
								2301
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2309,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:13",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:13"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "417:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:13"
									},
									"scope": 2327,
									"src": "378:54:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:13",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:13"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "540:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2317,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:13"
									},
									"scope": 2327,
									"src": "499:56:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2321,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:13",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:13"
									},
									"returnParameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "674:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2323,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:13"
									},
									"scope": 2327,
									"src": "631:50:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2328,
							"src": "278:405:13",
							"usedErrors": [],
							"usedEvents": [
								2235,
								2244
							]
						}
					],
					"src": "125:559:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2586
						],
						"Errors": [
							2608
						]
					},
					"id": 2587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2329,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 2331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2587,
							"sourceUnit": 2609,
							"src": "127:36:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2330,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2608,
										"src": "135:6:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2332,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:14",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2586,
							"linearizedBaseContracts": [
								2586
							],
							"name": "Address",
							"nameLocation": "241:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:14",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 2337,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "358:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:14"
									},
									"src": "335:39:14"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "1361:278:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2347,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																],
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2345,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2350,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2342,
														"src": "1399:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2364,
												"nodeType": "IfStatement",
												"src": "1371:125:14",
												"trueBody": {
													"id": 2363,
													"nodeType": "Block",
													"src": "1407:89:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2357,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2355,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:14",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2360,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2342,
																		"src": "1478:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2352,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "1428:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:14",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2596,
																	"src": "1428:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2362,
															"nodeType": "RevertStatement",
															"src": "1421:64:14"
														}
													]
												}
											},
											{
												"assignments": [
													2366,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2366,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2383,
														"src": "1507:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2365,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2373,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2367,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2340,
																"src": "1525:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2369,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "1547:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:14"
											},
											{
												"condition": {
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:14",
													"subExpression": {
														"id": 2374,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2366,
														"src": "1573:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2382,
												"nodeType": "IfStatement",
												"src": "1568:65:14",
												"trueBody": {
													"id": 2381,
													"nodeType": "Block",
													"src": "1582:51:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2376,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "1603:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:14",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2599,
																	"src": "1603:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2380,
															"nodeType": "RevertStatement",
															"src": "1596:26:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2338,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:14",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1309:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1336:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:14"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:14"
									},
									"scope": 2586,
									"src": "1290:349:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "2573:62:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2395,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "2612:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2396,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "2620:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2394,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "2590:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2393,
												"id": 2399,
												"nodeType": "Return",
												"src": "2583:45:14"
											}
										]
									},
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:14",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "2506:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "2522:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:14"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "2559:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:14"
									},
									"scope": 2586,
									"src": "2484:151:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2450,
										"nodeType": "Block",
										"src": "3072:294:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2415,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																],
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2413,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2418,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "3110:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2432,
												"nodeType": "IfStatement",
												"src": "3082:123:14",
												"trueBody": {
													"id": 2431,
													"nodeType": "Block",
													"src": "3117:88:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2425,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2423,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:14",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2428,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2408,
																		"src": "3188:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2420,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "3138:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:14",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2596,
																	"src": "3138:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2430,
															"nodeType": "RevertStatement",
															"src": "3131:63:14"
														}
													]
												}
											},
											{
												"assignments": [
													2434,
													2436
												],
												"declarations": [
													{
														"constant": false,
														"id": 2434,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2450,
														"src": "3215:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2433,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2436,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2450,
														"src": "3229:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2435,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2443,
												"initialValue": {
													"arguments": [
														{
															"id": 2441,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "3282:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2437,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2404,
																"src": "3256:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2439,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2408,
																"src": "3275:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2445,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "3331:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2446,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2434,
															"src": "3339:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2447,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "3348:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2444,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "3304:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2412,
												"id": 2449,
												"nodeType": "Return",
												"src": "3297:62:14"
											}
										]
									},
									"documentation": {
										"id": 2402,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "2990:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "3006:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "3025:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:14"
									},
									"returnParameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "3058:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:14"
									},
									"scope": 2586,
									"src": "2959:407:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2476,
										"nodeType": "Block",
										"src": "3605:154:14",
										"statements": [
											{
												"assignments": [
													2462,
													2464
												],
												"declarations": [
													{
														"constant": false,
														"id": 2462,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2476,
														"src": "3616:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2461,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2464,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2476,
														"src": "3630:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2463,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2469,
												"initialValue": {
													"arguments": [
														{
															"id": 2467,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "3675:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "3657:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:14",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "3724:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2472,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "3732:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2473,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2464,
															"src": "3741:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2470,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "3697:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2460,
												"id": 2475,
												"nodeType": "Return",
												"src": "3690:62:14"
											}
										]
									},
									"documentation": {
										"id": 2452,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "3533:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "3549:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:14"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "3591:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:14"
									},
									"scope": 2586,
									"src": "3505:254:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2502,
										"nodeType": "Block",
										"src": "3997:156:14",
										"statements": [
											{
												"assignments": [
													2488,
													2490
												],
												"declarations": [
													{
														"constant": false,
														"id": 2488,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2502,
														"src": "4008:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2487,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2490,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2502,
														"src": "4022:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2489,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2495,
												"initialValue": {
													"arguments": [
														{
															"id": 2493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "4069:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2491,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "4049:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:14",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2497,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "4118:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2498,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2488,
															"src": "4126:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2499,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "4135:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2496,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "4091:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2486,
												"id": 2501,
												"nodeType": "Return",
												"src": "4084:62:14"
											}
										]
									},
									"documentation": {
										"id": 2478,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "3930:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "3946:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:14"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "3983:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:14"
									},
									"scope": 2586,
									"src": "3900:253:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "4579:424:14",
										"statements": [
											{
												"condition": {
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:14",
													"subExpression": {
														"id": 2515,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2508,
														"src": "4594:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2540,
													"nodeType": "Block",
													"src": "4653:344:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2522,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2510,
																			"src": "4841:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2526,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2506,
																				"src": "4867:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:14",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2537,
															"nodeType": "IfStatement",
															"src": "4837:119:14",
															"trueBody": {
																"id": 2536,
																"nodeType": "Block",
																"src": "4892:64:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2533,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2506,
																					"src": "4934:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2532,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2337,
																				"src": "4917:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2535,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:14"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2538,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2510,
																"src": "4976:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2514,
															"id": 2539,
															"nodeType": "Return",
															"src": "4969:17:14"
														}
													]
												},
												"id": 2541,
												"nodeType": "IfStatement",
												"src": "4589:408:14",
												"trueBody": {
													"id": 2521,
													"nodeType": "Block",
													"src": "4603:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2518,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2510,
																		"src": "4625:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2517,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "4617:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2520,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2504,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:14",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4466:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4490:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4512:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:14"
									},
									"returnParameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4565:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2512,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:14"
									},
									"scope": 2586,
									"src": "4421:582:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2564,
										"nodeType": "Block",
										"src": "5307:122:14",
										"statements": [
											{
												"condition": {
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:14",
													"subExpression": {
														"id": 2553,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "5322:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2562,
													"nodeType": "Block",
													"src": "5381:42:14",
													"statements": [
														{
															"expression": {
																"id": 2560,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2548,
																"src": "5402:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2552,
															"id": 2561,
															"nodeType": "Return",
															"src": "5395:17:14"
														}
													]
												},
												"id": 2563,
												"nodeType": "IfStatement",
												"src": "5317:106:14",
												"trueBody": {
													"id": 2559,
													"nodeType": "Block",
													"src": "5331:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2556,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2548,
																		"src": "5353:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2555,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "5345:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2558,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2544,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:14",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5231:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5245:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:14"
									},
									"returnParameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5293:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:14"
									},
									"scope": 2586,
									"src": "5205:224:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2584,
										"nodeType": "Block",
										"src": "5598:432:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2568,
															"src": "5674:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2582,
													"nodeType": "Block",
													"src": "5973:51:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2577,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "5994:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:14",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2599,
																	"src": "5994:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2581,
															"nodeType": "RevertStatement",
															"src": "5987:26:14"
														}
													]
												},
												"id": 2583,
												"nodeType": "IfStatement",
												"src": "5670:354:14",
												"trueBody": {
													"id": 2576,
													"nodeType": "Block",
													"src": "5697:270:14",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:14",
																"nodeType": "YulBlock",
																"src": "5824:133:14",
																"statements": [
																	{
																		"nativeSrc": "5842:40:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:14"
																			},
																			"nativeSrc": "5865:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:14"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:14",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:14",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:14",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:14"
																					},
																					"nativeSrc": "5906:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:14"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:14"
																			},
																			"nativeSrc": "5899:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:14"
																		},
																		"nativeSrc": "5899:44:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:14"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2568,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:14",
																	"valueSize": 1
																},
																{
																	"declaration": 2568,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:14",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2575,
															"nodeType": "InlineAssembly",
															"src": "5799:158:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2566,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:14",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5560:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:14"
									},
									"returnParameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:14"
									},
									"scope": 2586,
									"src": "5543:487:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2587,
							"src": "233:5799:14",
							"usedErrors": [
								2337
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2608
						]
					},
					"id": 2609,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2589,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:15",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2608,
							"linearizedBaseContracts": [
								2608
							],
							"name": "Errors",
							"nameLocation": "419:6:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2590,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:15",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2596,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "557:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "574:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:15"
									},
									"src": "531:59:15"
								},
								{
									"documentation": {
										"id": 2597,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:15",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2599,
									"name": "FailedCall",
									"nameLocation": "696:10:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:15"
									},
									"src": "690:19:15"
								},
								{
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:15",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2602,
									"name": "FailedDeployment",
									"nameLocation": "772:16:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:15"
									},
									"src": "766:25:15"
								},
								{
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:15",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2607,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "884:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:15"
									},
									"src": "860:33:15"
								}
							],
							"scope": 2609,
							"src": "411:484:15",
							"usedErrors": [
								2596,
								2599,
								2602,
								2607
							],
							"usedEvents": []
						}
					],
					"src": "100:796:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2732
						]
					},
					"id": 2733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2610,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2611,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:16",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2732,
							"linearizedBaseContracts": [
								2732
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2614,
									"members": [
										{
											"constant": false,
											"id": 2613,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2614,
											"src": "1462:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2612,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1433:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2617,
									"members": [
										{
											"constant": false,
											"id": 2616,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2617,
											"src": "1517:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2615,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1488:46:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2620,
									"members": [
										{
											"constant": false,
											"id": 2619,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2620,
											"src": "1569:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2618,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1540:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2623,
									"members": [
										{
											"constant": false,
											"id": 2622,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2623,
											"src": "1624:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2621,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1595:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2626,
									"members": [
										{
											"constant": false,
											"id": 2625,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2626,
											"src": "1678:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2624,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1650:47:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2629,
									"members": [
										{
											"constant": false,
											"id": 2628,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2629,
											"src": "1731:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2627,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1703:47:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2632,
									"members": [
										{
											"constant": false,
											"id": 2631,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2632,
											"src": "1783:11:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2630,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1756:45:16",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2642,
										"nodeType": "Block",
										"src": "1983:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:16",
													"nodeType": "YulBlock",
													"src": "2018:38:16",
													"statements": [
														{
															"nativeSrc": "2032:14:16",
															"nodeType": "YulAssignment",
															"src": "2032:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:16",
																"nodeType": "YulIdentifier",
																"src": "2042:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2639,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2635,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2641,
												"nodeType": "InlineAssembly",
												"src": "1993:63:16"
											}
										]
									},
									"documentation": {
										"id": 2633,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:16",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "1923:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2634,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:16"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "1960:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2638,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2637,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2614,
														"src": "1960:11:16"
													},
													"referencedDeclaration": 2614,
													"src": "1960:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:16"
									},
									"scope": 2732,
									"src": "1899:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2653,
										"nodeType": "Block",
										"src": "2243:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:16",
													"nodeType": "YulBlock",
													"src": "2278:38:16",
													"statements": [
														{
															"nativeSrc": "2292:14:16",
															"nodeType": "YulAssignment",
															"src": "2292:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:16",
																"nodeType": "YulIdentifier",
																"src": "2302:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2646,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2652,
												"nodeType": "InlineAssembly",
												"src": "2253:63:16"
											}
										]
									},
									"documentation": {
										"id": 2644,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:16",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "2183:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:16"
									},
									"returnParameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "2220:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2617_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2649,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2648,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2617,
														"src": "2220:11:16"
													},
													"referencedDeclaration": 2617,
													"src": "2220:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2617_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:16"
									},
									"scope": 2732,
									"src": "2159:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "2503:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:16",
													"nodeType": "YulBlock",
													"src": "2538:38:16",
													"statements": [
														{
															"nativeSrc": "2552:14:16",
															"nodeType": "YulAssignment",
															"src": "2552:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:16",
																"nodeType": "YulIdentifier",
																"src": "2562:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2661,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2657,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2663,
												"nodeType": "InlineAssembly",
												"src": "2513:63:16"
											}
										]
									},
									"documentation": {
										"id": 2655,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:16",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "2443:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:16"
									},
									"returnParameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "2480:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2620_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2659,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2620,
														"src": "2480:11:16"
													},
													"referencedDeclaration": 2620,
													"src": "2480:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2620_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:16"
									},
									"scope": 2732,
									"src": "2419:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2675,
										"nodeType": "Block",
										"src": "2763:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:16",
													"nodeType": "YulBlock",
													"src": "2798:38:16",
													"statements": [
														{
															"nativeSrc": "2812:14:16",
															"nodeType": "YulAssignment",
															"src": "2812:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:16",
																"nodeType": "YulIdentifier",
																"src": "2822:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2672,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2668,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2674,
												"nodeType": "InlineAssembly",
												"src": "2773:63:16"
											}
										]
									},
									"documentation": {
										"id": 2666,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:16",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "2703:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2667,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:16"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "2740:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2623_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2670,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2623,
														"src": "2740:11:16"
													},
													"referencedDeclaration": 2623,
													"src": "2740:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2623_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:16"
									},
									"scope": 2732,
									"src": "2679:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "3020:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:16",
													"nodeType": "YulBlock",
													"src": "3055:38:16",
													"statements": [
														{
															"nativeSrc": "3069:14:16",
															"nodeType": "YulAssignment",
															"src": "3069:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:16",
																"nodeType": "YulIdentifier",
																"src": "3079:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2683,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2685,
												"nodeType": "InlineAssembly",
												"src": "3030:63:16"
											}
										]
									},
									"documentation": {
										"id": 2677,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:16",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "2961:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2678,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:16"
									},
									"returnParameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "2998:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2626_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2681,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2626,
														"src": "2998:10:16"
													},
													"referencedDeclaration": 2626,
													"src": "2998:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2626_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:16"
									},
									"scope": 2732,
									"src": "2938:161:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2697,
										"nodeType": "Block",
										"src": "3277:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:16",
													"nodeType": "YulBlock",
													"src": "3312:38:16",
													"statements": [
														{
															"nativeSrc": "3326:14:16",
															"nodeType": "YulAssignment",
															"src": "3326:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:16",
																"nodeType": "YulIdentifier",
																"src": "3336:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2694,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2690,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2696,
												"nodeType": "InlineAssembly",
												"src": "3287:63:16"
											}
										]
									},
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:16",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "3218:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:16"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "3255:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2693,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2692,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2629,
														"src": "3255:10:16"
													},
													"referencedDeclaration": 2629,
													"src": "3255:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:16"
									},
									"scope": 2732,
									"src": "3195:161:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2708,
										"nodeType": "Block",
										"src": "3558:85:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:16",
													"nodeType": "YulBlock",
													"src": "3593:44:16",
													"statements": [
														{
															"nativeSrc": "3607:20:16",
															"nodeType": "YulAssignment",
															"src": "3607:20:16",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:16",
																"nodeType": "YulIdentifier",
																"src": "3617:10:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2705,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2701,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:16",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2707,
												"nodeType": "InlineAssembly",
												"src": "3568:69:16"
											}
										]
									},
									"documentation": {
										"id": 2699,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:16",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2709,
												"src": "3491:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:16"
									},
									"returnParameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2709,
												"src": "3536:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2703,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2629,
														"src": "3536:10:16"
													},
													"referencedDeclaration": 2629,
													"src": "3536:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:16"
									},
									"scope": 2732,
									"src": "3468:175:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2719,
										"nodeType": "Block",
										"src": "3818:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:16",
													"nodeType": "YulBlock",
													"src": "3853:38:16",
													"statements": [
														{
															"nativeSrc": "3867:14:16",
															"nodeType": "YulAssignment",
															"src": "3867:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:16",
																"nodeType": "YulIdentifier",
																"src": "3877:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2716,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2712,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2718,
												"nodeType": "InlineAssembly",
												"src": "3828:63:16"
											}
										]
									},
									"documentation": {
										"id": 2710,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:16",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "3760:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2711,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:16"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "3797:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2715,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2714,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2632,
														"src": "3797:9:16"
													},
													"referencedDeclaration": 2632,
													"src": "3797:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:16"
									},
									"scope": 2732,
									"src": "3738:159:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2730,
										"nodeType": "Block",
										"src": "4094:85:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:16",
													"nodeType": "YulBlock",
													"src": "4129:44:16",
													"statements": [
														{
															"nativeSrc": "4143:20:16",
															"nodeType": "YulAssignment",
															"src": "4143:20:16",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:16",
																"nodeType": "YulIdentifier",
																"src": "4153:10:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2727,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2723,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:16",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2729,
												"nodeType": "InlineAssembly",
												"src": "4104:69:16"
											}
										]
									},
									"documentation": {
										"id": 2721,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:16",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "4029:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:16"
									},
									"returnParameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "4073:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2725,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2632,
														"src": "4073:9:16"
													},
													"referencedDeclaration": 2632,
													"src": "4073:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:16"
									},
									"scope": 2732,
									"src": "4007:172:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2733,
							"src": "1407:2774:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:16"
				},
				"id": 16
			},
			"RVA/UpgradableToken.sol": {
				"ast": {
					"absolutePath": "RVA/UpgradableToken.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1705
						],
						"ContextUpgradeable": [
							1751
						],
						"ERC1967Utils": [
							2213
						],
						"ERC20Token": [
							3189
						],
						"ERC20Upgradeable": [
							1375
						],
						"IERC1822Proxiable": [
							1782
						],
						"IERC20": [
							2301
						],
						"IERC20Errors": [
							1824
						],
						"IERC20Metadata": [
							2327
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							758
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 3190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2734,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3190,
							"sourceUnit": 195,
							"src": "57:75:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2736,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3190,
							"sourceUnit": 1376,
							"src": "133:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 2737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3190,
							"sourceUnit": 759,
							"src": "212:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2738,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3190,
							"sourceUnit": 631,
							"src": "291:77:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"id": 2739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3190,
							"sourceUnit": 1706,
							"src": "369:74:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2740,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"468:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1375,
										"src": "468:16:17"
									},
									"id": 2741,
									"nodeType": "InheritanceSpecifier",
									"src": "468:16:17"
								},
								{
									"baseName": {
										"id": 2742,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"486:18:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "486:18:17"
									},
									"id": 2743,
									"nodeType": "InheritanceSpecifier",
									"src": "486:18:17"
								},
								{
									"baseName": {
										"id": 2744,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"506:19:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 758,
										"src": "506:19:17"
									},
									"id": 2745,
									"nodeType": "InheritanceSpecifier",
									"src": "506:19:17"
								},
								{
									"baseName": {
										"id": 2746,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"527:15:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "527:15:17"
									},
									"id": 2747,
									"nodeType": "InheritanceSpecifier",
									"src": "527:15:17"
								}
							],
							"canonicalName": "ERC20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3189,
							"linearizedBaseContracts": [
								3189,
								630,
								1782,
								758,
								194,
								1375,
								1824,
								2327,
								2301,
								1751,
								448
							],
							"name": "ERC20Token",
							"nameLocation": "454:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c66e4095",
									"id": 2749,
									"mutability": "mutable",
									"name": "icoContract",
									"nameLocation": "564:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 3189,
									"src": "549:26:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2748,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "549:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2751,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "597:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 3189,
									"src": "581:28:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2750,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "581:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"global": false,
									"id": 2754,
									"libraryName": {
										"id": 2752,
										"name": "AddressUpgradeable",
										"nameLocations": [
											"621:18:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "621:18:17"
									},
									"nodeType": "UsingForDirective",
									"src": "615:37:17",
									"typeName": {
										"id": 2753,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "644:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "dbac26e9",
									"id": 2758,
									"mutability": "mutable",
									"name": "blacklisted",
									"nameLocation": "690:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 3189,
									"src": "658:43:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2757,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2755,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "666:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "658:24:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2756,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "677:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9bc289f1",
									"id": 2762,
									"mutability": "mutable",
									"name": "lockedUntil",
									"nameLocation": "742:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 3189,
									"src": "707:46:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2761,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2759,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "715:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "707:27:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2760,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "726:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a153e708",
									"id": 2766,
									"mutability": "mutable",
									"name": "lockedAmount",
									"nameLocation": "794:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 3189,
									"src": "759:47:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2765,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2763,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "767:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "759:27:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2764,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "778:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8",
									"id": 2770,
									"name": "ICOContractSet",
									"nameLocation": "819:14:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"indexed": true,
												"mutability": "mutable",
												"name": "icoContract",
												"nameLocation": "850:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "834:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:29:17"
									},
									"src": "813:50:17"
								},
								{
									"anonymous": false,
									"eventSelector": "86f2e10d5622d896b3f56e66c1a60639ca21a4674480f054bec2cb9ba62f40cb",
									"id": 2778,
									"name": "LockupSet",
									"nameLocation": "874:9:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "900:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "884:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2774,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedUntilTimestamp",
												"nameLocation": "917:20:17",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "909:28:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2776,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedAmount",
												"nameLocation": "947:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "939:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:77:17"
									},
									"src": "868:93:17"
								},
								{
									"anonymous": false,
									"eventSelector": "cf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8",
									"id": 2784,
									"name": "Blacklisted",
									"nameLocation": "972:11:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2780,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1000:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "984:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2782,
												"indexed": false,
												"mutability": "mutable",
												"name": "isBlacklisted",
												"nameLocation": "1014:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "1009:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1009:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:45:17"
									},
									"src": "966:63:17"
								},
								{
									"anonymous": false,
									"eventSelector": "96352ad7a9be4c45ad1b71ff4390921022216946b3b7348fd652f133a6ee5453",
									"id": 2790,
									"name": "EmergencyTokenRecovered",
									"nameLocation": "1040:23:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1080:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1064:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2788,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1095:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1087:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:39:17"
									},
									"src": "1034:69:17"
								},
								{
									"body": {
										"id": 2797,
										"nodeType": "Block",
										"src": "1176:91:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2794,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1186:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1186:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2796,
												"nodeType": "ExpressionStatement",
												"src": "1186:22:17"
											}
										]
									},
									"documentation": {
										"id": 2791,
										"nodeType": "StructuredDocumentation",
										"src": "1109:48:17",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2798,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:2:17"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1176:0:17"
									},
									"scope": 3189,
									"src": "1162:105:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2835,
										"nodeType": "Block",
										"src": "1378:258:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2810,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2800,
															"src": "1401:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2811,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2802,
															"src": "1407:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2809,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "1388:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2813,
												"nodeType": "ExpressionStatement",
												"src": "1388:26:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2815,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1439:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1443:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1439:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2814,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1424:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1424:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2818,
												"nodeType": "ExpressionStatement",
												"src": "1424:26:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2819,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1460:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1460:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2821,
												"nodeType": "ExpressionStatement",
												"src": "1460:17:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2822,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "1487:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1487:24:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2824,
												"nodeType": "ExpressionStatement",
												"src": "1487:24:17"
											},
											{
												"expression": {
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2825,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2751,
														"src": "1522:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2826,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2804,
														"src": "1537:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1522:27:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2828,
												"nodeType": "ExpressionStatement",
												"src": "1522:27:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2830,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1565:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1569:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1565:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2832,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2751,
															"src": "1577:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2829,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "1559:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1559:31:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2834,
												"nodeType": "ExpressionStatement",
												"src": "1559:31:17"
											}
										]
									},
									"functionSelector": "b119490e",
									"id": 2836,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2806,
												"name": "initializer",
												"nameLocations": [
													"1366:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1366:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1366:11:17"
										}
									],
									"name": "initialize",
									"nameLocation": "1282:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1307:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "1293:18:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1293:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1327:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "1313:20:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1313:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "totalSupply_",
												"nameLocation": "1343:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "1335:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:64:17"
									},
									"returnParameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1378:0:17"
									},
									"scope": 3189,
									"src": "1273:363:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2847,
										"nodeType": "Block",
										"src": "1669:80:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2839,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1687:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1691:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1687:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2841,
																"name": "icoContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "1701:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1687:25:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1714:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 2838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1679:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:52:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2845,
												"nodeType": "ExpressionStatement",
												"src": "1679:52:17"
											},
											{
												"id": 2846,
												"nodeType": "PlaceholderStatement",
												"src": "1741:1:17"
											}
										]
									},
									"id": 2848,
									"name": "onlyICOContract",
									"nameLocation": "1651:15:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1666:2:17"
									},
									"src": "1642:107:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "1791:25:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2853,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "1801:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:8:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2855,
												"nodeType": "ExpressionStatement",
												"src": "1801:8:17"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2851,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2850,
												"name": "onlyOwner",
												"nameLocations": [
													"1781:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1781:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1781:9:17"
										}
									],
									"name": "pause",
									"nameLocation": "1764:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1769:2:17"
									},
									"returnParameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1791:0:17"
									},
									"scope": 3189,
									"src": "1755:61:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2865,
										"nodeType": "Block",
										"src": "1860:27:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2862,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "1870:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:10:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2864,
												"nodeType": "ExpressionStatement",
												"src": "1870:10:17"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2866,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2860,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2859,
												"name": "onlyOwner",
												"nameLocations": [
													"1850:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1850:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1850:9:17"
										}
									],
									"name": "unpause",
									"nameLocation": "1831:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1838:2:17"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:0:17"
									},
									"scope": 3189,
									"src": "1822:65:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2927,
										"nodeType": "Block",
										"src": "2004:414:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2880,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2868,
																"src": "2018:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2037:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2029:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2881,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2029:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2029:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2018:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756c6c2041646472657373",
															"id": 2886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2041:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															},
															"value": "Null Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															}
														],
														"id": 2879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2010:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2010:46:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2888,
												"nodeType": "ExpressionStatement",
												"src": "2010:46:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2890,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "2070:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2079:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2070:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2082:34:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 2889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2062:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2062:55:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2895,
												"nodeType": "ExpressionStatement",
												"src": "2062:55:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2896,
																"name": "lockedUntil",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2762,
																"src": "2174:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2898,
															"indexExpression": {
																"id": 2897,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2868,
																"src": "2186:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2174:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2899,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2870,
															"src": "2198:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2174:33:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2901,
																"name": "lockedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2766,
																"src": "2211:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2903,
															"indexExpression": {
																"id": 2902,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2868,
																"src": "2224:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2211:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2904,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2872,
															"src": "2236:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2211:31:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2174:68:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2926,
												"nodeType": "IfStatement",
												"src": "2170:246:17",
												"trueBody": {
													"id": 2925,
													"nodeType": "Block",
													"src": "2244:172:17",
													"statements": [
														{
															"expression": {
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2907,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "2254:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2909,
																	"indexExpression": {
																		"id": 2908,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2868,
																		"src": "2266:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2254:20:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2910,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2870,
																	"src": "2277:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2254:32:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2912,
															"nodeType": "ExpressionStatement",
															"src": "2254:32:17"
														},
														{
															"expression": {
																"id": 2917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2913,
																		"name": "lockedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2766,
																		"src": "2296:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2915,
																	"indexExpression": {
																		"id": 2914,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2868,
																		"src": "2309:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2296:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2916,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2872,
																	"src": "2320:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2296:30:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2918,
															"nodeType": "ExpressionStatement",
															"src": "2296:30:17"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2920,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2868,
																		"src": "2382:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2921,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2870,
																		"src": "2391:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2922,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2872,
																		"src": "2402:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2919,
																	"name": "LockupSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2778,
																	"src": "2372:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2372:37:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2924,
															"nodeType": "EmitStatement",
															"src": "2367:42:17"
														}
													]
												}
											}
										]
									},
									"functionSelector": "f326f0d7",
									"id": 2928,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2875,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2874,
												"name": "whenNotPaused",
												"nameLocations": [
													"1973:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "1973:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1973:13:17"
										},
										{
											"id": 2877,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2876,
												"name": "onlyICOContract",
												"nameLocations": [
													"1987:15:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2848,
												"src": "1987:15:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1987:15:17"
										}
									],
									"name": "setLockup",
									"nameLocation": "1902:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1920:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1912:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1937:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1929:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1956:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1948:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:52:17"
									},
									"returnParameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2004:0:17"
									},
									"scope": 3189,
									"src": "1893:525:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2958,
										"nodeType": "Block",
										"src": "2495:143:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2938,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2930,
																"src": "2513:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2531:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2523:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2939,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2523:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2523:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2513:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756c6c2041646472657373",
															"id": 2944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															},
															"value": "Null Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															}
														],
														"id": 2937,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:44:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2946,
												"nodeType": "ExpressionStatement",
												"src": "2505:44:17"
											},
											{
												"expression": {
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2947,
															"name": "blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2758,
															"src": "2559:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2949,
														"indexExpression": {
															"id": 2948,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "2571:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2559:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2950,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2932,
														"src": "2582:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2559:29:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2952,
												"nodeType": "ExpressionStatement",
												"src": "2559:29:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2954,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "2615:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2955,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2932,
															"src": "2624:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2953,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2784,
														"src": "2603:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2603:28:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2957,
												"nodeType": "EmitStatement",
												"src": "2598:33:17"
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 2959,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2934,
												"name": "onlyOwner",
												"nameLocations": [
													"2485:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "2485:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:9:17"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "2433:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2454:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "2446:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2468:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "2463:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2463:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2445:30:17"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2495:0:17"
									},
									"scope": 3189,
									"src": "2424:214:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 3019,
										"nodeType": "Block",
										"src": "2868:415:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2886:24:17",
															"subExpression": {
																"baseExpression": {
																	"id": 2972,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "2887:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2975,
																"indexExpression": {
																	"expression": {
																		"id": 2973,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2899:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2903:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2899:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2887:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 2977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2912:40:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 2971,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2878:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2878:75:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2979,
												"nodeType": "ExpressionStatement",
												"src": "2878:75:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2971:23:17",
															"subExpression": {
																"baseExpression": {
																	"id": 2981,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "2972:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2983,
																"indexExpression": {
																	"id": 2982,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2961,
																	"src": "2984:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2972:22:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2996:43:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 2980,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2963:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2963:77:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2987,
												"nodeType": "ExpressionStatement",
												"src": "2963:77:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2989,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2963,
																"src": "3058:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3066:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3058:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c646e2774206265207a65726f",
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3068:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															},
															"value": "Amount shouldn't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															}
														],
														"id": 2988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3050:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3050:45:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2994,
												"nodeType": "ExpressionStatement",
												"src": "3050:45:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2996,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3113:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3119:9:17",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3113:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2998,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "3132:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3001,
																	"indexExpression": {
																		"expression": {
																			"id": 2999,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3144:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3148:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3144:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3132:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3113:42:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3003,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "3159:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3006,
																	"indexExpression": {
																		"expression": {
																			"id": 3004,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3171:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3175:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3171:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3159:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3186:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3159:28:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3113:74:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 3010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3189:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 2995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3105:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3105:121:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3012,
												"nodeType": "ExpressionStatement",
												"src": "3105:121:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3015,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2961,
															"src": "3258:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3016,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2963,
															"src": "3269:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3013,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3243:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Token_$3189_$",
																"typeString": "type(contract super ERC20Token)"
															}
														},
														"id": 3014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3249:8:17",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "3243:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 3017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3243:33:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2970,
												"id": 3018,
												"nodeType": "Return",
												"src": "3236:40:17"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 3020,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2967,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2966,
												"name": "whenNotPaused",
												"nameLocations": [
													"2839:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2839:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2839:13:17"
										}
									],
									"name": "transfer",
									"nameLocation": "2779:8:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2965,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2830:8:17"
									},
									"parameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2796:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "2788:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2815:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "2807:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2807:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:35:17"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "2862:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2862:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:6:17"
									},
									"scope": 3189,
									"src": "2770:513:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1035
									],
									"body": {
										"id": 3080,
										"nodeType": "Block",
										"src": "3407:415:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3425:20:17",
															"subExpression": {
																"baseExpression": {
																	"id": 3035,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "3426:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3037,
																"indexExpression": {
																	"id": 3036,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3022,
																	"src": "3438:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3426:19:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 3039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3447:40:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 3034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3417:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3417:71:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3041,
												"nodeType": "ExpressionStatement",
												"src": "3417:71:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3506:23:17",
															"subExpression": {
																"baseExpression": {
																	"id": 3043,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "3507:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3045,
																"indexExpression": {
																	"id": 3044,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3024,
																	"src": "3519:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3507:22:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3531:43:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 3042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3498:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3498:77:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3049,
												"nodeType": "ExpressionStatement",
												"src": "3498:77:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3051,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3026,
																"src": "3593:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3601:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3593:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c646e2774206265207a65726f",
															"id": 3054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3603:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															},
															"value": "Amount shouldn't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															}
														],
														"id": 3050,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3585:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:45:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3056,
												"nodeType": "ExpressionStatement",
												"src": "3585:45:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3058,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3648:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3654:9:17",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3648:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 3060,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "3667:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3062,
																	"indexExpression": {
																		"id": 3061,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3022,
																		"src": "3679:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3667:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3648:38:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3064,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "3690:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3066,
																	"indexExpression": {
																		"id": 3065,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3022,
																		"src": "3702:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3690:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3713:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3690:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3648:66:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3716:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 3057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3640:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3640:113:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3072,
												"nodeType": "ExpressionStatement",
												"src": "3640:113:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3075,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3022,
															"src": "3789:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3076,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3024,
															"src": "3797:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3077,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3026,
															"src": "3808:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3073,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3770:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Token_$3189_$",
																"typeString": "type(contract super ERC20Token)"
															}
														},
														"id": 3074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3776:12:17",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1035,
														"src": "3770:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3770:45:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3033,
												"id": 3079,
												"nodeType": "Return",
												"src": "3763:52:17"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 3081,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3030,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3029,
												"name": "whenNotPaused",
												"nameLocations": [
													"3378:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "3378:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3378:13:17"
										}
									],
									"name": "transferFrom",
									"nameLocation": "3298:12:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3028,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3369:8:17"
									},
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3319:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3311:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3311:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3335:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3327:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3327:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3354:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3346:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3346:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3310:51:17"
									},
									"returnParameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3401:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3031,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3401:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3400:6:17"
									},
									"scope": 3189,
									"src": "3289:533:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3115,
										"nodeType": "Block",
										"src": "3908:220:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3091,
																"name": "_icoContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3083,
																"src": "3926:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3950:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3942:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3092,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3942:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 3095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3942:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3926:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756c6c2041646472657373",
															"id": 3097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3954:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															},
															"value": "Null Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															}
														],
														"id": 3090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3918:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3918:51:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3099,
												"nodeType": "ExpressionStatement",
												"src": "3918:51:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 3101,
																	"name": "_icoContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3083,
																	"src": "3987:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4000:10:17",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1393,
																"src": "3987:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 3103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3987:25:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373206973206e6f74206120636f6e7472616374",
															"id": 3104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4014:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed",
																"typeString": "literal_string \"Address is not a contract\""
															},
															"value": "Address is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed",
																"typeString": "literal_string \"Address is not a contract\""
															}
														],
														"id": 3100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3979:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3979:63:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3106,
												"nodeType": "ExpressionStatement",
												"src": "3979:63:17"
											},
											{
												"expression": {
													"id": 3109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3107,
														"name": "icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2749,
														"src": "4052:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3108,
														"name": "_icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3083,
														"src": "4066:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4052:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3110,
												"nodeType": "ExpressionStatement",
												"src": "4052:26:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3112,
															"name": "_icoContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3083,
															"src": "4108:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3111,
														"name": "ICOContractSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2770,
														"src": "4093:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4093:28:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3114,
												"nodeType": "EmitStatement",
												"src": "4088:33:17"
											}
										]
									},
									"functionSelector": "2e0d2a00",
									"id": 3116,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3086,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3085,
												"name": "whenNotPaused",
												"nameLocations": [
													"3883:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "3883:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3883:13:17"
										},
										{
											"id": 3088,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3087,
												"name": "onlyOwner",
												"nameLocations": [
													"3897:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3897:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3897:9:17"
										}
									],
									"name": "setICOContract",
									"nameLocation": "3837:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "_icoContract",
												"nameLocation": "3860:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "3852:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3852:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3851:22:17"
									},
									"returnParameters": {
										"id": 3089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3908:0:17"
									},
									"scope": 3189,
									"src": "3828:300:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3176,
										"nodeType": "Block",
										"src": "4239:468:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3128,
																	"name": "recipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3119,
																	"src": "4257:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 3129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4268:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4257:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3130,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3122,
																	"src": "4278:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4286:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4278:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4257:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42617463685472616e73666572206661696c65643a204d69736d61746368656420617272617973",
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4294:41:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															},
															"value": "BatchTransfer failed: Mismatched arrays"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															}
														],
														"id": 3127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4249:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:87:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3135,
												"nodeType": "ExpressionStatement",
												"src": "4249:87:17"
											},
											{
												"assignments": [
													3137
												],
												"declarations": [
													{
														"constant": false,
														"id": 3137,
														"mutability": "mutable",
														"name": "recipientLength",
														"nameLocation": "4354:15:17",
														"nodeType": "VariableDeclaration",
														"scope": 3176,
														"src": "4346:23:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4346:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3140,
												"initialValue": {
													"expression": {
														"id": 3138,
														"name": "recipients",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3119,
														"src": "4372:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 3139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4383:6:17",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4372:17:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4346:43:17"
											},
											{
												"body": {
													"id": 3174,
													"nodeType": "Block",
													"src": "4445:256:17",
													"statements": [
														{
															"id": 3173,
															"nodeType": "UncheckedBlock",
															"src": "4459:232:17",
															"statements": [
																{
																	"condition": {
																		"baseExpression": {
																			"id": 3151,
																			"name": "blacklisted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2758,
																			"src": "4490:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 3155,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 3152,
																				"name": "recipients",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3119,
																				"src": "4502:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 3154,
																			"indexExpression": {
																				"id": 3153,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3142,
																				"src": "4513:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4502:13:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4490:26:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3161,
																	"nodeType": "IfStatement",
																	"src": "4486:129:17",
																	"trueBody": {
																		"id": 3160,
																		"nodeType": "Block",
																		"src": "4518:97:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
																							"id": 3157,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4547:48:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																								"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																							},
																							"value": "BatchTransfer failed: Recipient is blacklisted"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																								"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																							}
																						],
																						"id": 3156,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "4540:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 3158,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4540:56:17",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 3159,
																				"nodeType": "ExpressionStatement",
																				"src": "4540:56:17"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 3163,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4638:3:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4642:6:17",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4638:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 3165,
																					"name": "recipients",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3119,
																					"src": "4650:10:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 3167,
																				"indexExpression": {
																					"id": 3166,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3142,
																					"src": "4661:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4650:13:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 3168,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3122,
																					"src": "4665:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 3170,
																				"indexExpression": {
																					"id": 3169,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3142,
																					"src": "4673:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4665:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 3162,
																			"name": "_transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "4628:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 3171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4628:48:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3172,
																	"nodeType": "ExpressionStatement",
																	"src": "4628:48:17"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3145,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3142,
														"src": "4419:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3146,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3137,
														"src": "4423:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4419:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3175,
												"initializationExpression": {
													"assignments": [
														3142
													],
													"declarations": [
														{
															"constant": false,
															"id": 3142,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4412:1:17",
															"nodeType": "VariableDeclaration",
															"scope": 3175,
															"src": "4404:9:17",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3141,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4404:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3144,
													"initialValue": {
														"hexValue": "30",
														"id": 3143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4416:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4404:13:17"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4440:3:17",
														"subExpression": {
															"id": 3148,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3142,
															"src": "4440:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3150,
													"nodeType": "ExpressionStatement",
													"src": "4440:3:17"
												},
												"nodeType": "ForStatement",
												"src": "4399:302:17"
											}
										]
									},
									"functionSelector": "88d695b2",
									"id": 3177,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3125,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3124,
												"name": "whenNotPaused",
												"nameLocations": [
													"4225:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "4225:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4225:13:17"
										}
									],
									"name": "batchTransfer",
									"nameLocation": "4143:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "4176:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "4157:29:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4157:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3118,
													"nodeType": "ArrayTypeName",
													"src": "4157:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4207:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "4188:26:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3120,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4188:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3121,
													"nodeType": "ArrayTypeName",
													"src": "4188:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4156:59:17"
									},
									"returnParameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4239:0:17"
									},
									"scope": 3189,
									"src": "4134:573:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 3187,
										"nodeType": "Block",
										"src": "4809:2:17",
										"statements": []
									},
									"id": 3188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3182,
												"name": "whenNotPaused",
												"nameLocations": [
													"4785:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "4785:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4785:13:17"
										},
										{
											"id": 3185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3184,
												"name": "onlyOwner",
												"nameLocations": [
													"4799:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4799:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4799:9:17"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "4722:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4776:8:17"
									},
									"parameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4748:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "4740:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:27:17"
									},
									"returnParameters": {
										"id": 3186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4809:0:17"
									},
									"scope": 3189,
									"src": "4713:98:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3190,
							"src": "445:4368:17",
							"usedErrors": [
								30,
								35,
								211,
								214,
								475,
								480,
								1794,
								1799,
								1804,
								1813,
								1818,
								1823,
								1939,
								1952,
								2337,
								2599
							],
							"usedEvents": [
								41,
								219,
								645,
								650,
								1759,
								2235,
								2244,
								2770,
								2778,
								2784,
								2790
							]
						}
					],
					"src": "32:4782:17"
				},
				"id": 17
			}
		}
	}
}